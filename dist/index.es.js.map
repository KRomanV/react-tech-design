{"version":3,"file":"index.es.js","sources":["../src/components/utils/datesUtils.js","../src/redux/rtd.action.types.js","../src/redux/rtd.actions.js","../src/components/utils/baseUtils.js","../src/components/Base/withStore.js","../src/components/utils/variables.js","../src/components/Base/index.js","../src/components/Form/FormItem.js","../src/components/Form/FormItems.js","../src/components/Form/Form.js","../src/components/Layout/Layout.js","../src/components/Switcher/Switcher.js","../src/components/Table/defaultSettings.js","../src/components/Table/Selectable/SelectionHead.js","../src/components/Table/Selectable/SelectionCell.js","../src/components/Table/SelectionList/SelectionList.js","../src/components/Table/Table.js","../src/components/Table/ConfigLoader.js","../src/components/Select/Select.js","../src/components/TreeSelect/TreeSelect.js","../src/components/Modal/Modal.js","../src/components/UploadFile/UploadFile.js","../src/components/declarative.js","../src/components/deprecated/Table/defaultSettings.js","../src/components/deprecated/Table/Selectable/SelectionHead.js","../src/components/deprecated/Table/Selectable/SelectionCell.js","../src/components/deprecated/DateRange/DateRange.js","../src/components/deprecated/SingleDate/SingleDate.js","../src/components/deprecated/FilterPanel/FilterPanel.js","../src/components/deprecated/Table/SelectionList/SelectionList.js","../src/components/deprecated/Table/Table.js","../src/components/deprecated/Select/Select.js","../src/components/deprecated/AdvancedTable/AdvancedTable.js","../src/components/deprecated/Form/Form.js","../src/components/deprecated/Form/FormModal.js","../src/components/deprecated/Form/FormTable.js","../src/components/deprecated/Form/HOCs.js","../src/components/deprecated/FileManager/AddFolderModal.js","../src/components/utils/clipboardUtils.js","../src/components/deprecated/FileManager/FileManager.js","../src/components/deprecated/Modal/Modal.js","../src/components/deprecated/Form/FormItem.js","../src/components/deprecated/Layout/Layout.js","../src/components/deprecated/Form/FormItems.js","../src/components/deprecated/CommandPanel/CommandPanel.js","../src/components/deprecated/List/List.js","../src/redux/rtd.reducer.js","../src/components/utils/api.js","../src/index.js"],"sourcesContent":["import moment from 'moment';\n\nexport const APP_TIME_OFFSET = 3;\n\nexport const getMomentFromStringByFormat = (date, format) =>\n\tdate ? moment(date, format).utcOffset(APP_TIME_OFFSET) : null;\n\n// export const getMomentWithOffset = (date) =>\n// \tmoment(date).utcOffset(APP_TIME_OFFSET);\nexport const getMomentWithOffset = (date) => moment(date).format();\n\nexport const getMomentWithOffsetTruncateDay = (date) =>\n\tmoment(date).startOf('day')\n\t\t// .hours(0)\n\t\t// .minutes(0)\n\t\t// .seconds(0)\n\t\t// .milliseconds(0)\n\t\t.format();\n\n\nexport const toFormat = (dateString, format) => {\n\tif (!dateString) {\n\t\treturn '';\n\t}\n\tconst mom = moment(dateString);\n\treturn mom.isValid() ? mom.format(format) : dateString;\n};\n\nexport const toDDMMYYYYdot = (dateString) => toFormat(dateString, 'DD.MM.YYYY');\n\nexport const toDDMMYYYYdotAltDashDash = (dateString) =>\n\ttoDDMMYYYYdot(dateString) || '--';\n\nexport const toDDMMYYYYHHMMSS = (dateString) =>\n\ttoFormat(dateString, 'DD.MM.YYYY HH:mm:ss') || '--';\n\nexport const toDDMMYYYYdash = (dateString) =>\n\ttoFormat(dateString, 'DD-MM-YYYY');\n\nexport const getISO = (date) =>\n\tmoment(date).utcOffset(APP_TIME_OFFSET).toISOString();\n","const types =\n{\n    INIT_STORE: 'INIT_STORE',\n    SET_DATA_STORE: 'SET_DATA_STORE',\n};\n\nexport {types as actionTypes};\n","import {actionTypes} from './rtd.action.types';\n\nexport const initStore = (path) => ({\n    type: actionTypes.INIT_STORE,\n    payload: {path}\n});\n\nexport const setDateStore = (path, row) => ({\n    type: actionTypes.SET_DATA_STORE,\n    payload: {path, row}\n});\n","import React from 'react';\nimport {notification} from 'antd';\nimport moment from \"moment\";\n\nexport const noop = () => {};\n\nexport const flatten = (arrayOfArrays) =>\n\tarrayOfArrays.reduce(\n\t\t(flattened, item) =>\n\t\t\tflattened.concat(Array.isArray(item) ? flatten(item) : [item]),\n\t\t[]\n\t);\n\nexport const getTableRowObjects = (data) => {\n\tconst rowKeys = data.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item, getTableRowObjects(item.children)];\n\t\t}\n\t\treturn item;\n\t});\n\treturn rowKeys;\n};\n\nexport const getTableRowKeys = (data, rowKey) => {\n\tconst rowKeys = data.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item[rowKey], getTableRowKeys(item.children, rowKey)];\n\t\t}\n\t\treturn item[rowKey];\n\t});\n\treturn rowKeys;\n};\n\nexport const findNodeByRowKey = (data, rowKey, rowValue) => {\n\tlet node = {};\n\tlet item = {};\n\tfor (let i = 0; i < data.length; i++) {\n\t\titem = _findNodeByRowKey(data[i], rowKey, rowValue);\n\t\tif (item !== false) return item;\n\t}\n\treturn node;\n};\n\nconst _findNodeByRowKey = (currentNode, rowKey, value) => {\n\tlet i, currentChild, result;\n\n\tif (value === currentNode[rowKey]) {\n\t\treturn currentNode;\n\t} else {\n\t\tif (currentNode.children) {\n\t\t\tfor (i = 0; i < currentNode.children.length; i += 1) {\n\t\t\t\tcurrentChild = currentNode.children[i];\n\t\t\t\tresult = _findNodeByRowKey(currentChild, rowKey, value);\n\t\t\t\tif (result !== false) return result;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n};\n\nexport const generateUUID = () => {\n\treturn ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n\t\t(\n\t\t\tc ^\n\t\t\t(crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n\t\t).toString(16)\n\t);\n};\n\n\nexport const getValueFromSingleSelect = (name, keys) => (keys && keys.length > 0) ? keys[0] : null;\n\nexport const getValueFromMultiSelect = (name, keys) => (keys && keys.length > 0) ? keys : null;\n\nexport const getValueFromSelectTable = (rows) => {\n    if (rows && rows.length > 0) return rows[0];\n    else return null;\n};\n\nexport const getObjectExcludedProps = (object, exclude) => {\n    let returnObject = {};\n    Object.keys(object).forEach((key) =>\n        !exclude.includes(key) ? (returnObject[key] = object[key]) : undefined // было null\n    );\n    return returnObject;\n};\n\nexport const notificationError = (error, message) => {\n\tif (error.response) {\n\t\tconsole.error(error.response.status, error.response.data);\n\t\tconst errorDescription = (error.response.data && error.response.data.error)\n\t\t\t? error.response.data.error\n\t\t\t: \"Нет описания ошибки\";\n\t\tnotification.error({\n\t\t\tmessage: `[${error.response.status}] ${message}`,\n\t\t\tdescription: errorDescription,\n\t\t});\n\t} else {\n\t\tconsole.error(error);\n\t\tnotification.error({\n\t\t\tmessage: 'Не удалось детектировать ошибку. См. console.error',\n\t\t});\n\t}\n};\n\nexport const dispatchToStore = ({dispatch, setDateStore, value, extraData}) => {\n\tif(dispatch.path) {\n\t\t// console.log(\"storeHOC => dispatchToStore\");\n\t\tif(dispatch.type === 'event')\n\t\t\tsetDateStore && setDateStore(dispatch.path,  {\n\t\t\t\ttimestamp: moment(),\n\t\t\t\t// type: dispatch.type,\n\t\t\t\tvalue: value,\n\t\t\t\textraData: extraData\n\t\t\t});\n\t\telse\n\t\t\tsetDateStore && setDateStore(dispatch.path, value);\n\t}\n}\n\nexport function useMounted() {\n\tconst [isMounted, setIsMounted] = React.useState(false)\n\n\tReact.useEffect(() => {\n\t\tsetIsMounted(true)\n\t}, [])\n\treturn isMounted\n}\n","import React, {useState, useEffect} from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../redux/rtd.actions\";\nimport { dispatchToStore, getObjectExcludedProps, useMounted } from \"../utils/baseUtils\";\n\nexport const withStore = (Component, antFormItemProps) => {\n\n    const mapStateToProps = (store, ownProps) => {\n        const {subscribe, dispatch} = ownProps;\n        let state = {};\n        if(subscribe && subscribe.length > 0){\n            subscribe.forEach(item => {\n                const {name, path, extraData} = item;\n                if(name && path)\n                    state[name] = objectPath.get(store, path);\n                if(name && extraData)\n                    state[`${name}ExtraData`] = objectPath.get(store, extraData);\n            })\n        }\n        if(dispatch && dispatch.extraData) {\n            // console.log('subscribe to ', dispatch.extraData)\n            state.dispatchExtraData = objectPath.get(store, dispatch.extraData);\n        }\n\n        return state;\n    };\n    const mapDispatchToProps = (dispatch) =>\n        bindActionCreators({ setDateStore: setDateStore}, dispatch);\n\n    const defaultProps = {\n        trigger: 'onChange',\n        valuePropName: 'value',\n    };\n\n    const withStoreProps = { ...defaultProps, ...antFormItemProps };\n\n    return connect(mapStateToProps, mapDispatchToProps)( (props) => {\n\n        const {componentType, setDateStore, dispatchExtraData} = props;\n\n        // Объект подписки на стор\n        const subscribe = props.subscribe ? props.subscribe : [];\n\n        // Объект публикации в стор\n        const dispatch = props.dispatch ? props.dispatch : {};\n\n        const [subscribeProps, setSubscribeProps] = useState({});\n\n        const {trigger, valuePropName} = withStoreProps;\n\n        const excludeProps = ['componentType', 'setDateStore', 'subscribe', ...subscribe.map(item => item.name), 'dispatch', 'dispatchExtraData'];\n\n        const isMounted = useMounted()\n\n        /** Подписка на изменение props[subscribe.name] в сторе */\n        subscribe.map(item => {\n            return useEffect( () => {\n                if(isMounted && item.name) {\n                    // console.log(\"storeHOC => subscribe: \", props[subscribe.name]);\n                    item.onChange && item.onChange({value: props[item.name], extraData: props[`${item.name}ExtraData`], setSubscribeProps});\n                }\n                // console.log(\"Change Props[2]: \", props.subscribeЗф);\n            }, [props[item.name]]);\n        })\n\n        /** Подписка на изменение props и отправка данных в стор */\n        useEffect(() => {\n            // dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, props.value);\n            let _value = props[valuePropName];\n            if (_value === null || _value === undefined || (typeof _value === 'string' && _value.trim() === ''))\n                _value = undefined;\n\n            // console.log(`storeHOC [${dispatch.name}] => `, _value);\n            // console.log(`storeHOC => `, props);\n\n            if (componentType !== 'Button' && componentType !== 'Search')\n                dispatchToStore({ dispatch, setDateStore, value: _value });\n        }, [props]);\n\n        /** Подписка на изменение subscribeProps.value и отправка данных в props[trigger] (как правило это onChange) */\n        useEffect(() => {\n            if(subscribeProps && subscribeProps.value) {\n                // console.log('subscribeProps.value => ', subscribeProps.value);\n                props[trigger] && props[trigger](subscribeProps.value);\n            }\n        }, [subscribeProps.value]);\n\n        const onChange = (...args) => {\n            // console.log('withStore [trigger] ', props.componentType)\n            // const newValue = getValue(...args);\n            // dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, newValue);\n            if(componentType === 'Button')\n                dispatchToStore({dispatch, setDateStore, value: args[0], extraData: dispatchExtraData});\n            // else if(componentType === 'Search')\n            //     args[1].preventDefault();\n\n            props[trigger] && props[trigger](...args);\n        };\n\n        const _onSearch = (searchLine, e) => {\n            e.preventDefault();\n            // console.log(\"_onSearch\", searchLine);\n            dispatchToStore({dispatch, setDateStore, value: searchLine, extraData: dispatchExtraData});\n        };\n\n        const childProps = getObjectExcludedProps(props, excludeProps);\n        const onSearchProps = (componentType === 'Search') ? {onSearch: _onSearch} : {}\n        // console.log(`storeHOC Component => `, componentType, Component);\n        return (\n            <Component\n                {...childProps}\n                {...subscribeProps}\n                {...{[trigger]: onChange}}\n                {...onSearchProps}\n            >{props.children}</Component>\n        )\n    })\n};\n","export const rtPrefix = 'rt';\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Button as AntButton, DatePicker as AntDatePicker, Typography as AntTypography, Tabs as AntTabs,  } from \"antd\";\nimport { getISO, toFormat } from \"../utils/datesUtils\";\nimport {withStore} from \"./withStore\";\nimport { rtPrefix } from \"../utils/variables\";\nimport { renderClassic, renderClassicWithLabel } from \"../declarative\";\n\n/** Компонент выбора даты */\nconst DatePicker = (props) => {\n    // console.log(\"DatePickerHOC => \", props);\n    if(props.value){\n        if(typeof props.value === 'string'){\n            // console.log(\"DatePickerHOC => onChange => string\");\n            props.onChange(moment(props.value), props.value);\n        }\n        // else {\n        // \tconsole.log(\"DatePickerHOC => onChange => moment\");\n        // \tprops.onChange(props.value, props.format ? toFormat(props.value,props.format) : getISO(props.value));\n        // }\n    }\n    const value = props.value ? (typeof props.value === 'string' ? moment(props.value) : props.value) : undefined;\n    const style = {width: '100%', ...(props && props.style)}; // locale={locale}\n    // console.log(\"DatePickerHOC value => \", value);\n    return <AntDatePicker {...props} style={style} value={value} />\n};\n\n/** Компонент вывода даты в текстовом виде */\nconst TypographyDate = (props) => {\n    const {label, value, format } = props;\n    const _value = value ? (format ? toFormat(value, format) : getISO(value)) : undefined;\n    return <AntTypography.Text {...props}> {label || _value} </AntTypography.Text>;\n}\n\n/** Компонент кнопки со всеми пропрами AntButton */\nconst Button = (props) => {\n    const Component = withStore(AntButton, { trigger: 'onClick' });\n    // console.log('Props classic field renderClassic => ', props.field);\n    // const onClick = (e) => childProps.onClick && childProps.onClick(e, field);\n    const onClick = (e) => props.onClick && props.onClick(e, props.field);\n    return renderClassicWithLabel(Component)({...props, onClick: onClick})\n}\n\n/** Custom компонент */\nconst Custom = (props) => {\n    return renderClassic(props.render)({...props, componentType: 'Custom' })\n}\n\n/** Компонент заголовка формы */\nconst FormHeader = (props) => {\n    return <div className={`${rtPrefix}-form-header`}>{props.children}</div>\n}\n\n/** Компонент тела формы */\nconst FormBody = (props) => {\n    let cls = [`${rtPrefix}-form-body`];\n    props.noPadding && cls.push(`${rtPrefix}-form-body-no-padding`);\n    props.scrollable && cls.push(`${rtPrefix}-form-body-scrollable`);\n    return <div className={cls.join(\" \")}>{props.children}</div>\n}\n\n/** Компонент подвала формы */\nconst FormFooter = (props) => {\n    return <div className={`${rtPrefix}-form-footer`}>{props.children}</div>\n}\n\nconst TabPane = (props) => {\n    let cls = [];\n    props.className && cls.push(props.className);\n    props.scrollable && cls.push(`${rtPrefix}-tabs-tabpane-scrollable`);\n    return <AntTabs.TabPane {...props} className={cls.join(\" \")}>{props.children}</AntTabs.TabPane>\n}\n\n\nexport {\n    DatePicker,\n    TypographyDate,\n    Button,\n    Custom,\n    FormHeader,\n    FormBody,\n    FormFooter,\n    TabPane,\n    withStore\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getObjectExcludedProps } from \"../utils/baseUtils\";\nimport {renderClassicByName} from \"../declarative\";\nconst excludeProps = ['child', 'componentType', 'field'];\nconst FormItem = (props) => {\n\n\tconst {child, field} = props;\n\tlet antFormItemProps = getObjectExcludedProps(props, excludeProps);\n\tif (child)\n\t\treturn renderClassicByName(child.componentType)\n\t\t\t({itemProps: {...antFormItemProps}, ...child, field})\n\telse\n\t\treturn null;\n};\n\nFormItem.propTypes = {\n\tchild: PropTypes.object.isRequired\n};\n\nexport default FormItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormItem from \"./FormItem\";\nimport { Form as AntForm } from \"antd\";\nimport { getObjectExcludedProps } from \"../utils/baseUtils\";\nimport { renderDeclarativeByName } from \"../declarative\";\n\nconst excludeProps = [\"children\", \"componentType\"];\n\nconst FormItems = (props) => {\n    const { items } = props;\n\n    // console.log('FormItems props => ', props);\n\n    const getItems = (data, antFormListParams) => {\n\n        return (data && data.map((item, index) => {\n            let itemProps = getObjectExcludedProps(item, excludeProps);\n            // console.log('FormItems index => ', index);\n\n            switch (item.componentType) {\n                case \"Item\":\n                    let _item = { ...item };\n                    let _key = index;\n                    if (antFormListParams && antFormListParams.field) {\n                        if (_item.name) {\n                            if (Array.isArray(_item.name)) {\n                                _item.name = [antFormListParams.field.name, ..._item.name];\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\n                            } else {\n                                _item.name = [antFormListParams.field.name, _item.name];\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\n                            }\n                        }\n                    }\n                    // console.log('_item ', _item.name);\n                    return <FormItem key={`${_key}`} {..._item} field={{ ...antFormListParams }}/>;\n                case \"ListItems\":\n                    return (\n                        <AntForm.List key={index} {...itemProps}>\n                            {(fields, operation) => {\n                                const param = { fields: [...fields], operation: { ...operation } };\n                                return getItems(item.children, param);\n                            }}\n                        </AntForm.List>\n                    );\n                case \"ListItem\":\n                    // console.log('antFormListParams => ', antFormListParams);\n                    return (\n                        <div key={index}>\n                            {antFormListParams && antFormListParams.fields && antFormListParams.fields.map((field, fIndex) => {\n                                // console.log('index field.key', index, field);\n                                const param = { field: { ...field }, ...antFormListParams };\n                                return <div key={field.key}>{getItems(item.children, param)} </div>;\n                            })}\n                        </div>\n                    );\n                default:\n                    return renderDeclarativeByName(item.componentType)({ key: index, ...itemProps })(getItems(item.children, antFormListParams))\n            }\n        })) || null;\n    };\n\n    return getItems(items);\n};\n\nFormItems.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default FormItems;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormItems from \"./FormItems\";\nimport { Form as AntForm, notification } from \"antd\";\nimport { getObjectExcludedProps, noop, notificationError } from \"../utils/baseUtils\";\nimport { rtPrefix } from \"../utils/variables\";\n\nconst excludeProps = [\n    \"componentType\",\n    \"noPadding\",\n    \"scrollable\",\n    \"header\",\n    \"body\",\n    \"footer\",\n    \"loadInitData\",\n    \"autoSaveForm\",\n    \"requestSaveForm\",\n    \"methodSaveForm\",\n    \"processBeforeSaveForm\"\n];\n\n/** Компонент формы */\nconst Form = (props) => {\n    const {\n        loadInitData,\n        header,\n        body,\n        footer,\n        autoSaveForm,\n        requestSaveForm,\n        methodSaveForm,\n        processBeforeSaveForm\n    } = props;\n\n    /** Состояние первоначалной настройки компонента*/\n    const [loaded, setLoaded] = useState(false);\n    const [antFormProps, setAntFormProps] = useState({});\n    const [initFormData, setInitFormData] = useState({});\n\n    useEffect(() => {\n        if (!loaded) {\n            if (loadInitData !== noop)\n                loadInitData(_setInitFormData);\n            else\n                setLoaded(true);\n        }\n    }, [loaded]);\n\n    useEffect(() => {\n        setAntFormProps(getObjectExcludedProps(props, excludeProps));\n        // console.log('antFormProps props => ', getObjectExcludedProps(props, excludeProps));\n    }, [props]);\n\n\n    const _setInitFormData = (data) => {\n        // console.log(\"Form loaded init data => \", data);\n        setInitFormData(data);\n        setLoaded(true);\n    };\n\n\n    let antForm;\n    if (props && props.form) {\n        antForm = props.form;\n    } else {\n        const [form] = AntForm.useForm();\n        antForm = form;\n    }\n\n    const getBodyCls = () => {\n        let cls = [`${rtPrefix}-form-body`];\n        props.noPadding && cls.push(`${rtPrefix}-form-body-no-padding`);\n        props.scrollable && cls.push(`${rtPrefix}-form-body-scrollable`);\n        return cls.join(\" \");\n    };\n\n    const onFinish = (rawValues) => {\n        const values = processBeforeSaveForm ? processBeforeSaveForm(rawValues) : rawValues;\n        // console.log(`Success form [${props.name ? props.name : 'no name form'}]: `, values);\n        const saveObject = {\n            ...initFormData,\n            ...values,\n            // dateStart: getISO(values['dateStart'])\n        };\n\n        // console.group(`Success form [${props.name ? props.name : 'no name form'}]:`);\n        // console.log(\"values: \", values);\n        // console.log(\"saveObject: \", saveObject);\n        // console.groupEnd();\n        console.log(`Success form [${props.name ? props.name : 'no name form'}]: `, saveObject);\n        if (autoSaveForm && requestSaveForm) {\n            // const saveObject = {\n            //     ...initFormData,\n            //     ...values,\n            //     // dateStart: getISO(values['dateStart'])\n            // };\n            requestSaveForm({\n                method: methodSaveForm,\n                data: saveObject\n            })\n                .then(response => {\n                    notification.success({\n                        message: \"Сохранение прошло успешно\"\n                    });\n                    if (props.onFinish)\n                        props.onFinish(values);\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\n        } else if (props.onFinish)\n            props.onFinish(values);\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.error(\"Failed:\", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    const Header = (header) => <div className={`${rtPrefix}-form-header`}><FormItems items={header}/></div>\n    const Footer = (footer) => <div className={`${rtPrefix}-form-footer`}><FormItems items={footer}/></div>\n\n    return (\n        <React.Fragment>\n            {loaded\n                ? <AntForm\n                    form={antForm}\n                    {...antFormProps}\n                    className={`${antFormProps.className} ${rtPrefix}-form`}\n                    style={{ ...antFormProps.style, width: '100%', height: '100%' }}\n                    initialValues={{ ...antFormProps.initialValues, ...initFormData }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                >\n                    <React.Fragment>\n                        {header ? Header(header) : null}\n                        {body ? <div className={getBodyCls()}><FormItems items={body}/></div> : null}\n                        {props.children}\n                        {footer ? Footer(footer) : null}\n                    </React.Fragment>\n                </AntForm>\n                : null}\n        </React.Fragment>\n    );\n};\n\nForm.propTypes = {\n\n    /** Не делать отступы у формы от краев блока. **Only config Form** */\n    noPadding: PropTypes.bool,\n\n    /** Разрешит скролл внтри формы. **Only config Form** */\n    scrollable: PropTypes.bool,\n\n    /** Массив объектов для шапки формы. Как правило только заголовок. */\n    header: PropTypes.arrayOf(PropTypes.object),\n\n    /** Массив объектов для тела формы */\n    body: PropTypes.arrayOf(PropTypes.object),\n\n    /** Массив объектов для подвала формы. Как правило только кнопки \"Сохранить\" и \"Отмена\" */\n    footer: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ссылка на функцию загрузки значений по умолчанию\n     * `(callBack) => callBack(initObject)` */\n    loadInitData: PropTypes.func,\n\n    /** Производить ли автоматическое сохранение по параметрам `requestSaveForm` и `methodSaveForm` */\n    autoSaveForm: PropTypes.bool,\n\n    /** Запрос для автоматического сохранения формы */\n    requestSaveForm: PropTypes.func,\n\n    /** HTTP Метод, передаваемый в запрос сохранения */\n    methodSaveForm: PropTypes.string,\n\n    /** Функция обработки перед сохранением формы */\n    processBeforeSaveForm: PropTypes.func\n};\n\nForm.defaultProps = {\n    noPadding: false,\n    scrollable: false,\n    loadInitData: noop,\n    autoSaveForm: true\n};\n\nexport default Form;\n","import React from 'react';\nimport {rtPrefix} from '../utils/variables';\n\n/** Компонент обертка со всеми пропрами div */\nconst Layout = props => {\n\n    const getCls = () => {\n        let cls = [`${rtPrefix}-layout`];\n        props.className && cls.push(props.className);\n        return cls.join(' ');\n    };\n\n    return (\n        <div {...props} className={getCls()}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Layout;\n","import React, {useState, useEffect} from 'react';\n\nconst Switcher = props => {\n\n    const { value } = props;\n\n    const [_value, _setValue] = useState(0);\n\n    useEffect(() => {\n        if(value !== undefined && value < props.children.length) {\n            _setValue(value);\n        }\n    }, [value])\n\n    return (props.children[_value]);\n};\n\n\nexport default Switcher;\n","import {Spin} from 'antd';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport React from 'react';\n\nexport const empty = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<span>Нет данных</span>{' '}\n\t</div>\n);\n\nexport const overlay = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<Spin\n\t\t\ttip='Загрузка...'\n\t\t\tindicator={<LoadingOutlined style={{fontSize: 24}} spin />}\n\t\t/>{' '}\n\t</div>\n);\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport { flatten, getTableRowKeys, getTableRowObjects } from \"../../utils/baseUtils\";\n\nconst SelectionHead = (props) => {\n\tconst {column, container} = props;\n\tconst {rowKey, onSelectAll, selectedRowKeys, selectAll} = column;\n\n\tconst _handleChange = (e) => {\n\t\tconst rowKeys = flatten(getTableRowKeys(container.props.data, column.rowKey));\n\t\tconst rowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => rowKeys.includes(item[rowKey]));\n\t\tconst totalLength = rowKeys.length;\n\t\tconst selectLength = selectedRowKeys.length;\n\t\tconst checked = !(totalLength === selectLength);\n\n\t\t// const newRowKeys = container.props.data.map((item) => { return item[column.rowKey] });\n\t\tonSelectAll({selected: checked, rowKeys: rowKeys, rowObjects: rowObjects});\n\t};\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={selectAll === null}\n\t\t\tonChange={_handleChange}\n\t\t\tchecked={selectAll}\n\t\t/>\n\t);\n};\n\nexport default SelectionHead;\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport {\n\tflatten,\n\tgetTableRowKeys,\n\tfindNodeByRowKey, getTableRowObjects\n} from \"../../utils/baseUtils\";\n\nconst getRowChildren = (data, rowKey) =>\n\tdata.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item[rowKey], getRowChildren(item.children, rowKey)];\n\t\t}\n\t\treturn item[rowKey];\n\t});\n\nconst findBrothers = (data, selfItem, rowKey, parentKey, rowKeys = null) => {\n\tlet arr = [];\n\tdata.forEach((item) => {\n\t\tif (\n\t\t\titem[parentKey] &&\n\t\t\titem[parentKey] === selfItem[parentKey] &&\n\t\t\titem[rowKey] !== selfItem[rowKey]\n\t\t) {\n\t\t\tif (rowKeys !== null) {\n\t\t\t\tif (rowKeys.includes(item[rowKey])) {\n\t\t\t\t\tarr.push(item[rowKey]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tarr.push(item[rowKey]);\n\t\t\t}\n\t\t} else if (item.children && item.children.length) {\n\t\t\tarr.push(\n\t\t\t\tfindBrothers(\n\t\t\t\t\titem.children,\n\t\t\t\t\tselfItem,\n\t\t\t\t\trowKey,\n\t\t\t\t\tparentKey,\n\t\t\t\t\trowKeys\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\treturn arr;\n};\n\nexport const parentAnalysis = ({\n\trowData,\n\trowKey,\n\tparentKey,\n\tchecked,\n\tnodeAssociated,\n\ttreeData,\n\tselectedRowKeys,\n\tindeterminateRowKeys,\n}) => {\n\tlet _selectedRowKeys = [...selectedRowKeys];\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\tlet currentRowData = rowData;\n\tlet parentExist = !!currentRowData[parentKey];\n\tlet lastTypeSelect = checked ? 'checked' : 'square';\n\tlet typeSelect = '';\n\tlet nextSquare = false;\n\n\t/** Пока есть родитель */\n\twhile (parentExist && nodeAssociated) {\n\t\tconst indeterminateBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_indeterminateRowKeys\n\t\t\t)\n\t\t);\n\t\tconst selectedBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_selectedRowKeys\n\t\t\t)\n\t\t);\n\t\tconst allBrothers = flatten(\n\t\t\tfindBrothers(treeData, currentRowData, rowKey, parentKey)\n\t\t);\n\n\t\tif (checked) {\n\t\t\tif (\n\t\t\t\tlastTypeSelect === 'checked' &&\n\t\t\t\tselectedBrothers.length === allBrothers.length\n\t\t\t)\n\t\t\t\ttypeSelect = 'checked';\n\t\t\telse typeSelect = 'square';\n\t\t} else {\n\t\t\tif (\n\t\t\t\t!checked &&\n\t\t\t\t!nextSquare &&\n\t\t\t\t(selectedBrothers.length || indeterminateBrothers.length)\n\t\t\t)\n\t\t\t\tnextSquare = true;\n\t\t\tif (nextSquare) typeSelect = 'square';\n\t\t\telse typeSelect = 'none';\n\t\t}\n\n\t\t// console.log(\"allBrothers \", allBrothers);\n\t\t// console.log(\"findParentById \", treeData,\n\t\t//     rowKey,\n\t\t//     parentKey,\n\t\t//     currentRowData[parentKey]);\n\t\t//\n\t\t// console.log(\"findNodeByRowKey \", findNodeByRowKey(treeData, rowKey, currentRowData[parentKey]));\n\n\t\t// Найти родителя\n\t\tcurrentRowData = findNodeByRowKey(\n\t\t\ttreeData,\n\t\t\trowKey,\n\t\t\tcurrentRowData[parentKey]\n\t\t);\n\n\t\tif (typeSelect === 'checked') {\n\t\t\t// Выделить галкой\n\t\t\t// console.log(\"checked\");\n\t\t\tlastTypeSelect = 'checked';\n\t\t\tif (!_selectedRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_selectedRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _indeterminateRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _indeterminateRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'square') {\n\t\t\t// Выдлеить квадратом\n\t\t\t// console.log(\"square: \");\n\t\t\tlastTypeSelect = 'square';\n\t\t\tif (!_indeterminateRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_indeterminateRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _selectedRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'none') {\n\t\t\t// Снять выделение\n\t\t\t// console.log(\"none: \");\n\t\t\tlastTypeSelect = 'none';\n\t\t\tconst indexS = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (indexS > -1) _selectedRowKeys.splice(indexS, 1);\n\t\t\tconst indexI = _indeterminateRowKeys.indexOf(\n\t\t\t\tcurrentRowData[rowKey]\n\t\t\t);\n\t\t\tif (indexI > -1) _indeterminateRowKeys.splice(indexI, 1);\n\t\t}\n\n\t\tparentExist = !!currentRowData[parentKey];\n\t\t// parentExist = проверка наличия след родителя\n\t}\n\n\treturn [_selectedRowKeys, _indeterminateRowKeys];\n};\n\nexport const onChangeSelectionCell = (props) => {\n\tconst {rowData, rowIndex, column, rows, checked} = props;\n\tconst {\n\t\trowKey,\n\t\tparentKey,\n\t\tnodeAssociated,\n\t\tselectedRowKeys,\n\t\tindeterminateRowKeys,\n\t\tonChange\n\t} = column;\n\n\t// const rowKeys = flatten(getTableRowKeys([rowData], column.rowKey));\n\t// const totalLength = container.props.data.length;\n\t// const checked = e.target.checked;\n\t// const currentRowKey = {[rowKey]: rowData[rowKey], checked};\n\t// console.log(\"_handleChange: \", container);\n\n\tlet _selectedRowKeys = [...selectedRowKeys];\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\t/** Обработка себя, поиск детей, выделение / снятие их */\n\tlet rowChildren = [];\n\tif (checked) {\n\t\tif (rowData.children && nodeAssociated)\n\t\t\trowChildren = flatten(getRowChildren(rowData.children, rowKey));\n\n\t\t_selectedRowKeys = _selectedRowKeys\n\t\t\t.concat([rowData[rowKey]])\n\t\t\t.concat(rowChildren);\n\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t(element) =>\n\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t!rowChildren.includes(element)\n\t\t);\n\t} else {\n\t\tif (rowData.children && nodeAssociated)\n\t\t\trowChildren = flatten(\n\t\t\t\tgetRowChildren(rowData.children, rowKey, false)\n\t\t\t);\n\n\t\t_selectedRowKeys = _selectedRowKeys.filter(\n\t\t\t(element) =>\n\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t!rowChildren.includes(element)\n\t\t);\n\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t(element) =>\n\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t!rowChildren.includes(element)\n\t\t);\n\t}\n\n\t[_selectedRowKeys, _indeterminateRowKeys] = parentAnalysis({\n\t\trowData,\n\t\trowKey,\n\t\tparentKey,\n\t\tchecked,\n\t\tnodeAssociated,\n\t\ttreeData: rows,\n\t\tselectedRowKeys: _selectedRowKeys,\n\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t});\n\n\tconst keys = [...new Set(_selectedRowKeys)];\n\tconst _selectedRowObjects = flatten(getTableRowObjects(rows, rowKey)).filter((item) => keys.includes(item[rowKey]));\n\t//return [...new Set(_disabledElements)]\n\t// onChange({ selected: checked, totalLength, rowData, rowIndex });\n\n\t/** Выясняем новое состояние галочки \"Выделить все\" */\n\tlet selectAll;\n\tconst selectLength = keys.length;\n\tconst totalLength = flatten(\n\t\tgetTableRowKeys(rows, column.rowKey)\n\t).length;\n\n\tif (selectLength === 0) selectAll = false;\n\telse if (totalLength === selectLength) selectAll = true;\n\telse if (totalLength !== selectLength) selectAll = null;\n\n\n\n\tonChange({\n\t\tselected: checked,\n\t\t_selectedRow: {\n\t\t\trowData: {...rowData},\n\t\t\trowIndex: rowIndex,\n\t\t\trowKey: rowKey,\n\t\t},\n\t\t_selectAll: selectAll,\n\t\t_selectedRowKeys: keys, //[...new Set(_selectedRowKeys)],\n\t\t_selectedRowObjects: _selectedRowObjects,\n\t\t_indeterminateRowKeys: [...new Set(_indeterminateRowKeys)],\n\t});\n\n\t// let uniqIds = {};\n\t// onChange({selected: checked, rowKeys: rowKeys.filter(obj => !uniqIds[obj[rowKey]] && (uniqIds[obj[rowKey]] = true)) });\n};\n\nconst SelectionCell = (props) => {\n\n\tconst {rowData, column} = props;\n\tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\n\tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\n\tconst checked = selectedRowKeys.includes(rowData[rowKey]);\n\n\t// React.useEffect(() => {\n\t// \tconsole.log(\"selectionCell\", props);\n\t// }, [props]);\n\n\tconst _onChangeHandler = (checked) => {\n\t\tconst {rowData, rowIndex, column, container} = props;\n\t\tonChangeSelectionCell({\n\t\t\trowData, rowIndex, column, rows: container.props.data, checked\n\t\t})\n\t}\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={det}\n\t\t\t// onChange={(e) => _onChangeHandler(e.target.checked)}\n\t\t\tchecked={checked}\n\t\t/>\n\t);\n};\n\nexport default SelectionCell;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {CloseCircleOutlined} from '@ant-design/icons';\nimport {rtPrefix} from '../../utils/variables';\n\nconst SelectionList = (props) => {\n\tconst {selectedRowObjects, rowRender, onClickDropSelect} = props;\n\n\t// console.log(\"SelectionList typeof -> \", typeof(rowRender));\n\treturn (\n\t\t<div className={`${rtPrefix}-table-selected-rows`}>\n\t\t\t{selectedRowObjects && selectedRowObjects.length > 0 ? (\n\t\t\t\t<ul>\n\t\t\t\t\t{selectedRowObjects.map((item, index) => (\n\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t{/*{(typeof(rowRender) === 'string') ? <div>{item[rowRender]}</div> : rowRender }*/}\n\t\t\t\t\t\t\t{typeof rowRender === 'function' ? (\n\t\t\t\t\t\t\t\trowRender({rowData: item, rowIndex: index})\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>{item[rowRender]}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<div onClick={() => onClickDropSelect(item)}>\n\t\t\t\t\t\t\t\t<CloseCircleOutlined />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t) : (\n\t\t\t\t<div>Нет выбранных записей</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nSelectionList.propTypes = {\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { rowData, rowIndex }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n\t/** Список выделенных объектов */\n\tselectedRowObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Событие удаления элемента */\n\tonClickDropSelect: PropTypes.func.isRequired,\n};\n\nSelectionList.defaultProps = {};\n\nexport default SelectionList;\n","import React, {useRef, forwardRef, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport BaseTable, {AutoResizer, callOrReturn} from 'react-base-table';\n// import BaseTable from \"./BaseTable/BaseTable\";\nimport {empty, overlay} from './defaultSettings';\nimport SelectionHead from './Selectable/SelectionHead';\nimport SelectionCell, {parentAnalysis, onChangeSelectionCell} from './Selectable/SelectionCell';\nimport SelectionList from './SelectionList/SelectionList';\nimport {rtPrefix} from '../utils/variables';\nimport {\n\tflatten,\n\tgenerateUUID,\n\tgetTableRowKeys,\n\tfindNodeByRowKey,\n\tnoop,\n\tgetTableRowObjects, notificationError, useMounted\n} from \"../utils/baseUtils\";\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../redux/rtd.actions\";\nimport FormItems from \"../Form/FormItems\";\nimport moment from \"moment\";\n\n/** Компонент таблицы */\nconst Table = forwardRef((props, ref) => {\n\n\t/** LOADING AND INFINITY MODE STATES */\n\t/** Наличие на сервере еще данных */\n\tconst [hasMore, setHasMore] = useState(true);\n\t/** Индикатор загрузки данных */\n\tconst [loading, setLoading] = useState(false);\n\n\t/** TABLE STATES */\n\t/** Колонки таблицы */\n\t// const [_columns, _setColumns] = useState([]);\n\t/** Строки таблицы */\n\tconst [_rows, _setRows] = useState([]);\n\t/** Ключи выделенных строк */\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n\t/** Значение строки поиска */\n\tconst [_searchValue, setSearchValue] = useState('');\n\t/** Объект фильтра */\n\tconst [_filter, setFilter] = useState({});\n\t/** Объект соритировки */\n\tconst [_sortBy, setSortBy] = useState({});\n\t/** Состояние selectAll галочки */\n\tconst [selectAll, setSelectAll] = useState(false);\n\n\t/** TREE STATES */\n\t/** Ключи строк с кубиками при selectable = true */\n\tconst [_indeterminateRowKeys, setIndeterminateRowKeys] = useState([]);\n\t/** Ключи раскрытых строк при selectable = true */\n\tconst [_expandedRowKeys, setExpandedRowKeys] = useState([]);\n\n\t/** FOOTER STATES */\n\t/** Отображать ли footer */\n\tconst [_footerShow, _setFooterShow] = useState(false);\n\t/** Всего строк по фильтру в таблице */\n    const [_totalCountRows, setTotalCountRows] = useState(0);\n\n\n\tconst [subscribeProps, setSubscribeProps] = useState({});\n\n\tconst tableRef = useRef();\n\n\tconst isMounted = useMounted()\n\n\tconst {\n\t\t/** Required */\n\t\tcolumns,\n\t\t// type,\n\t\tinfinityMode,\n\t\teditMode, // need Props.types\n\n\t\t/** Def values */\n\t\tdefaultRows,\n\t\tdefaultSelectedRowKeys,\n\t\tdefaultSearchValue,\n\t\tdefaultFilter,\n\t\tdefaultSortBy,\n\n\t\t/** Outdoor control */\n\t\trows,\n\t\tsetRows, // ???\n\t\tselectedRowKeys,\n\t\tsearchValue,\n\t\tfilter,\n\t\tsortBy,\n\n\t\t/** Base Props */\n\t\trowKey,\n\t\tcustomFields,\n\n\t\t/** View Props */\n\t\tempty,\n\t\toverlay,\n\t\tfixWidthColumn,\n\t\t// footerProps,\n\t\theaderHeight,\n\t\trowHeight,\n\t\trowRenderer,\n\t\tzebraStyle,\n\t\testimatedRowHeight,\n\t\t// cellBordered, // need Props.types\n\t\trowBordered,  // need Props.types\n\n\t\t/** Load Data Props */\n\t\tloadThreshold,\n\t\tpageSize,\n\t\trequestLoadRows,\n        requestLoadCount,\n\t\tsearchParamName,\n\n\t\t/** Selectable Props */\n\t\tselectable,\n\n\t\t/** Tree Props */\n\t\tnodeAssociated,\n\t\texpandColumnKey,\n\t\texpandDefaultAll,\n\t\texpandLazyLoad,\n\t\texpandParentKey,\n\n\t\t/** Events */\n\t\tonRowClick,\n\t\tonRowDoubleClick,\n\t\tonRowExpand,\n\t\tonSelectedRowsChange,\n\t\tonExpandedRowsChange,\n\n\t\t/** SELECTED PANEL */\n\t\tshowSelection,\n\t\trowRenderShowSelection,\n\n\t\t/** REDUX PROPS */\n\t\tdispatchPath,\n\t\tsubscribe,\n\n\t\tvalue,\n\t\tonChange,\n\t} = {...props, ...subscribeProps};\n\n\tconst footerProps = {\n\t\t...Table.defaultProps.footerProps,\n\t\t...props.footerProps,\n\t};\n\n\tconst selectedDispatchPath = dispatchPath && `${dispatchPath}.selected`;\n\tconst rowsDispatchPath = dispatchPath && `${dispatchPath}.rows`;\n\tconst rowDoubleClickDispatchPath = dispatchPath && `${dispatchPath}.events.onRowDoubleClick`;\n\n\tuseEffect(() => {\n        // console.log(\"Инициализация дефолтных значений \", selectColumn, columns);\n        // console.log(\"Инициализация дефолтных значений defaultSelectedRowKeys > \", defaultSelectedRowKeys);\n\n\t\t// Инициализация дефолтных значений\n\t\t// _setRows(defaultRows);\n\t\tif(defaultRows.length > 0) _setRowsHandler(defaultRows);\n\t\telse if(rows.length > 0) _setRowsHandler(rows);\n\t\t// setSelectedRowKeys(defaultSelectedRowKeys);\n\t\t_setSelectedRowsHandler(defaultSelectedRowKeys,undefined, defaultRows)\n\t\tsetSearchValue(defaultSearchValue);\n\t\tsetFilterHandler(defaultFilter);\n\t\tsetSortBy(defaultSortBy);\n\t\tsetSelectAll(\n\t\t\tdefaultRows.length > 0 &&\n\t\t\t\tdefaultRows.length === defaultSelectedRowKeys.length\n\t\t);\n\t\t// Определение нужно ли отображать подвал\n\t\t_setFooterShow(\n\t\t\t(footerProps.showElements.length ||\n\t\t\tfooterProps.leftCustomSideElement ||\n\t\t\tfooterProps.centerCustomSideElement ||\n\t\t\tfooterProps.rightCustomSideElement));\n\n\t\t// Only tree table\n\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t// Открытие всех нод\n\t\t\tif (expandDefaultAll)\n\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\tflatten(getTableRowKeys(defaultRows, rowKey))\n\t\t\t\t);\n\t\t\t// Установка квадратиков на нужных нодах\n\t\t\tif (defaultSelectedRowKeys && defaultSelectedRowKeys.length > 0) {\n\t\t\t\tlet flatRows = flatten(getTableRowKeys(defaultRows, rowKey));\n\t\t\t\tlet selectedRow = flatRows.filter((item) =>\n\t\t\t\t\tdefaultSelectedRowKeys.includes(item[rowKey])\n\t\t\t\t);\n\t\t\t\tlet _indeterminateRowKeys = [];\n\t\t\t\tselectedRow.forEach((item) => {\n\t\t\t\t\tconst [ss, ii] = parentAnalysis({\n\t\t\t\t\t\trowData: item,\n\t\t\t\t\t\trowKey,\n\t\t\t\t\t\tparentKey: expandParentKey,\n\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t\tnodeAssociated,\n\t\t\t\t\t\ttreeData: defaultRows,\n\t\t\t\t\t\tselectedRowKeys: defaultSelectedRowKeys,\n\t\t\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t\t\t\t});\n\t\t\t\t\t_indeterminateRowKeys.push(...ii);\n\t\t\t\t});\n\t\t\t\tsetIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\n\t\t\t}\n\t\t}\n\n\t\t// if (type !== 'localSide') {\n\t\t_dataProcessing({\n\t\t\tsortBy: defaultSortBy,\n\t\t\tfilter: defaultFilter,\n\t\t\tsearchLine: defaultSearchValue,\n\t\t\treload: true,\n\t\t});\n\t\t// }\n\t\t// console.log(\"Table => useEffect start \");\n\t\t// setMounted(true);\n\t\tif (ref && typeof ref === 'function') ref({reloadData});\n\t\telse if (ref && typeof ref === 'object') ref.current = {reloadData};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif(isMounted) {\n\t\t\t// console.log('useEffect rows');\n\t\t\t_setRowsHandler(rows);\n\t\t\t// setSelectedRowKeys(selectedRowKeys);\n\t\t\t_setSelectedRowsHandler(selectedRowKeys, undefined, rows);\n\t\t\tsetSearchValue(searchValue);\n\t\t\tsetFilterHandler(filter);\n\t\t\tsetSortBy(sortBy);\n\t\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t\t// Открытие всех нод\n\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\tsetExpandedRowKeys(flatten(getTableRowKeys(rows, rowKey)));\n\t\t\t}\n\t\t}\n    }, [rows, selectedRowKeys, searchValue, filter, sortBy]);\n\n\tuseEffect(() => {\n\t\t// console.log('useEffect editMode');\n\t\t_setSelectedRowsHandler([], [])\n\t}, [editMode])\n\n\tuseEffect(() => {\n\t\t// console.log('useEffect value');\n\t\t_setRowsHandler(value)\n\t}, [value])\n\n\t/** Подписка на изменение props[subscribe.name] в сторе */\n\tsubscribe.map(item => {\n\t\treturn useEffect( () => {\n\t\t\tif(isMounted && item.name) {\n\t\t\t\t// console.log(\"Table => useEffect => [%s] \", item.name, props[item.name]);\n\t\t\t\tconst onChangeObject = {\n\t\t\t\t\tvalue: props[item.name],\n\t\t\t\t\textraData: props[`${item.name}ExtraData`],\n\t\t\t\t\treloadTable: reloadData,\n\t\t\t\t\taddRows: _addRows,\n\t\t\t\t\taddRow: _addRow,\n\t\t\t\t\taddRowAsCopy: _addRowAsCopy,\n\t\t\t\t\teditRow: _editRow,\n\t\t\t\t\tremoveRow: _removeRow,\n\t\t\t\t\tmoveUpRow: _moveUpRow,\n\t\t\t\t\tmoveDownRow: _moveDownRow,\n\t\t\t\t\tsetSubscribeProps: _setSubscribeProps,\n\t\t\t\t}\n\t\t\t\titem.onChange && item.onChange(onChangeObject);\n\t\t\t}\n\t\t}, [props[item.name]]);\n\t})\n\n\t/** BASE FUNCTIONS */\n\n\tconst _setSubscribeProps = (props) => {\n\t\t// setTimeout(() => {\n\t\t// \tconsole.log('_setSubscribeProps');\n\t\tsetSubscribeProps({...subscribeProps, ...props});\n\t\t// }, 2000)\n\t}\n\n\tconst _setRowsHandler = (rows) => {\n\t\t// console.log('_setRowsHandler onChange');\n\t\t_setRows(rows);\n\t\tsetRows(rows);\n\t\trowsDispatch(rows);\n\t};\n\n\tconst _setSelectedRowsHandler = (selectedKeys = [], selectedObjects = undefined, rows = []) => {\n\t\t// console.log('_setSelectedRowsHandler => ', selectedKeys)\n\t\tsetSelectedRowKeys(selectedKeys);\n\t\tif(selectedKeys.length === 0)\n\t\t\tif (selectable)\n\t\t\t\tselectedDispatch([]);\n\t\t\telse\n\t\t\t\tselectedDispatch(undefined);\n\t\telse if(selectedKeys.length > 0 && !selectedObjects)\n\t\t\tif (selectable)\n\t\t\t\tselectedDispatch (flatten( getTableRowObjects(rows, rowKey) ).filter((item) => selectedKeys.includes(item[rowKey])))\n\t\t\telse\n\t\t\t\tselectedDispatch (findNodeByRowKey(rows, rowKey, selectedKeys[0]))\n\t\telse\n\t\t\tselectedDispatch(selectedObjects);\n\t}\n\n\tconst rowsDispatch = (rows) => {\n\t\trowsDispatchPath && props.setDateStore && props.setDateStore(rowsDispatchPath, rows);\n\t};\n\n\tconst selectedDispatch = (data) => {\n\t\tselectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, data);\n\t}\n\n\tconst rowDoubleClickDispatch = (value) => {\n\t\trowDoubleClickDispatchPath\n\t\t&& props.setDateStore\n\t\t&& props.setDateStore(rowDoubleClickDispatchPath, {\n\t\t\ttimestamp: moment(),\n\t\t\tvalue: value\n\t\t});\n\t}\n\n\tconst onTableEventsDispatch = (nameEvent, value) => {\n\t\tconst dp = dispatchPath && `${dispatchPath}.events.${nameEvent}`;\n\t\tdp && props.setDateStore && props.setDateStore(dp, {\n\t\t\ttimestamp: moment(),\n\t\t\tvalue: value\n\t\t});\n\t\t// console.log('onTableEventsDispatch onChange');\n\t\tonChange && onChange(value)\n\t}\n\n\tconst setFilterHandler = (filter) => {\n\t\t// console.log('setFilterHandler => ', filter);\n\t\tsetFilter(filter);\n\t}\n\n\tconst reloadData = ({sortBy, filter, searchValue}, appendParams) => {\n\t\t// console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\n\t\ttableRef.current && tableRef.current.scrollToRow(0, 'auto');\n\t\tif(props.value && props.value.length > 0)\n\t\t\t_setSelectedRowsHandler(props.value.map(item => item[rowKey]), props.value);\n\t\telse\n\t\t\t_setSelectedRowsHandler()\n\n\t\tconst __sortBy = appendParams ? (sortBy ? sortBy : _sortBy) : sortBy;\n\t\tconst __filter = appendParams ? {..._filter, ...filter} : filter;\n\t\tconst __searchValue = appendParams ? (searchValue ? searchValue : _searchValue) : searchValue;\n\t\tif(sortBy) setSortBy(__sortBy);\n\t\tif(filter) setFilterHandler(__filter);\n\t\tif(searchValue) setSearchValue(__searchValue);\n\t\t_dataProcessing({\n\t\t\tsortBy: __sortBy,\n\t\t\tfilter: __filter,\n\t\t\tsearchLine: __searchValue,\n\t\t\treload: true,\n\t\t});\n        // console.log(\"reloadData loading \", loading);\n    };\n\n\tconst _dataProcessing = (params) => {\n\t\t// console.log('_dataProcessing', params);\n\t\tconst {sortBy, filter, searchLine, expandRow, reload} = params;\n\t\tif ((hasMore || reload) && !loading) {\n\t\t\tsetLoading(true);\n\t\t\tconst pageNum = reload\n\t\t\t\t? 0\n\t\t\t\t: Math.floor(_rows.length / pageSize);\n\t\t\tconst params = {\n\t\t\t\tpage: pageNum,\n\t\t\t\tsize: pageSize,\n\t\t\t\tsort:\n\t\t\t\t\tsortBy && sortBy.key\n\t\t\t\t\t\t? sortBy.key + ',' + sortBy.order\n\t\t\t\t\t\t: null,\n\t\t\t};\n\t\t\tconst dataQuery = {\n\t\t\t\t...filter,\n\t\t\t\t...(searchLine\n\t\t\t\t\t? {[searchParamName]: searchLine}\n\t\t\t\t\t: null),\n\t\t\t};\n\t\t\t// console.log('dataQuery', dataQuery);\n\n\t\t\tif(infinityMode && reload && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad) {\n\t\t\t\trequestLoadCount({\n\t\t\t\t\tparams,\n\t\t\t\t\tdata: dataQuery,\n\t\t\t\t})\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\t\t// const result = response.data;\n\t\t\t\t\t\tsetTotalCountRows(response.data);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error =>\n\t\t\t\t\t\tnotificationError(error, 'Ошибка получения количества записей по фильтру') );\n\t\t\t}\n\n\t\t\t// console.log('requestLoadRows => ', typeof requestLoadRows);\n\t\t\t// if(typeof requestLoadRows !== 'function'){\n\t\t\t//     setLoading(false);\n\t\t\t// }\n\t\t\tif(requestLoadRows) {\n\t\t\t\trequestLoadRows({\n\t\t\t\t\tparams,\n\t\t\t\t\tdata: dataQuery,\n\t\t\t\t})\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\t\tconst result = response.data;\n\t\t\t\t\t\t// Если иерархия и ленивая, то ищим кому добавть полученные записи\n\t\t\t\t\t\tif (!!expandColumnKey && expandLazyLoad) {\n\t\t\t\t\t\t\t// lastExpandRow//, setLastExpandRow\n\t\t\t\t\t\t\t// console.log('!!expandColumnKey && expandLazyLoad', result);\n\t\t\t\t\t\t\tif (pageNum === 0) {\n\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t{ [rowKey]: generateUUID() },\n\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t// _setRows(result);\n\t\t\t\t\t\t\t\t_setRowsHandler(result);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlet newRows = [..._rows];\n\t\t\t\t\t\t\t\t// (data, rowKey, rowValue)\n\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t{ [rowKey]: generateUUID() },\n\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tlet node = findNodeByRowKey(\n\t\t\t\t\t\t\t\t\tnewRows,\n\t\t\t\t\t\t\t\t\trowKey,\n\t\t\t\t\t\t\t\t\texpandRow[rowKey]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tnode.children = result;\n\t\t\t\t\t\t\t\t// console.log('newRows -> ', newRows);\n\t\t\t\t\t\t\t\t// _setRows(newRows);\n\t\t\t\t\t\t\t\t_setRowsHandler(newRows);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (result && result.length < pageSize) {\n\t\t\t\t\t\t\t\tsetHasMore(false);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetHasMore(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpageNum === 0\n\t\t\t\t\t\t\t\t? _setRowsHandler(result) // _setRows\n\t\t\t\t\t\t\t\t: _setRowsHandler(_rows.concat(result)); // _setRows\n\n\t\t\t\t\t\t\t// console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\n\t\t\t\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\t\t\t\t\tflatten(getTableRowKeys(result, rowKey))\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t\t\t\t_setRowsHandler(_rows); // _setRows\n\t\t\t\t\t\t// setHasMore(false);\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t});\n\t\t\t} else setLoading(false);\n\t\t}\n\t};\n\n\t/** Событие выделение одной строки в режиме без галочек */\n\tconst useSimpleAndDoubleClick = (actionSimpleClick, actionDoubleClick, delay = 200) => {\n\t\tconst [click, setClick] = useState(0);\n\t\tconst [data, setData] = useState(undefined);\n\t\tuseEffect(() => {\n\t\t\tconst timer = setTimeout(() => {\n\t\t\t\t// simple click\n\t\t\t\tif (click === 1) actionSimpleClick(data);\n\t\t\t\tsetClick(0);\n\t\t\t}, delay);\n\t\t\tif (click === 2) actionDoubleClick(data);\n\t\t\treturn () => clearTimeout(timer);\n\t\t}, [click]);\n\t\treturn (_data) => {setClick(prev => prev + 1); setData(() => _data);}\n\t}\n\n\tlet timer;\n\tconst simpleAndDoubleClick = (actionSimpleClick, actionDoubleClick, data) => (event) => {\n\t\tclearTimeout(timer);\n\t\tif (event.detail === 1) {\n\t\t\t// console.log('actionSimpleClick', data)\n\t\t\ttimer = setTimeout(() => actionSimpleClick(data), 200)\n\t\t} else if (event.detail === 2) {\n\t\t\t// console.log('actionDoubleClick', data)\n\t\t\tactionDoubleClick(data)\n\t\t}\n\t}\n\n\tconst _onRowClick = ({rowData, rowIndex, rowKey}) => {\n\t\t// console.log('actionSimpleClick')\n\t\t_rowSelectAfterClick({rowData, rowIndex, rowKey, onClick: onRowClick})\n\t}\n\tconst _onRowDoubleClick = ({rowData, rowIndex, rowKey}) => {\n\t\t// console.log('onDoubleClick', rowData, rowIndex, rowKey);\n\t\t// console.log('actionDoubleClick')\n\t\trowDoubleClickDispatch(rowData);\n\t\t_rowSelectAfterClick({rowData, rowIndex, rowKey, onClick: onRowDoubleClick})\n\t}\n\n\tconst _rowSelectAfterClick = ({rowData, rowIndex, rowKey, onClick}) => {\n\t\tconst checked = !_selectedRowKeys.includes(rowKey);\n\t\tconst newRowObject = {\n\t\t\trowData: {...rowData},\n\t\t\trowIndex: rowIndex,\n\t\t\trowKey: rowKey,\n\t\t};\n\t\tif (!selectable) {\n\t\t\t// console.log('_rowEventHandlers -> onClick', rowKey, rowIndex);\n\t\t\t// console.log('q onRowClick => ', rowData)\n\t\t\t// if(_selectedRowKeys)\n\t\t\tif(checked && !editMode)\n\t\t\t\t_setSelectedRowsHandler([rowKey], rowData);\n\t\t\tonSelectedRowsChange([rowKey], [rowData]);\n\t\t} else {\n\t\t\tonChangeSelectionCell({\n\t\t\t\t...newRowObject,\n\t\t\t\tcolumn: _getSelectionColumnProps(),\n\t\t\t\trows: _rows,\n\t\t\t\tchecked: checked,\n\t\t\t})\n\t\t}\n\t\tonClick({ selected: checked, ...newRowObject });\n\t}\n\n\tconst _rowEventHandlers = {\n\t\tonClick: _onRowClick,\n\t\tonDoubleClick: _onRowDoubleClick,\n\n\t\t// onClick: useSimpleAndDoubleClick(_onRowClick, _onRowDoubleClick),\n\t\t// onClick: simpleAndDoubleClick(_onRowClick, _onRowDoubleClick),\n\n\t\t// onDoubleClick: console.log('onDoubleClick'),\n\t\t// onContextMenu: console.log('context menu'),\n\t\t// onMouseEnter: console.log('mouse enter'),\n\t\t// onMouseLeave: console.log('mouse leave'),\n\t};\n\n\n\t/** Событие при сортировке */\n\tconst _onColumnSort = (sortBy) => {\n\t\t// console.log(\"sortBy\", sortBy);\n\t\ttableRef.current.scrollToRow(0, 'auto');\n\t\tsetSortBy(sortBy);\n\n\t\t// Для серверной сортировки - сбросить выделение\n\t\t// if (type !== 'localSide') {\n\t\t// setSelectedRowKeys([]);\n\t\t_setSelectedRowsHandler();\n\t\t// }\n\t\tconst loadParams = {\n\t\t\tsortBy: sortBy,\n\t\t\tfilter: _filter,\n\t\t\tsearchLine: _searchValue,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t};\n\n\t/** VIEW FUNCTIONS */\n\n\n\tconst _footer = (\n\t\t<React.Fragment>\n\t\t\t{_footerShow ? (\n\t\t\t\t\t<React.Fragment>\n                        {/*className={'BaseTable__footer__counter'}>*/}\n\t\t\t\t\t\t<div key={'footer-left-custom-side'} className={'left-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.leftCustomSideElement\n\t\t\t\t\t\t\t\t? Array.isArray(footerProps.leftCustomSideElement)\n\t\t\t\t\t\t\t\t\t? <FormItems items={footerProps.leftCustomSideElement} />\n\t\t\t\t\t\t\t\t\t: <footerProps.leftCustomSideElement/>\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-center-custom-side'} className={'center-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.centerCustomSideElement\n\t\t\t\t\t\t\t\t? Array.isArray(footerProps.centerCustomSideElement)\n\t\t\t\t\t\t\t\t\t? <FormItems items={footerProps.centerCustomSideElement} />\n\t\t\t\t\t\t\t\t\t: <footerProps.centerCustomSideElement/>\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-right-custom-side'} className={'right-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.rightCustomSideElement\n\t\t\t\t\t\t\t\t? Array.isArray(footerProps.rightCustomSideElement)\n\t\t\t\t\t\t\t\t\t? <FormItems items={footerProps.rightCustomSideElement} />\n\t\t\t\t\t\t\t\t\t: <footerProps.rightCustomSideElement/>\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{selectable ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('selected')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.selectedTitle} {_selectedRowKeys.length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('loaded')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.loadedTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{footerProps.showElements.includes('total')\n\t\t\t\t\t\t\t? infinityMode && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad\n\t\t\t\t\t\t\t\t? <span>{footerProps.totalTitle} {_totalCountRows}</span>\n\t\t\t\t\t\t\t\t: <span>{footerProps.totalTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t: null}\n\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n\n\t/** Событие при рендере для стилизации */\n\tconst _rowClassName = ({rowData, rowIndex}) => {\n\t\tconst {rowClassName} = props;\n\t\treturn [\n\t\t\trowClassName,\n\t\t\t_selectedRowKeys.includes(rowData[rowKey]) && 'row-selected',\n\t\t\tzebraStyle ? (rowIndex % 2 === 0 ? 'even' : 'odd') : '',\n\t\t\trowBordered ? 'bordered' : ''\n\t\t].join(' ')\n\t};\n\n\t// const _cellProps = () => ({ className: [cellBordered ? 'cellBordered' : ''].join(' ')})\n\n\tconst _rowRenderer = (props) => {\n\t\tconst { cells, rowData, rowIndex } = props;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\theight: '100%'\n\t\t\t\t}}\n\t\t\t\tonClick={(e) =>\n\t\t\t\tsimpleAndDoubleClick(_onRowClick, _onRowDoubleClick, {rowData, rowIndex, rowKey: rowData[rowKey]})(e)}\n\t\t\t>\n\t\t\t\t{cells}\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst _rowProps = ({ columns, rowData, rowIndex }) => ({\n\t\tonClick: (e) =>\n\t\tsimpleAndDoubleClick(_onRowClick, _onRowDoubleClick, {rowData, rowIndex, rowKey: rowData[rowKey]})(e)\n\n})\n\n\t/** LOAD DATA FUNCTIONS */\n\tconst onEndReached = () => {\n\t\tlet selectAll;\n\t\tconst selectLength = _selectedRowKeys.length;\n\t\tif (selectLength === 0) selectAll = false;\n\t\telse if (selectLength > 0) selectAll = null;\n\n\t\tsetSelectAll(selectAll);\n\t\t// console.log('_filter', _filter);\n\n\t\tif (infinityMode) {\n\t\t\tconst loadParams = {\n\t\t\t\tsortBy: _sortBy,\n\t\t\t\tfilter: _filter,\n\t\t\t\tsearchLine: _searchValue,\n\t\t\t\treload: false,\n\t\t\t};\n\t\t\t_dataProcessing(loadParams);\n\t\t}\n\t};\n\n\t/** SELECTABLE FUNCTIONS */\n\n\t/** Событие при изменении галочки одной строки */\n\tconst _onChangeSelectHandler = ({\n\t\tselected,\n\t\t_selectedRow,\n\t\t_selectAll,\n\t\t_selectedRowKeys,\n\t\t_selectedRowObjects,\n\t\t_indeterminateRowKeys,\n\t}) => {\n\t\t// console.group(\"_onChangeSelectHandler\", _selectedRowKeys);\n\t\t// console.log(\"_selectedRowKeys\", _selectedRowKeys);\n\t\t// console.log(\"_indeterminateRowKeys\", _indeterminateRowKeys);\n\t\t// console.log(\"_selectAll\", _selectAll);\n\t\t// console.groupEnd();\n\n\t\t// setSelectedRowKeys(_selectedRowKeys);\n\t\t// selectedDispatch(_selectedRowObjects);\n\t\t_setSelectedRowsHandler(_selectedRowKeys, _selectedRowObjects)\n\t\tsetIndeterminateRowKeys(_indeterminateRowKeys);\n\t\tsetSelectAll(_selectAll);\n\t\tonSelectedRowsChange(_selectedRowKeys, _selectedRowObjects);\n\t};\n\n\t/** Событие при изменении галочки \"Выделить все\" */\n\tconst _onSelectAllHandler = ({selected, rowKeys, rowObjects}) => {\n\t\tconst selectedKeys = selected ? rowKeys : [];\n\t\t// setSelectedRowKeys(selectedKeys);\n\t\t// selectedDispatch(selected ? rowObjects : []);\n\t\t_setSelectedRowsHandler(selectedKeys, selected ? rowObjects : [])\n\t\tsetIndeterminateRowKeys([]);\n\t\tsetSelectAll(selected);\n\t\t// setSelectedRowObjects(rows);\n\t\t// console.log(\"_handleSelectAll\", selectedKeys);\n\t\tonSelectedRowsChange(selectedKeys, rowObjects);\n\t};\n\t//\n\t// const SelectionCell = (props) => {\n\t// \tconst {rowData, column} = props;\n\t// \tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\n\t// \tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\n\t// \tconst checked = selectedRowKeys.includes(rowData[rowKey]);\n\t// \tReact.useEffect(() => {\n\t// \t\tconsole.log(\"selectionCell\", props);\n\t// \t}, []);\n\t//\n\t// \tconst _handleChange = (checked) => {\n\t// \t\tconsole.log(\"_handleChange\", checked);\n\t// \t}\n\t//\n\t// \treturn (\n\t// \t\t<Checkbox\n\t// \t\t\tindeterminate={det}\n\t// \t\t\tonChange={(e) => _handleChange(e.target.checked)}\n\t// \t\t\tchecked={checked}\n\t// \t\t/>\n\t// \t);\n\t// };\n\n\tconst _getSelectionColumnProps = () => ({\n\t\trowKey: rowKey,\n\t\tparentKey: expandParentKey,\n\t\tnodeAssociated: nodeAssociated,\n\t\tselectedRowKeys: _selectedRowKeys,\n\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\tonChange: _onChangeSelectHandler,\n\t})\n\n\tconst _getColumns = () => {\n\t\tconst selectColumn = {\n\t\t\tkey: '__selection__',\n\t\t\theaderRenderer: SelectionHead,\n\t\t\tcellRenderer: <SelectionCell/>,\n\t\t\twidth: 40,\n\t\t\tflexShrink: 0,\n\t\t\tresizable: false,\n\t\t\tfrozen: 'left',\n\t\t\tselectAll: selectAll,\n\t\t\tonSelectAll: _onSelectAllHandler,\n\t\t\t..._getSelectionColumnProps()\n\t\t};\n\t\treturn selectable ? [selectColumn, ...columns] : [...columns];\n\t}\n\n\n\n\t/** TREE FUNCTIONS */\n\n\tconst _onExpandedRowsChange = (expandedRowKeys) => {\n\t\t// console.log(\"_onExpandedRowsChange\", expandedRowKeys);\n\t\tonExpandedRowsChange(expandedRowKeys);\n\t};\n\tconst _onRowExpand = ({expanded, rowData, rowIndex, rowKey}) => {\n\t\t// console.log(\"_onRowExpand\", rowData, expanded, rowIndex, rowKey);\n\t\tif (expanded) {\n\t\t\tsetExpandedRowKeys([..._expandedRowKeys, rowKey]);\n\n\t\t\tif (expandLazyLoad) {\n\t\t\t\tconst loadParams = {\n\t\t\t\t\tsortBy: _sortBy,\n\t\t\t\t\tfilter: {..._filter, [expandParentKey]: rowKey},\n\t\t\t\t\tsearchLine: _searchValue,\n\t\t\t\t\treload: false,\n\t\t\t\t\texpandRow: rowData,\n\t\t\t\t};\n\t\t\t\t// _callPropsOnLoad(loadParams);\n\t\t\t\t_dataProcessing(loadParams);\n\t\t\t}\n\t\t} else {\n\t\t\tlet expandedRowKeys = [..._expandedRowKeys];\n\t\t\tlet allChildKeys = flatten(\n\t\t\t\tgetTableRowKeys(rowData.children, props.rowKey)\n\t\t\t);\n\t\t\tallChildKeys.push(rowKey);\n\t\t\t// console.log('allChildKeys', allChildKeys);\n\t\t\tsetExpandedRowKeys(\n\t\t\t\texpandedRowKeys.filter((item) => !allChildKeys.includes(item))\n\t\t\t);\n\t\t}\n\t\tonRowExpand({expanded, rowData, rowIndex, rowKey});\n\t};\n\n\n\t/** ROW CHANGE FUNCTIONS */\n\n\t/**\n\t * Find row by key\n\t * @param data - table rows\n\t * @param key - key row for find\n\t * @param callback - function for return result\n\t * @returns {*}\n\t */\n\tconst loop = (data, key, callback) => {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tif (data[i][rowKey] === key) {\n\t\t\t\t// console.log(`Selected => index: [${i}], path: [${data[i].path}]`, data);\n\t\t\t\treturn callback(data[i], i, data);\n\t\t\t} else {\n\t\t\t\t// console.log(`Other => index: [${i}], path: [${data[i].path}]`);\n\t\t\t}\n\t\t\tif (data[i].children) {\n\t\t\t\tloop(data[i].children, key, callback);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst _addRows = (rows) => {\n\t\tlet saveRows = [...rows];\n\t\tif (customFields)\n\t\t\t// Фильтрация по пользовательским параметрам\n\t\t\tsaveRows = saveRows.filter((sRow) => {\n\t\t\t\tlet isValid = true;\n\t\t\t\tcustomFields.forEach((field) => {\n\t\t\t\t\t// Валидация по пользовательской логике функции validate\n\t\t\t\t\tif(field.validate)\n\t\t\t\t\t\tisValid = field.validate(sRow, _rows);\n\n\t\t\t\t\t// Создание или переобразование по пользовательской логике функции value\n\t\t\t\t\tif(field.value)\n\t\t\t\t\t\tsRow[field.name] = field.value(sRow, _rows);\n\t\t\t\t});\n\t\t\t\tif(isValid)\n\t\t\t\t\treturn sRow;\n\t\t\t});\n\t\tconst _localRows = [..._rows, ...saveRows]\n\t\t_setRowsHandler(_localRows);\n\t\tonTableEventsDispatch('onAddRows', _localRows);\n\n\t}\n\n\tconst _addRow = (row) => {\n\t\tlet _row = {...row}\n\t\tif (customFields)\n\t\t\tcustomFields.forEach((field) => _row[field.name] = field.value(_row, _rows));\n\t\tconst _localRows = [..._rows, _row]\n\t\t_setRowsHandler(_localRows);\n\t\tonTableEventsDispatch('onAddRow', _localRows);\n\n\t}\n\n\tconst _addRowAsCopy = () => {\n\t\t// console.log(\"_onClickAddAsCopy\", selectedRow);\n\t\tconst _localRows = [..._rows, findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0])]\n\t\t_setRowsHandler(_localRows);\n\t\tonTableEventsDispatch('onAddRowAsCopy', _localRows);\n\n\t};\n\n\tconst _editRow = (row) => {\n\t\t// console.log(\"_onClickEdit\", selectedRow);\n\t\tconst data = [..._rows];\n\t\tconst key = row[rowKey];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tdata[index] = row;\n\t\t\t_setRowsHandler(data);\n\t\t\t// selectedDispatch(row)\n\t\t\t_setSelectedRowsHandler(_selectedRowKeys, undefined, data);\n\t\t\tonTableEventsDispatch('onEditRow', data);\n\n\t\t\t// setSelectedRowKeys([]);\n\t\t})\n\t\t// props.onClickEdit(event, selectedRow);\n\t};\n\n\tconst _removeRow = (event) => {\n\t\t// console.log(\"_onClickDelete\", autoDeleteRows, selectedRowKeys);\n\t\tconst _localRows = _rows.filter(\n\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey]) )\n\t\t_setRowsHandler(_localRows);\n\t\t_setSelectedRowsHandler();\n\t\tonTableEventsDispatch('onRemoveRow', _localRows);\n\n\t\t// setSelectedRowKeys([]);\n\t\t// if (selectable)\n\t\t// \tselectedDispatch([]);\n\t\t// else\n\t\t// \tselectedDispatch(undefined);\n\t\t// commandPanelProps.onClickDelete(event, _selectedRowKeys);\n\t};\n\n\t// const _moveUpRow\n\n\tconst _moveUpRow = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index - 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data, 'onMoveUpRow');\n\t\t\t// commandPanelProps.onClickUp(event, {\n\t\t\t// \trowIndex: newRowIndex,\n\t\t\t// \trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t// }, data);\n\t\t})\n\t};\n\n\tconst _moveDownRow = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index + 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data, 'onMoveDownRow');\n\t\t\t// commandPanelProps.onClickDown(event, {\n\t\t\t// \trowIndex: newRowIndex,\n\t\t\t// \trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t// }, data);\n\t\t})\n\t};\n\n\tconst _getNewIndexRow = (oldIndex, newIndex) =>\n\t\tnewIndex >= 0 && newIndex < _rows.length ? newIndex : oldIndex;\n\n\tconst _changeIndexRow = (oldIndex, newIndex, arr, data, nameEvent) => {\n\t\tif (newIndex >= 0 && newIndex < arr.length) {\n\t\t\t// let arr = [..._rows]; // Копируем массив\n\t\t\tconst item = arr.splice(oldIndex, 1); // Удаляем элемент со старого места\n\t\t\t// console.log('_changeIndexRow => ',item);\n\t\t\tarr.splice(newIndex > 0 ? newIndex : 0, 0, item[0]); // Ставим элемент на новое место\n\t\t\t// console.log(\"_changeIndexRow\", item[0]);\n\t\t\t_setRowsHandler(data);\n\t\t\tonTableEventsDispatch(nameEvent, data);\n\n\t\t}\n\t};\n\n\t// const _onSearch = (searchLine, e) => {\n\t// \te.preventDefault();\n\t// \t// console.log(\"_onSearch\", searchLine);\n\t// \ttableRef.current.scrollToRow(0, 'auto');\n\t// \tsetSearchValue(searchLine);\n\t// \tconst loadParams = {\n\t// \t\tsortBy: _sortBy,\n\t// \t\tfilter: _filter,\n\t// \t\tsearchLine: searchLine,\n\t// \t\treload: true,\n\t// \t};\n\t// \t_dataProcessing(loadParams);\n\t// \tcommandPanelProps.onSearch(searchLine);\n\t// };\n\n\t/** SELECTED PANEL */\n\n\tconst _onClickDropSelectHandler = (dropObject) => {\n\t\tconst newSelectedKeys = _selectedRowKeys.filter(\n\t\t\t(item) => item !== dropObject[rowKey]\n\t\t);\n\t\t// setSelectedRowKeys(newSelectedKeys);\n\t\t_setSelectedRowsHandler(newSelectedKeys, undefined, _rows);\n\t\tsetSelectAll((newSelectedKeys.length === 0 ? false : null));\n\t\tonSelectedRowsChange(newSelectedKeys);\n\t};\n\n\treturn (\n\t\t<div className={`${rtPrefix}-table`}>\n\t\t\t<div className={`${rtPrefix}-baseTable`}>\n\t\t\t\t<AutoResizer>\n\t\t\t\t\t{({width, height}) => (\n\t\t\t\t\t\t<BaseTable\n\t\t\t\t\t\t\tref={tableRef}\n\t\t\t\t\t\t\t/** Required */\n\t\t\t\t\t\t\tcolumns={_getColumns()}\n\t\t\t\t\t\t\tdata={_rows}\n\t\t\t\t\t\t\t/** Control Props */\n\t\t\t\t\t\t\tsortBy={_sortBy}\n\t\t\t\t\t\t\t/** Base Props */\n\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\trowKey={rowKey}\n\t\t\t\t\t\t\t// rowProps={rowProps}\n\n\t\t\t\t\t\t\t/** View Props */\n\t\t\t\t\t\t\trowClassName={_rowClassName}\n\t\t\t\t\t\t\temptyRenderer={empty}\n\t\t\t\t\t\t\tfixed={fixWidthColumn}\n\t\t\t\t\t\t\tfooterHeight={_footerShow ? footerProps.height : 0}\n\t\t\t\t\t\t\theaderHeight={headerHeight}\n\t\t\t\t\t\t\trowHeight={rowHeight}\n\t\t\t\t\t\t\toverlayRenderer={loading ? overlay : null}\n\t\t\t\t\t\t\tfooterRenderer={_footer}\n\t\t\t\t\t\t\trowRenderer={rowRenderer}\n\t\t\t\t\t\t\t// rowProps={_rowProps}\n\t\t\t\t\t\t\t// cellProps={_cellProps}\n\t\t\t\t\t\t\testimatedRowHeight={estimatedRowHeight}\n\t\t\t\t\t\t\t/** Load Data Props */\n\t\t\t\t\t\t\tonEndReachedThreshold={loadThreshold}\n\t\t\t\t\t\t\tonEndReached={infinityMode ? onEndReached : undefined}\n\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t/** Tree Props */\n\t\t\t\t\t\t\texpandColumnKey={expandColumnKey}\n\t\t\t\t\t\t\texpandedRowKeys={_expandedRowKeys}\n\t\t\t\t\t\t\t/** Events */\n\t\t\t\t\t\t\tonColumnSort={_onColumnSort}\n\t\t\t\t\t\t\trowEventHandlers={_rowEventHandlers}\n\t\t\t\t\t\t\tonExpandedRowsChange={_onExpandedRowsChange}\n\t\t\t\t\t\t\tonRowExpand={_onRowExpand}\n\t\t\t\t\t\t\teditMode={editMode}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</AutoResizer>\n\t\t\t</div>\n\t\t\t{showSelection && selectable && !expandColumnKey ? (\n\t\t\t\t<SelectionList\n\t\t\t\t\tonClickDropSelect={_onClickDropSelectHandler}\n\t\t\t\t\tselectedRowObjects={flatten(\n\t\t\t\t\t\tgetTableRowObjects(_rows, rowKey)\n\t\t\t\t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]))}\n\t\t\t\t\trowRender={rowRenderShowSelection}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</div>\n\t);\n});\n\nTable.propTypes = {\n\t/**\n\t * REQUIRED\n\t * */\n\n\t/** Столбцы таблицы */\n\tcolumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Режим загрузки данных по скроллу */\n\tinfinityMode: PropTypes.bool,\n\n\t/**\n\t * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n\t * */\n\n\t/** Строки по умолчанию */\n\tdefaultRows: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Ключи выделенных по умолчанию строк */\n\tdefaultSelectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска по умолчанию строк */\n\tdefaultSearchValue: PropTypes.string,\n\n\t/** Объект фильтрации по умолчанию */\n\tdefaultFilter: PropTypes.object,\n\n\t/** Сортировка по умолчанию */\n\tdefaultSortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n\t * */\n\n\t/** Строки таблицы. Используется для контроля таблицы из вне. */\n\trows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Функция задания строк таблицы. */\n    setRows: PropTypes.func,\n\n\t/** Выделенные строки таблицы. */\n\tselectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Объект фильтрации */\n\tfilter: PropTypes.object,\n\n\t/** Объект сортировки */\n\tsortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * BASE PROPS\n\t * */\n\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\n\t/** Дополнительные поля и валидация в объекты таблицы\n\t * Данный параметр (props) осуществляет дополнительную обработку объекта таблицы после закрытия модалки, но перед добавлением в таблицу.\n\t * Можно как изменить существующие поля объекта, так и добавить новые поля объекта.\n\t * `customFields` - массив объектов для дополнения или изменения полей объектов таблицы\n\t * ```json\n\t * [\n\t * \t{\n\t * \t\tname: <String>,\n\t * \t\tvalue: <func>,\n\t * \t\tvalidate: <func>\n\t * \t}\n\t * ]\n\t * ```\n\t * `name` – Имя параметра в объекте\n\t * `value` – Функция формирования значения - `(row, rows) => { return {} }`\n\t * `validate` – Функция проверки значения - `(row, rows) => { return <Bool> }`\n\t * Параметра **validate** работает **только** для модельного окна тип `select`.\n\t * Validate можно наложить на любое кол-во полей объекта и если хотя бы один `validate` === `false`, то исключает строку из добавления.\n\t */\n\tcustomFields: PropTypes.arrayOf(PropTypes.object),\n\n\t/**\n\t * Данный параметр (props) позволяет добавить или переопределить пропсы для колонок, которые заданы конфигурацией на сервере\n\t * `customColumnProps` - массив объектов `props` к `columns`. Один объект описывает доп. параметры для одной колонки\n\t * ```json\n\t * [\n\t * \t{\n\t * \t\tname: <String>,\n\t * \t\tcellRenderer: <func>,\n\t * \t\t...advancedColProps\n\t * \t}\n\t * ]\n\t * ```\n\t * `name` – key колонки к которой надо применить дополнительные пропсы\n\t * `cellRenderer` – `({ cellData, columns, column, columnIndex, rowData, rowIndex, container, isScrolling }) => return <ReactNode>`\n\t * `advancedColProps` – подолнительные свойства колонок тут -> [Column](https://autodesk.github.io/react-base-table/api/column)\n\t */\n\tcustomColumnProps: PropTypes.arrayOf(PropTypes.object),\n\n\t/**\n\t * VIEW PROPS\n\t * */\n\n\t/** Вывод когда нет данных */\n\tempty: PropTypes.element,\n\n\t/** Отображение загрузки данных */\n\toverlay: PropTypes.element,\n\n\t/** Фиксированная ширина столбцов. Появится боковой скрол */\n\tfixWidthColumn: PropTypes.bool,\n\n\tfooterProps: PropTypes.shape({\n\n\t\t/** Высота подвала */\n\t\theight: PropTypes.number,\n\n\t\t/** Массив элементов футтера, которые надо отобразить\n\t\t * ['selected', 'loaded', 'total'] */\n\t\tshowElements: PropTypes.arrayOf(PropTypes.string),\n\n\t\t/** Заколовок для кол-ва выбранных объектов */\n\t\tselectedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва загруженны объектов */\n\t\tloadedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва всего объектов */\n\t\ttotalTitle: PropTypes.string,\n\n\t\t/** Левый кастомный элемент командной панели */\n\t\tleftCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\n\t\t/** Центральный кастомный элемент командной панели */\n\t\tcenterCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\n\t\t/** Правый кастомный элемент командной панели */\n\t\trightCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\t}),\n\n\t/** Высота заголовка таблицы */\n\theaderHeight: PropTypes.number,\n\n\t/** Высота строки таблицы */\n\trowHeight: PropTypes.number,\n\n\t/** Custom row renderer\n\t * Параметры - `({ isScrolling, cells, columns, rowData, rowIndex, depth })` */\n\trowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n\t/** Строки будут в зебро-стиле */\n\tzebraStyle: PropTypes.bool,\n\n\t/** Высота расширения */\n\testimatedRowHeight: PropTypes.number,\n\n\t/** Отображать ли разделители ячеек в строке */\n\tcellBordered: PropTypes.bool,\n\n\t/** Отобрадать ли разделители строк */\n\trowBordered: PropTypes.bool,\n\n\t/**\n\t * LOAD DATA PROPS\n\t * */\n\n\t/** Порог в пикселях для вызова _onLoad.\n\t * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n\tloadThreshold: PropTypes.number,\n\n\t/** Размер страницы */\n\tpageSize: PropTypes.number,\n\n\t/** Функция запроса для конфигурации */\n\trequestLoadConfig: PropTypes.func,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\t/**\n\t * SELECTABLE PROPS\n\t * */\n\n\t/** Таблица с возможностью выбора строки */\n\tselectable: PropTypes.bool,\n\n\t/**\n\t * TREE PROPS\n\t * */\n\n\t/** Родительский узел и дочерние узлы связаны (Работает только при `selectable`) */\n\tnodeAssociated: PropTypes.bool,\n\n\t/** Ключ колонки по которой строить иерархию */\n\texpandColumnKey: PropTypes.string,\n\n\t/** Открыть по умолчанию вложенность до уровня N или 'All' */\n\texpandDefaultAll: PropTypes.bool,\n\n\t/** Загружать ноды иерархии по одной */\n\texpandLazyLoad: PropTypes.bool,\n\n\t/** Поле в котором хранится ссылка на родителя */\n\texpandParentKey: PropTypes.string,\n\n\t/**\n\t * EVENTS\n\t * */\n\n\t/** Событие при клике на строку (только при `selectable` = `false`)\n\t * `({selected, rowData, rowIndex}) => {}` */\n\tonRowClick: PropTypes.func,\n\n\t/** Событие при двойном клике на строку.\n\t * `({rowData, rowIndex, rowKey}) => {}` */\n\tonRowDoubleClick: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * `({ expanded, rowData, rowIndex, rowKey }) => {}` */\n\tonRowExpand: PropTypes.func,\n\n\t/** Событие при выборе строки.\n\t * `([rowKeys], [rowDatas]) => {}` */\n\tonSelectedRowsChange: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * `(expandedRowKeys) => {}` - массив ключей открытых нод */\n\tonExpandedRowsChange: PropTypes.func,\n\n\t/** SELECTED PANEL */\n\n\t/** Отображать ли панель выбранных элементов */\n\tshowSelection: PropTypes.bool,\n\n\t/** Строка или функция для отображения элементов списка выбранных\n\t * Строка - имя поля\n\t * Функция - рендер строк.\n\t * `({ rowData, rowIndex }) => { return <Component> }` */\n\trowRenderShowSelection: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.string,\n\t]),\n\n\t/** Путь в сторе куда класть выбранную строку таблицы */\n\tdispatchPath: PropTypes.string,\n\n\t/** Объект для подписки на изменения в STORE */\n\tsubscribe: PropTypes.arrayOf(PropTypes.object),\n};\n\nTable.defaultProps = {\n\tinfinityMode: false,\n\teditMode: false,\n\tdefaultRows: [],\n\tdefaultSelectedRowKeys: [],\n\tdefaultSearchValue: '',\n\tdefaultFilter: {},\n\tdefaultSortBy: {},\n\n\trows: [],\n\tsetRows: noop,\n\tselectedRowKeys: [],\n\tsearchValue: '',\n\tfilter: {},\n\tsortBy: {},\n\n\trowKey: 'id',\n\n\tempty: empty,\n\toverlay: overlay,\n\tfixWidthColumn: false,\n\tfooterProps: {\n\t\theight: 30,\n\t\tshowElements: [],\n\t\tselectedTitle: 'Выделено:',\n\t\tloadedTitle: 'Загружено записей:',\n\t\ttotalTitle: 'Всего записей:',\n\t\tleftCustomSideElement: null,\n\t\tcenterCustomSideElement: null,\n\t\trightCustomSideElement: null\n\t},\n\theaderHeight: 30,\n\trowHeight: 30,\n\tzebraStyle: false,\n\testimatedRowHeight: undefined,\n\tcellBordered: false,\n\trowBordered: true,\n\n\tloadThreshold: 300,\n\tpageSize: 50,\n\trequestLoadRows: undefined,\n    requestLoadCount: noop,\n\tsearchParamName: 'searchLine',\n\n\tselectable: false,\n\n\tnodeAssociated: true,\n\texpandColumnKey: undefined,\n\texpandDefaultAll: true,\n\texpandLazyLoad: false,\n\texpandParentKey: 'parentId',\n\n\tonRowClick: noop,\n\tonRowDoubleClick: noop,\n\tonRowExpand: noop,\n\tonSelectedRowsChange: noop,\n\tonExpandedRowsChange: noop,\n\n\tshowSelection: false,\n\n\tdispatchPath: undefined,\n\tsubscribe: [],\n};\n\nconst mapStateToProps = (store, ownProps) => {\n\tconst {subscribe} = ownProps;\n\tlet state = {};\n\tif(subscribe && subscribe.length > 0){\n\t\tsubscribe.forEach(item => {\n\t\t\tconst {name, path, extraData} = item;\n\t\t\tif(name && path)\n\t\t\t\tstate[name] = objectPath.get(store, path);\n\t\t\tif(name && extraData)\n\t\t\t\tstate[`${name}ExtraData`] = objectPath.get(store, extraData);\n\t\t})\n\t}\n\treturn state;\n};\nconst mapDispatchToProps = (dispatch) =>\n\tbindActionCreators({ setDateStore: setDateStore}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\n","import React, {useEffect, useState} from \"react\";\nimport { noop, notificationError } from \"../utils/baseUtils\";\nimport Table from \"./Table\";\nimport { Typography } from \"antd\";\n\nconst defaultProps = {\n    defaultFilter: {},\n    rowKey: 'id',\n    pageSize: 50,\n    requestLoadConfig: noop,\n    expandColumnKey: undefined,\n    expandLazyLoad: false,\n    expandParentKey: 'parentId',\n    customColumnProps: [],\n};\n\nconst ConfigLoader = props => {\n\n    /** Конфигурация таблицы */\n    const [tableConfig, setTableConfig] = useState(undefined);\n\n    const {\n        defaultFilter,\n        rowKey,\n        pageSize,\n        requestLoadConfig,\n        expandColumnKey,\n        expandLazyLoad,\n        expandParentKey,\n        customColumnProps,\n        cellBordered,\n    } = {...defaultProps, ...props};\n\n    useEffect(() => {\n        let cleanupFunction = false;\n        const loadData = async () => {\n            if (requestLoadConfig) {\n                // console.log('requestLoadConfig => ', typeof requestLoadConfig);\n                // console.log('requestLoadRows => ', typeof props.requestLoadRows);\n                requestLoadConfig()\n                    .then((response) => {\n                        // let result = response.data;\n                        // console.log('requestLoadConfig -> ', response.data);\n                        if(!cleanupFunction) {\n                            // setTableConfig(response.data);\n                            configParser(response.data);\n                        }\n                    })\n                    .catch(error => notificationError(error, 'Ошибка получения конфигурации') );\n            }\n        };\n        loadData().then(r => r);\n        return () => cleanupFunction = true;\n    }, []);\n\n    const configParser = (config) => {\n        let _columns = [];\n        if(config && config.fields) {\n            _columns = config.fields.map((item) => {\n                const colProps =\n                    customColumnProps &&\n                    customColumnProps.find(\n                        (render) =>\n                            render.name === item.name || render.name === item.alias\n                    );\n                return {\n                    key: item.name,\n                    title: item.header ? item.header : item.name,\n                    dataKey: item.alias ? item.alias : item.name,\n                    align: item.align,\n                    width: item.width,\n                    resizable: item.resizable,\n                    sortable: item.sortable,\n                    hidden: !item.visible,\n                    className: [cellBordered ? 'bordered' : ''].join(' '),\n                    headerClassName: [cellBordered ? 'bordered' : ''].join(' '),\n                    // cellRenderer: cellR && cellR.cellRender,\n                    ...colProps,\n                    cellRenderer: (object) => {\n                        if (colProps && colProps.cellRenderer)\n                            return <colProps.cellRenderer {...object}/>\n                            // return colProps.cellRenderer(object) ? colProps.cellRenderer(object) : '---';\n                        else\n                            return object.cellData\n                                ? <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>{object.cellData}</Typography.Text>\n                                : <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>---</Typography.Text> ;\n                            // return object.cellData ? object.cellData : '---';\n                    },\n                };\n            });\n        }\n\n        let _defaultFilter;\n        if (config && config.hierarchical && config.hierarchyLazyLoad) {\n            const parentKey = config.hierarchyField\n                ? config.hierarchyField.split('/')[1]\n                : expandParentKey;\n            _defaultFilter =  {...defaultFilter, [parentKey]: null};\n        } else _defaultFilter = defaultFilter;\n\n\n        setTableConfig({\n            columns: _columns,\n            defaultFilter: _defaultFilter,\n            rowKey:\n                config && config.hierarchical && config.hierarchyField\n                    ? config.hierarchyField.split('/')[0]\n                    : rowKey,\n            expandParentKey:\n                config && config.hierarchical && config.hierarchyField\n                    ? config.hierarchyField.split('/')[1]\n                    : expandParentKey,\n            expandColumnKey:\n                config && config.hierarchical && config.hierarchyView\n                    ? config.hierarchyView\n                    : expandColumnKey,\n            expandLazyLoad:\n                config && config.hierarchical && config.hierarchyLazyLoad\n                    ? config.hierarchyLazyLoad\n                    : expandLazyLoad,\n            pageSize: config && config.hierarchical ? 1 : pageSize,\n        });\n    }\n\n    if(tableConfig)\n        return ( <Table {...props} {...tableConfig} /> );\n    else\n        return null\n}\n\nexport default ConfigLoader;\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Select as AntSelect} from \"antd\";\nimport {\n\tgetObjectExcludedProps,\n\tnotificationError, useMounted\n} from \"../utils/baseUtils\";\n\nimport { CheckOutlined } from '@ant-design/icons';\n\nconst excludeProps = [\n\t'componentType',\n\t'defaultSortBy',\n\t'defaultFilter',\n\t'defaultSearchValue',\n\t'sortBy',\n\t'filter',\n\t'searchValue',\n\t'searchParamName',\n\t'infinityMode',\n\t'requestLoadRows',\n\t'optionConverter',\n\t'options',\n\t'widthControl',\n\t'pageSize'\n];\n\n/** Компонент выбора элемента(ов) из списка */\nconst Select = props => {\n\n\tconst {\n\t\t// Rt Props\n\t\tdefaultSortBy,\n\t\tdefaultFilter,\n\t\tdefaultSearchValue,\n\t\tsortBy,\n\t\tfilter,\n\t\tsearchValue,\n\t\tsearchParamName,\n\t\tinfinityMode,\n\t\trequestLoadRows,\n\t\toptionConverter,\n\t\toptions,\n\t\twidthControl,\n\t\tpageSize,\n\n\t\t// Ant Props\n\t\tmode,\n\t\tonChange,\n\t\tvalue,\n\t} = props;\n\n\t/** Наличие на сервере еще данных */\n\tconst [_hasMore, _setHasMore] = useState(true);\n\t/** Индикатор загрузки данных */\n\tconst [_loading, _setLoading] = useState(false);\n\t/** Опции селекта */\n\tconst [_options, _setOptions] = useState(options);\n\t/** Индикатор достижения низа окна */\n\tconst [isEndReached, setIsEndReached] = useState(false);\n\n\t/** Объект сортировки */\n\tconst [_sortBy, _setSortBy] = useState(undefined);\n\t/** Объект фильтрации */\n\tconst [_filter, _setFilter] = useState({});\n\t/** Строка поиска */\n\tconst [_searchValue, _setSearchValue] = useState(undefined);\n\n\t/** Состояние параметра выбрать все */\n\tconst [_isSelectAll, _setIsSelectAll] = useState(false);\n\n\tconst isMounted = useMounted()\n\n\tuseEffect(() => {\n\t\t_setSearchValue(defaultSearchValue);\n\t\t_loadOptions({\n\t\t\tsortBy: defaultSortBy,\n\t\t\tfilter: defaultFilter,\n\t\t\tsearchValue: defaultSearchValue,\n\t\t\treload: true,\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\t_setRowsHandler(options);\n\t}, [options]);\n\n\tuseEffect(() => {\n\t\t// console.log(\"Change sortBy, filter, searchValue\", sortBy, filter, searchValue);\n\t\tif(isMounted) {\n\t\t\tconst __sortBy = sortBy ? sortBy : _sortBy;\n\t\t\tconst __filter = filter ? filter : _filter;\n\t\t\tconst __searchValue = searchValue ? searchValue : _searchValue;\n\t\t\t_setSortBy(__sortBy);\n\t\t\t_setFilter(__filter);\n\t\t\t_setSearchValue(__searchValue);\n\t\t\t_loadOptions({\n\t\t\t\tsortBy: __sortBy,\n\t\t\t\tfilter: __filter,\n\t\t\t\tsearchLine: __searchValue,\n\t\t\t\treload: true,\n\t\t\t});\n\t\t}\n\t}, [sortBy, filter, searchValue]);\n\n\tconst _setRowsHandler = (options) => {\n\t\t\t_setOptions(options);\n\t\t\t// console.log('Select _setRowsHandler value => ', options)\n\t\t\tif(mode === 'multiple') {\n\t\t\t\tif(Array.isArray(value))\n\t\t\t\t\tif(options.reduce((preValue, item) => value.includes(item.value) ? preValue + 1 : preValue, 0) === options.length)\n\t\t\t\t\t\t_setIsSelectAll(true);\n\t\t\t\t\telse\n\t\t\t\t\t\t_setIsSelectAll(false);\n\t\t\t\tonChange(value);\n\t\t\t}\n\t\t// setRows(rows);\n\t\t// rowsDispatch(rows);\n\t};\n\n\tconst getPageNum = (reload) =>\n\t\treload ? 0 : Math.floor(_options.length / pageSize);\n\n\tconst getSort = (sortBy) =>\n\t\tsortBy && sortBy.key ? sortBy.key + ',' + sortBy.order : null;\n\n\tconst getSearchValue = (searchValue) =>\n\t\tsearchValue ? {[searchParamName]: searchValue} : null\n\n\tconst _loadOptions = (params) => {\n\t\t// console.log('_dataProcessing', params);\n\t\tconst {sortBy, filter, searchValue, reload} = params;\n\t\tif ((_hasMore || reload) && !_loading && requestLoadRows) {\n\t\t\t_setLoading(true);\n\n\t\t\tconst requestOptions = {\n\t\t\t\tparams: {\n\t\t\t\t\tpage: getPageNum(reload),\n\t\t\t\t\tsize: pageSize,\n\t\t\t\t\tsort: getSort(sortBy)\n\t\t\t\t},\n\t\t\t\tdata: {\n\t\t\t\t\t...filter,\n\t\t\t\t\t...getSearchValue(searchValue)\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log('dataQuery', dataQuery);\n\n\t\t\trequestLoadRows(requestOptions)\n\t\t\t\t.then((response) => {\n\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\tconst result = response.data;\n\n\t\t\t\t\tif (result && result.length < pageSize) {\n\t\t\t\t\t\t_setHasMore(false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_setHasMore(true);\n\t\t\t\t\t\tsetIsEndReached(false);\n\t\t\t\t\t}\n\t\t\t\t\treload\n\t\t\t\t\t\t? _setRowsHandler(result.map(option => optionConverter(option))) // _setRows\n\t\t\t\t\t\t: _setRowsHandler(_options.concat(result.map(option => optionConverter(option)))); // _setRows\n\n\t\t\t\t\t// console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\n\n\t\t\t\t\t_setLoading(false);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t\t\t_setRowsHandler(_options); // _setRows\n\t\t\t\t\t// setHasMore(false);\n\t\t\t\t\t_setLoading(false);\n\t\t\t\t});\n\t\t}\n\t};\n\n\tconst onScroll = (event) => {\n\t\tlet scrollTopMax = event.nativeEvent.target.scrollTopMax\n\t\tlet scrollTop = event.nativeEvent.target.scrollTop//.body.scrollTop\n\n\t\tconst onEndReached = scrollTopMax - scrollTop;\n\n\t\tif(onEndReached < 300 && !isEndReached) {\n\t\t\t// console.log('Load Data');\n\t\t\tsetIsEndReached(true);\n\t\t\t_setSearchValue(defaultSearchValue);\n\t\t\tif(infinityMode){\n\t\t\t\t_loadOptions({\n\t\t\t\t\tsortBy: defaultSortBy,\n\t\t\t\t\tfilter: defaultFilter,\n\t\t\t\t\tsearchValue: defaultSearchValue,\n\t\t\t\t\treload: false,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// console.log(\"scrollTopMax / scrollTop\", scrollTopMax, scrollTop, onEndReached);\n\t\t// const lastScrollTop = this._scroll.scrxollTop;\n\t\t// if (args.scrollTop > lastScrollTop) this._maybeCallOnEndReached();\n\t}\n\n\tconst onSearch = (value) => {\n\t\t_setSearchValue(value);\n\t\t_loadOptions({\n\t\t\tsortBy: defaultSortBy,\n\t\t\tfilter: defaultFilter,\n\t\t\tsearchValue: value,\n\t\t\treload: true,\n\t\t});\n\t}\n\n\tconst _onChangeSelectAll = () => {\n\t\t// console.log(`_onChangeSelectAll`, _isSelectAll);\n\t\tif(mode === 'multiple') {\n\t\t\tif (_isSelectAll) {\n\t\t\t\tconst optionsValues = _options.map(item => item.value);\n\t\t\t\tonChange(value.filter(item => !optionsValues.includes(item)));\n\t\t\t\t_setIsSelectAll(false);\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(value) && value.length > 0)\n\t\t\t\t\tonChange([...new Set([...value, ..._options.map(item => item.value)])]);\n\t\t\t\telse\n\t\t\t\t\tonChange([...new Set([..._options.map(item => item.value)])]);\n\t\t\t\t_setIsSelectAll(true);\n\t\t\t}\n\t\t} else\n\t\t\tonChange(undefined);\n\t}\n    const _onChange = (value) => {\n        // console.log(`_onChange selected`, value);\n        if(Array.isArray(value))\n        \tif(_options.reduce((preValue, item) => value.includes(item.value) ? preValue + 1 : preValue, 0) === _options.length)\n        \t\t_setIsSelectAll(true);\n        \telse\n\t\t\t\t_setIsSelectAll(false);\n\n\t\tonChange(value);\n    }\n\n    const getSelectAllCls = () => {\n\t\tlet cls = ['ant-select-item', 'ant-select-item-option', 'ant-select-item-option-select-all'];\n\t\tif(_isSelectAll)\n\t\t\tcls.push('ant-select-item-option-selected');\n\t\treturn cls.join(' ');\n\t}\n\n\tconst childProps = getObjectExcludedProps(props, excludeProps);\n    return (\n\t\t<AntSelect\n\t\t\t{...childProps}\n\t\t\tsearchValue={_searchValue}\n\t\t\tstyle={{ width: widthControl }}\n\t\t\t// listHeight={heightPopup}\n\t\t\t// defaultValue={['a10', 'c12']}\n\t\t\tonChange={_onChange}\n\t\t\tmaxTagCount={0}\n\t\t\tmaxTagPlaceholder={(omittedValues) => `Выбрано: ${omittedValues.length}`}\n\t\t\t// dropdownMatchSelectWidth={200}\n\t\t\t// listItemHeight={10} listHeight={250}\n\t\t\tonPopupScroll={onScroll}\n\t\t\tonSearch={onSearch}\n\t\t\tdropdownRender={menu => (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t{mode === 'multiple' ?\n\t\t\t\t\t\t<div className={getSelectAllCls()} onClick={_onChangeSelectAll}>\n\t\t\t\t\t\t\t<div className=\"ant-select-item-option-content\">\n\t\t\t\t\t\t\t\t<span>Выбрать все</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{_isSelectAll ?\n\t\t\t\t\t\t\t\t<span className=\"ant-select-item-option-state\"><CheckOutlined/></span> : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t\t{menu}\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t>\n    \t\t{_options && _options.map(({ label, value, className, disabled }, i) =>\n\t\t\t\t<AntSelect.Option key={i.toString(36) + i} value={value} className={className} disabled={disabled}>{label}</AntSelect.Option>)}\n    \t</AntSelect>\n    );\n};\n\nSelect.propTypes = {\n\t/** Сортировка по умолчанию */\n\tdefaultSortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/** Объект фильтрации по умолчанию */\n\tdefaultFilter: PropTypes.object,\n\n\t/** Значение строки поиска по умолчанию строк */\n\tdefaultSearchValue: PropTypes.string,\n\n\t/** Сортировка */\n\tsortBy: PropTypes.object,\n\n\t/** Фильтр */\n\tfilter: PropTypes.object,\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\t/** Режим загружки по скроллу */\n\tinfinityMode: PropTypes.bool,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n\t/** Функция преобразования загруженных объектов в объекты для селекта.\n\t * Сигнатура `(option) => ({})`\n\t * Требоваеть вернуть объект с параметрам\n\t * `{ label: ReactNode, value: any, className: string, disabled: bool }`\n\t * ##### Example:\n\t * ``` JS\n\t * (option) => ({\n\t * \tlabel: (<span><MehOutlined />{option.name}</span>),\n\t * \tvalue: option.id,\n\t * \tclassName: 'some-class',\n\t * \tdisabled: false,\n\t * })\n\t * ```\n\t */\n\toptionConverter: PropTypes.func.isRequired,\n\n\t/** Select options `[{ label, value, className, disabled }]` */\n\toptions: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Ширина поля выбора в пикселях */\n\twidthControl: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n\t/** Размер страницы */\n\tpageSize: PropTypes.number,\n};\n\nSelect.defaultProps = {\n\t// Rt Props\n\tdefaultSortBy: undefined,\n\tdefaultFilter: {},\n\tdefaultSearchValue: undefined,\n\tinfinityMode: false,\n\trequestLoadRows: undefined,\n\toptions: [],\n\twidthControl: '100%',\n\tpageSize: 50,\n\tsearchParamName: 'searchValue',\n}\n\nexport default Select;\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TreeSelect as AntTreeSelect } from \"antd\";\nimport { getObjectExcludedProps, notificationError, useMounted } from \"../utils/baseUtils\";\n\nconst excludeProps = [\n    'componentType',\n    'defaultSortBy',\n    'defaultFilter',\n    'defaultSearchValue',\n    'sortBy',\n    'filter',\n    'searchValue',\n    'searchParamName',\n    'requestLoadRows',\n    'optionConverter',\n    'treeData'\n];\n\n/** Компонент выбора элемента(ов) из древовидного списка */\nconst TreeSelect = props => {\n\n    const {\n        // Rt Props\n        defaultSortBy,\n        defaultFilter,\n        defaultSearchValue,\n        sortBy,\n        filter,\n        searchValue,\n        searchParamName,\n        requestLoadRows,\n        optionConverter,\n        treeData,\n    } = props;\n    /** Индикатор загрузки данных */\n    const [_loading, _setLoading] = useState(false);\n    /** Опции селекта */\n    const [_treeData, _setTreeData] = useState(treeData);\n\n    const isMounted = useMounted()\n\n    useEffect(() => {\n        _loadOptions({\n            sortBy: defaultSortBy,\n            filter: defaultFilter,\n            searchValue: defaultSearchValue,\n            reload: true,\n        });\n    }, []);\n\n    useEffect(() => {\n        // console.log(\"Change sortBy, filter, searchValue\", sortBy, filter, searchValue);\n        if(isMounted) {\n            _loadOptions({\n                sortBy: sortBy,\n                filter: filter,\n                searchLine: searchValue,\n                reload: true,\n            });\n        }\n    }, [sortBy, filter, searchValue]);\n\n    const getSort = (sortBy) =>\n        sortBy && sortBy.key ? sortBy.key + ',' + sortBy.order : null;\n\n    const getSearchValue = (searchValue) =>\n        searchValue ? {[searchParamName]: searchValue} : null\n\n    const _optionConverter = (options) => {\n        if(Array.isArray(options))\n            return options.map(option => {\n                if(option.children && Array.isArray(option.children))\n                    option.children = _optionConverter(option.children)\n                return optionConverter(option)\n            })\n    }\n\n    const _loadOptions = (params) => {\n        const {sortBy, filter, searchValue} = params;\n        if (!_loading && requestLoadRows) {\n            _setLoading(true);\n            const requestOptions = {\n                params: {\n                    page: 0,\n                    size: 1,\n                    sort: getSort(sortBy)\n                },\n                data: {\n                    ...filter,\n                    ...getSearchValue(searchValue)\n                }\n            }\n            requestLoadRows(requestOptions)\n                .then((response) => {\n                    // console.log(\"infinity then response\", response);\n                    const result = response.data;\n                    _setTreeData(_optionConverter(result))\n                })\n                .catch((error) => {\n                    notificationError(error, 'Ошибка загрузки данных')\n                    // _setRowsHandler(_options); // _setRows\n                    // setHasMore(false);\n                    _setLoading(false);\n                });\n        }\n    }\n\n    const childProps = getObjectExcludedProps(props, excludeProps);\n    return (\n        <AntTreeSelect\n            {...childProps}\n            maxTagCount={0}\n            maxTagPlaceholder={(omittedValues) => `Выбрано: ${omittedValues.length}`}\n            treeData={_treeData}\n            showArrow={true}\n            // loadData={onLoadData}\n        />\n    );\n};\n\nTreeSelect.propTypes = {\n    /** Сортировка по умолчанию */\n    defaultSortBy: PropTypes.shape({\n        /** Ключ поля для сортировки */\n        key: PropTypes.string,\n        /** Направление сортировки */\n        order: PropTypes.oneOf(['asc', 'desc']),\n    }),\n\n    /** Объект фильтрации по умолчанию */\n    defaultFilter: PropTypes.object,\n\n    /** Значение строки поиска по умолчанию строк */\n    defaultSearchValue: PropTypes.string,\n\n    /** Сортировка */\n    sortBy: PropTypes.object,\n\n    /** Фильтр */\n    filter: PropTypes.object,\n\n    /** Значение строки поиска */\n    searchValue: PropTypes.string,\n\n    /** Имя параметра для поиска */\n    searchParamName: PropTypes.string,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция преобразования загруженных объектов в объекты для селекта.\n     * Сигнатура `(option) => ({})`\n     * Требоваеть вернуть объект с параметрам\n     * `{ label: ReactNode, value: any, children: any, checkable: bool, selectable: bool }`\n     * ##### Example:\n     * ``` JS\n     * (option) => ({\n     * \tlabel: (<span><MehOutlined />{option.name}</span>),\n     * \tvalue: option.id,\n     * \tchildren: option.children,\n     * \tcheckable: !option.isGroup,\n     * \tselectable: !option.isGroup,\n     * })\n     * ```*/\n    optionConverter: PropTypes.func.isRequired,\n\n    /** Select options `[{ label, value, children, checkable, selectable }]` */\n    options: PropTypes.arrayOf(PropTypes.object),\n};\n\nTreeSelect.defaultProps = {\n    // Rt Props\n    defaultSortBy: undefined,\n    defaultFilter: {},\n    defaultSearchValue: undefined,\n    requestLoadRows: undefined,\n};\n\nexport default TreeSelect;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { notification, Button, Tooltip, Modal as AntModal} from \"antd\";\nimport { notificationError, dispatchToStore, useMounted, getObjectExcludedProps } from \"../utils/baseUtils\";\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../redux/rtd.actions\";\nimport Form from \"../Form/Form\";\n\nconst excludeProps = [\"buttonProps\", \"toolTipProps\", \"modalConfig\", \"modalData\", \"subscribe\", \"dispatch\"];\nconst serverModalTypes = ['addOnServer', 'editOnServer', 'addGroupOnServer', 'editGroupOnServer']\nconst localModalTypes = ['addOnLocal', 'addGroupOnLocal', 'editOnLocal', 'editGroupOnLocal']\nconst allModalTypes = [...serverModalTypes, ...localModalTypes, 'select', 'viewGroup', 'viewObject']\n\nconst defaultProps = {\n    subscribe: [],\n    dispatch: {}\n}\n\nconst getDefaultFooterProps = (modal) => {\n\n    let okText = '';\n    let cancelText = '';\n    let modalTitle = '';\n\n    switch (modal.type) {\n        case 'addOnServer':\n        case 'addGroupOnServer':\n            okText = 'Сохранить';\n            cancelText = 'Отмена';\n            modalTitle = 'Сохранить на сервере';\n            break;\n        case 'addOnLocal':\n        case 'addGroupOnLocal':\n            okText = 'Сохранить';\n            cancelText = 'Отмена';\n            modalTitle = 'Сохранить локально';\n            break;\n        case 'editOnServer':\n        case 'editGroupOnServer':\n            okText = 'Сохранить';\n            cancelText = 'Отмена';\n            modalTitle = 'Измененить на сервере';\n            break;\n        case 'editOnLocal':\n        case 'editGroupOnLocal':\n            okText = 'Сохранить';\n            cancelText = 'Отмена';\n            modalTitle = 'Изменение локально';\n            break;\n        case 'select':\n            okText = 'Добавить';\n            cancelText = 'Отмена';\n            modalTitle = 'Выбор';\n            break;\n        case 'viewGroup':\n        case 'viewObject':\n            okText = 'Закрыть';\n            modalTitle = 'Просмотр';\n            break;\n        default: break;\n    }\n\n    if(modal.okText)\n        okText = modal.okText;\n\n    if(modal.cancelText)\n        cancelText = modal.cancelText;\n\n    if(modal.title)\n        modalTitle = modal.title;\n\n    return {okText, cancelText, title: modalTitle, okType: 'primary'}\n};\n\n/**\n * Компонент модального окна\n */\nconst Modal = props => {\n\n    const {buttonProps, toolTipProps, modalConfig, modalData, subscribe, dispatch} = props;\n    const modalProps = { ...getDefaultFooterProps(modalConfig), ...getObjectExcludedProps(modalConfig, excludeProps) };\n\n    const [visible, setVisible] = useState(false);\n    const [_modalData, _setModalData] = useState({});\n    const [_buttonProps, setButtonProps] = useState({});\n\n    const isMounted = useMounted()\n\n    useEffect(() => {\n        _setModalData(modalData);\n    }, []);\n\n    /** Подписка на изменение props[subscribe.name] в сторе */\n    subscribe.map(item => {\n        return useEffect( () => {\n            if(isMounted && item.name) {\n                // console.log(\"storeHOC => subscribe: \", props[subscribe.name]);\n                item.onChange && item.onChange({\n                    value: props[item.name],\n                    extraData: props[`${item.name}ExtraData`],\n                    setModalData,\n                    setButtonProps,\n                    openModal: _onOpenModal,\n                    closeModal: _onCloseModal\n                });\n            }\n            // console.log(\"Change Props[2]: \", props.subscribeЗф);\n        }, [props[item.name]]);\n    })\n\n    const setModalData = (value) => _setModalData && _setModalData(value);\n    const _onOpenModal = () => setVisible(true)\n    const _onCloseModal = () => setVisible(false)\n\n    const onFinishHandler = (values) => { //} {type, row, requestSaveRow}) => {\n        // console.log(\"Modal Events => before dispatchToStore: \", dispatch);\n\n        let saveObj;\n        if(modalProps.type.startsWith('add'))\n            saveObj = {...values};\n        else\n            saveObj = {..._modalData, ...values};\n\n        dispatchToStore({dispatch, setDateStore: props.setDateStore, value: saveObj});\n\n        if (modalProps.requestSaveRow && serverModalTypes.includes(modalProps.type)) {\n            const method = (modalProps.type === 'addOnServer' || modalProps.type === 'addGroupOnServer') ? 'POST' : 'PUT';\n            // console.log(\"Modal Events => type: \", type, method, row, _modalData);\n            modalProps.requestSaveRow({\n                method,\n                data: saveObj,\n            })\n                .then(response => {\n                    notification.success({\n                        message: 'Сохранение прошло успешно'\n                    });\n                    _onCloseModal();\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении'));\n        } else _onCloseModal();\n\n        if (modalProps.onOk) modalProps.onOk(values);\n        if (modalProps.onFinish) modalProps.onFinish(values);\n    };\n\n    const onFinishFailedHandler = (errorInfo) => {\n        // console.log('FormModal Failed:', errorInfo);\n        console.error(\"FormModal fields failed: \", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    const loadInitDataHandler = (callBack) =>\n        formConfig.loadInitData(callBack, _modalData)\n\n\n    const _onCancelHandler = (e) => {\n        // setVisibleModals({ ...visibleModals, [modal.type]: false });\n        // form.resetFields();\n        _onCloseModal()\n        if (modalProps.onCancel) modalProps.onCancel(e)\n    };\n\n    const defaultFooter = [\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.cancelText,\n                className: 'mr-8',\n                onClick: _onCancelHandler,\n                ...modalProps.cancelButtonProps\n            }\n        },\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.okText,\n                type: modalProps.okType,\n                htmlType: 'submit',\n                ...modalProps.okButtonProps\n            }\n        }\n    ];\n\n    const formConfig =  {\n        footer: defaultFooter,\n        loadInitData: (callBack, row) => callBack(row),\n        ...modalProps.form\n    };\n\n    return (\n        <React.Fragment>\n            <Tooltip {...toolTipProps}>\n                <Button\n                    type=\"primary\"\n                    {...buttonProps}\n                    {..._buttonProps}\n                    onClick={_onOpenModal}\n                >{buttonProps && buttonProps.label}</Button>\n            </Tooltip>\n            {/*<FormModal*/}\n            {/*    modal={ modalConfig }*/}\n            {/*    selectedRow={_modalData}*/}\n            {/*    visible={visible}*/}\n            {/*    setVisible={_onCloseModal}*/}\n            {/*    saveRow={_onSaveRow}*/}\n            {/*>{props.children}</FormModal>*/}\n            <AntModal\n                {...modalProps}\n                centered\n                destroyOnClose\n                visible={visible}\n                onCancel={_onCancelHandler}\n                bodyStyle={{padding: 0, ...modalProps.bodyStyle}}\n                footer={null}\n            >\n                <Form\n                    {...formConfig}\n                    onFinish={onFinishHandler}\n                    onFinishFailed={onFinishFailedHandler}\n                    loadInitData={loadInitDataHandler}\n                >{props.children}</Form>\n            </AntModal>\n        </React.Fragment>\n    )\n};\n\nModal.propTypes = {\n\n    /** Свойства [Button](https://ant.design/components/button/) из Ant Design\n     * Добавлено свойство `label` с типом `ReactNode` или `string` для формирования контента кнопки*/\n    buttonProps: PropTypes.object,\n\n    /** Объект модального окна. Стандартная конфигурация. */\n    modalConfig: PropTypes.shape({\n        /** Тип модального окна */\n        type: PropTypes.oneOf(allModalTypes),\n\n        /** Ссылка на функцию сохранения данных */\n        requestSaveRow: PropTypes.func,\n\n        /** Пропсы формы.\n         * Если верстка через конфиги, то пропс body обязателен */\n        form: PropTypes.object\n    }),\n\n    /** Данные для модального окна */\n    modalData: PropTypes.object,\n\n    /** Путь в сторе куда класть данных окна после закрытия */\n    dispatch: PropTypes.object,\n\n    /** Объект для подписки на изменения в STORE.\n     * Параметры в `onChange`:\n     * * `value`: значение за которым ведется наблюдение,\n     * * `extraData`: дополнительные данные, передаваемые при срабатывании события\n     * * `setModalData`: функция задания объекта формы\n     * * `setButtonProps`: функция задания пропсов кнопке\n     * * `openModal`: функция открытия модального окна\n     * * `closeModal`: функция закрытия модального окна */\n    subscribe: PropTypes.arrayOf(PropTypes.object),\n};\n\nModal.defaultProps = defaultProps;\n\nconst mapStateToProps = (store, ownProps) => {\n    const {subscribe} = ownProps;\n    let state = {};\n    if(subscribe && subscribe.length > 0){\n        subscribe.forEach(item => {\n            const {name, path, extraData} = item;\n            if(name && path)\n                state[name] = objectPath.get(store, path);\n            if(name && extraData)\n                state[`${name}ExtraData`] = objectPath.get(store, extraData);\n        })\n    }\n    return state;\n};\nconst mapDispatchToProps = (dispatch) =>\n    bindActionCreators( { setDateStore: setDateStore, }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, notification as antNotification, Spin, Tooltip, Typography, Upload } from \"antd\";\nimport { LoadingOutlined, CloudUploadOutlined } from \"@ant-design/icons\";\nimport { noop } from \"../utils/baseUtils\";\n\n\nconst defaultProps = {\n    requestUploadFile: noop,\n    dataObject: {},\n    onCompletedUpload: noop,\n    onFailedUpload: noop,\n    uploadProps: {},\n    toolTipProps: {},\n    buttonProps: {}\n}\n\n/** Компонент загрузки файлов */\nconst UploadFile = props => {\n\n    const {\n        requestUploadFile,\n        dataObject,\n        onCompletedUpload,\n        onFailedUpload,\n        uploadProps,\n        toolTipProps,\n        buttonProps,\n    } = props\n\n    const _uploadFile = (file) => {\n        // console.log('beforeUpload dataObject => ', dataObject);\n        notification(file, 'loading');\n        if (requestUploadFile) {\n            requestUploadFile({ file: file, dataObject })\n                .then((response) => {\n                    notification(file, 'success');\n                })\n                .catch(() => {\n                    notification(file, 'error');\n                });\n        }\n        return false;\n    };\n    const notification = (file, type) => {\n        const notifProps = {\n            key: file.uid,\n            duration: type === 'loading' ? 0 : 5,\n            icon: type === 'loading'\n                ? <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n                : null,\n            message: <span>Загрузка файла: <Typography.Text code>{file.name}</Typography.Text></span>\n        };\n        switch (type) {\n            case 'loading':\n                antNotification.info(notifProps);\n                break;\n            case 'success':\n                antNotification.success(notifProps);\n                onCompletedUpload(file);\n                props.onChange(file);\n                break;\n            case 'error':\n                antNotification.error(notifProps);\n                onFailedUpload(file);\n                break;\n            case 'close':\n                antNotification.close(file.uid);\n                break;\n            default:\n                break;\n        }\n    };\n    const defaultUploadProps = {\n        multiple: true,\n        showUploadList: false,\n        beforeUpload: _uploadFile\n    };\n\n    return (\n        <Upload {...defaultUploadProps} {...uploadProps}>\n            <Tooltip {...toolTipProps}>\n                <Button\n                    icon={<CloudUploadOutlined />}\n                    {...buttonProps}\n                >{buttonProps && buttonProps.label}</Button>\n            </Tooltip>\n        </Upload>\n    );\n};\n\nUploadFile.propTypes = {\n    /** Функция запроса для отправки файла с данным на сервер */\n    requestUploadFile: PropTypes.func.isRequired,\n\n    /** Данные, прикрепляемые к файлу */\n    dataObject: PropTypes.object,\n\n    /** Функция, вызываемая при удачной загрузке файла */\n    onCompletedUpload: PropTypes.func,\n\n    /** Функция, вызываемая при НЕ удачной загрузке файла */\n    onFailedUpload: PropTypes.func,\n\n    /** Ant Props для [Upload](https://ant.design/components/upload/) компонента */\n    uploadProps: PropTypes.object,\n\n    /** Ant Props для [Tooltip](https://ant.design/components/tooltip/) компонента */\n    toolTipProps: PropTypes.object,\n\n    /** Ant Props для [Button](https://ant.design/components/button/) компонента */\n    buttonProps: PropTypes.object,\n};\n\nUploadFile.defaultProps = defaultProps\n\nexport default UploadFile;\n","import React from \"react\";\nimport {\n    DatePicker as RtDatePicker,\n    TypographyDate,\n    Button as RtButton,\n    Custom,\n    FormHeader,\n    FormBody,\n    FormFooter,\n    TabPane as RtTabPane,\n    withStore\n} from \"./Base\";\nimport {\n    Form as AntForm,\n    Typography as AntTypography,\n    Radio as AntRadio,\n    Divider as AntDivider,\n    Checkbox as AntCheckbox,\n    Input as AntInput,\n    InputNumber as AntInputNumber,\n    Switch as AntSwitch,\n    Space as AntSpace,\n    Row as AntRow,\n    Col as AntCol,\n    Tabs as AntTabs,\n    List as AntList\n} from \"antd\";\nimport RtForm from \"./Form/Form\";\nimport RtLayout from \"./Layout/Layout\";\nimport RtSwitcher from './Switcher/Switcher';\nimport RtTable from \"./Table/ConfigLoader\";\nimport RtSelect from \"./Select/Select\";\nimport RtTreeSelect from './TreeSelect/TreeSelect'\nimport RtModal from \"./Modal/Modal\";\nimport RtUploadFile from \"./UploadFile/UploadFile\";\nimport { getObjectExcludedProps } from \"./utils/baseUtils\";\n\n/**\n * Renders\n */\nexport const renderClassic = (Component) => (props) => {\n    return (<Component {...props}>{props.children}</Component>)\n}\n\nexport const renderClassicWithLabel = (Component) => (props) => {\n    return (<Component {...props}>{props.label || props.value || props.children}</Component>)\n}\n\nconst renderClassicWithComponentType = (Component, componentType) => (props) => {\n    return renderClassic(Component)({...props, componentType});\n}\n\nexport const renderClassicByName = (componentName) => (props) => {\n    if(classic[componentName]) {\n        // console.log(\"renderClassicByName => \", props);\n        return renderClassic(classic[componentName])(props)\n    } else {\n        console.log(\"NO renderClassicByName => \", componentName);\n        return null;\n    }\n}\nexport const renderDeclarativeByName = (componentName) => (props) => (children) => {\n    if(classic[componentName]) {\n        // console.log(\"renderDeclarativeByName => \", props);\n        return renderDeclarative(classic[componentName])(props)(children)\n    } else {\n        console.log(\"NO renderDeclarativeByName => \", componentName);\n        return null;\n    }\n}\n\nexport const renderDeclarative = (Component) => (props) => (children) => {\n    // console.log(\"renderDeclarative => \", props);\n    return (<Component {...props}>{children}</Component>)\n}\n\nconst renderFormItemComponent = (Component) => (props) => {\n    const componentProps = getObjectExcludedProps(props, ['itemProps']);\n    return renderDeclarative(AntForm.Item)\n        ({...props.itemProps, noStyle: !(props.itemProps && props.itemProps.label)})\n        (renderClassic(Component)(componentProps))\n}\n\n\n/** */\nconst ComponentClassic = (Component) => (props) => {\n    // console.log(\"ComponentClassic => \", Component)\n    const StoreComponent = withStore(Component, {});\n    return renderFormItemComponent(StoreComponent)(props);\n}\nconst ComponentClassicWithLabel = (Component) => (props) => {\n    const StoreComponent = withStore(Component, {});\n    return renderFormItemComponent(renderClassicWithLabel(StoreComponent))(props);\n}\nconst ComponentClassicWithPlaceholder = (Component, placeholder) => (props) => {\n    const StoreComponent = withStore(Component, {});\n    const _placeholder = (props && props.placeholder) ? props.placeholder : placeholder;\n    return renderFormItemComponent(StoreComponent)({...props, placeholder: _placeholder});\n}\nconst ComponentClassicWithOutStore = (Component) => (props) => {\n    // console.log(\"ComponentClassicWithOutStore => \", Component)\n    return renderFormItemComponent(Component)(props);\n}\n\nconst classicComponents = {\n    Form:       RtForm,\n    FormHeader: FormHeader,\n    FormBody:   FormBody,\n    FormFooter: FormFooter,\n    FormList:   AntForm.List,\n    Space:      renderFormItemComponent(AntSpace),\n    Row:        renderFormItemComponent(AntRow),\n    Col:        renderFormItemComponent(AntCol),\n    Layout:     renderFormItemComponent(RtLayout),\n    Tabs:       AntTabs,\n    TabPane:    RtTabPane,\n    List:       renderFormItemComponent(AntList),\n}\nconst withComponentType = {\n    Button:     ComponentClassicWithOutStore(RtButton),\n    Title:      ComponentClassicWithLabel(AntTypography.Title),\n    Text:       ComponentClassicWithLabel(AntTypography.Text),\n    Divider:    ComponentClassicWithLabel(AntDivider),\n    Checkbox:   ComponentClassicWithLabel(AntCheckbox),\n    DatePicker: ComponentClassicWithPlaceholder(RtDatePicker, 'Выберите дату'),\n    DateText:   ComponentClassic(TypographyDate),\n    Input:      ComponentClassicWithPlaceholder(AntInput, 'Введите значение'),\n    Search:     ComponentClassicWithPlaceholder(AntInput.Search, 'Поиск'),\n    TextArea:   ComponentClassicWithPlaceholder(AntInput.TextArea, 'Введите текст'),\n    Password:   ComponentClassicWithPlaceholder(AntInput.Password, 'Введите пароль'),\n    InputNumber:ComponentClassicWithPlaceholder(AntInputNumber, 'Введите значение'),\n    Switch:     ComponentClassic(AntSwitch),\n    RadioGroup: ComponentClassic(AntRadio.Group),\n    Select:     ComponentClassicWithPlaceholder(RtSelect, 'Выберите значение'),\n    TreeSelect: ComponentClassicWithPlaceholder(RtTreeSelect, 'Выберите значение'),\n    Table:      ComponentClassicWithOutStore(RtTable),\n    Modal:      ComponentClassicWithOutStore(RtModal),\n    Custom:     ComponentClassic(Custom),\n    Switcher:   ComponentClassic(RtSwitcher),\n    UploadFile: ComponentClassic(RtUploadFile)\n}\n\nexport const classic = {\n    ...classicComponents,\n    ...Object.keys(withComponentType)\n        .reduce((obj, key) =>\n            ({ ...obj, [key]: renderClassicWithComponentType(withComponentType[key], key) }), {})\n}\n\nexport const declarative =\n    Object.keys(classic)\n    .reduce((obj, key) =>\n        ({ ...obj, [key]: renderDeclarative(classic[key]) }), {});\n","import {Spin} from 'antd';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport React from 'react';\n\nexport const empty = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<span>Нет данных</span>{' '}\n\t</div>\n);\n\nexport const overlay = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<Spin\n\t\t\ttip='Загрузка...'\n\t\t\tindicator={<LoadingOutlined style={{fontSize: 24}} spin />}\n\t\t/>{' '}\n\t</div>\n);\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport { flatten, getTableRowKeys, getTableRowObjects } from \"../../../utils/baseUtils\";\n\nconst SelectionHead = (props) => {\n\tconst {column, container} = props;\n\tconst {rowKey, onSelectAll, selectedRowKeys, selectAll} = column;\n\n\tconst _handleChange = (e) => {\n\t\tconst rowKeys = flatten(getTableRowKeys(container.props.data, column.rowKey));\n\t\tconst rowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => rowKeys.includes(item[rowKey]));\n\t\tconst totalLength = rowKeys.length;\n\t\tconst selectLength = selectedRowKeys.length;\n\t\tconst checked = !(totalLength === selectLength);\n\n\t\t// const newRowKeys = container.props.data.map((item) => { return item[column.rowKey] });\n\t\tonSelectAll({selected: checked, rowKeys: rowKeys, rowObjects: rowObjects});\n\t};\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={selectAll === null}\n\t\t\tonChange={_handleChange}\n\t\t\tchecked={selectAll}\n\t\t/>\n\t);\n};\n\nexport default SelectionHead;\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport {\n\tflatten,\n\tgetTableRowKeys,\n\tfindNodeByRowKey, getTableRowObjects\n} from \"../../../utils/baseUtils\";\n\nconst getRowChildren = (data, rowKey) =>\n\tdata.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item[rowKey], getRowChildren(item.children, rowKey)];\n\t\t}\n\t\treturn item[rowKey];\n\t});\n\nconst findBrothers = (data, selfItem, rowKey, parentKey, rowKeys = null) => {\n\tlet arr = [];\n\tdata.forEach((item) => {\n\t\tif (\n\t\t\titem[parentKey] &&\n\t\t\titem[parentKey] === selfItem[parentKey] &&\n\t\t\titem[rowKey] !== selfItem[rowKey]\n\t\t) {\n\t\t\tif (rowKeys !== null) {\n\t\t\t\tif (rowKeys.includes(item[rowKey])) {\n\t\t\t\t\tarr.push(item[rowKey]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tarr.push(item[rowKey]);\n\t\t\t}\n\t\t} else if (item.children && item.children.length) {\n\t\t\tarr.push(\n\t\t\t\tfindBrothers(\n\t\t\t\t\titem.children,\n\t\t\t\t\tselfItem,\n\t\t\t\t\trowKey,\n\t\t\t\t\tparentKey,\n\t\t\t\t\trowKeys\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\treturn arr;\n};\n\nexport const parentAnalysis = ({\n\trowData,\n\trowKey,\n\tparentKey,\n\tchecked,\n\tnodeAssociated,\n\ttreeData,\n\tselectedRowKeys,\n\tindeterminateRowKeys,\n}) => {\n\tlet _selectedRowKeys = [...selectedRowKeys];\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\tlet currentRowData = rowData;\n\tlet parentExist = !!currentRowData[parentKey];\n\tlet lastTypeSelect = checked ? 'checked' : 'square';\n\tlet typeSelect = '';\n\tlet nextSquare = false;\n\n\t/** Пока есть родитель */\n\twhile (parentExist && nodeAssociated) {\n\t\tconst indeterminateBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_indeterminateRowKeys\n\t\t\t)\n\t\t);\n\t\tconst selectedBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_selectedRowKeys\n\t\t\t)\n\t\t);\n\t\tconst allBrothers = flatten(\n\t\t\tfindBrothers(treeData, currentRowData, rowKey, parentKey)\n\t\t);\n\n\t\tif (checked) {\n\t\t\tif (\n\t\t\t\tlastTypeSelect === 'checked' &&\n\t\t\t\tselectedBrothers.length === allBrothers.length\n\t\t\t)\n\t\t\t\ttypeSelect = 'checked';\n\t\t\telse typeSelect = 'square';\n\t\t} else {\n\t\t\tif (\n\t\t\t\t!checked &&\n\t\t\t\t!nextSquare &&\n\t\t\t\t(selectedBrothers.length || indeterminateBrothers.length)\n\t\t\t)\n\t\t\t\tnextSquare = true;\n\t\t\tif (nextSquare) typeSelect = 'square';\n\t\t\telse typeSelect = 'none';\n\t\t}\n\n\t\t// console.log(\"allBrothers \", allBrothers);\n\t\t// console.log(\"findParentById \", treeData,\n\t\t//     rowKey,\n\t\t//     parentKey,\n\t\t//     currentRowData[parentKey]);\n\t\t//\n\t\t// console.log(\"findNodeByRowKey \", findNodeByRowKey(treeData, rowKey, currentRowData[parentKey]));\n\n\t\t// Найти родителя\n\t\tcurrentRowData = findNodeByRowKey(\n\t\t\ttreeData,\n\t\t\trowKey,\n\t\t\tcurrentRowData[parentKey]\n\t\t);\n\n\t\tif (typeSelect === 'checked') {\n\t\t\t// Выделить галкой\n\t\t\t// console.log(\"checked\");\n\t\t\tlastTypeSelect = 'checked';\n\t\t\tif (!_selectedRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_selectedRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _indeterminateRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _indeterminateRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'square') {\n\t\t\t// Выдлеить квадратом\n\t\t\t// console.log(\"square: \");\n\t\t\tlastTypeSelect = 'square';\n\t\t\tif (!_indeterminateRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_indeterminateRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _selectedRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'none') {\n\t\t\t// Снять выделение\n\t\t\t// console.log(\"none: \");\n\t\t\tlastTypeSelect = 'none';\n\t\t\tconst indexS = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (indexS > -1) _selectedRowKeys.splice(indexS, 1);\n\t\t\tconst indexI = _indeterminateRowKeys.indexOf(\n\t\t\t\tcurrentRowData[rowKey]\n\t\t\t);\n\t\t\tif (indexI > -1) _indeterminateRowKeys.splice(indexI, 1);\n\t\t}\n\n\t\tparentExist = !!currentRowData[parentKey];\n\t\t// parentExist = проверка наличия след родителя\n\t}\n\n\treturn [_selectedRowKeys, _indeterminateRowKeys];\n};\n\nconst SelectionCell = (props) => {\n\tconst _handleChange = (checked) => {\n\t\tconst {rowData, rowIndex, column, container} = props;\n\t\tconst {\n\t\t\tonChange,\n\t\t\tselectedRowKeys,\n\t\t\tindeterminateRowKeys,\n\t\t\trowKey,\n\t\t\tparentKey,\n\t\t\tnodeAssociated,\n\t\t} = column;\n\n\t\t// const rowKeys = flatten(getTableRowKeys([rowData], column.rowKey));\n\t\t// const totalLength = container.props.data.length;\n\t\t// const checked = e.target.checked;\n\t\t// const currentRowKey = {[rowKey]: rowData[rowKey], checked};\n\t\t// console.log(\"_handleChange: \", selectedRowKeys);\n\n\t\tlet _selectedRowKeys = [...selectedRowKeys];\n\t\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\t\t/** Обработка себя, поиск детей, выделение / снятие их */\n\t\tlet rowChildren = [];\n\t\tif (checked) {\n\t\t\tif (rowData.children && nodeAssociated)\n\t\t\t\trowChildren = flatten(getRowChildren(rowData.children, rowKey));\n\n\t\t\t_selectedRowKeys = _selectedRowKeys\n\t\t\t\t.concat([rowData[rowKey]])\n\t\t\t\t.concat(rowChildren);\n\t\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t} else {\n\t\t\tif (rowData.children && nodeAssociated)\n\t\t\t\trowChildren = flatten(\n\t\t\t\t\tgetRowChildren(rowData.children, rowKey, false)\n\t\t\t\t);\n\n\t\t\t_selectedRowKeys = _selectedRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t}\n\n\t\t[_selectedRowKeys, _indeterminateRowKeys] = parentAnalysis({\n\t\t\trowData,\n\t\t\trowKey,\n\t\t\tparentKey,\n\t\t\tchecked,\n\t\t\tnodeAssociated,\n\t\t\ttreeData: container.props.data,\n\t\t\tselectedRowKeys: _selectedRowKeys,\n\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t});\n\n\t\tconst keys = [...new Set(_selectedRowKeys)];\n\t\tconst _selectedRowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => keys.includes(item[rowKey]));\n\t\t//return [...new Set(_disabledElements)]\n\t\t// onChange({ selected: checked, totalLength, rowData, rowIndex });\n\n\t\t/** Выясняем новое состояние галочки \"Выделить все\" */\n\t\tlet selectAll;\n\t\tconst selectLength = _selectedRowKeys.length;\n\t\tconst totalLength = flatten(\n\t\t\tgetTableRowKeys(container.props.data, column.rowKey)\n\t\t).length;\n\n\t\tif (selectLength === 0) selectAll = false;\n\t\telse if (totalLength === selectLength) selectAll = true;\n\t\telse if (totalLength !== selectLength) selectAll = null;\n\n\n\n\t\tonChange({\n\t\t\tselected: checked,\n\t\t\t_selectedRow: {\n\t\t\t\trowData: {...rowData},\n\t\t\t\trowIndex: rowIndex,\n\t\t\t\trowKey: rowKey,\n\t\t\t},\n\t\t\t_selectAll: selectAll,\n\t\t\t_selectedRowKeys: keys, //[...new Set(_selectedRowKeys)],\n\t\t\t_selectedRowObjects: _selectedRowObjects,\n\t\t\t_indeterminateRowKeys: [...new Set(_indeterminateRowKeys)],\n\t\t});\n\n\t\t// let uniqIds = {};\n\t\t// onChange({selected: checked, rowKeys: rowKeys.filter(obj => !uniqIds[obj[rowKey]] && (uniqIds[obj[rowKey]] = true)) });\n\t};\n\n\tconst {rowData, column} = props;\n\tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\n\tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\n\tconst checked = selectedRowKeys.includes(rowData[rowKey]);\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={det}\n\t\t\tonChange={(e) => _handleChange(e.target.checked)}\n\t\t\tchecked={checked}\n\t\t/>\n\t);\n};\n\nexport default SelectionCell;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport {DatePicker} from 'antd';\nimport locale from 'antd/es/date-picker/locale/ru_RU';\nimport {noop} from '../../utils/baseUtils';\nimport {rtPrefix} from '../../utils/variables';\nimport {\n\tgetMomentWithOffset,\n\tgetMomentWithOffsetTruncateDay,\n\tgetMomentFromStringByFormat,\n} from '../../utils/datesUtils';\n\nconst DateRange = (props) => {\n\t/** Состояние первоначалной настройки компонента */\n\tconst [mounted, setMounted] = useState(false);\n\tconst [startValue, setStartValue] = useState(undefined);\n\tconst [endValue, setEndValue] = useState(undefined);\n\n\tconst {\n        className,\n\t\tnameStart,\n\t\tnameEnd,\n\t\tdateFormat,\n\t\tonChange,\n        size,\n\t\ttitle,\n\t\tvalueStart,\n\t\tvalueEnd,\n\t\tshowTime,\n\t} = props;\n\n\tuseEffect(() => {\n\t\tif (!mounted) {\n\t\t\tif (props.defaultValueStart) {\n                // console.log(\"DateRange mounted :\", nameStart, props.defaultValueStart);\n                _onChange(\n\t\t\t\t\tnameStart,\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueStart,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tsetStartValue(\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueStart,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (props.defaultValueEnd) {\n\t\t\t\t_onChange(\n\t\t\t\t\tnameEnd,\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueEnd,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tsetEndValue(\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueEnd,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tsetMounted(true);\n\t\t}\n\t}, [mounted]);\n\n\tuseEffect(() => {\n\t\tif (valueStart) {\n\t\t\tsetStartValue(moment(valueStart));\n\t\t\t// console.log('useEffect -> valueStart', valueStart);\n\t\t} else if (!props.defaultValueStart) setStartValue(null);\n\t}, [valueStart]);\n\tuseEffect(() => {\n\t\tif (valueEnd) {\n\t\t\tsetEndValue(moment(valueEnd));\n\t\t\t// console.log('useEffect -> valueEnd', valueEnd);\n\t\t} else if (!props.defaultValueEnd) setEndValue(null);\n\t}, [valueEnd]);\n\n\tconst disabledStartDate = (startValue) => {\n\t\tif (!startValue || !endValue) {\n\t\t\treturn false;\n\t\t}\n\t\treturn startValue.valueOf() > endValue.valueOf();\n\t};\n\n\tconst disabledEndDate = (endValue) => {\n\t\tif (!endValue || !startValue) {\n\t\t\treturn false;\n\t\t}\n\t\treturn endValue.valueOf() <= startValue.valueOf();\n\t};\n\n\tconst onStartChange = (date) => {\n\t\tsetStartValue(date);\n\t\t_onChange(nameStart, date);\n\t};\n\n\tconst onEndChange = (date) => {\n\t\tsetEndValue(date);\n\t\t_onChange(nameEnd, date);\n\t};\n\n\tconst _onChange = (name, value) => {\n\t\tif (value)\n\t\t\tif(showTime)\n\t\t\t\tonChange(name, getMomentWithOffset(value));\n\t\t\telse\n\t\t\t\tonChange(name, getMomentWithOffsetTruncateDay(value));\n\n\t\telse onChange(name, value);\n\t};\n\n\treturn (\n\t\t<div className={`${className} ${rtPrefix}-date-range`}>\n\t\t\t<div>\n                {title ? <div className={'title'}>{title}</div> : null}\n\t\t\t\t<span className={'subtitleStart'}>c</span>\n\t\t\t\t<DatePicker\n\t\t\t\t\tlocale={locale}\n\t\t\t\t\t// defaultValue={ checkDefValue(props.defaultValueStart) }\n\t\t\t\t\tsize={size}\n\t\t\t\t\tstyle={{width: !!showTime ? '160px' : '135px'}}\n\t\t\t\t\tdisabledDate={disabledStartDate}\n\t\t\t\t\tonChange={onStartChange}\n\t\t\t\t\tformat={dateFormat}\n\t\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\t\tvalue={startValue}\n\t\t\t\t\tshowTime={showTime}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span className={'subtitleEnd'}>по</span>\n\t\t\t\t<DatePicker\n\t\t\t\t\tlocale={locale}\n\t\t\t\t\t// defaultValue={ checkDefValue(props.defaultValueEnd) }\n\t\t\t\t\tsize={size}\n\t\t\t\t\tstyle={{width: showTime ? '160px' : '135px'}}\n\t\t\t\t\tdisabledDate={disabledEndDate}\n\t\t\t\t\tonChange={onEndChange}\n\t\t\t\t\tformat={dateFormat}\n\t\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\t\tvalue={endValue}\n\t\t\t\t\tshowTime={showTime}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nDateRange.propTypes = {\n\t/** Формат отображения даты (не влияет на формат в onChange) */\n\tdateFormat: PropTypes.string,\n\n\t/** Значение по умолчанию для первого пикера */\n\t// defaultValueStart: PropTypes.string,\n\n\t/** Значение по умолчанию для второго пикера */\n\t// defaultValueEnd: PropTypes.string,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Наименование параметра для первого пикера */\n\tnameStart: PropTypes.string,\n\n\t/** Наименование параметра для второго пикера */\n\tnameEnd: PropTypes.string,\n\n\t/** Событие при изменении любого из пикеров */\n\tonChange: PropTypes.func,\n\n    /** Размер пикера ['small', 'middle', 'large'] */\n    size: PropTypes.oneOf(['small', 'middle', 'large']),\n\n\t/** Заголовок */\n\ttitle: PropTypes.string,\n\n\t/** Значение даты первого пикера (используется для управления датой из родительного компонента) */\n\t// valueStart: PropTypes.string,\n\n\t/** Значение даты второго пикера (используется для управления датой из родительного компонента) */\n\t// valueEnd: PropTypes.string,\n};\n\nDateRange.defaultProps = {\n    className: '',\n\tnameStart: 'dateStart',\n\tnameEnd: 'dateEnd',\n\tdateFormat: 'DD.MM.YYYY',\n\tonChange: noop,\n    size: 'middle',\n    // title: 'Период',\n};\n\nexport default DateRange;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {DatePicker} from 'antd';\nimport moment from 'moment';\nimport {noop} from '../../utils/baseUtils';\nimport {\n\tgetMomentFromStringByFormat,\n\tgetMomentWithOffsetTruncateDay,\n} from '../../utils/datesUtils';\n\nconst SingleDate = (props) => {\n\t/** Состояние первоначалной настройки компонента */\n\tconst [mounted, setMounted] = useState(false);\n\tconst [_value, setValue] = useState(null);\n\n\tconst {dateFormat, defaultValue, name, onChange, title, value, className} = props;\n\n\tuseEffect(() => {\n\t\tif (!mounted) {\n\t\t\t// console.log(\"DateRange mounted :\", nameFrom, props.defaultValueFrom);\n\t\t\tif (defaultValue) {\n\t\t\t\t_onChange(\n\t\t\t\t\tname,\n\t\t\t\t\tgetMomentFromStringByFormat(defaultValue, dateFormat)\n\t\t\t\t);\n\t\t\t\tsetValue(getMomentFromStringByFormat(defaultValue, dateFormat));\n\t\t\t}\n\t\t\tsetMounted(true);\n\t\t}\n\t}, [mounted]);\n\n\tuseEffect(() => {\n\t\tif (value) {\n\t\t\tsetValue(moment(value));\n\t\t} else if (!defaultValue) setValue(null);\n\t}, [value]);\n\n\tconst _onChangePicker = (date) => {\n\t\tsetValue(date);\n\t\t_onChange(name, date);\n\t};\n\n\tconst _onChange = (name, value) => {\n\t\tif (value) onChange(name, getMomentWithOffsetTruncateDay(value));\n\t\telse onChange(name, value);\n\t};\n\n\treturn (\n\t\t<div className={`single-date-container ${className}`}>\n\t\t\t<div className={'title'}>{title}</div>\n\t\t\t<DatePicker\n\t\t\t\tsize={'small'}\n\t\t\t\tstyle={{width: '135px'}}\n\t\t\t\tonChange={_onChangePicker}\n\t\t\t\tformat={dateFormat}\n\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\tvalue={_value}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nSingleDate.propTypes = {\n\t/** Формат отображения даты (не влияет на формат в onChange) */\n\tdateFormat: PropTypes.string,\n\n\t/** Значение по умолчанию */\n\tdefaultValue: PropTypes.string,\n\n\t/** Наименование параметра */\n\tname: PropTypes.string,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Событие при изменении пикера */\n\tonChange: PropTypes.func,\n\n\t/** Заголовок */\n\ttitle: PropTypes.string,\n\n\t/** Значение даты */\n\tvalue: PropTypes.string,\n};\n\nSingleDate.defaultProps = {\n\tname: 'date',\n\tdateFormat: 'DD.MM.YYYY',\n\tonChange: noop,\n\ttitle: 'Дата',\n};\n\nexport default SingleDate;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Tooltip } from \"antd\";\nimport { noop } from \"../../utils/baseUtils\";\nimport DateRange from \"../DateRange/DateRange\";\nimport SingleDate from \"../SingleDate/SingleDate\";\nimport Select from \"../Select/Select\";\nimport { rtPrefix } from \"../../utils/variables\";\n\nconst FilterPanel = (props) => {\n  /**\n   * Период с, по (день / месяц / год)\n   * Множественный выбор (дерево с галочками с поиском) (ajax / const)\n   * Множественный выбор (список с поиском) (ajax / const)\n   * Единственный выбор (список с поиском) (ajax / const)\n   */\n\n  const [filter, setFilter] = useState(props.defaultFilter);\n  // const [multiSelectObjects, setMultiSelectObjects] = useState([]);\n\n  const {\n    applyFilterTooltip,\n    applyFilterSize,\n    applyFilterRender,\n    borderStyle,\n    onChangeFilter,\n    onApplyFilter,\n    configFilter,\n    resetFilterRender,\n    resetFilterTooltip,\n    resetFilterSize\n  } = props;\n\n  useEffect(() => {\n    setFilter(props.defaultFilter);\n  }, []);\n\n  const _onChangeData = (name, value) => {\n    // console.log(\"FilterPanel -> onChangeData\", name, value);\n    let _filter = { ...filter };\n    if (value === null) {\n      delete _filter[name];\n    } else {\n      _filter = { ..._filter, ...{ [name]: value } };\n    }\n    // console.log(\"onChangeData:\", _filter);\n    setFilter(_filter);\n    onChangeFilter(_filter);\n  };\n\n  const _applyFilter = () => {\n    // console.log(\"_applyFilter:\", filter);\n    onApplyFilter(filter);\n  };\n  const _resetFilter = () => {\n    // console.log(\"_resetFilter:\", props.defaultFilter);\n    setFilter(props.defaultFilter);\n    onChangeFilter(props.defaultFilter);\n    onApplyFilter(props.defaultFilter);\n    // setMultiSelectObjects([]);\n  };\n\n  // const _onChangeObjects = (name, value) => {\n  // \tlet _multiSelectObjects = {...multiSelectObjects};\n  // \tif (value === null) {\n  // \t\tdelete _multiSelectObjects[name];\n  // \t} else {\n  // \t\t_multiSelectObjects = {..._multiSelectObjects, ...{[name]: value}};\n  // \t}\n  // \t// console.log(\"onChangeData:\", _filter);\n  // \tsetMultiSelectObjects(_multiSelectObjects);\n  // };\n  const getPanelCls = () => {\n    let cls = [`${rtPrefix}-filter-panel`];\n    cls.push(`border-${borderStyle}`);\n    if (configFilter.findIndex((item) => !!item.title) === -1)\n      cls.push(`${rtPrefix}-filter-panel-no-title`);\n    return cls.join(\" \");\n  };\n\n  return (\n    <React.Fragment>\n      {configFilter && configFilter.length ? (\n        <div className={getPanelCls()}>\n          {configFilter.map((item, index) => {\n            // console.log(\"item.defaultRows\", item.defaultRows);\n            let cls = [`${rtPrefix}-filter-panel-item`];\n            item.className && cls.push(item.className);\n            switch (item.componentType) {\n              case \"DateRange\":\n                return (\n                  <DateRange\n                    key={index}\n                    {...item}\n                    className={cls.join(\" \")}\n                    defaultValueStart={\n                      filter[item.nameStart]\n                        ? filter[item.nameStart]\n                        : null\n                    }\n                    defaultValueEnd={\n                      filter[item.nameEnd]\n                        ? filter[item.nameEnd]\n                        : null\n                    }\n                    onChange={_onChangeData}\n                    valueStart={filter[item.nameStart]}\n                    valueEnd={filter[item.nameEnd]}\n                  />\n                );\n              case \"SingleDate\":\n                return (\n                  <SingleDate\n                    key={index}\n                    {...item}\n                    className={cls.join(\" \")}\n                    dateFormat={\n                      item.dateFormat\n                        ? item.dateFormat\n                        : undefined\n                    }\n                    defaultValue={\n                      filter[item.name]\n                        ? filter[item.name]\n                        : null\n                    }\n                    onChange={_onChangeData}\n                    value={filter[item.name]}\n                  />\n                );\n              case \"MultiSelect\":\n              case \"SingleSelect\":\n                return (\n                  <Select\n                    key={index}\n                    {...item}\n                    type={item.componentType}\n                    defaultSelectedRowKeys={\n                      filter[item.name]\n                        ? filter[item.name]\n                        : null\n                    }\n                    selectedRowKeys={filter[item.name] ? filter[item.name] : []}\n                    className={cls.join(\" \")}\n                    onChangeKeys={_onChangeData}\n                    defaultValue={\n                      filter[item.name]\n                        ? filter[item.name]\n                        : null\n                    }\n                    value={filter[item.name]}\n                  />\n                );\n              case \"Custom\":\n                return (\n                  <React.Fragment key={index}>\n                    {\n                      item.render({\n                        onChange: _onChangeData,\n                        defaultValue: filter[item.name]\n                          ? filter[item.name]\n                          : null,\n                        value: filter[item.name]\n                      })\n                    }\n                  </React.Fragment>);\n              default:\n                return null;\n            }\n          })}\n          <Tooltip title={applyFilterTooltip}>\n            <Button\n              type='primary'\n              size={applyFilterSize}\n              style={{ marginLeft: \"auto\" }}\n              onClick={_applyFilter}\n            >\n              {applyFilterRender}\n            </Button>\n          </Tooltip>\n          <Tooltip title={resetFilterTooltip}>\n            <Button\n              size={resetFilterSize}\n              style={{ marginLeft: \"10px\" }}\n              onClick={_resetFilter}\n            >\n              {resetFilterRender}\n            </Button>\n          </Tooltip>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\nFilterPanel.propTypes = {\n\n  /** Тест Tooltip для кнопки \"Применить фильтр\" */\n  applyFilterTooltip: PropTypes.string,\n\n  /** Размер кнопки \"Применить фильтр\" ['small', 'middle', 'large'] */\n  applyFilterSize: PropTypes.oneOf([\"small\", \"middle\", \"large\"]),\n\n  /** Строка / функция / элемент для отображения в кнопке \"Применить фильтр\" */\n  applyFilterRender: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.string\n  ]),\n\n  /** Тип бордера панели (по умолчанию 'none')\n   * ['all', 'none', 'top', 'left', 'bottom', 'right', 'top-bottom', 'left-right'] */\n  borderStyle: PropTypes.oneOf([\n    \"all\",\n    \"none\",\n    \"top\",\n    \"left\",\n    \"bottom\",\n    \"right\",\n    \"top-bottom\",\n    \"left-right\"\n  ]),\n\n  /** Объект фильтра по умолчанию */\n  defaultFilter: PropTypes.object,\n\n  /** Конфигурация панели фильтров */\n  configFilter: PropTypes.arrayOf(PropTypes.object),\n\n  /** Событие по кнопке выполнить фильтр */\n  onApplyFilter: PropTypes.func,\n\n  /** Событие по изменение объекта фильтра */\n  onChangeFilter: PropTypes.func,\n\n  /** Тест Tooltip для кнопки \"Сбросить фильтр\" */\n  resetFilterTooltip: PropTypes.string,\n\n  /** Размер кнопки \"Сбросить фильтр\" ['small', 'middle', 'large'] */\n  resetFilterSize: PropTypes.oneOf([\"small\", \"middle\", \"large\"]),\n\n  /** Строка / функция / элемент для отображения в кнопке \"Сбросить фильтр\" */\n  resetFilterRender: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.string\n  ])\n};\n\nFilterPanel.defaultProps = {\n  applyFilterTooltip: \"Применить фильтр\",\n  applyFilterSize: \"middle\",\n  applyFilterRender: \"Применить\",\n  borderStyle: \"none\",\n  defaultFilter: {},\n  configFilter: [],\n  onApplyFilter: noop,\n  onChangeFilter: noop,\n  resetFilterTooltip: \"Сбросить фильтр\",\n  resetFilterSize: \"middle\",\n  resetFilterRender: \"Сбросить\"\n};\n\nexport default FilterPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {CloseCircleOutlined} from '@ant-design/icons';\nimport {rtPrefix} from '../../../utils/variables';\n\nconst SelectionList = (props) => {\n\tconst {selectedRowObjects, rowRender, onClickDropSelect} = props;\n\n\t// console.log(\"SelectionList typeof -> \", typeof(rowRender));\n\treturn (\n\t\t<div className={`${rtPrefix}-table-selected-rows`}>\n\t\t\t{selectedRowObjects && selectedRowObjects.length > 0 ? (\n\t\t\t\t<ul>\n\t\t\t\t\t{selectedRowObjects.map((item, index) => (\n\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t{/*{(typeof(rowRender) === 'string') ? <div>{item[rowRender]}</div> : rowRender }*/}\n\t\t\t\t\t\t\t{typeof rowRender === 'function' ? (\n\t\t\t\t\t\t\t\trowRender({rowData: item, rowIndex: index})\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>{item[rowRender]}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<div onClick={() => onClickDropSelect(item)}>\n\t\t\t\t\t\t\t\t<CloseCircleOutlined />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t) : (\n\t\t\t\t<div>Нет выбранных записей</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nSelectionList.propTypes = {\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { rowData, rowIndex }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n\t/** Список выделенных объектов */\n\tselectedRowObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Событие удаления элемента */\n\tonClickDropSelect: PropTypes.func.isRequired,\n};\n\nSelectionList.defaultProps = {};\n\nexport default SelectionList;\n","import React, {useRef, forwardRef, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {notification} from 'antd';\nimport SortOrder from 'react-base-table/lib/SortOrder';\nimport BaseTable, {AutoResizer, callOrReturn, Column} from 'react-base-table';\nimport {empty, overlay} from './defaultSettings';\nimport SelectionHead from '../Table/Selectable/SelectionHead';\nimport SelectionCell, {parentAnalysis} from '../Table/Selectable/SelectionCell';\nimport CommandPanel from '../CommandPanel/CommandPanel';\nimport FilterPanel from '../FilterPanel/FilterPanel';\nimport SelectionList from '../Table/SelectionList/SelectionList';\nimport {rtPrefix} from '../../utils/variables';\nimport {\n\tflatten,\n\tgenerateUUID,\n\tgetTableRowKeys,\n\tfindNodeByRowKey,\n\tnoop,\n\tgetTableRowObjects, notificationError\n} from \"../../utils/baseUtils\";\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../../redux/rtd.actions\";\nimport FormItems from \"../Form/FormItems\";\n\nconst Table = forwardRef((props, ref) => {\n\t/** Состояние первоначалной настройки компонента*/\n\tconst [mounted, setMounted] = useState(false);\n\t/** Наличие на сервере еще данных */\n\tconst [hasMore, setHasMore] = useState(true);\n\t/** Индикатор загрузки данных */\n\tconst [loading, setLoading] = useState(false);\n\n\t/** Indoor control */\n\tconst [_rows, _setRows] = useState([]);\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n\tconst [_searchValue, setSearchValue] = useState({});\n\tconst [_filter, setFilter] = useState(false);\n\tconst [_sortBy, setSortBy] = useState(false);\n\n\t/** Selectable States */\n\tconst [selectAll, setSelectAll] = useState(false);\n\n\t/** Tree States */\n\tconst [_indeterminateRowKeys, setIndeterminateRowKeys] = useState([]);\n    const [_expandedRowKeys, setExpandedRowKeys] = useState([]);\n\n    const [_totalCountRows, setTotalCountRows] = useState(0);\n\n    const [_footerShow, _setFooterShow] = useState(false);\n\n    const tableRef = useRef();\n\n\tconst {\n\t\t/** Def values */\n\t\tdefaultRows,\n\t\tdefaultSelectedRowKeys,\n\t\tdefaultSearchValue,\n\t\tdefaultFilter,\n\t\tdefaultSortBy,\n\n\t\t/** Outdoor control */\n\t\trows,\n\t\tsetRows,\n\t\tselectedRowKeys,\n\t\tsearchValue,\n\t\tfilter,\n\t\tsortBy,\n\n\t\t/** Required */\n\t\tcolumns,\n\t\ttype,\n\n\t\t/** Base Props */\n\t\tautoDeleteRows,\n\t\trowKey,\n\n\t\t/** View Props */\n\t\tempty,\n\t\tfixWidthColumn,\n\t\tfooterHeight,\n\t\tfooterShow,\n        footerTitles,\n\t\t// footerProps,\n\t\theaderHeight,\n\t\trowHeight,\n\t\tzebraStyle,\n\t\trowRenderer,\n\t\testimatedRowHeight,\n\n\t\t/** Load Data Props */\n\t\tloadThreshold,\n\t\tpageSize,\n\t\trequestLoadRows,\n        requestLoadCount,\n\t\tsearchParamName,\n\n\t\t/** Selectable Props */\n\t\tselectable,\n\n\t\t/** Tree Props */\n\t\tnodeAssociated,\n\t\texpandColumnKey,\n\t\texpandParentKey,\n\t\texpandLazyLoad,\n\t\texpandDefaultAll,\n\n\t\t/** Events */\n\t\tonRowClick,\n\t\tonRowDoubleClick,\n\t\tonRowExpand,\n\t\tonSelectedRowsChange,\n\t\tonExpandedRowsChange,\n\n\t\t/** SELECTED PANEL */\n\t\tshowSelection,\n\t\trowRenderShowSelection,\n\n\t\t/** REDUX PROPS */\n\t\tdispatchPath,\n\t\tsubscribe,\n\t} = props;\n\n\t// console.log('props.commandPanelProps => ', props.commandPanelProps);\n\tconst commandPanelProps = {\n\t\t...CommandPanel.defaultProps,\n\t\t...props.commandPanelProps,\n\t};\n\tconst filterPanelProps = {\n\t\t...FilterPanel.defaultProps,\n\t\t...props.filterPanelProps,\n\t};\n\n\tconst footerProps = {\n\t\t...Table.defaultProps.footerProps,\n\t\t...props.footerProps,\n\t};\n\n\tconst selectedDispatchPath = dispatchPath && `${dispatchPath}.selected`;\n\tconst rowsDispatchPath = dispatchPath && `${dispatchPath}.rows`;\n\n\n\tuseEffect(() => {\n        // console.log(\"Инициализация дефолтных значений \");\n        // console.log(\"Инициализация дефолтных значений defaultSelectedRowKeys > \", defaultSelectedRowKeys);\n\n\t\t// Инициализация дефолтных значений\n\t\t// _setRows(defaultRows);\n\t\t_setRowsHandler(defaultRows);\n\t\tsetSelectedRowKeys(defaultSelectedRowKeys);\n\t\tsetSearchValue(defaultSearchValue);\n\t\tsetFilter(defaultFilter);\n\t\tsetSortBy(defaultSortBy);\n\t\tsetSelectAll(\n\t\t\tdefaultRows.length > 0 &&\n\t\t\t\tdefaultRows.length === defaultSelectedRowKeys.length\n\t\t);\n\t\t// Определение нужно ли отображать подвал\n\t\t_setFooterShow(\n\t\t\t(footerProps.showElements.length ||\n\t\t\tfooterProps.leftCustomSideElement ||\n\t\t\tfooterProps.centerCustomSideElement ||\n\t\t\tfooterProps.rightCustomSideElement));\n\n\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t// Открытие всех нод\n\t\t\tif (expandDefaultAll)\n\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\tflatten(getTableRowKeys(defaultRows, rowKey))\n\t\t\t\t);\n\t\t\t// Установка квадратиков на нужных нодах\n\t\t\tif (defaultSelectedRowKeys && defaultSelectedRowKeys.length > 0) {\n\t\t\t\tlet flatRows = flatten(getTableRowKeys(defaultRows, rowKey));\n\t\t\t\tlet selectedRow = flatRows.filter((item) =>\n\t\t\t\t\tdefaultSelectedRowKeys.includes(item[rowKey])\n\t\t\t\t);\n\t\t\t\tlet _indeterminateRowKeys = [];\n\t\t\t\tselectedRow.forEach((item) => {\n\t\t\t\t\tconst [ss, ii] = parentAnalysis({\n\t\t\t\t\t\trowData: item,\n\t\t\t\t\t\trowKey,\n\t\t\t\t\t\tparentKey: expandParentKey,\n\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t\tnodeAssociated,\n\t\t\t\t\t\ttreeData: defaultRows,\n\t\t\t\t\t\tselectedRowKeys: defaultSelectedRowKeys,\n\t\t\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t\t\t\t});\n\t\t\t\t\t_indeterminateRowKeys.push(...ii);\n\t\t\t\t});\n\t\t\t\tsetIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\n\t\t\t}\n\t\t}\n\n\t\tif (type !== 'localSide') {\n\t\t\t_dataProcessing({\n\t\t\t\tsortBy: defaultSortBy,\n\t\t\t\tfilter: defaultFilter,\n\t\t\t\tsearchLine: defaultSearchValue,\n\t\t\t\treload: true,\n\t\t\t});\n\t\t}\n\t\t// console.log(\"Table => props \", props);\n\t\tsetMounted(true);\n\t\tif (ref && typeof ref === 'function') ref({reloadData});\n\t\telse if (ref && typeof ref === 'object') ref.current = {reloadData};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (type === 'localSide') {\n\t\t\t// console.log(\"Control useEffect => \", rows, selectedRowKeys, searchValue, filter, sortBy);\n\t\t\t// _setRows(rows);\n\t\t\t_setRowsHandler(rows);\n\t\t\tsetSelectedRowKeys(selectedRowKeys);\n\t\t\tsetSearchValue(searchValue);\n\t\t\tsetFilter(filter);\n\t\t\tsetSortBy(sortBy);\n\t\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t\t// Открытие всех нод\n\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\tsetExpandedRowKeys(flatten(getTableRowKeys(rows, rowKey)));\n\t\t\t}\n\t\t}\n    }, [rows, selectedRowKeys, searchValue, filter, sortBy]);\n\n\t/** Подписка на изменение props[subscribe.name] в сторе */\n\tuseEffect( () => {\n\t\tif(subscribe.name) {\n\t\t\t// console.log(\"Table => useEffect => subscribe.value \", props[subscribe.name]);\n\t\t\tsubscribe.onChange && subscribe.onChange({value: props[subscribe.name], setReloadTable: reloadData});\n\t\t}\n\t}, [props[subscribe.name]]);\n\n\n\t/** BASE FUNCTIONS */\n\tconst _setRowsHandler = (rows) => {\n\t\t_setRows(rows);\n\t\trowsDispatch(rows);\n\t};\n\tconst setRowsHandler = (rows) => {\n\t\tsetRows(rows);\n\t\trowsDispatch(rows);\n\t};\n\tconst rowsDispatch = (rows) => {\n\t\trowsDispatchPath && props.setDateStore && props.setDateStore(rowsDispatchPath, rows);\n\t};\n\n\tconst reloadData = ({sortBy, filter, searchValue}) => {\n\t\t// console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\n        if(props.value && props.value.length > 0)\n            setSelectedRowKeys(props.value.map(item => item[rowKey]));\n        else\n            setSelectedRowKeys([]);\n\t\t// setSelectedRowKeys([]);\n\t\tif(sortBy) setSortBy(sortBy);\n\t\tif(filter) setFilter(filter);\n\t\tif(searchValue) setSearchValue(searchValue);\n\t\t_dataProcessing({\n\t\t\tsortBy: sortBy ? sortBy : _sortBy,\n\t\t\tfilter: filter ? filter : _filter,\n\t\t\tsearchLine: searchValue ? searchValue : _searchValue,\n\t\t\treload: true,\n\t\t});\n        // console.log(\"reloadData loading \", loading);\n    };\n\n\tconst _dataProcessing = (params) => {\n\t\t// console.log('_dataProcessing', params);\n\t\tconst {sortBy, filter, searchLine, expandRow, reload} = params;\n\t\tswitch (type) {\n\t\t\tcase 'infinity':\n\t\t\tcase 'serverSide':\n\t\t\t\tif ((hasMore || reload) && !loading) {\n\t\t\t\t\tsetLoading(true);\n\t\t\t\t\tconst pageNum = reload\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: Math.floor(_rows.length / pageSize);\n\t\t\t\t\tconst params = {\n\t\t\t\t\t\tpage: pageNum,\n\t\t\t\t\t\tsize: pageSize,\n\t\t\t\t\t\tsort:\n\t\t\t\t\t\t\tsortBy && sortBy.key\n\t\t\t\t\t\t\t\t? sortBy.key + ',' + sortBy.order\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t};\n\t\t\t\t\tconst dataQuery = {\n                        ...filter,\n                        ...(searchLine\n                            ? {[searchParamName]: searchLine}\n                            : null),\n                    };\n\t\t\t\t\t// console.log('dataQuery', dataQuery);\n\n                    if(type === 'infinity' && reload && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad) {\n                        requestLoadCount({\n                            params,\n                            data: dataQuery,\n                        })\n                            .then((response) => {\n                                // console.log(\"infinity then response\", response);\n                                // const result = response.data;\n                                setTotalCountRows(response.data);\n                            })\n\t\t\t\t\t\t\t.catch(error =>\n\t\t\t\t\t\t\t\tnotificationError(error, 'Ошибка получения количества записей по фильтру') );\n                    }\n\n                    // console.log('requestLoadRows => ', typeof requestLoadRows);\n                    // if(typeof requestLoadRows !== 'function'){\n                    //     setLoading(false);\n                    // }\n                    requestLoadRows({\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tdata: dataQuery,\n\t\t\t\t\t})\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\t\t\tconst result = response.data;\n\t\t\t\t\t\t\t// Если иерархия и ленивая, то ищим кому добавть полученные записи\n\t\t\t\t\t\t\tif (!!expandColumnKey && expandLazyLoad) {\n\t\t\t\t\t\t\t\t// lastExpandRow//, setLastExpandRow\n\t\t\t\t\t\t\t\t// console.log('!!expandColumnKey && expandLazyLoad', result);\n\t\t\t\t\t\t\t\tif (pageNum === 0) {\n\t\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t\t{[rowKey]: generateUUID()},\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t// _setRows(result);\n\t\t\t\t\t\t\t\t\t_setRowsHandler(result);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlet newRows = [..._rows];\n\t\t\t\t\t\t\t\t\t// (data, rowKey, rowValue)\n\t\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t\t{[rowKey]: generateUUID()},\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tlet node = findNodeByRowKey(\n\t\t\t\t\t\t\t\t\t\tnewRows,\n\t\t\t\t\t\t\t\t\t\trowKey,\n\t\t\t\t\t\t\t\t\t\texpandRow[rowKey]\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tnode.children = result;\n\t\t\t\t\t\t\t\t\t// console.log('newRows -> ', newRows);\n\t\t\t\t\t\t\t\t\t// _setRows(newRows);\n\t\t\t\t\t\t\t\t\t_setRowsHandler(newRows);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (result && result.length < pageSize) {\n\t\t\t\t\t\t\t\t\tsetHasMore(false);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetHasMore(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpageNum === 0\n\t\t\t\t\t\t\t\t\t? _setRowsHandler(result) // _setRows\n\t\t\t\t\t\t\t\t\t: _setRowsHandler(_rows.concat(result)); // _setRows\n\n\t\t\t\t\t\t\t\t// console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\n\t\t\t\t\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\t\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\t\t\t\t\t\tflatten(getTableRowKeys(result, rowKey))\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t\t\t\t\t_setRowsHandler(_rows); // _setRows\n\t\t\t\t\t\t\t// setHasMore(false);\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t// case 'serverSide':\n\t\t\t// \tsetLoading(true);\n\t\t\t// \tbreak;\n\t\t\tcase 'localSide':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t/** Событие выделение одной строки в режиме без галочек */\n\tconst _rowEventHandlers = {\n\t\tonClick: ({rowData, rowIndex, rowKey, event}) => {\n\t\t\tif (!selectable) {\n\t\t\t\t// if (_selectedRowKeys.includes(rowKey)) {\n\t\t\t\t//     setSelectedRowKeys([]);\n\t\t\t\t//     // setSelectedRow([]);\n\t\t\t\t//     // setSelectedRowObjects([]);\n\t\t\t\t//     onRowClick({\n\t\t\t\t//         selected: false,\n\t\t\t\t//         rowData,\n\t\t\t\t//         rowIndex,\n\t\t\t\t//         rowKey,\n\t\t\t\t//     });\n\t\t\t\t//     onSelectedRowsChange([]);\n\t\t\t\t// } else {\n\t\t\t\t// console.log('_rowEventHandlers -> onClick', rowKey, rowIndex);\n\t\t\t\tconst newRowObject = {\n\t\t\t\t\trowData: {...rowData},\n\t\t\t\t\trowIndex: rowIndex,\n\t\t\t\t\trowKey: rowKey,\n\t\t\t\t};\n\t\t\t\t// if(type !== 'localSide')\n\t\t\t\tsetSelectedRowKeys([rowKey]);\n\t\t\t\t// setSelectedRow(newRowObject);\n\t\t\t\t// setSelectedRowObjects([newRowObject]);\n\t\t\t\tselectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, rowData);\n\t\t\t\tonRowClick({\n\t\t\t\t\tselected: true,\n\t\t\t\t\t...newRowObject,\n\t\t\t\t});\n\t\t\t\tonSelectedRowsChange([rowKey], [rowData]);\n\t\t\t\t// }\n\t\t\t}\n\t\t},\n\t\tonDoubleClick: ({rowData, rowIndex, rowKey}) => {\n\t\t\t// console.log('onDoubleClick', rowData, rowIndex, rowKey);\n\t\t\tonRowDoubleClick({rowData, rowIndex, rowKey});\n\t\t},\n\t\t// onContextMenu: console.log('context menu'),\n\t\t// onMouseEnter: console.log('mouse enter'),\n\t\t// onMouseLeave: console.log('mouse leave'),\n\t};\n\n\t/** Событие при сортировке */\n\tconst _onColumnSort = (sortBy) => {\n\t\t// console.log(\"sortBy\", sortBy);\n\t\ttableRef.current.scrollToRow(0, 'auto');\n\t\tsetSortBy(sortBy);\n\n\t\t// Для серверной сортировки - сбросить выделение\n\t\tif (type !== 'localSide') {\n\t\t\tsetSelectedRowKeys([]);\n\t\t}\n\t\tconst loadParams = {\n\t\t\tsortBy: sortBy,\n\t\t\tfilter: _filter,\n\t\t\tsearchLine: _searchValue,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t};\n\n\t/** Получение колонок таблицы */\n\tconst _getColumns = () => {\n\t\tlet _columns = [...columns];\n\n\t\t/** Создаем колонку с галочками (если надо) */\n\t\tif (selectable) {\n\t\t\tconst selectColumn = {\n\t\t\t\tkey: '__selection__',\n\t\t\t\theaderRenderer: SelectionHead,\n\t\t\t\tcellRenderer: SelectionCell,\n\t\t\t\twidth: 40,\n\t\t\t\tflexShrink: 0,\n\t\t\t\tresizable: false,\n\t\t\t\tfrozen: 'left',\n\t\t\t\trowKey: rowKey,\n\t\t\t\tparentKey: expandParentKey,\n\t\t\t\tselectedRowKeys: _selectedRowKeys,\n\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t\t\tnodeAssociated: nodeAssociated,\n\t\t\t\tonChange: _onChangeSelectHandler,\n\t\t\t\tselectAll: selectAll,\n\t\t\t\tonSelectAll: _onSelectAllHandler,\n\t\t\t};\n\t\t\t_columns.unshift(selectColumn);\n\t\t}\n\t\treturn _columns;\n\t};\n\n\t/** VIEW FUNCTIONS */\n\n\tconst _footer = (\n\t\t<React.Fragment>\n\t\t\t{_footerShow ? (\n\t\t\t\t\t<React.Fragment>\n                        {/*className={'BaseTable__footer__counter'}>*/}\n\t\t\t\t\t\t<div key={'footer-left-custom-side'} className={'left-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.leftCustomSideElement ? <FormItems items={footerProps.leftCustomSideElement} /> : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-center-custom-side'} className={'center-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.centerCustomSideElement ? <FormItems items={footerProps.centerCustomSideElement} /> : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-right-custom-side'} className={'right-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.rightCustomSideElement ? <FormItems items={footerProps.rightCustomSideElement} /> : null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{selectable ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('selected')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.selectedTitle} {_selectedRowKeys.length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('loaded')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.loadedTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{footerProps.showElements.includes('total')\n\t\t\t\t\t\t\t? type === 'infinity' && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad\n\t\t\t\t\t\t\t\t? <span>{footerProps.totalTitle} {_totalCountRows}</span>\n\t\t\t\t\t\t\t\t: <span>{footerProps.totalTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t: null}\n\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n\n\t/** Событие при рендере для стилизации */\n\tconst _rowClassName = ({rowData, rowIndex}) => {\n\t\tconst {rowClassName} = props;\n\t\treturn [\n\t\t\trowClassName,\n\t\t\t_selectedRowKeys.includes(rowData[rowKey]) && 'row-selected',\n\t\t\tzebraStyle ? (rowIndex % 2 === 0 ? 'even' : 'odd') : '',\n\t\t\t'bordered'\n\t\t].join(' ')\n\t};\n\n\t/** LOAD DATA FUNCTIONS */\n\tconst onEndReached = () => {\n\t\tlet selectAll;\n\t\tconst selectLength = _selectedRowKeys.length;\n\t\tif (selectLength === 0) selectAll = false;\n\t\telse if (selectLength > 0) selectAll = null;\n\n\t\tsetSelectAll(selectAll);\n\n\t\tif (type === 'infinity') {\n\t\t\tconst loadParams = {\n\t\t\t\tsortBy: _sortBy,\n\t\t\t\tfilter: _filter,\n\t\t\t\tsearchLine: _searchValue,\n\t\t\t\treload: false,\n\t\t\t};\n\t\t\t_dataProcessing(loadParams);\n\t\t}\n\t};\n\n\t/** SELECTABLE FUNCTIONS */\n\n\t/** Событие при изменении галочки одной строки */\n\tconst _onChangeSelectHandler = ({\n\t\tselected,\n\t\t_selectedRow,\n\t\t_selectAll,\n\t\t_selectedRowKeys,\n\t\t_selectedRowObjects,\n\t\t_indeterminateRowKeys,\n\t}) => {\n\t\tsetSelectedRowKeys(_selectedRowKeys);\n\t\tsetIndeterminateRowKeys(_indeterminateRowKeys);\n\t\tsetSelectAll(_selectAll);\n\t\t// setSelectedRow(_selectedRow);\n\n\t\t// let newSelectedObjects = [];\n\t\t// if (selected) {\n\t\t// \tif (!!expandColumnKey)\n\t\t// \t\tnewSelectedObjects = flatten(\n\t\t// \t\t\tgetTableRowObjects(rows, rowKey)\n\t\t// \t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]));\n\t\t// \telse\n\t\t// \t\tnewSelectedObjects = selectedRowObjects.concat([\n\t\t// \t\t\t_selectedRow.rowData,\n\t\t// \t\t]);\n\t\t// \t// setSelectedRowObjects(newSelectedObjects);\n\t\t// } else {\n\t\t// \tnewSelectedObjects = selectedRowObjects.filter(\n\t\t// \t\t(item) => item[rowKey] !== _selectedRow.rowData[rowKey]\n\t\t// \t);\n\t\t// \t// setSelectedRowObjects(newSelectedObjects);\n\t\t// }\n\t\t// console.log(\"_handleSelectChange\", props);\n\t\t// dispatchPath && props.setTableSelectedRow && props.setTableSelectedRow(dispatchPath, _selectedRow.rowData);\n\t\tselectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, _selectedRowObjects);\n\t\tonRowClick({\n\t\t\tselected,\n\t\t\trowData: _selectedRow.rowData,\n\t\t\trowIndex: _selectedRow.rowIndex,\n\t\t\trowKey,\n\t\t});\n\t\tonSelectedRowsChange(_selectedRowKeys, _selectedRowObjects);\n\t};\n\n\t/** Событие при изменении галочки \"Выделить все\" */\n\tconst _onSelectAllHandler = ({selected, rowKeys, rowObjects}) => {\n\t\tconst selectedKeys = selected ? rowKeys : [];\n\t\tsetSelectedRowKeys(selectedKeys);\n\t\tsetIndeterminateRowKeys([]);\n\t\tsetSelectAll(selected);\n\t\tselectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, selected ? rowObjects : []);\n\t\t// setSelectedRowObjects(rows);\n\t\t// console.log(\"_handleSelectAll\", selectedKeys);\n\t\tonSelectedRowsChange(selectedKeys, rowObjects);\n\t};\n\n\t/** TREE FUNCTIONS */\n\n\t/** Анализ дерева на пердмет квадратиков\n\t * Нужно для выделения по умолчанию свернутых элементов */\n\t// const _postLoadTreeAnalysis = () => {\n\t//     if (!!expandColumnKey && !expandLazyLoad) {\n\t//         let _indeterminateRowKeys = [];\n\t//         // console.log(\"mounted->selectedRowObjects: \", selectedRowObjects);\n\t//         selectedRowObjects.map((item) => {\n\t//             const [ss, ii] = parentAnalysis({\n\t//                 rowData: item,\n\t//                 rowKey,\n\t//                 parentKey: expandParentKey,\n\t//                 checked: true,\n\t//                 nodeAssociated,\n\t//                 treeData: _rows,\n\t//                 selectedRowKeys: _selectedRowKeys,\n\t//                 indeterminateRowKeys: _indeterminateRowKeys,\n\t//             });\n\t//             _indeterminateRowKeys.push(...ii);\n\t//         });\n\t//         setIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\n\t//     }\n\t// }\n\n\tconst _onExpandedRowsChange = (expandedRowKeys) => {\n\t\t// console.log(\"_onExpandedRowsChange\", expandedRowKeys);\n\t\tonExpandedRowsChange(expandedRowKeys);\n\t};\n\tconst _onRowExpand = ({expanded, rowData, rowIndex, rowKey}) => {\n\t\t// console.log(\"_onRowExpand\", rowData, expanded, rowIndex, rowKey);\n\t\tif (expanded) {\n\t\t\tsetExpandedRowKeys([..._expandedRowKeys, rowKey]);\n\n\t\t\tif (expandLazyLoad) {\n\t\t\t\tconst loadParams = {\n\t\t\t\t\tsortBy: _sortBy,\n\t\t\t\t\tfilter: {..._filter, [expandParentKey]: rowKey},\n\t\t\t\t\tsearchLine: _searchValue,\n\t\t\t\t\treload: false,\n\t\t\t\t\texpandRow: rowData,\n\t\t\t\t};\n\t\t\t\t// _callPropsOnLoad(loadParams);\n\t\t\t\t_dataProcessing(loadParams);\n\t\t\t}\n\t\t} else {\n\t\t\tlet expandedRowKeys = [..._expandedRowKeys];\n\t\t\tlet allChildKeys = flatten(\n\t\t\t\tgetTableRowKeys(rowData.children, props.rowKey)\n\t\t\t);\n\t\t\tallChildKeys.push(rowKey);\n\t\t\t// console.log('allChildKeys', allChildKeys);\n\t\t\tsetExpandedRowKeys(\n\t\t\t\texpandedRowKeys.filter((item) => !allChildKeys.includes(item))\n\t\t\t);\n\t\t}\n\t\tonRowExpand({expanded, rowData, rowIndex, rowKey});\n\t};\n\n\t/** COMMAND PANEL FUNCTIONS */\n\n\tconst _getDisabledElementsOfCommandPanel = () => {\n\t\t// console.log('commandPanelProps', commandPanelProps);\n\t\tlet _disabledElements = [...commandPanelProps.disabledElements];\n\t\tif (type === 'infinity') {\n\t\t\t_disabledElements.push('up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => infinity');\n        }\n\t\tif (selectable && _selectedRowKeys.length > 1) {\n\t\t\t_disabledElements.push('addAsCopy', 'edit', 'up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => selectable');\n        }\n\t\tif (_selectedRowKeys.length === 0) {\n\t\t\t_disabledElements.push('addAsCopy', 'edit', 'delete', 'up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => NO select');\n        }\n\t\t// if (expandColumnKey) {\n\t\t\t//|| !selectedRow) {\n\t\t\t// _disabledElements.push('up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => expandColumnKey');\n        // }\n        // console.log('_getDisabledElementsOfCommandPanel => ', _disabledElements, _selectedRowKeys);\n\n        return [...new Set(_disabledElements)];\n\t};\n\n\tconst _onClickAddAsCopy = (event) => {\n\t\t// console.log(\"_onClickAddAsCopy\", selectedRow);\n\t\tcommandPanelProps.onClickAddAsCopy(\n\t\t\tevent,\n\t\t\tfindNodeByRowKey(_rows, rowKey, _selectedRowKeys[0])\n\t\t);\n\t};\n\n\tconst _onClickEdit = (event) => {\n\t\t// console.log(\"_onClickEdit\", selectedRow);\n\t\tcommandPanelProps.onClickEdit(event, {\n\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t});\n\t\t// props.onClickEdit(event, selectedRow);\n\t};\n\n\tconst _onClickDelete = (event) => {\n\t\t// console.log(\"_onClickDelete\", autoDeleteRows, selectedRowKeys);\n\t\tif (autoDeleteRows) {\n\t\t\tif (type === 'localSide') {\n\t\t\t\tsetRowsHandler(\n\t\t\t\t\t_rows.filter(\n\t\t\t\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey])\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t_setRowsHandler(\n\t\t\t\t\t_rows.filter(\n\t\t\t\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey])\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tsetSelectedRowKeys([]);\n\t\t}\n\t\tcommandPanelProps.onClickDelete(event, _selectedRowKeys);\n\t};\n\n\tconst loop = (data, key, callback) => {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tif (data[i][rowKey] === key) {\n\t\t\t\t// console.log(`Selected => index: [${i}], path: [${data[i].path}]`, data);\n\t\t\t\treturn callback(data[i], i, data);\n\t\t\t} else {\n\t\t\t\t// console.log(`Other => index: [${i}], path: [${data[i].path}]`);\n\t\t\t}\n\t\t\tif (data[i].children) {\n\t\t\t\tloop(data[i].children, key, callback);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst _onClickUp = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index - 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data);\n\t\t\tcommandPanelProps.onClickUp(event, {\n\t\t\t\trowIndex: newRowIndex,\n\t\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t}, data);\n\t\t})\n\t};\n\n\tconst _onClickDown = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index + 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data);\n\t\t\tcommandPanelProps.onClickDown(event, {\n\t\t\t\trowIndex: newRowIndex,\n\t\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t}, data);\n\t\t})\n\t};\n\n\tconst _getNewIndexRow = (oldIndex, newIndex) =>\n\t\tnewIndex >= 0 && newIndex < _rows.length ? newIndex : oldIndex;\n\n\tconst _changeIndexRow = (oldIndex, newIndex, arr, data) => {\n\t\tif (newIndex >= 0 && newIndex < arr.length) {\n\t\t\t// let arr = [..._rows]; // Копируем массив\n\t\t\tconst item = arr.splice(oldIndex, 1); // Удаляем элемент со старого места\n\t\t\t// console.log('_changeIndexRow => ',item);\n\t\t\tarr.splice(newIndex > 0 ? newIndex : 0, 0, item[0]); // Ставим элемент на новое место\n\t\t\t// console.log(\"_changeIndexRow\", item[0]);\n\t\t\tif (type === 'localSide') {\n\t\t\t\tsetRowsHandler(data);\n\t\t\t} else {\n\t\t\t\t_setRowsHandler(data);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst _onSearch = (searchLine, e) => {\n        e.preventDefault();\n\t\t// console.log(\"_onSearch\", searchLine);\n        tableRef.current.scrollToRow(0, 'auto');\n\t\tsetSearchValue(searchLine);\n\t\tconst loadParams = {\n\t\t\tsortBy: _sortBy,\n\t\t\tfilter: _filter,\n\t\t\tsearchLine: searchLine,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t\tcommandPanelProps.onSearch(searchLine);\n\t};\n\n\t/** FILTER PANEL FUNCTIONS */\n\n\tconst _onChangeFilter = (filter) => {\n\t\t// console.log('_onChangeFilter', filter);\n\t\tsetHasMore(true);\n\t\tsetFilter(filter);\n\t\tfilterPanelProps.onChangeFilter(filter);\n\t};\n\tconst _onApplyFilter = (filter) => {\n\t\t// console.log('_onApplyFilter', filter);\n\t\tconst loadParams = {\n\t\t\tsortBy: _sortBy,\n\t\t\tfilter: filter,\n\t\t\tsearchLine: _searchValue,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t\tfilterPanelProps.onApplyFilter(filter);\n\t};\n\n\t/** SELECTED PANEL */\n\n\tconst _onClickDropSelectHandler = (dropObject) => {\n\t\tconst newSelectedKeys = _selectedRowKeys.filter(\n\t\t\t(item) => item !== dropObject[rowKey]\n\t\t);\n\t\tsetSelectedRowKeys(newSelectedKeys);\n\t\tonSelectedRowsChange(newSelectedKeys);\n\t};\n\n\t// const rowProps = {\n\t//     // tagName: 'button',\n\t//     // onClick: e => {\n\t//     //     e.preventDefault();\n\t//     //     e.stopPropagation();\n\t//     //     console.log(`You clicked row onClick`)\n\t//     // },\n\t//     onDoubleClick: e => {\n\t//         e.preventDefault();\n\t//         e.stopPropagation();\n\t//         console.log(`You clicked row onDoubleClick`)\n\t//     }\n\t// };\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`${rtPrefix}-table`}\n\t\t\tstyle={{width: '100%', height: '100%'}}\n\t\t>\n\t\t\t<div className={`${rtPrefix}-table-top-panel`}>\n\t\t\t\t<CommandPanel\n\t\t\t\t\t{...commandPanelProps}\n\t\t\t\t\tdefaultValueSearch={defaultSearchValue}\n\t\t\t\t\tdisabledElements={_getDisabledElementsOfCommandPanel()}\n\t\t\t\t\tonClickAddAsCopy={_onClickAddAsCopy}\n\t\t\t\t\tonClickDelete={_onClickDelete}\n\t\t\t\t\tonClickDown={_onClickDown}\n\t\t\t\t\tonClickEdit={_onClickEdit}\n\t\t\t\t\tonClickUp={_onClickUp}\n\t\t\t\t\tonSearch={_onSearch}\n\t\t\t\t/>\n\t\t\t\t{/*{!filter ? (*/}\n\t\t\t\t<FilterPanel\n\t\t\t\t\t{...filterPanelProps}\n\t\t\t\t\tdefaultFilter={defaultFilter}\n\t\t\t\t\tonChangeFilter={_onChangeFilter}\n\t\t\t\t\tonApplyFilter={_onApplyFilter}\n\t\t\t\t/>\n\t\t\t\t{/*) : null}*/}\n\t\t\t</div>\n\t\t\t<div className={`${rtPrefix}-baseTable`}>\n\t\t\t\t<AutoResizer>\n\t\t\t\t\t{({width, height}) => (\n\t\t\t\t\t\t<BaseTable\n\t\t\t\t\t\t\tref={tableRef}\n\t\t\t\t\t\t\t/** Required */\n\t\t\t\t\t\t\tcolumns={_getColumns()}\n\t\t\t\t\t\t\tdata={_rows}\n\t\t\t\t\t\t\t/** Control Props */\n\t\t\t\t\t\t\tsortBy={_sortBy}\n\t\t\t\t\t\t\t/** Base Props */\n\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\trowKey={rowKey}\n\t\t\t\t\t\t\t// rowProps={rowProps}\n\n\t\t\t\t\t\t\t/** View Props */\n\t\t\t\t\t\t\trowClassName={_rowClassName}\n\t\t\t\t\t\t\temptyRenderer={empty}\n\t\t\t\t\t\t\tfixed={fixWidthColumn}\n\t\t\t\t\t\t\tfooterHeight={_footerShow ? footerProps.height : 0}\n\t\t\t\t\t\t\theaderHeight={headerHeight}\n\t\t\t\t\t\t\trowHeight={rowHeight}\n\t\t\t\t\t\t\toverlayRenderer={loading ? overlay : null}\n\t\t\t\t\t\t\tfooterRenderer={_footer}\n\t\t\t\t\t\t\trowRenderer={rowRenderer}\n\t\t\t\t\t\t\testimatedRowHeight={estimatedRowHeight}\n\t\t\t\t\t\t\t/** Load Data Props */\n\t\t\t\t\t\t\tonEndReachedThreshold={loadThreshold}\n\t\t\t\t\t\t\tonEndReached={\n\t\t\t\t\t\t\t\ttype === 'infinity' ? onEndReached : undefined\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t/** Tree Props */\n\t\t\t\t\t\t\texpandColumnKey={expandColumnKey}\n\t\t\t\t\t\t\texpandedRowKeys={_expandedRowKeys}\n\t\t\t\t\t\t\t/** Events */\n\t\t\t\t\t\t\tonColumnSort={_onColumnSort}\n\t\t\t\t\t\t\trowEventHandlers={_rowEventHandlers}\n\t\t\t\t\t\t\tonExpandedRowsChange={_onExpandedRowsChange}\n\t\t\t\t\t\t\tonRowExpand={_onRowExpand}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</AutoResizer>\n\t\t\t</div>\n\t\t\t{showSelection && selectable && !expandColumnKey ? (\n\t\t\t\t<SelectionList\n\t\t\t\t\tonClickDropSelect={_onClickDropSelectHandler}\n\t\t\t\t\tselectedRowObjects={flatten(\n\t\t\t\t\t\tgetTableRowObjects(_rows, rowKey)\n\t\t\t\t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]))}\n\t\t\t\t\trowRender={rowRenderShowSelection}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</div>\n\t);\n});\n\nTable.propTypes = {\n\t/**\n\t * REQUIRED\n\t * */\n\n\t/** Столбцы таблицы */\n\tcolumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Тип таблицы\n\t * **infinity** - загрузка данных по скроллу. Фильтрация, сортировка и поиск через сервер.\n\t * **serverSide** - первичная загрузка таблицы с сервера. Фильтрация, сортировка и поиск через сервер. Lazy Load для дерева тоже тут.\n\t * **localSide** - полностью локальная таблица. Фильтрация, сортировка и поиск через локальный rows */\n\ttype: PropTypes.oneOf(['infinity', 'serverSide', 'localSide']).isRequired,\n\n\t/** Объект со свойствами Command Panel */\n\tcommandPanelProps: PropTypes.object,\n\n\t/** Объект со свойствами Filter Panel */\n\tfilterPanelProps: PropTypes.object,\n\n\t/**\n\t * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n\t * */\n\n\t/** Строки по умолчанию */\n\tdefaultRows: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Ключи выделенных по умолчанию строк */\n\tdefaultSelectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска по умолчанию строк */\n\tdefaultSearchValue: PropTypes.string,\n\n\t/** Объект фильтрации по умолчанию */\n\tdefaultFilter: PropTypes.object,\n\n\t/** Сортировка по умолчанию */\n\tdefaultSortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n\t * */\n\n\t/** Строки таблицы. Используется для контроля таблицы из вне. */\n\trows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Функция задания строк таблицы. */\n    setRows: PropTypes.func,\n\n\t/** Выделенные строки таблицы. */\n\tselectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Объект фильтрации */\n\tfilter: PropTypes.object,\n\n\t/** Объект сортировки */\n\tsortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * BASE PROPS\n\t * */\n\n\t/** Автоудаление строк из таблицы по кнопке в командной панели*/\n\tautoDeleteRows: PropTypes.bool,\n\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/**\n\t * VIEW PROPS\n\t * */\n\n\t/** Вывод когда нет данных */\n\tempty: PropTypes.element,\n\n\t/** Отображение загрузки данных */\n\toverlay: PropTypes.element,\n\n\t/** Фиксированная ширина столбцов. Появится боковой скрол */\n\tfixWidthColumn: PropTypes.bool,\n\n\t/** Высота подвала */\n\tfooterHeight: PropTypes.number,\n\n\t/** Отображать ли подвал */\n\tfooterShow: PropTypes.bool,\n\n    /** Заголовки футтера */\n    footerTitles: PropTypes.shape({\n\t\t/** Заголовок выделенных элементов */\n        selectedRows: PropTypes.string,\n\t\t/** Заголовок загруженных элементов */\n        loadedRows: PropTypes.string,\n\t\t/** Заголовок всего элементов */\n\t\ttotalRows: PropTypes.string,\n    }),\n\n\tfooterProps: PropTypes.shape({\n\n\t\t/** Высота подвала */\n\t\theight: PropTypes.number,\n\n\t\t/** Массив элементов футтера, которые надо отобразить\n\t\t * ['selected', 'loaded', 'total'] */\n\t\tshowElements: PropTypes.arrayOf(PropTypes.string),\n\n\t\t/** Заколовок для кол-ва выбранных объектов */\n\t\tselectedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва загруженны объектов */\n\t\tloadedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва всего объектов */\n\t\ttotalTitle: PropTypes.string,\n\n\t\t/** Левый кастомный элемент командной панели */\n\t\tleftCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/** Центральный кастомный элемент командной панели */\n\t\tcenterCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/** Правый кастомный элемент командной панели */\n\t\trightCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\t}),\n\n\t/** Высота заголовка таблицы */\n\theaderHeight: PropTypes.number,\n\n\t/** Высота строки таблицы */\n\trowHeight: PropTypes.number,\n\n\t/** Custom row renderer\n\t * Параметры - ({ isScrolling, cells, columns, rowData, rowIndex, depth }) */\n\trowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n\t/** Строки будут в зебро-стиле */\n\tzebraStyle: PropTypes.bool,\n\n\t/**\n\t * LOAD DATA PROPS\n\t * */\n\n\t/** Порог в пикселях для вызова _onLoad.\n\t * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n\tloadThreshold: PropTypes.number,\n\n\t/** Размер страницы */\n\tpageSize: PropTypes.number,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\t/**\n\t * SELECTABLE PROPS\n\t * */\n\n\t/** Таблица с возможностью выбора строки */\n\tselectable: PropTypes.bool,\n\n\t/**\n\t * TREE PROPS\n\t * */\n\n\t/** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\n\tnodeAssociated: PropTypes.bool,\n\n\t/** Ключ колонки по которой строить иерархию */\n\texpandColumnKey: PropTypes.string,\n\n\t/** Открыть по умолчанию вложенность до уровня N или 'All' */\n\texpandDefaultAll: PropTypes.bool,\n\n\t/** Загружать ноды иерархии по одной */\n\texpandLazyLoad: PropTypes.bool,\n\n\t/** Поле в котором хранится ссылка на родителя */\n\texpandParentKey: PropTypes.string,\n\n\t/**\n\t * EVENTS\n\t * */\n\n\t/** Событие при клике на строку (только при selectable = false)\n\t * Параметр - ({selected, rowData, rowIndex}) */\n\tonRowClick: PropTypes.func,\n\n\t/** Событие при двойном клике на строку.\n\t * Параметр - ({rowData, rowIndex, rowKey}) */\n\tonRowDoubleClick: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * Парметры - ({ expanded, rowData, rowIndex, rowKey }) */\n\tonRowExpand: PropTypes.func,\n\n\t/** Событие при выборе строки.\n\t * Параметр - массив выбранных строе (только rowKey) */\n\tonSelectedRowsChange: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * Парметры - (expandedRowKeys) - массив ключей открытых нод */\n\tonExpandedRowsChange: PropTypes.func,\n\n\t/** SELECTED PANEL */\n\n\t/** Отображать ли панель выбранных элементов */\n\tshowSelection: PropTypes.bool,\n\n\t/** Строка или функция для отображения элементов списка выбранных\n\t * Строка - имя поля\n\t * Функция - рендер строк.\n\t * `({ rowData, rowIndex }) => { return <Component> }` */\n\trowRenderShowSelection: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.string,\n\t]),\n\n\t/** Путь в сторе куда класть выбранную строку таблицы */\n\tdispatchPath: PropTypes.string,\n\n\t/** Объект для подписки на изменения в STORE */\n\tsubscribe: PropTypes.object,\n};\n\nTable.defaultProps = {\n\tdefaultRows: [],\n\tdefaultSelectedRowKeys: [],\n\tdefaultSearchValue: '',\n\tdefaultFilter: {},\n\tdefaultSortBy: {},\n\n\trows: [],\n\tselectedRowKeys: [],\n\tsearchValue: '',\n\tfilter: {},\n\tsortBy: {},\n\n\tautoDeleteRows: true,\n\trowKey: 'id',\n\n\tempty: empty,\n\toverlay: overlay,\n\tfixWidthColumn: false,\n\tfooterHeight: 30,\n\tfooterShow: false,\n    footerTitles: {\n        selectedRows: 'Выделено:',\n        loadedRows: 'Загружено записей:',\n        totalRows: 'Всего записей:',\n    },\n\tfooterProps: {\n\t\theight: 30,\n\t\tshowElements: [],\n\t\tselectedTitle: 'Выделено:',\n\t\tloadedTitle: 'Загружено записей:',\n\t\ttotalTitle: 'Всего записей:',\n\t\tleftCustomSideElement: null,\n\t\tcenterCustomSideElement: null,\n\t\trightCustomSideElement: null\n\t},\n\theaderHeight: 30,\n\trowHeight: 30,\n\tzebraStyle: false,\n\n\tloadThreshold: 300,\n\tpageSize: 50,\n\trequestLoadRows: noop,\n    requestLoadCount: noop,\n\tsearchParamName: 'searchLine',\n\n\tselectable: false,\n\n\tnodeAssociated: true,\n\texpandColumnKey: undefined,\n\texpandDefaultAll: true,\n\texpandLazyLoad: false,\n\texpandParentKey: 'parentId',\n\n\tonRowClick: noop,\n\tonRowDoubleClick: noop,\n\tonRowExpand: noop,\n\tonSelectedRowsChange: noop,\n\tonExpandedRowsChange: noop,\n\n\tshowSelection: false,\n\n\tsubscribe: {},\n};\n\nconst mapStateToProps = (store, ownProps) => {\n\tconst {subscribe} = ownProps;\n\tif(subscribe){\n\t\tconst {name, path} = subscribe;\n\t\tif(name && path)\n\t\t\treturn { [name]: objectPath.get(store, path) };\n\t}\n\n\treturn {};\n};\nconst mapDispatchToProps = (dispatch) =>\n\tbindActionCreators({ setDateStore: setDateStore}, dispatch);\n\n// const mapStateToProps = (store, ownProps) => {\n//     // console.log(\"mapStateToProps -> store\", store);\n//     // const {match , section} = ownProps;\n//     // const { path } = match;\n//     // const rows = store.table[path] && store.table[path][section] ? store.table[path][section].rows : [];\n//     // console.log(\"mapStateToProps -> rows\", rows);\n//     return { store: store };\n// };\n// const mapDispatchToProps = (dispatch, ownProps) => {\n//     // console.log(\"mapDispatchToProps -> ownProps\", ownProps);\n//     // const {match , section} = ownProps;\n//     // const { path } = match;\n//     // initTableStore(path, section);\n//     return bindActionCreators(\n//         {\n//             initTableStore,\n//             setRows,\n//         },\n//         dispatch\n//     );\n// };\n//\n// export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\n\n/**\n * @deprecated [#1] since version 0.0.54 [#2].\n * */\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\n","import React, {useEffect, useState, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { flatten, getTableRowKeys, noop, notificationError } from \"../../utils/baseUtils\";\nimport {rtPrefix} from '../../utils/variables';\nimport {Button, Typography} from 'antd';\nimport { DownOutlined, UpOutlined, CloseCircleFilled } from '@ant-design/icons'\nimport Table from '../Table/Table';\nimport { setDateStore } from \"../../../redux/rtd.actions\";\nconst {Paragraph} = Typography;\n\nconst Select = (props) => {\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n\tconst [_selectedRowData, _setSelectedRowData] = useState(null);\n\tconst [isSelectOpened, setIsSelectOpened] = useState(false);\n\tconst [isClickInSelect, setIsClickInSelect] = useState(false);\n\n\tconst {\n\t\tname,\n\t\trowRender,\n        className,\n\t\ttype,\n\t\ttitle,\n\t\tplaceholder,\n        selectedRowKeys,\n\t\t// searchable,\n        size,\n\t\twidthControl,\n\t\twidthPopup,\n\t\theightPopup,\n\n\t\tonChangeKeys,\n        defaultValue,\n        value,\n\n\t\t/** Table Props */\n\t\tdefaultSelectedRowKeys,\n\t\trowKey,\n\t\texpandColumnKey,\n\t\tshowSelection,\n\t\trequestLoadRows,\n\t\trequestLoadDefault,\n        commandPanelProps,\n\t\trows,\n\t\tdispatchPath,\n\t} = props;\n\n\tconst selectedDispatchPath = dispatchPath && `${dispatchPath}.selected`;\n\tconst searchable = commandPanelProps && commandPanelProps.showElements && commandPanelProps.showElements.includes('search');\n\tconst node = useRef(null);\n\n\tconst setSelectedRowData = (rowData) => {\n\t\tselectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, rowData);\n\t\t_setSelectedRowData(rowData);\n\t}\n\n\tconst loadSelectedObject = ({selectedRowKeys}) => {\n        if(selectedRowKeys) {\n            let _selectedRowKeys;\n\t\t\tif(Array.isArray(selectedRowKeys)) {\n\t\t\t\tsetSelectedRowKeys(selectedRowKeys);\n\t\t\t\t_selectedRowKeys = selectedRowKeys\n\t\t\t}\n            else {\n            \tsetSelectedRowKeys([selectedRowKeys]);\n\t\t\t\t_selectedRowKeys = [selectedRowKeys]\n\t\t\t}\n\n\t\t\t// console.log(\"setSelectedRowKeys[70] -> \", _selectedRowKeys);\n\n\t\t\tconst request = requestLoadDefault\n                ? requestLoadDefault\n                : requestLoadRows;\n\n            if (!!request && !rows && _selectedRowKeys.length > 0) {\n                // console.log('defaultSelectedRowKeys ', defaultSelectedRowKeys, defaultSelectedRowKeys.length);\n                request({\n                    data: {\n                        [rowKey]:  _selectedRowKeys, //defaultSelectedRowKeys,\n                    },\n                })\n                    .then((response) => {\n                        let result = response.data;\n\t\t\t\t\t\t// console.log(\"setSelectedRowData[84] => \", response.data);\n\t\t\t\t\t\tif (result.length > 0) setSelectedRowData(result[0]);\n                    })\n\t\t\t\t\t.catch(error => notificationError(error, 'Ошибка загрузки данных в Select') );\n\n            } else if (rows && _selectedRowKeys && type === 'SingleSelect') {\n            \tlet srk = _selectedRowKeys[0];\n\t\t\t\t// if(Array.isArray(selectedRowKeys) && selectedRowKeys.length > 0)\n\t\t\t\t// \tsrk = selectedRowKeys[0];\n            \t// else\n\t\t\t\t// \tsrk = selectedRowKeys;\n\n                const findRow = rows.find((row) => row[rowKey] === srk);\n                // console.log(\"setSelectedRowData[98] => \", findRow, rows, srk);\n                setSelectedRowData(findRow);\n            } else {\n                setSelectedRowData(null);\n            }\n        }\n\t};\n\n\tuseEffect(() => {\n        loadSelectedObject({selectedRowKeys: defaultSelectedRowKeys});\n\t\twindow.addEventListener('mousedown', handleMouseClick, false);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('mousedown', handleMouseClick, false);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// console.log(\"selectedRowKeys\", selectedRowKeys);\n        loadSelectedObject({selectedRowKeys: selectedRowKeys});\n    }, [selectedRowKeys]);\n\n\tuseEffect(() => {\n\t\tif(_selectedRowKeys !== undefined && _selectedRowData === undefined){\n\t\t\t// console.log(\"useEffect rows\", _selectedRowKeys, _selectedRowData, rows);\n\t\t\tloadSelectedObject({selectedRowKeys: _selectedRowKeys});\n\t\t}\n\t}, [rows])\n\n\tuseEffect(() => {\n\t\t// console.log(\"isClickInSelect \", isClickInSelect);\n\t\t// console.log(\"isSelectOpened \", isSelectOpened);\n\t\tif(!isClickInSelect && isSelectOpened)\n\t\t\tonClosePopup();\n\t}, [isClickInSelect]);\n\n\t// useEffect(() => {\n\t// \t// console.log(\"setSelectedRowData[117] => \", props.value, props.defaultValue);\n\t// }, [props])\n\n\tconst columns = [\n\t\t{\n\t\t\tkey: rowKey,\n\t\t\ttitle: title,\n\t\t\tdataKey: rowKey,\n\t\t\twidth: 500,\n\t\t\tcellRenderer:\n\t\t\t\ttypeof rowRender === 'function'\n\t\t\t\t\t? rowRender\n\t\t\t\t\t: ({rowData}) => <div className={'rt-table-cell'}>{rowData[rowRender]}</div>,\n\t\t},\n\t];\n\n\tconst _getHeadCls = () => {\n\t    let cls = [`${rtPrefix}-select-header`];\n\n\t    if(isSelectOpened)\n            cls.push('opened');\n\n\t    if(_selectedRowKeys && _selectedRowKeys.length > 0)\n\t        cls.push('selected');\n\n\t    switch (size) {\n            case 'small':\n                cls.push(`${rtPrefix}-select-header-sm`);\n                break;\n            case 'large':\n                cls.push(`${rtPrefix}-select-header-lg`);\n                break;\n            default: break;\n        }\n\n\t    return cls.join(' ');\n    };\n\n\tconst _getHeadText = () => {\n\t\tif (type === 'SingleSelect') {\n\t\t\t\tif(_selectedRowData)\n\t\t\t\t\tif(typeof rowRender === 'function')\n\t\t\t\t\t\treturn rowRender({rowData: _selectedRowData});\n\t\t\t\t\telse\n\t\t\t\t\t\treturn `${_selectedRowData[rowRender]}`;\n\t\t\t\telse\n\t\t\t\t\treturn `${placeholder}`;\n\t\t} else {\n\t\t\treturn _selectedRowKeys.length > 0\n\t\t\t\t? `Выбрано: ${_selectedRowKeys.length}`\n\t\t\t\t: `${placeholder}`;\n\t\t}\n\t};\n\n    const _getPopupCls = () => {\n    \t// console.log('_getPopupCls _selectedRowKeys => ', _selectedRowKeys);\n        let cls = [`${rtPrefix}-select-popup`];\n\n        if(title)\n            cls.push(`${rtPrefix}-select-popup-with-title`);\n\n        return cls.join(' ');\n    };\n\tconst _getPopupStyle = () => {\n\t\t// if (heightPopup)\n\t\t// \treturn {height: `${heightPopup}px`, width: `${widthPopup}px`};\n\n\t\tlet height = {};\n\t\tlet defRowsLen = 0;\n\n\t\tif (!requestLoadRows && rows)\n\t\t\tif (expandColumnKey)\n\t\t\t\tdefRowsLen = flatten(getTableRowKeys(rows, rowKey)).length;\n\t\t\telse defRowsLen = rows.length;\n\n\t\t// console.log('_getPopupStyle', defRowsLen);\n\t\tif (defRowsLen && defRowsLen > 0) {\n\t\t\theight =\n\t\t\t\tdefRowsLen * 30 + // Кол-во строк * высоту строки\n\t\t\t\t(searchable ? 46 : 0) + // Размер поисковой строки или 0\n\t\t\t\t(type === 'MultiSelect' ? 65 : 0) + // Размер футтера (30) + размер кнопки 35 или 0\n\t\t\t\t(showSelection ? 200 : 0) + // Размер панели выбранных элементов или 0\n\t\t\t\t22; // Паддинги и бордер\n\t\t\t// console.log('heightPopup', height);\n\t\t\tif (height > heightPopup) height = `${heightPopup}px`;\n\t\t\telse height = `${height}px`;\n\t\t} else {\n\t\t\t// console.log(\"heightPopup\", heightPopup);\n\t\t\theight = `${heightPopup}px`;\n\t\t}\n\n\t\t// console.log(\"heightPopup, widthPopup\", heightPopup, widthPopup);\n\t\treturn {height, width: `${widthPopup}px`};\n\t};\n\n\tconst getEvents = () => {\n\t\treturn (commandPanelProps && commandPanelProps.systemBtnProps && Object.keys(commandPanelProps.systemBtnProps)) || [];\n\t};\n\n\tconst _onChange = (selectedKeys) => {\n\t\t// console.log('_onChange [176]', selectedKeys);\n\t\tsetSelectedRowKeys(selectedKeys);\n\t\t// setSelectedRowData(selectedObjects);\n\t\tonChangeKeys(name, selectedKeys.length ? selectedKeys : null);\n\t\t// onChangeObjects(name, selectedObjects.length ? selectedObjects : null);\n\t\t// setCountSelect(selectedKeys.length);\n\t\tif (type === 'SingleSelect') {\n\t\t\tsetIsSelectOpened(false);\n\t\t}\n\t};\n\n\tconst _SingleSelectRow = ({selected, rowData, rowIndex}) => {\n\t\t// console.log(\"_SingleSelectRow => \", rowData);\n\t\tsetSelectedRowData(rowData);\n\t\t// selected ? setSingleSelectRowData(rowData) : setSingleSelectRowData({})\n\t};\n\n\tconst handleMouseClick = (e) => {\n\t\tnode && node.current && setIsClickInSelect(node.current.contains(e.target))\n\t};\n\n\tconst onClosePopup  = () => {\n\t\tsetIsSelectOpened(false);\n\t};\n\n\tconst onOpenPopup = () => {\n\t\tif(!isSelectOpened)\n\t\t\tsetIsSelectOpened(true);\n\t\telse\n\t\t\tsetIsSelectOpened(false);\n\t};\n\n\tconst onClickClear = () => {\n\t\t// console.log(\"delete Selected\");\n\t\tsetSelectedRowData(null);\n\t\t_onChange([]);\n\t};\n\n\treturn (\n\t\t<div\n            className={`${rtPrefix}-select ${className ? className : ''}`}\n\t\t\tref={node}\n\t\t>\n\t\t\t{title ? <div className={'title'}>{title}</div> : null}\n\t\t\t<div\n\t\t\t\tclassName={_getHeadCls()}\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: widthControl === 0 ? '100%' : `${widthControl}px`,\n\t\t\t\t}}\n\n\t\t\t>\n\t\t\t\t<div className={`${rtPrefix}-select-selector`}\n\t\t\t\t\t // onFocus={ () => {setIsSelectOpened(true)} }\n\t\t\t\t\t onClick={ onOpenPopup }\n\t\t\t\t>\n\t\t\t\t\t<Paragraph ellipsis> {_getHeadText()} </Paragraph>\n\t\t\t\t</div>\n                {isSelectOpened ? <UpOutlined onClick={ onOpenPopup } className={`${rtPrefix}-select-header-icon`} /> : <DownOutlined onClick={ onOpenPopup } className={`${rtPrefix}-select-header-icon`}/> }\n\t\t\t\t{/*<Button shape=\"circle\" icon={<CloseCircleFilled />} onClick={() => console.log(\"delete Selected\")} className={`${rtPrefix}-select-header-clear`} />*/}\n\t\t\t\t{_selectedRowKeys.length > 0 ? <CloseCircleFilled onClick={onClickClear} className={`${rtPrefix}-select-header-clear`}/> : null }\n\t\t\t</div>\n\n\t\t\t{isSelectOpened ? (\n\t\t\t\t<div className={_getPopupCls()} style={_getPopupStyle()}>\n\t\t\t\t\t<Table\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t\tcommandPanelProps={{\n\t\t\t\t\t\t\t...props.commandPanelProps,\n\t\t\t\t\t\t\tshowElements: getEvents(),// getShowElements(),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdefaultSelectedRowKeys={_selectedRowKeys}\n                        selectedRowKeys={_selectedRowKeys}\n\t\t\t\t\t\theaderHeight={0}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\ttype={!!requestLoadRows ? 'serverSide' : 'localSide'}\n\t\t\t\t\t\t// showElements={searchable ? ['search'] : undefined}\n\t\t\t\t\t\tselectable={type === 'MultiSelect'}\n\t\t\t\t\t\tfooterShow={type === 'MultiSelect'}\n\t\t\t\t\t\tshowSelection={showSelection}\n\t\t\t\t\t\trowRenderShowSelection={rowRender}\n\t\t\t\t\t\tonRowClick={_SingleSelectRow}\n\t\t\t\t\t\tonSelectedRowsChange={_onChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{type === 'MultiSelect' ? (\n\t\t\t\t\t\t<div className={'close-panel'}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={() => setIsSelectOpened(false)}\n\t\t\t\t\t\t\t\tsize={'small'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tOk\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\nSelect.propTypes = {\n\t/** Имя параметра селекта (вернется в onChangeKeys и onChangeObjects) */\n\tname: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.number,\n\t\tPropTypes.arrayOf(\n\t\t\tPropTypes.oneOfType(\n\t\t\t\t[PropTypes.string, PropTypes.number]\n\t\t\t)\n\t\t)]).isRequired,\n\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { rowData, rowIndex }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n\t\t.isRequired,\n\n\t/** Тип селекта (SingleSelect и MultiSelect) */\n\ttype: PropTypes.oneOf(['SingleSelect', 'MultiSelect']).isRequired,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Заголовок фильтра */\n\ttitle: PropTypes.string,\n\n\t/** Строка, когда ничего не выбрано */\n\tplaceholder: PropTypes.string,\n\n\t/** Запрос на загрузку дефолтных данных */\n\trequestLoadDefault: PropTypes.func,\n\n    /** Массив выбранных значений */\n    selectedRowKeys: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n\n    /** Размер селектора ['small', 'middle', 'large'] */\n    size: PropTypes.oneOf(['small', 'middle', 'large']),\n\n\t// /** Показывать ли поисковую строку */\n\t// searchable: PropTypes.bool,\n\n\t/** Ширина поля выбора в пикселях */\n\twidthControl: PropTypes.number,\n\n\t/** Ширина выпадающего меню */\n\twidthPopup: PropTypes.number,\n\n\t/** Высота выпадающего меню (по умолчанию считается сама) */\n\theightPopup: PropTypes.number,\n\n    /** Событие об изменении состояния селектора */\n\tonChangeKeys: PropTypes.func,\n\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/** Высота строки таблицы */\n\trowHeight: PropTypes.number,\n\n\t/** Строки будут в зебро-стиле */\n\tzebraStyle: PropTypes.bool,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadCount: PropTypes.func,\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\t/** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\n\tnodeAssociated: PropTypes.bool,\n\n\t/** Ключ колонки по которой строить иерархию */\n\texpandColumnKey: PropTypes.string,\n\n\t/** Открыть по умолчанию вложенность до уровня N или 'All' */\n\texpandDefaultAll: PropTypes.bool,\n\n\t/** Загружать ноды иерархии по одной */\n\texpandLazyLoad: PropTypes.bool,\n\n\t/** Поле в котором хранится ссылка на родителя */\n\texpandParentKey: PropTypes.string,\n};\n\nSelect.defaultProps = {\n\tonChangeKeys: noop,\n\t// onChangeObjects: noop,\n\tplaceholder: 'Выбрать',\n\t// searchable: false,\n    size: 'middle',\n\twidthControl: 110,\n\twidthPopup: 400,\n\theightPopup: 600,\n    rowKey: 'id',\n\trowHeight: 30,\n\tzebraStyle: false,\n\n\trequestLoadDefault: undefined,\n\trequestLoadRows: undefined,\n\trequestLoadCount: undefined,\n\tsearchValue: '',\n\tsearchParamName: 'searchLine',\n\n\tnodeAssociated: true,\n\texpandColumnKey: undefined,\n\texpandDefaultAll: true,\n\texpandLazyLoad: false,\n\texpandParentKey: 'parentId',\n};\nconst mapDispatchToProps = (dispatch) =>\n\tbindActionCreators({ setDateStore: setDateStore}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(Select);\n","import React, {forwardRef, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '../Table/Table';\nimport { notification, Typography } from \"antd\";\nimport { notificationError } from \"../../utils/baseUtils\";\n\nconst AdvancedTable = forwardRef((props, ref) => {\n\tconst [config, setConfig] = useState({});\n\n\tconst {\n\t\tconfigData,\n        customColumnProps,\n\t\tdefaultFilter,\n\t\texpandColumnKey,\n\t\texpandLazyLoad,\n\t\texpandParentKey,\n\t\tpageSize,\n\t\trowKey,\n\t\trequestLoadConfig,\n\t} = props;\n\n\tuseEffect(() => {\n        let cleanupFunction = false;\n        const loadData = async () => {\n            if (requestLoadConfig) {\n                // console.log('requestLoadConfig => ', typeof requestLoadConfig);\n                // console.log('requestLoadRows => ', typeof props.requestLoadRows);\n                requestLoadConfig()\n                    .then((response) => {\n                        // let result = response.data;\n                        // console.log('requestLoadConfig -> ', response.data);\n                        if(!cleanupFunction)\n                            setConfig(response.data);\n                    })\n                    .catch(error => notificationError(error, 'Ошибка получения конфигурации') );\n            } else {\n                if(!cleanupFunction)\n                    setConfig(configData);\n            }\n        };\n        loadData();\n        return () => cleanupFunction = true;\n\t}, []);\n\n\tconst columnsByConfig = () =>\n\t\tconfig &&\n\t\tconfig.fields &&\n\t\tconfig.fields.map((item) => {\n\n\t\t\tconst colProps =\n                customColumnProps &&\n                customColumnProps.find(\n                    (render) =>\n                        render.name === item.name || render.name === item.alias\n                );\n\t\t\treturn {\n\t\t\t\tkey: item.name,\n\t\t\t\ttitle: item.header ? item.header : item.name,\n\t\t\t\tdataKey: item.alias ? item.alias : item.name,\n\t\t\t\talign: item.align,\n\t\t\t\twidth: item.width,\n\t\t\t\tresizable: item.resizable,\n\t\t\t\tsortable: item.sortable,\n\t\t\t\thidden: !item.visible,\n\t\t\t\t// cellRenderer: cellR && cellR.cellRender,\n                ...colProps,\n                cellRenderer: (object) => {\n\t\t\t\t\tif (colProps && colProps.cellRenderer)\n\t\t\t\t\t\treturn <colProps.cellRenderer {...object}/>\n\t\t\t\t\t// return colProps.cellRenderer(object) ? colProps.cellRenderer(object) : '---';\n\t\t\t\t\telse\n\t\t\t\t\t\treturn object.cellData\n\t\t\t\t\t\t\t? <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>{object.cellData}</Typography.Text>\n\t\t\t\t\t\t\t: <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>---</Typography.Text> ;\n\t\t\t\t\t// return object.cellData ? object.cellData : '---';\n                },\n\t\t\t};\n\t\t});\n\n\tconst getDefaultFilter = () => {\n\t\tif (config && config.hierarchical && config.hierarchyLazyLoad) {\n\t\t\tconst parentKey = config.hierarchyField\n\t\t\t\t? config.hierarchyField.split('/')[1]\n\t\t\t\t: expandParentKey;\n\t\t\treturn {...defaultFilter, [parentKey]: null};\n\t\t} else return defaultFilter;\n\t};\n\n\tif (config && config.fields) {\n\t\t// console.log('AdvancedTable render table -> ', config);\n\t\treturn (\n\t\t\t<Table\n\t\t\t\t{...props}\n\t\t\t\tref={ref}\n\t\t\t\tcolumns={columnsByConfig()}\n\t\t\t\tdefaultFilter={getDefaultFilter()}\n\t\t\t\trowKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyField\n\t\t\t\t\t\t? config.hierarchyField.split('/')[0]\n\t\t\t\t\t\t: rowKey\n\t\t\t\t}\n\t\t\t\texpandParentKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyField\n\t\t\t\t\t\t? config.hierarchyField.split('/')[1]\n\t\t\t\t\t\t: expandParentKey\n\t\t\t\t}\n\t\t\t\texpandColumnKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyView\n\t\t\t\t\t\t? config.hierarchyView\n\t\t\t\t\t\t: expandColumnKey\n\t\t\t\t}\n\t\t\t\texpandLazyLoad={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyLazyLoad\n\t\t\t\t\t\t? config.hierarchyLazyLoad\n\t\t\t\t\t\t: expandLazyLoad\n\t\t\t\t}\n\t\t\t\tpageSize={config && config.hierarchical ? 1 : pageSize}\n\t\t\t/>\n\t\t);\n\t} else return null;\n});\n\nAdvancedTable.propTypes = {\n\t/** Функция запроса на получение конфига для таблицы */\n\trequestLoadConfig: PropTypes.func,\n\n\t/** Конфигурация внешнего вида таблицы */\n\tconfigData: PropTypes.shape({\n\t\thierarchical: PropTypes.bool,\n\t\thierarchyField: PropTypes.string,\n\t\thierarchyView: PropTypes.string,\n\t\thierarchyLazyLoad: PropTypes.bool,\n\t\tfields: PropTypes.arrayOf(\n\t\t\tPropTypes.shape({\n\t\t\t\tname: PropTypes.string,\n\t\t\t\talias: PropTypes.string,\n\t\t\t\theader: PropTypes.string,\n\t\t\t\tvisible: PropTypes.bool,\n\t\t\t\tresizable: PropTypes.bool,\n\t\t\t\tsortable: PropTypes.bool,\n\t\t\t\talign: PropTypes.oneOf(['left', 'center', 'right']),\n\t\t\t\twidth: PropTypes.number,\n\t\t\t})\n\t\t),\n\t}),\n\n\t/** Дополнительные пропсы для колонок */\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\n};\n\nAdvancedTable.defaultProps = {};\n\nexport default AdvancedTable;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormItems from \"./FormItems\";\nimport { Form as AntForm, notification } from \"antd\";\nimport { getObjectExcludedProps, noop, notificationError } from \"../../utils/baseUtils\";\nimport { rtPrefix } from \"../../utils/variables\";\n\nconst excludeProps = [\"noPadding\", \"scrollable\", \"header\", \"body\", \"footer\", \"loadInitData\", \"autoSaveForm\", \"requestSaveForm\", \"methodSaveForm\", \"processBeforeSaveForm\"];\n\n\nconst Form = (props) => {\n    const { loadInitData, header, body, footer,\n        autoSaveForm, requestSaveForm, methodSaveForm, processBeforeSaveForm } = props;\n\n    /** Состояние первоначалной настройки компонента*/\n    const [loaded, setLoaded] = useState(false);\n    const [antFormProps, setAntFormProps] = useState({});\n    const [initFormData, setInitFormData] = useState({});\n\n    useEffect(() => {\n        if (!loaded) {\n            if (loadInitData !== noop)\n                loadInitData(_setInitFormData);\n            else\n                setLoaded(true);\n        }\n    }, [loaded]);\n\n    useEffect(() => {\n        setAntFormProps(getObjectExcludedProps(props, excludeProps));\n        // console.log('antFormProps props => ', getObjectExcludedProps(props, excludeProps));\n    }, [props]);\n\n\n    const _setInitFormData = (data) => {\n        // console.log(\"Form loaded init data => \", data);\n        setInitFormData(data);\n        setLoaded(true);\n    };\n\n\n    let antForm;\n    if (props && props.form) {\n        antForm = props.form;\n    } else {\n        const [form] = AntForm.useForm();\n        antForm = form;\n    }\n\n    const getBodyCls = () => {\n        let cls = [`${rtPrefix}-form-body`];\n        props.noPadding && cls.push(`${rtPrefix}-form-body-no-padding`);\n        props.scrollable && cls.push(`${rtPrefix}-form-body-scrollable`);\n        return cls.join(\" \");\n    };\n\n    const onFinish = (rawValues) => {\n        const values = processBeforeSaveForm ? processBeforeSaveForm(rawValues) : rawValues;\n        console.log(`Success form [${props.name ? props.name : 'no name form'}]: `, values);\n        if (autoSaveForm && requestSaveForm) {\n            const saveObject = {\n                ...initFormData,\n                ...values,\n                // dateStart: getISO(values['dateStart'])\n            };\n            requestSaveForm({\n                method: methodSaveForm,\n                data: saveObject\n            })\n                .then(response => {\n                    notification.success({\n                        message: \"Сохранение прошло успешно\"\n                    });\n                    if (props.onFinish)\n                        props.onFinish(values);\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\n        } else if (props.onFinish)\n            props.onFinish(values);\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.error(\"Failed:\", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    return (\n        <React.Fragment>\n            {loaded ?\n                <AntForm\n                    form={antForm}\n                    {...antFormProps}\n                    className={`${antFormProps.className} ${rtPrefix}-form`}\n                    style={{ ...antFormProps.style, width: '100%', height: '100%' }}\n                    initialValues={{ ...antFormProps.initialValues, ...initFormData }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                >\n                    {header ? <div className={`${rtPrefix}-form-header`}><FormItems items={header}/></div> : null}\n                    <div className={getBodyCls()}><FormItems items={body}/></div>\n                    {footer ? <div className={`${rtPrefix}-form-footer`}><FormItems items={footer}/></div> : null}\n                </AntForm>\n                : null}\n        </React.Fragment>\n    );\n};\n\nForm.propTypes = {\n\n    /** Не делать отступы у формы от краев блока */\n    noPadding: PropTypes.bool,\n\n    /** scrollable\n     */\n    scrollable: PropTypes.bool,\n\n    /** Массив объектов для шапки формы. Как правило только заголовок. */\n    header: PropTypes.arrayOf(PropTypes.object),\n\n    /** Массив объектов для тела формы */\n    body: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n    /** Массив объектов для подвала формы. Как правило только кнопки \"Сохранить\" и \"Отмена\" */\n    footer: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ссылка на функцию загрузки значений по умолчанию\n     * (callBack) => callBack(initObject) */\n    loadInitData: PropTypes.func,\n\n    /** Производить ли автоматическое сохранение по параметрам requestSaveForm и methodSaveForm */\n    autoSaveForm: PropTypes.bool,\n\n    /** Запрос для автоматического сохранения формы */\n    requestSaveForm: PropTypes.func,\n\n    /** HTTP Метод, передаваемый в запрос сохранения */\n    methodSaveForm: PropTypes.string,\n\n    /** Функция обработки перед сохранением формы */\n    processBeforeSaveForm: PropTypes.func,\n};\n\nForm.defaultProps = {\n    noPadding: false,\n    scrollable: false,\n    loadInitData: noop,\n    autoSaveForm: true\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {getObjectExcludedProps} from '../../utils/baseUtils';\nimport Form from './Form';\nimport {Modal} from 'antd';\n\nconst excludeProps = ['type', 'initialValues', 'form'];\n\nconst FormModal = props => {\n\n    const {\n        modal,\n        selectedRow,\n        visible,\n        setVisible,\n        saveRow,\n    } = props;\n\n    const getDefaultFooterProps = () => {\n\n        let okText = '';\n        let cancelText = '';\n        let modalTitle = '';\n\n        switch (modal.type) {\n            case 'addOnServer':\n            case 'addGroupOnServer':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Сохранить на сервере';\n                break;\n            case 'addOnLocal':\n            case 'addGroupOnLocal':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Сохранить локально';\n                break;\n            case 'editOnServer':\n            case 'editGroupOnServer':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Измененить на сервере';\n                break;\n            case 'editOnLocal':\n            case 'editGroupOnLocal':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Изменение локально';\n                break;\n            case 'select':\n                okText = 'Добавить';\n                cancelText = 'Отмена';\n                modalTitle = 'Выбор';\n                break;\n            case 'viewGroup':\n            case 'viewObject':\n                okText = 'Закрыть';\n                modalTitle = 'Просмотр';\n                break;\n            default: break;\n        }\n\n        if(modal.okText)\n            okText = modal.okText;\n\n        if(modal.cancelText)\n            cancelText = modal.cancelText;\n\n        if(modal.title)\n            modalTitle = modal.title;\n\n        return {okText, cancelText, title: modalTitle, okType: 'primary'}\n    };\n\n    let modalProps = { ...getDefaultFooterProps(), ...getObjectExcludedProps(modal, excludeProps) };\n\n    const onFinish = values => {\n        // console.log('FormModal Success:', values, selectedRow);\n        let saveObj = {};\n        if(modal.type.startsWith('add'))\n            saveObj = {...values};\n        else\n            saveObj = {...selectedRow, ...values};\n\n        saveRow({type: modal.type, row: saveObj, requestSaveRow: modal.requestSaveRow});\n\n        if (modalProps.onOk) modalProps.onOk(values);\n        if (modalProps.onFinish) modalProps.onFinish(values);\n    };\n\n    const onFinishFailed = errorInfo => {\n        // console.log('FormModal Failed:', errorInfo);\n        console.error(\"FormModal fields failed: \", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    const _onCancelHandler = (e) => {\n        // setVisibleModals({ ...visibleModals, [modal.type]: false });\n        // form.resetFields();\n        setVisible(modal.type, false);\n        if (modalProps.onCancel) modalProps.onCancel(e)\n    };\n\n    const _onLoadInitData = (callBack) => {\n        // console.log(\"Modal => loadInitData\", selectedRow);\n        formConfig.loadInitData(callBack, selectedRow)\n    }\n\n    const defaultFooter = [\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.cancelText,\n                className: 'mr-8',\n                onClick: _onCancelHandler,\n                ...modalProps.cancelButtonProps\n            }\n        },\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.okText,\n                type: modalProps.okType,\n                htmlType: 'submit',\n                ...modalProps.okButtonProps\n            }\n        }\n    ];\n\n    const formConfig =  {\n        footer: defaultFooter,\n        ...modal.form\n    };\n    return (\n        <Modal\n            {...modalProps}\n            centered\n            destroyOnClose\n            visible={visible}\n            onCancel={_onCancelHandler}\n            bodyStyle={{padding: 0, ...modalProps.bodyStyle}}\n            footer={null}\n        >\n            <Form\n                {...formConfig}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                loadInitData={_onLoadInitData}\n            />\n        </Modal>\n    )\n};\n\nFormModal.propTypes = {\n    /** Объект модального окна */\n    modal: PropTypes.object,\n\n    /** Выделенная строка таблицы */\n    selectedRow: PropTypes.object,\n\n    /** Состояние видимости модалки */\n    visible: PropTypes.bool,\n\n    /** Задание состояния видимости модалки */\n    setVisible: PropTypes.func,\n\n    /** CallBack функция для сохранения данных */\n    saveRow: PropTypes.func,\n};\n\nexport default FormModal;\n","import React, {forwardRef, useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport SortOrder from 'react-base-table/lib/SortOrder';\nimport AdvancedTable from '../AdvancedTable/AdvancedTable';\nimport { generateUUID, getObjectExcludedProps, noop, notificationError } from \"../../utils/baseUtils\";\nimport FormModal from './FormModal';\nimport { notification as antNotification, notification } from \"antd\";\nimport { rtPrefix } from \"../../utils/variables\";\nimport { empty, overlay } from \"../Table/defaultSettings\";\n\n\nconst excludeProps = ['onChange', 'defaultValue', 'modals', 'events', 'history'];\n\nconst FormTable = forwardRef((props, ref) => {\n\n    /** Состояние первоначалной настройки компонента*/\n    const [loading, setLoading] = useState(false);\n\n    /** Состояние отображения модалок таблицы */\n    const [visibleModals, setVisibleModals] = useState({\n        addOnServer: false,\n        editOnServer: false,\n        addOnLocal: false,\n        editOnLocal: false,\n        addGroupOnServer: false,\n        editGroupOnServer: false,\n        addGroupOnLocal: false,\n        editGroupOnLocal: false,\n        select: false,\n        viewGroup: false,\n        viewObject: false});\n    const [tableRows, setTableRows] = useState([]);\n    const [tableSelectedRowKeys, setTableSelectedRowKeys] = useState([]);\n    const [tableSelectedRow, setTableSelectedRow] = useState({});\n\n    /** Ссылка на объект таблицы */\n    const [tableRef, setTableRef] = useState({});\n    const _setTableRef = (_ref) => {\n        setTableRef(_ref);\n        ref && ref(_ref)\n    };\n\n    const {\n        rowKey,\n        rowKeyType,\n        customFields,\n        modals,\n        isGroupKey,\n        history,\n\n        componentType,\n        name,\n\n        // Form.Item props\n        value,\n\n        // Requests\n        requestDeleteRow,\n\n        dataDeleteRow\n    } = props;\n    const cmdProps = props.commandPanelProps;\n\n    // let advancedTableProps = getObjectExcludedProps(props, excludeProps);\n\n    /** Аналог componentDidMounted */\n    useEffect(() => {\n        // Если таблица локальная, то пробуем загрузить исходные данные\n        if(!loading && props.type === 'localSide') {\n            let cleanupFunction = false;\n            setLoading(true);\n            const loadData = async () => {\n                if (!loading && props.requestLoadRows) {\n                    props.requestLoadRows({params: {page: 0, size: 1}, data: {}})\n                        .then((response) => {\n                            // console.log('FormTable -> requestLoadRows -> response', response);\n                            // console.log('FormTable -> requestLoadRows -> value', value);\n                            if (!cleanupFunction)\n                                _addRowsToLocalTable(response.data, value);\n                        })\n                        .catch(error => notificationError(error, 'Ошибка загрузки данных') );\n                }\n                // console.log('FormTable -> setMounted ', advancedTableProps.type);\n                setLoading(false);\n            };\n            loadData();\n            return () => cleanupFunction = true;\n        }\n    }, [props.type]);\n\n    useEffect(() => {\n        if(props.selectable) {\n            console.log(\"FormTable => useEffect => value: \", value);\n            if(value && value.length > 0)\n                setTableSelectedRowKeys(value.map(item => item[rowKey]));\n            else\n                setTableSelectedRowKeys([]);\n\n        }\n    }, [value]);\n\n    /** Получить список кнопок для Command Panel */\n    const getEvents = () => {\n        return (cmdProps && cmdProps.systemBtnProps && Object.keys(cmdProps.systemBtnProps)) || [];\n    };\n\n    /** Получить рендер модалок */\n    const getModals = () => {\n        return modals.map((modal, index) => {\n            return (\n                <FormModal\n                    key={index}\n                    modal={modal}\n                    selectedRow={tableSelectedRow}\n                    visible={visibleModals[modal.type]}\n                    setVisible={(type, value) => setVisibleModals({ ...visibleModals, [type]: value })}\n                    saveRow={_onSaveRow}\n                />\n            )\n\n        })\n    };\n\n    /** Проверка существования кнопки в Command Panel */\n    const isExistCmdBtn = (btnType) => (cmdProps && cmdProps.systemBtnProps && cmdProps.systemBtnProps[btnType]);\n\n    /** Проверка соответствия типа кнопки и события ? (params) === (props) */\n    const equalsActionTypeCmdBtn = (btnType, actionType) => {\n        if(isExistCmdBtn(btnType)) {\n            if(btnType === 'edit') {\n                const aTypes = actionType.split('/');\n                if(aTypes[0] === 'g') {\n                    return !!(cmdProps.systemBtnProps[btnType].actionType\n                        && cmdProps.systemBtnProps[btnType].actionType.length === 2\n                        && cmdProps.systemBtnProps[btnType].actionType[1] === aTypes[1]);\n                }\n                else if (aTypes[0] === 'i') {\n                    return !!(cmdProps.systemBtnProps[btnType].actionType\n                        && cmdProps.systemBtnProps[btnType].actionType.length === 2\n                        && cmdProps.systemBtnProps[btnType].actionType[0] === aTypes[1]);\n                }\n            } else {\n                return !!(cmdProps.systemBtnProps[btnType].actionType\n                    && cmdProps.systemBtnProps[btnType].actionType === actionType);\n            }\n        }\n        return false;\n    };\n\n    /** Command Panel Events */\n    /** Добавить */\n    const _onClickAddHandler = () => {\n        if(equalsActionTypeCmdBtn('add', 'modal')) {\n            // console.log(\"FormTable => _onClickAddHandler => modal\");\n            if (props.type !== 'localSide') {\n                setVisibleModals({...visibleModals, addOnServer: true});\n            } else {\n                if (modals && (modals.find(modal => modal.type === 'select') !== undefined)) {\n                    setVisibleModals({...visibleModals, select: true});\n                    // console.log(\"FormTable => _onClickAddHandler => select\", modals.find(modal => modal.type === 'select'));\n                } else {\n                    setVisibleModals({...visibleModals, addOnLocal: true});\n                    // console.log(\"FormTable => _onClickAddHandler => addOnLocal\"); location.pathname\n                }\n            }\n        } else if (equalsActionTypeCmdBtn('add', 'page')) {\n            history.push(`${history.location.pathname}/new`);\n        }\n    };\n\n    /** Добавить копированием */\n    const _onClickAddAsCopyHandler = (event, row) => {\n        _addRowToLocalTable(row);\n    };\n\n    /** Добавить группу */\n    const _onClickAddGroupHandler = () => {\n        if(equalsActionTypeCmdBtn('addGroup', 'modal')) {\n            // console.log(\"FormTable => _onClickAddGroupHandler => modal\");\n            if (props.type !== 'localSide')\n                setVisibleModals({...visibleModals, addGroupOnServer: true});\n            else\n                setVisibleModals({...visibleModals, addGroupOnLocal: true});\n        } else if (equalsActionTypeCmdBtn('addGroup', 'page')) {\n            // console.log(\"FormTable => _onClickAddGroupHandler => page\");\n            history.push(`${history.location.pathname}/newGroup`);\n        }\n    };\n\n    /** Изменить */\n    const _onClickEditHandler = (event, {rowData}) => {\n        // console.log(\"FormTable -> _onClickEditHandler -> row \", rowData, props.type);\n        if (rowData[isGroupKey]) {\n            if (equalsActionTypeCmdBtn('edit', 'g/modal')) {\n                // console.log(\"FormTable => _onClickEditHandler => g/modal\");\n                if (props.type !== 'localSide')\n                    setVisibleModals({...visibleModals, editGroupOnServer: true});\n                else\n                    setVisibleModals({...visibleModals, editGroupOnLocal: true});\n            } else if (equalsActionTypeCmdBtn('edit', 'g/page')) {\n                // console.log(\"FormTable => _onClickEditHandler => g/page\");\n                history.push(`${history.location.pathname}/${rowData[rowKey]}`);\n            }\n        } else {\n            if (equalsActionTypeCmdBtn('edit', 'i/modal')) {\n                // console.log(\"FormTable => _onClickEditHandler => i/modal\");\n                if (props.type !== 'localSide')\n                    setVisibleModals({...visibleModals, editOnServer: true});\n                else\n                    setVisibleModals({...visibleModals, editOnLocal: true});\n            } else if (equalsActionTypeCmdBtn('edit', 'i/page')) {\n                // console.log(\"FormTable => _onClickEditHandler => i/page\");\n                history.push(`${history.location.pathname}/${rowData[rowKey]}`);\n            }\n        }\n    };\n\n    /** Удалить */\n    const _onClickDelete = (event, _selectedRowKeys) => {\n        if(props.type === 'localSide') {\n            const _rows = tableRows.filter(\n                (item) => !_selectedRowKeys.includes(item[rowKey])\n            );\n            setTableRows(_rows);\n            _onChange(_rows);\n        } else {\n            if(_selectedRowKeys && _selectedRowKeys.length > 0 && requestDeleteRow){\n                const deleteData = _selectedRowKeys.map(item => { return {[rowKey]: item, ...dataDeleteRow} } );\n                requestDeleteRow({data: {deleteData: deleteData}})\n                    .then((response) => {\n                        antNotification.success({message: 'Успешное удаленение'});\n                        tableRef && tableRef.reloadData({});\n\n                    })\n                    .catch(error => {\n                        notificationError(error, 'Ошибка удаления записи');\n                        tableRef && tableRef.reloadData({});\n                    });\n            }\n        }\n        cmdProps.onClickDelete && cmdProps.onClickDelete(event, _selectedRowKeys);\n    };\n\n    /** Переместить вверх / вниз */\n    const _onClickUpHandler = (event, row, rows) => {\n        _onChange(rows);\n        cmdProps.onClickUp && cmdProps.onClickUp(event, row, rows);\n    };\n\n    const _onClickDownHandler = (event, row, rows) => {\n        _onChange(rows);\n        cmdProps.onClickDown && cmdProps.onClickDown(event, row, rows);\n    };\n\n    /** Modal Events */\n    const _onSaveRow = ({type, row, requestSaveRow}) => {\n        // console.log(\"FormTable -> _saveRow -> row \", row);\n        if(type === 'select') {\n            // Получить массив строк из таблицы в модальной форме\n            let selectRows = row[name];\n            // console.log(\"FormTable -> _onSaveRow -> row [0]\", row);\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [0]\", selectRows);\n\n            // Фильтрация выбранных строк, оставить только те которых еще нет в таблице\n            let saveRows = selectRows.filter((sRow) =>\n                tableRows.findIndex((tRow) => tRow[rowKey] === sRow[rowKey]) === -1\n            );\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [1]\", saveRows);\n            if (customFields)\n                // Фильтрация по пользовательским параметрам\n                saveRows = saveRows.filter((sRow) => {\n                    let isValid = true;\n                    customFields.forEach((field) => {\n                        // Валидация по пользовательской логике функции validate\n                        if(field.validate)\n                            isValid = field.validate(sRow, tableRows);\n\n                        // Создание или переобразование по пользовательской логике функции value\n                        if(field.value)\n                            sRow[field.name] = field.value(sRow, tableRows);\n                    });\n                    if(isValid)\n                        return sRow;\n                });\n            setVisibleModals({ ...visibleModals, [type]: false });\n            notification.success({\n                message: `Добавлено ${saveRows.length} строк`\n            });\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [2]\", saveRows);\n            _addRowsToLocalTable([...tableRows, ...saveRows]);\n        }\n        else {\n            let saveRow = {...row};\n            if(type.indexOf('Group') !== -1)\n                saveRow[isGroupKey] = true;\n            else\n                saveRow[isGroupKey] = false;\n            if (customFields)\n                customFields.forEach((field) => saveRow[field.name] = field.value(saveRow, tableRows));\n            switch (type) {\n                case 'addOnServer':\n                case 'editOnServer':\n                case 'addGroupOnServer':\n                case 'editGroupOnServer':\n                    _addRowToServerTable({requestSaveRow, type, saveRow});\n                    break;\n                case 'addOnLocal':\n                case 'addGroupOnLocal':\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    _addRowToLocalTable(saveRow);\n                    break;\n                case 'editOnLocal':\n                case 'editGroupOnLocal':\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    _editRowToLocalTable(saveRow);\n                    break;\n\n                //            addGroupOnServer: false,\n                //         editGroupOnServer: false,\n                //         addGroupOnLocal: false,\n                //         editGroupOnLocal: false,\n                // case 'select':\n                case 'viewGroup':\n                case 'viewObject':\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    break;\n            }\n            // console.log(\"Modal Events => type: \", type, itemName, componentType, saveRow);\n        }\n\n    };\n\n    const _addRowToLocalTable = (row) => {\n        let saveObj = {...row};\n        if(rowKeyType === 'uuid')\n            saveObj[rowKey] = generateUUID();\n\n        // console.log('_addRowToLocalTable', tableRows);\n        _addRowsToLocalTable([...tableRows, saveObj]);\n    };\n\n    const _editRowToLocalTable = (row) => {\n        let arr = [...tableRows];\n        const rowIndex = arr.findIndex(item => item[rowKey] === row[rowKey]);\n        arr.splice(rowIndex, 1, row);\n        setTableRows(arr);\n        setTableSelectedRow(row);\n        _onChange(arr);\n    };\n\n    const _addRowsToLocalTable = (rows, keys) => {\n        // console.log('FormTable -> _addRowsToLocalTable -> rows', rows, keys);\n        setTableRows(rows);\n        if(props.selectable)\n            _onChange(keys);\n        else\n            _onChange(rows);\n    };\n\n    const _addRowToServerTable = ({requestSaveRow, type, saveRow}) => {\n        if (requestSaveRow\n            && ['addOnServer', 'editOnServer', 'addGroupOnServer', 'editGroupOnServer'].includes(type)\n        ) {\n            const method = (type === 'addOnServer' || type === 'addGroupOnServer') ? 'POST' : 'PUT';\n            // console.log(\"Modal Events => type: \", type, itemName, componentType, saveRow);\n            requestSaveRow({\n                method,\n                data: saveRow,\n            })\n                .then(response => {\n                    notification.success({\n                        message: 'Сохранение прошло успешно'\n                    });\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    tableRef && tableRef.reloadData({ filter: props.defaultFilter});\n                    // ref && ref.current && ref.current.reloadData({ filter: props.defaultFilter});\n                    // console.log('_addRowToServerTable tableRef =>', tableRef);\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\n        }\n    };\n\n    const _onRowClick = ({selected, rowData, rowIndex, rowKey}) => {\n        if(!props.selectable) {\n            setTableSelectedRow(rowData);\n            setTableSelectedRowKeys([rowKey]);\n            if(componentType === 'SelectTable')\n                _onChange([rowData]);\n        }\n        props.onRowClick && props.onRowClick({selected, rowData, rowIndex, rowKey});\n    };\n\n    const _onRowDoubleClick = ({rowData, rowIndex, rowKey}) => {\n        if (rowData[isGroupKey]) {\n            setVisibleModals({...visibleModals, viewGroup: true});\n        } else {\n            setVisibleModals({...visibleModals, viewObject: true});\n        }\n        props.onRowDoubleClick && props.onRowDoubleClick({rowData, rowIndex, rowKey});\n    };\n\n    const _onSelectedRowsChange = (keys, rows) => {\n        // console.log(\"_onSelectedRowsChange\", keys, rows);\n        if(props.selectable) {\n            setTableSelectedRow(rows[0]);\n            setTableSelectedRowKeys(keys);\n            _onChange(rows);\n        }\n    };\n\n    const _onChange = (rows) => {\n        if(rows !== undefined)\n            props.onChange(rows);\n        else\n            props.onChange(tableRows);\n    };\n\n    const getTableCls = () => {\n        let cls = [`${rtPrefix}-form-table`];\n        if (props.className)\n            cls.push(props.className);\n        return cls.join(' ');\n    };\n\n    return (\n        <div className={getTableCls()} style={props.style} >\n            <AdvancedTable\n                ref={_setTableRef}\n                {...getObjectExcludedProps(props, excludeProps)}\n                rows={tableRows}\n                setRows={setTableRows}\n                // selectedRowKeys={tableSelectedRow[rowKey] ? [tableSelectedRow[rowKey]] : []}\n                selectedRowKeys={tableSelectedRowKeys}\n                onRowClick={_onRowClick}\n                onRowDoubleClick={_onRowDoubleClick}\n                onSelectedRowsChange={_onSelectedRowsChange}\n                autoDeleteRows={false}\n                commandPanelProps={{\n                    ...props.commandPanelProps,\n                    showElements: getEvents(),// getShowElements(),\n                    onClickAdd: _onClickAddHandler,\n                    onClickAddAsCopy: _onClickAddAsCopyHandler,\n                    onClickAddGroup: _onClickAddGroupHandler,\n                    onClickEdit: _onClickEditHandler,\n                    onClickDelete: _onClickDelete,\n                    onClickDown: _onClickDownHandler,\n                    onClickUp: _onClickUpHandler,\n                }}\n                filterPanelProps={{\n                    ...props.filterPanelProps,\n                    // onApplyFilter: (filter) => console.log('filter', filter)\n                }}\n            />\n            {modals && getModals()}\n        </div>\n    );\n});\n\nFormTable.propTypes = {\n    /** Объект со свойствами Command Panel */\n    commandPanelProps: PropTypes.object,\n\n    /** Объект со свойствами Filter Panel */\n    filterPanelProps: PropTypes.object,\n\n    /**\n     * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n     * */\n\n    /** Строки по умолчанию */\n    defaultRows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ключи выделенных по умолчанию строк */\n    defaultSelectedRowKeys: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n\n    /** Значение строки поиска по умолчанию строк */\n    defaultSearchValue: PropTypes.string,\n\n    /** Объект фильтрации по умолчанию */\n    defaultFilter: PropTypes.object,\n\n    /** Сортировка по умолчанию */\n    defaultSortBy: PropTypes.shape({\n        key: PropTypes.string,\n        order: PropTypes.oneOf([SortOrder.ASC, SortOrder.DESC]),\n    }),\n\n    /**\n     * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n     * */\n\n    /** Значение строки поиска */\n    searchValue: PropTypes.string,\n\n    /** Фильтр */\n    filter: PropTypes.object,\n\n    /** Объект сортировки ({ key: 'string', order: 'asc' }).\n     * key - поле по которому сотрировать,\n     * order - направление сортировки (\"asc\", \"desc\")\n     * */\n    sortBy: PropTypes.shape({\n        key: PropTypes.string,\n        order: PropTypes.oneOf([SortOrder.ASC, SortOrder.DESC]),\n    }),\n\n    /**\n     * BASE PROPS\n     * */\n\n    /** Автоудаление строк из таблицы по кнопке в командной панели*/\n    autoDeleteRows: PropTypes.bool,\n\n    /** Поле для уникальной идентификации строки */\n    rowKey: PropTypes.string,\n\n    /** Тип поля для уникальной идентификации строки */\n    rowKeyType: PropTypes.oneOf(['uuid', 'number']),\n\n    /**\n     * VIEW PROPS\n     * */\n\n    /** Вывод когда нет данных. JSX для заглушки \"Нет данных\".  */\n    empty: PropTypes.element,\n\n    /** Отображение загрузки данных. JSX для загрузки данных. */\n    overlay: PropTypes.element,\n\n    /** Фиксированная ширина столбцов. Появится боковой скрол */\n    fixWidthColumn: PropTypes.bool,\n\n    /** Высота подвала */\n    footerHeight: PropTypes.number,\n\n    /** Отображать ли подвал */\n    footerShow: PropTypes.bool,\n\n    /** Названия футтера */\n    footerTitles: PropTypes.shape({\n        selectedRows: PropTypes.string,\n        loadedRows: PropTypes.string,\n        totalRows: PropTypes.string,\n    }),\n\n    /** Высота заголовка таблицы */\n    headerHeight: PropTypes.number,\n\n    /** Высота строки таблицы */\n    rowHeight: PropTypes.number,\n\n    /** Custom row renderer\n     * Параметры - ({ isScrolling, cells, columns, rowData, rowIndex, depth }) */\n    rowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n    /** Строки будут в зебро-стиле */\n    zebraStyle: PropTypes.bool,\n\n    /**\n     * LOAD DATA PROPS\n     * */\n\n    /** Порог в пикселях для вызова _onLoad.\n     * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n    loadThreshold: PropTypes.number,\n\n    /** Размер страницы */\n    pageSize: PropTypes.number,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n    /** Имя параметра для поиска */\n    searchParamName: PropTypes.string,\n\n    /**\n     * SELECTABLE PROPS\n     * */\n\n    /** Таблица с возможностью выбора строки */\n    selectable: PropTypes.bool,\n\n    /**\n     * TREE PROPS\n     * */\n\n    /** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\n    nodeAssociated: PropTypes.bool,\n\n    /** Ключ колонки по которой строить иерархию */\n    expandColumnKey: PropTypes.string,\n\n    /** Открыть по умолчанию вложенность до уровня N или 'All' */\n    expandDefaultAll: PropTypes.bool,\n\n    /** Загружать ноды иерархии по одной */\n    expandLazyLoad: PropTypes.bool,\n\n    /** Поле в котором хранится ссылка на родителя */\n    expandParentKey: PropTypes.string,\n\n    /**\n     * EVENTS\n     * */\n\n    /** Событие при клике на строку (только при selectable = false)\n     * Параметр - ({selected, rowData, rowIndex}) */\n    onRowClick: PropTypes.func,\n\n    /** Событие при двойном клике на строку.\n     * Параметр - ({rowData, rowIndex, rowKey}) */\n    onRowDoubleClick: PropTypes.func,\n\n    /** События при открытии / закрытии ноды\n     * Парметры - ({ expanded, rowData, rowIndex, rowKey }) */\n    onRowExpand: PropTypes.func,\n\n    /** Событие при выборе строки.\n     * Параметр - массив выбранных строе (только rowKey) */\n    onSelectedRowsChange: PropTypes.func,\n\n    /** События при открытии / закрытии ноды\n     * Парметры - (expandedRowKeys) - массив ключей открытых нод */\n    onExpandedRowsChange: PropTypes.func,\n\n    /** SELECTED PANEL */\n\n    /** Отображать ли панель выбранных элементов */\n    showSelection: PropTypes.bool,\n\n    /** Строка или функция для отображения элементов списка выбранных\n     * Строка - имя поля\n     * Функция - рендер строк.\n     * Параметры - ({ rowData, rowIndex }) */\n    rowRenderShowSelection: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.string,\n    ]),\n\n\n    /** Дополнительные пропсы для колонок */\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\n\n    /** Дополнительные поля и валидация в объекты таблицы */\n    customFields: PropTypes.arrayOf(PropTypes.object),\n\n    /** Модальные окна */\n    modals: PropTypes.arrayOf(PropTypes.object),\n\n    /** Событие об изменении объектов таблицы\n     * Параметр - (rows)*/\n    onChange: PropTypes.func,\n\n    /** implemented - только для (LocalTable + selectable) - Контроль значение из вне */\n    // value: PropTypes.arrayOf(PropTypes.object),\n\n    /** Not implemented - Задание значений по умолчанию */\n    defaultValue: PropTypes.arrayOf(PropTypes.object),\n\n    /** Классы стилей */\n    className: PropTypes.string,\n\n    /** Стили */\n    style: PropTypes.object,\n\n    /** Поле для идентификации группы */\n    isGroupKey: PropTypes.string,\n\n    /** Объект history для перемещения по путям */\n    history: PropTypes.object,\n\n    /** Функция запроса на получение конфига для таблицы */\n    requestLoadConfig: PropTypes.func,\n\n    /** Функция запроса на уделание данных */\n    requestDeleteRow: PropTypes.func,\n\n    /** Параметры объекта удаления */\n    dataDeleteRow: PropTypes.object,\n};\n\nFormTable.defaultProps = {\n    defaultRows: [],\n    defaultSelectedRowKeys: [],\n    defaultSearchValue: '',\n    defaultFilter: {},\n    defaultSortBy: {},\n\n    searchValue: '',\n    filter: {},\n    sortBy: {},\n\n    autoDeleteRows: true,\n    rowKey: 'id',\n\n    empty: empty,\n    overlay: overlay,\n    fixWidthColumn: false,\n    footerHeight: 30,\n    footerShow: false,\n    footerTitles: {\n        selectedRows: 'Выделено:',\n        loadedRows: 'Загружено записей:',\n        totalRows: 'Всего записей:',\n    },\n    headerHeight: 30,\n    rowHeight: 30,\n    zebraStyle: false,\n\n    loadThreshold: 300,\n    pageSize: 50,\n    requestLoadRows: noop,\n    requestLoadCount: noop,\n    searchParamName: 'searchLine',\n\n    selectable: false,\n\n    nodeAssociated: true,\n    expandColumnKey: undefined,\n    expandDefaultAll: true,\n    expandLazyLoad: false,\n    expandParentKey: 'parentId',\n\n    onRowClick: noop,\n    onRowDoubleClick: noop,\n    onRowExpand: noop,\n    onSelectedRowsChange: noop,\n    onExpandedRowsChange: noop,\n\n    showSelection: false,\n\n    rowKeyType: 'uuid',\n    onChange: noop,\n    isGroupKey: 'isGroup',\n};\n\nexport default FormTable;\n","import React, {useState, useEffect} from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../../redux/rtd.actions\";\nimport {getObjectExcludedProps} from '../../utils/baseUtils';\nimport moment from \"moment\";\nimport { Typography as AntTypography } from \"antd\";\nimport { getISO, toFormat } from \"../../utils/datesUtils\";\n\nexport const withStore = (Component, antFormItemProps) => {\n\n    const mapStateToProps = (store, ownProps) => {\n        const {subscribe} = ownProps;\n        if(subscribe){\n            const {name, path} = subscribe;\n            if(name && path)\n                return { [name]: objectPath.get(store, path) };\n        }\n\n        return {};\n    };\n    const mapDispatchToProps = (dispatch) =>\n        bindActionCreators({ setDateStore: setDateStore}, dispatch);\n\n    const defaultGetValueFromEvent = (valuePropName, event) => {\n        if (event && event.target && valuePropName in event.target) {\n            return event.target[valuePropName];\n        }\n        return event;\n    };\n\n    const defaultProps = {\n        trigger: 'onChange',\n        valuePropName: 'value',\n    };\n\n    const withStoreProps = { ...defaultProps, ...antFormItemProps };\n\n    return connect(mapStateToProps, mapDispatchToProps)( (props) => {\n\n        const {dispatchPath} = props;\n\n        const subscribe = props.subscribe ? props.subscribe : {};\n\n        const [subscribeProps, setSubscribeProps] = useState({});\n\n        const {trigger, getValueFromEvent, valuePropName} = withStoreProps;\n\n        const excludeProps = ['componentType', 'setDateStore', 'subscribe', subscribe.name, 'dispatchPath'];\n\n        const getValue = (...args) => {\n            let newValue;\n            if (getValueFromEvent) {\n                newValue = getValueFromEvent(...args);\n                // console.log(\"storeHOC => getValueFromEvent: \", newValue);\n            } else {\n                newValue = defaultGetValueFromEvent(valuePropName, ...args);\n                // console.log(\"storeHOC => defaultGetValueFromEvent: \", newValue);\n            }\n            return newValue;\n        };\n\n        /** Подписка на изменение props[subscribe.name] в сторе */\n        useEffect( () => {\n            if(subscribe.name) {\n                // console.log(\"storeHOC => subscribe: \", props[subscribe.name]);\n                subscribe.onChange && subscribe.onChange({value: props[subscribe.name], setSubscribeProps});\n            }\n            // console.log(\"Change Props[2]: \", props.subscribeЗф);\n        }, [props[subscribe.name]]);\n\n        useEffect(() => {\n            // dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, props.value);\n            if(dispatchPath) {\n                const newValue = props[valuePropName];\n                // console.log(\"storeHOC => dispatch: \", newValue);\n                dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, newValue);\n            }\n        }, [props]);\n\n        useEffect(() => {\n            if(subscribeProps.value) {\n                // console.log('subscribeProps.value => ', subscribeProps.value);\n                props[trigger] && props[trigger](subscribeProps.value);\n            }\n        }, [subscribeProps.value]);\n\n        const onChange = (...args) => {\n            // const newValue = getValue(...args);\n            // dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, newValue);\n            props[trigger] && props[trigger](...args);\n        };\n\n        const childProps = getObjectExcludedProps(props, excludeProps);\n        return <Component {...childProps} {...subscribeProps} {...{[trigger]: onChange }}/>\n    })\n};\n\n\nexport const DatePickerHOC = (Component) => {\n    return props => {\n        // console.log(\"DatePickerHOC => \", props);\n        if(props.value){\n            if(typeof props.value === 'string'){\n                // console.log(\"DatePickerHOC => onChange => string\");\n                props.onChange(moment(props.value), props.value);\n            }\n            // else {\n            // \tconsole.log(\"DatePickerHOC => onChange => moment\");\n            // \tprops.onChange(props.value, props.format ? toFormat(props.value,props.format) : getISO(props.value));\n            // }\n        }\n        const value = props.value ? (typeof props.value === 'string' ? moment(props.value) : props.value) : null;\n        return <Component {...props} value={value} />\n    };\n};\n\nexport const TypographyTitle = (props) =>\n    <AntTypography.Title {...props}> {props.label || props.value} </AntTypography.Title>;\n\nexport const TypographyText = (props) =>\n    <AntTypography.Text {...props}> {props.label || props.value} </AntTypography.Text>;\n\nexport const TypographyDate = (props) => {\n    const {label, value, format } = props;\n    const _value = value ? (format ? toFormat(value, format) : getISO(value)) : null;\n    return <AntTypography.Text {...props}> {label || _value} </AntTypography.Text>;\n}\n","const getTitle = (type, element) => {\n    if(element === 'Group')\n        if(type === 'edit')\n            return 'Изменение папки';\n        else\n            return 'Создание папки';\n    else\n        return 'Изменение файла';\n};\n\nconst Modal = (type, element, requestSaveRow, processBeforeSaveForm, parentLoadHandler, requestLoadRows) => {\n    // console.log(\"FolderModal\", type, requestSaveRow, processBeforeSaveForm, parentLoadHandler, requestLoadRows);\n    let selectedRow;\n    return {\n        type: `${type}${element}OnServer`,\n        title: getTitle(type, element),\n        requestSaveRow: requestSaveRow,\n        width: 500,\n        // bodyStyle: {height: 650},\n        form: {\n            name: 'FileManagerModalModal',\n            labelCol: {span: 8},\n            wrapperCol: {span: 16},\n            processBeforeSaveForm: (rawValues) => processBeforeSaveForm(rawValues, type, element),\n            loadInitData: (callBack, row) => {\n                selectedRow = row;\n                callBack(type === 'edit' ? row : null);\n            },\n            body: [\n                {\n                    componentType: 'Item',\n                    label: 'Наименование',\n                    name: 'name',\n                    rules: [\n                        {\n                            message: `Заполните наименование`,\n                            required: true,\n                        },\n                    ],\n                    child: {componentType: 'Input'},\n                },\n                type === 'edit'\n                    ? {\n                        componentType: 'Item',\n                        label: 'Родитель',\n                        name: 'parentId',\n                        child: {\n                            componentType: 'SingleSelect',\n                            widthControl: 0,\n                            heightPopup: 300,\n                            expandColumnKey: 'id',\n                            rowRender: 'name',\n                            nodeAssociated: false,\n                            expandDefaultAll: true,\n                            // (info) аналогично ({params, data})\n                            // Но поскольку тут раскрывать объект не нужно, мы можем просто передать его дальше\n                            requestLoadRows: (info) => parentLoadHandler(type, selectedRow, info),\n                            requestLoadDefault: requestLoadRows,\n                        },\n                    }\n                    : {},\n            ],\n        },\n    };\n};\n\nexport const AddFolderModal = (...args) => Modal('add', 'Group', ...args);\nexport const EditFolderModal = (...args) => Modal('edit', 'Group', ...args);\nexport const EditFileModal = (...args) => Modal('edit', '', ...args);\n\n","import {notification} from 'antd';\n\nexport const copyTextToClipboard = text => {\n\tif (!navigator.clipboard) {\n\t\tfallbackCopyTextToClipboard(text);\n\t\treturn;\n\t}\n\tnavigator.clipboard.writeText(text).then(\n\t\tfunction() {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'success',\n\t\t\t\t'Успешно',\n\t\t\t\t`[${text}] успешно копирован в буфер обмена`\n\t\t\t);\n\t\t},\n\t\tfunction(err) {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'error',\n\t\t\t\t'Ошибка',\n\t\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\n\t\t\t);\n\t\t}\n\t);\n};\n\nconst fallbackCopyTextToClipboard = text => {\n\tlet textArea = document.createElement('textarea');\n\ttextArea.value = text;\n\n\t// Avoid scrolling to bottom\n\ttextArea.style.top = '0';\n\ttextArea.style.left = '0';\n\ttextArea.style.position = 'fixed';\n\n\tdocument.body.appendChild(textArea);\n\ttextArea.focus();\n\ttextArea.select();\n\n\ttry {\n\t\tlet successful = document.execCommand('copy');\n\t\tif (successful) {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'success',\n\t\t\t\t'Успешно',\n\t\t\t\t`[${text}] успешно копирован в буфер обмена`\n\t\t\t);\n\t\t} else {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'error',\n\t\t\t\t'Ошибка',\n\t\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\n\t\t\t);\n\t\t}\n\t} catch (err) {\n\t\topenNotificationWithIcon(\n\t\t\t'error',\n\t\t\t'Ошибка',\n\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\n\t\t);\n\t}\n\tdocument.body.removeChild(textArea);\n};\n\nconst openNotificationWithIcon = (type, title, msg) => {\n\tnotification[type]({\n\t\tmessage: title,\n\t\tdescription: msg\n\t});\n};\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormTable from \"../Form/FormTable\";\nimport {Button, Upload, notification as antNotification, Spin, Typography, Tooltip} from 'antd';\nimport {\n    HomeOutlined,\n    RollbackOutlined,\n    FolderFilled,\n    FileOutlined,\n    PlusOutlined,\n    LoadingOutlined,\n    FileWordOutlined,\n    FileExcelOutlined,\n    FileImageOutlined,\n    FileMarkdownOutlined,\n    FilePdfOutlined,\n    FilePptOutlined,\n    FileTextOutlined,\n    FileZipOutlined,\n    CopyOutlined\n} from '@ant-design/icons';\nimport { AddFolderModal, EditFileModal, EditFolderModal } from \"./AddFolderModal\";\nimport { rtPrefix } from \"../../utils/variables\";\nimport { toDDMMYYYYHHMMSS } from \"../../utils/datesUtils\";\nimport { copyTextToClipboard } from \"../../utils/clipboardUtils\";\nimport { notificationError } from \"../../utils/baseUtils\";\n\nconst FileManager = props => {\n\n    const {\n        rowKey,\n        isGroupKey,\n        expandParentKey\n    } = props;\n\n    const [tableRef, setTableRef] = useState({});\n    const _setTableRef = (ref) => setTableRef(ref);\n\n    // const tableRef = React.createRef();\n\n    const [breadcrumb, setBreadcrumb] = useState([{[rowKey]: null, name: <HomeOutlined />}]);\n    const [tableFilter, setTableFilter] = useState({deleted: false, [expandParentKey]: null});\n\n\n\n    /**\n     * TABLE EVENTS\n     */\n\n    // Down to folder OR download file\n    const _onRowDoubleClick = ({rowData, rowIndex, rowKey}) => {\n        if(rowData.isGroup) {\n            loadTable([...breadcrumb, rowData], { [expandParentKey]: rowKey });\n        } else {\n            props.requestDownloadFile(rowKey)\n        }\n        props.onRowDoubleClick && props.onRowDoubleClick({rowData, rowIndex, rowKey});\n    };\n\n    // Jump to folder\n    const _onClickBreadcrumb = (parentId, index) => {\n        loadTable(breadcrumb.slice(0, index), {[expandParentKey]: parentId})\n    };\n\n    // Up to folder\n    const _onClickBack = () => {\n        if(breadcrumb.length > 1) {\n            const newBreadcrumb = breadcrumb.slice(0, breadcrumb.length - 1);\n            // setBreadcrumb(newBreadcrumb);\n            // tableRef && tableRef.reloadData({ filter: { parentId: newBreadcrumb[newBreadcrumb.length - 1].id } });\n            loadTable(newBreadcrumb, { [expandParentKey]: newBreadcrumb[newBreadcrumb.length - 1][rowKey] })\n        }\n    };\n\n    // Delete folder OR file\n    const _onClickDelete = (event, _selectedRowKeys) => {\n        if(_selectedRowKeys && _selectedRowKeys.length > 0){\n            props.requestDeleteRow({data: {[rowKey]: _selectedRowKeys[0], deleted: true}})\n                .then((response) => {\n                    antNotification.success({message: 'Файл успешно удален'});\n                    tableRef && tableRef.reloadData({filter: tableFilter});\n                })\n                .catch(error => {\n                    notificationError(error, 'Ошибка удаления файла');\n                    tableRef && tableRef.reloadData({filter: tableFilter});\n                });\n        }\n    };\n\n    /**\n     * TABLE FUNCs\n     */\n    const loadTable = (breadcrumb, filter) => {\n        setBreadcrumb(breadcrumb);\n        const newFilter = {...tableFilter, ...filter};\n        setTableFilter(newFilter);\n        tableRef && tableRef.reloadData({filter: newFilter});\n    };\n\n\n    /**\n     * MODAL FUNCs\n     */\n    const processBeforeSaveModal = (rawValues, type, element) => {\n        let values = {...rawValues};\n        if(type === 'add')\n            values[expandParentKey] = breadcrumb[breadcrumb.length - 1][rowKey];\n\n        if(element === 'Group')\n            values.extension = 'dir';\n        // console.log(\"FileManager values =>\", values);\n        return values;\n    };\n\n    const parentLoadHandler = (type, selectedRow, {params, data}) => {\n        let newData = {...data, [isGroupKey]: true};\n        if (type === 'edit') newData.owner = selectedRow && selectedRow[rowKey];\n        return props.requestLoadParent({ params, data: newData, });\n    };\n\n    // const _onChangeViewDeleted = (checked) => {\n    //     const newFilter = {...tableFilter, deleted: checked };//? undefined : checked};\n    //     setTableFilter(newFilter);\n    //     tableRef && tableRef.reloadData({filter: newFilter});\n    // };\n\n    // console.log(\"EditFolderModal\", EditFolderModal(props.requestSaveRow, processBeforeSaveForm));\n\n\n    /**\n     * UPLOAD FUNCs\n     */\n\n    const _uploadFile = (file) => {\n        // console.log('beforeUpload fileList => ', fileList);\n        notification(file, 'loading');\n        if (props.requestUploadFile) {\n            props.requestUploadFile({ file: file, [expandParentKey]: breadcrumb[breadcrumb.length - 1][rowKey] })\n                .then((response) => {\n                    notification(file, 'success');\n                    tableRef && tableRef.reloadData({ filter: tableFilter });\n                })\n                .catch(() => {\n                    notification(file, 'error');\n                    tableRef && tableRef.reloadData({ filter: tableFilter });\n                });\n        }\n        return false;\n    };\n\n    const notification = (file, type) => {\n        const notifProps = {\n            key: file.uid,\n            duration: type === 'loading' ? 0 : 5,\n            icon: type === 'loading'\n                ? <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n                : null,\n            message: <span>Загрузка файла: <Typography.Text code>{file.name}</Typography.Text></span>\n        };\n        switch (type) {\n            case 'loading':\n                antNotification.info(notifProps);\n                break;\n            case 'success':\n                antNotification.success(notifProps);\n                break;\n            case 'error':\n                antNotification.error(notifProps);\n                break;\n            case 'close':\n                antNotification.close(file.uid);\n                break;\n            default:\n                break;\n        }\n    };\n\n    /**\n     * RENDER PARAMS\n     */\n    const customColumnProps = [\n        {\n            name: 'dateCreate',\n            cellRenderer: ({cellData}) => toDDMMYYYYHHMMSS(cellData),\n        },\n        {\n            name: 'dateUpdate',\n            cellRenderer: ({cellData}) => toDDMMYYYYHHMMSS(cellData),\n        },\n        {\n            name: 'path',\n            cellRenderer: ({rowData}) =>\n                rowData[isGroupKey] ? null\n                    :\n                <Tooltip title=\"Скопировать путь к файлу\">\n                    <CopyOutlined onClick={() => copyTextToClipboard(props.pathDownloadFile(rowData[rowKey]))}/>\n                </Tooltip>,\n        },\n        {\n            name: 'name',\n            cellRenderer: ({rowData}) => {\n                const styleDiv = {display: 'flex', alignItems: 'center'};\n                let Icon;\n                let styleIcon = {marginRight: '10px', fontSize: '16px'};\n                switch (rowData.extension) {\n                    case 'dir':\n                        Icon = FolderFilled;\n                        styleIcon.color = '#3a88c9';\n                        break;\n                    case 'doc':\n                    case 'docm':\n                    case 'docx':\n                    case 'dot':\n                    case 'dotx':\n                        Icon = FileWordOutlined;\n                        styleIcon.color = '#185abc';\n                        break;\n                    case 'xlm':\n                    case 'xls':\n                    case 'xlsm':\n                    case 'xlt':\n                    case 'xltm':\n                    case 'xltx':\n                    case 'xlsx':\n                        Icon = FileExcelOutlined;\n                        styleIcon.color = '#1f7244';\n                        break;\n                    case 'png':\n                    case 'jpg':\n                    case 'jpeg':\n                    case 'tiff':\n                    case 'bmp':\n                    case 'ico':\n                    case 'gif':\n                    case 'svg':\n                        Icon = FileImageOutlined;\n                        break;\n                    case 'markdown':\n                    case 'md':\n                        Icon = FileMarkdownOutlined;\n                        styleIcon.color = '#175987';\n                        break;\n                    case 'pdf':\n                        Icon = FilePdfOutlined;\n                        styleIcon.color = '#bd1f07';\n                        break;\n                    case 'ppt':\n                        Icon = FilePptOutlined;\n                        styleIcon.color = '#be5239';\n                        break;\n                    case 'txt':\n                        Icon = FileTextOutlined;\n                        break;\n                    case 'zip':\n                        Icon = FileZipOutlined;\n                        break;\n                    default:\n                        Icon = FileOutlined;\n                }\n\n\n                return (\n                    <div style={styleDiv}>\n                        {/*{rowData.isGroup*/}\n                        {/*    ? <FolderFilled style={{ marginRight: '10px', color: '#3a88c9'}}/>*/}\n                        {/*    : <FileOutlined style={{ marginRight: '10px' }}/>*/}\n                        {/*}*/}\n                        <Icon style={styleIcon}/>\n                        {rowData.name}\n                    </div>\n                );\n            },\n        }\n    ];\n\n    const uploadProps = {\n        multiple: true,\n        showUploadList: false,\n        beforeUpload: _uploadFile\n    };\n\n    const uploadRender = () => {\n        return (\n            <Upload {...uploadProps}>\n                <Button icon={<PlusOutlined />}/>\n            </Upload>\n        )\n    };\n\n    const breadcrumbRender = () => {\n        return (\n            <span className={`${rtPrefix}-file-manager-breadcrumb ml-8`}>\n                {breadcrumb.map((item, index) =>\n                    <span\n                        key={item[rowKey]}\n                        // type=\"text\"\n                        className={`${rtPrefix}-file-manager-breadcrumb-btn`}\n                        onClick={() => _onClickBreadcrumb(item[rowKey], index + 1)}\n                    >\n                        <span>/</span><span>{item.name}</span>\n                    </span>\n                )}\n            </span>\n        )\n    };\n\n    return (\n        <FormTable\n            {...props}\n            ref={_setTableRef}\n            type={'serverSide'}\n            componentType={'FilesTable'}\n            onRowDoubleClick={_onRowDoubleClick}\n            defaultFilter={tableFilter}\n            customColumnProps={customColumnProps}\n            commandPanelProps={{\n                ...props.commandPanelProps,\n                onClickDelete: _onClickDelete,\n                systemBtnProps: {\n                    add: {\n                        actionType: 'modal',\n                        tooltip: 'Загрузить файл(ы)',\n                        render: uploadRender\n                    },\n                    addGroup: {actionType: 'modal', tooltip: 'Создать папку'},\n                    edit: {actionType: ['modal', 'modal']},\n                    delete: {}\n                },\n                leftCustomSideElement: [\n                    {\n                        componentType: 'Item',\n                        child: {\n                            componentType: 'Button',\n                            icon: <RollbackOutlined />,\n                            label: 'Back',\n                            className: 'ml-4',\n                            disabled: (breadcrumb.length === 1),\n                            onClick: _onClickBack\n                        }\n                    },\n                    {\n                        componentType: 'Item',\n                        child: {\n                            componentType: 'Custom',\n                            render: breadcrumbRender\n                        }\n                    }\n                ],\n                // rightCustomSideElement: [\n                //     {\n                //         componentType: 'Item',\n                //         label: 'View deleted',\n                //         className: 'mb-0',\n                //         child: {\n                //             componentType: 'Switch',\n                //             checked: tableFilter.deleted,\n                //             onChange: _onChangeViewDeleted\n                //         }\n                //     },\n                // ]\n            }}\n            modals={[\n                AddFolderModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows),\n                EditFolderModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows),\n                EditFileModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows)\n            ]}\n        />\n    );\n};\n\nFileManager.propTypes = {\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция запроса на получение конфига для таблицы */\n    requestLoadConfig: PropTypes.func,\n};\n\nFileManager.defaultProps = {\n    rowKey: 'id',\n    isGroupKey: 'isGroup',\n    expandParentKey: 'parentId',\n};\n\nexport default FileManager;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport FormModal from \"../Form/FormModal\";\nimport { notification, Button} from \"antd\";\nimport { notificationError } from \"../../utils/baseUtils\";\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../../redux/rtd.actions\";\n\nconst Modal = props => {\n\n    const {buttonProps, modalConfig, modalData, dispatchPath} = props;\n\n    const [visible, setVisible] = useState(false);\n    const [_modalData, _setModalData] = useState({});\n    const [_buttonProps, setButtonProps] = useState({});\n\n    const subscribe = props.subscribe ? props.subscribe : {};\n\n    const setModalData = (value) => {\n        // console.log(\"setModalData: \", value);\n        _setModalData && _setModalData(value);\n    }\n\n    useEffect(() => {\n        _setModalData(modalData);\n    }, []);\n\n    /** Подписка на изменение props[subscribe.name] в сторе */\n    useEffect( () => {\n        if(subscribe.name) {\n            // console.log(\"Modal => subscribe: \", props[subscribe.name]);\n            subscribe.onChange && subscribe.onChange({value: props[subscribe.name], setModalData, setButtonProps});\n        }\n        // console.log(\"Change Props[2]: \", props.subscribeЗф);\n    }, [props[subscribe.name]]);\n\n    const _onOpenModal = () => {\n        // console.log(\"Modal => _modalData: \", _modalData);\n        setVisible(true)\n    }\n\n    const _onCloseModal = () => {\n        setVisible(false)\n    }\n\n    const _onSaveRow = ({type, row, requestSaveRow}) => {\n        dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, row);\n\n        if (requestSaveRow\n            && ['addOnServer', 'editOnServer', 'addGroupOnServer', 'editGroupOnServer'].includes(type)\n        ) {\n            const method = (type === 'addOnServer' || type === 'addGroupOnServer') ? 'POST' : 'PUT';\n            // console.log(\"Modal Events => type: \", type, method, row, _modalData);\n            requestSaveRow({\n                method,\n                data: row,\n            })\n                .then(response => {\n                    notification.success({\n                        message: 'Сохранение прошло успешно'\n                    });\n                    _onCloseModal();\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении'));\n        } else _onCloseModal();\n    };\n\n    return (\n        <React.Fragment>\n            <Button\n                type=\"primary\"\n                {...buttonProps}\n                {..._buttonProps}\n                onClick={_onOpenModal}\n            >{buttonProps && buttonProps.label}</Button>\n            <FormModal\n                modal={modalConfig}\n                selectedRow={_modalData}\n                visible={visible}\n                setVisible={_onCloseModal}\n                saveRow={_onSaveRow}\n            />\n        </React.Fragment>\n    )\n};\n\nModal.propTypes = {\n\n    /** Свойства [Button](https://ant.design/components/button/) из Ant Design\n     * Добавлено свойство `label` с типом `ReactNode` или `string` для формирования контента кнопки*/\n    buttonProps: PropTypes.object,\n\n    /** Объект модального окна. Стандартная конфигурация. */\n    modalConfig: PropTypes.object,\n\n    /** Данные для модального окна */\n    modalData: PropTypes.object,\n\n    /** Путь в сторе куда класть данных окна после закрытия */\n    dispatchPath: PropTypes.string,\n\n    /** Объект для подписки на изменения в STORE */\n    subscribe: PropTypes.object,\n};\n\nconst mapStateToProps = (store, ownProps) => {\n    const {subscribe} = ownProps;\n    if(subscribe){\n        const {name, path} = subscribe;\n        if(name && path)\n            return { [name]: objectPath.get(store, path) };\n    }\n    return {};\n};\nconst mapDispatchToProps = (dispatch) =>\n    bindActionCreators( { setDateStore: setDateStore, }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Select from '../Select/Select';\nimport {\n\tInput,\n\tInputNumber,\n\tForm as AntForm,\n\tButton,\n\tCheckbox,\n\tSwitch,\n\tDatePicker,\n\tRadio,\n    Divider,\n} from 'antd';\nimport { getObjectExcludedProps, getValueFromMultiSelect, getValueFromSingleSelect } from \"../../utils/baseUtils\";\nimport FormTable from './FormTable';\n// import Typography from './Typography';\nimport { withStore, DatePickerHOC, TypographyTitle, TypographyText, TypographyDate } from \"./HOCs\";\nimport FileManager from \"../FileManager/FileManager\";\nimport Modal from \"../Modal/Modal\";\n\nconst excludeProps = ['child', 'componentType', 'field'];\nconst noAntItemTypes = ['Title', 'Text', 'Divider', 'Button', 'LocalTable', 'ServerTable', 'InfinityTable'];\n\nconst FormItem = (props) => {\n\n\tconst {child, field} = props;\n\tlet antFormItemProps = getObjectExcludedProps(props, excludeProps);\n\n\t// Если тип элемента Select -> добавить доп свойства к Form.Item\n    if (child && child.componentType && (child.componentType === 'SingleSelect' || child.componentType === 'MultiSelect')) {\n        antFormItemProps.valuePropName = 'defaultSelectedRowKeys';\n        antFormItemProps.getValueFromEvent = child.componentType === 'SingleSelect' ? getValueFromSingleSelect : getValueFromMultiSelect;\n        antFormItemProps.trigger = 'onChangeKeys';\n    } else if (child && child.componentType && child.componentType === 'SelectTable') {\n        // antFormItemProps.getValueFromEvent = getValueFromSelectTable;\n        // antFormItemProps.trigger = 'onRowClick';\n    }\n\n\t// console.log('FormItem props => ', props);\n\n\tconst getItem = () => {\n\t\tif (child) {\n\t\t    // const childProps = getObjectExcludedProps(child, ['componentType']);\n\t\t\tconst childProps = {...child};\n            // console.log('FormItem childProps => ', childProps);\n\t\t\tlet Component;\n\t\t\tlet placeholder;\n            switch (child.componentType) {\n\t\t\t\tcase 'Button':\n\t\t\t\t\tComponent = withStore(Button, antFormItemProps);\n\t\t\t\t\t// console.log('Props field => ', field);\n\t\t\t\t\tconst onClick = (e) => childProps.onClick && childProps.onClick(e, field);\n\t\t\t\t\treturn (<Component {...childProps} onClick={onClick}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'Title':\n\t\t\t\t\tComponent = withStore(TypographyTitle, antFormItemProps);\n\t\t\t\t\treturn (<Component {...child} componentType={child.componentType}/>);\n\t\t\t\tcase 'Text':\n\t\t\t\t\tComponent = withStore(TypographyText, antFormItemProps);\n\t\t\t\t\treturn (<Component {...child} componentType/>);\n\t\t\t\tcase 'Divider':\n\t\t\t\t\tComponent = withStore(Divider, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'Checkbox':\n\t\t\t\t\tComponent = withStore(Checkbox, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'DatePicker':\n\t\t\t\t\tComponent = withStore(DatePickerHOC(DatePicker), antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Выберите дату';\n\t\t\t\t\tconst style = {width: '100%', ...(childProps && childProps.style)};\n\t\t\t\t\treturn (<Component{...childProps} style={style} placeholder={placeholder}/>);\n\t\t\t\tcase 'DateText':\n\t\t\t\t\tComponent = withStore(TypographyDate, antFormItemProps);\n\t\t\t\t\treturn (<Component {...child} />);\n\t\t\t\tcase 'Input':\n\t\t\t\t\tComponent = withStore(Input, antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите значение';\n\t\t\t\t\treturn (<Component {...childProps} placeholder={placeholder} />);\n\t\t\t\tcase 'TextArea':\n\t\t\t\t\tComponent = withStore(Input.TextArea, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps} />);\n\t\t\t\tcase 'Password':\n\t\t\t\t\tComponent = withStore(Input.Password, antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите пароль';\n\t\t\t\t\treturn (<Component {...childProps} placeholder={placeholder}/>);\n\t\t\t\tcase 'InputNumber':\n\t\t\t\t\tComponent = withStore(InputNumber, antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите значение';\n\t\t\t\t\treturn (<Component {...childProps} style={{width: '100%'}} placeholder={placeholder}/>);\n\t\t\t\tcase 'Radio':\n\t\t\t\t\tComponent = withStore(Radio, antFormItemProps);\n\t\t\t\t\treturn <Component {...childProps}>{childProps && childProps.label}</Component>;\n\t\t\t\tcase 'RadioButton':\n\t\t\t\t\tComponent = withStore(Radio.Button, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'Switch':\n\t\t\t\t\tComponent = withStore(Switch, antFormItemProps);\n\t\t\t\t\treturn <Component {...childProps} />;\n                case \"RadioGroup\":\n                    Component = withStore(Radio.Group, antFormItemProps);\n                    return (<Component {...childProps} />);\n\t\t\t\tcase 'SingleSelect':\n                case 'MultiSelect':\n\t\t\t\t\treturn <Select {...childProps} type={child.componentType} name={antFormItemProps.name}/>;\n\t\t\t\t\t//'infinity', 'serverSide', 'localSide'\n                case 'InfinityTable':\n                    childProps.type = 'infinity';\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\n                case 'ServerTable':\n                    childProps.type = 'serverSide';\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\n                case 'LocalTable':\n                    childProps.type = 'localSide';\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\n                case 'SelectTable':\n\t\t\t\t\tchildProps.type = 'localSide';\n\t\t\t\t\treturn <FormTable {...childProps} name={props.name} componentType={child.componentType} /> ;\n\t\t\t\tcase 'FileManager':\n\t\t\t\t\treturn <FileManager {...childProps} name={props.name} />;\n\t\t\t\tcase 'Modal':\n\t\t\t\t\treturn <Modal {...childProps} name={props.name} />;\n\t\t\t\tcase 'Custom':\n\t\t\t\t\tComponent = withStore(child.render, antFormItemProps);\n\t\t\t\t\treturn <Component {...childProps}/>;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t};\n\n    if(!antFormItemProps.label)\n        return <AntForm.Item {...antFormItemProps} noStyle>{getItem()}</AntForm.Item>;\n    else\n        return <AntForm.Item {...antFormItemProps}>{getItem()}</AntForm.Item>;\n};\n\nFormItem.propTypes = {\n\tchild: PropTypes.object.isRequired\n};\n\nexport default FormItem;\n","import React from 'react';\nimport {rtPrefix} from '../../utils/variables';\nimport PropTypes from \"prop-types\";\n\nconst Layout = props => {\n\n    let itemProps = {};\n    Object.keys(props).forEach((key) =>\n        key !== 'children' ? (itemProps[key] = props[key]) : null\n    );\n\n    const getCls = () => {\n        let cls = [`${rtPrefix}-layout`];\n        itemProps.className && cls.push(itemProps.className);\n        return cls.join(' ');\n    };\n\n    return (\n        <div {...itemProps} className={getCls()}>\n            {props.children}\n        </div>\n    );\n};\n\nLayout.propTypes = {\n    /** Строка класса */\n    className: PropTypes.string,\n\n    /** Объект стиля */\n    style: PropTypes.object,\n};\n\nexport default Layout;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormItem from \"./FormItem\";\nimport Layout from \"../Layout/Layout\";\nimport { Row, Col, Tabs, Radio, Form as AntForm, Input, Space } from \"antd\";\nimport { getObjectExcludedProps } from \"../../utils/baseUtils\";\n\nconst excludeProps = [\"children\", \"componentType\"];\n\nconst FormItems = (props) => {\n    const { items } = props;\n\n    // console.log('FormItems props => ', props);\n\n    const getItems = (data, antFormListParams) => {\n\n        return (data && data.map((item, index) => {\n            let itemProps = getObjectExcludedProps(item, excludeProps);\n            // console.log('FormItems index => ', index);\n\n            switch (item.componentType) {\n                case \"Row\":\n                    return (\n                        <Row key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Row>\n                    );\n                case \"Col\":\n                    return (\n                        <Col key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Col>\n                    );\n                case \"Layout\":\n                    return (\n                        <Layout key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Layout>\n                    );\n                case \"Tabs\":\n                    return (\n                        <Tabs key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Tabs>\n                    );\n                case \"TabPane\":\n                    return (\n                        <Tabs.TabPane key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Tabs.TabPane>\n                    );\n                case \"RadioGroup\":\n                    return (\n                        <Radio.Group key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Radio.Group>\n                    );\n                case \"Item\":\n                    let _item = { ...item };\n                    let _key = index;\n                    if (antFormListParams && antFormListParams.field) {\n                        if (_item.name) {\n                            if (Array.isArray(_item.name)) {\n                                _item.name = [antFormListParams.field.name, ..._item.name];\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\n                            } else {\n                                _item.name = [antFormListParams.field.name, _item.name];\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\n                            }\n                        }\n                    }\n                    // console.log('_item ', _item.name);\n                    return <FormItem key={`${_key}`} {..._item} field={{ ...antFormListParams }}/>;\n                case \"ListItems\":\n                    return (\n                        <AntForm.List key={index} {...itemProps}>\n                            {(fields, operation) => {\n                                const param = { fields: [...fields], operation: { ...operation } };\n                                return getItems(item.children, param);\n                            }}\n                        </AntForm.List>\n                    );\n                case \"ListItem\":\n                    // console.log('antFormListParams => ', antFormListParams);\n                    return (\n                        <div key={index}>\n                            {antFormListParams && antFormListParams.fields && antFormListParams.fields.map((field, fIndex) => {\n                                // console.log('index field.key', index, field);\n                                const param = { field: { ...field }, ...antFormListParams };\n                                return <div key={field.key}>{getItems(item.children, param)} </div>;\n                            })}\n                        </div>\n                    );\n\n\n                default:\n                    return null;\n            }\n        })) || null;\n    };\n\n    return getItems(items);\n};\n\nFormItems.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default FormItems;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {noop} from '../../utils/baseUtils';\nimport {rtPrefix} from '../../utils/variables';\nimport {Input, Tooltip, Popconfirm, Modal, Button} from 'antd';\nimport {\n\tPlusOutlined,\n\tCopyOutlined,\n\tFolderAddOutlined,\n\tDeleteOutlined,\n\tEditOutlined,\n\tArrowUpOutlined,\n\tArrowDownOutlined,\n\tSettingOutlined,\n\tFilterOutlined,\n\tExclamationCircleOutlined,\n} from '@ant-design/icons';\nimport FormItems from \"../Form/FormItems\";\nconst {confirm} = Modal;\n\nconst CommandPanel = (props) => {\n\tconst {\n\t\tborderStyle,\n\t\tdefaultValueSearch,\n\t\tdeleteConfirm,\n\t\tdeleteConfirmType,\n\t\tdeleteConfirmTitle,\n\t\tdeleteConfirmDescription,\n\t\tonClickAdd,\n\t\tonClickAddAsCopy,\n\t\tonClickAddGroup,\n\t\tonClickDelete,\n\t\tonClickEdit,\n\t\tonClickUp,\n\t\tonClickDown,\n\t\tonSearch,\n\t\tshowElements,\n        systemBtnProps,\n\t\tdisabledElements,\n\t\tleftCustomSideElement,\n\t\tcenterCustomSideElement,\n\t\trightCustomSideElement,\n\t} = props;\n\n    const defaultSystemBtnProps = {\n        add: {\n            tooltip: 'Добавить',\n            onClick: onClickAdd,\n            icon: <PlusOutlined />\n        },\n        addAsCopy: {\n            tooltip: 'Добавить копированием',\n            onClick: onClickAddAsCopy,\n            icon: <CopyOutlined />\n        },\n        addGroup: {\n            tooltip: 'Добавить группу',\n            onClick: onClickAddGroup,\n            icon: <FolderAddOutlined />\n        },\n        edit: {\n            tooltip: 'Изменить',\n            onClick: onClickEdit,\n            icon: <EditOutlined />\n        },\n        delete: {\n            tooltip: 'Удалить',\n            icon: <DeleteOutlined />\n        },\n        up: {\n            tooltip: 'Переместить вверх',\n            onClick: onClickUp,\n            icon: <ArrowUpOutlined />\n        },\n        down: {\n            tooltip: 'Переместить вниз',\n            onClick: onClickDown,\n            icon: <ArrowDownOutlined />\n        },\n\t\tsearch: {\n\t\t\tplaceholder: 'Поиск',\n\t\t\tonSearch: onSearch,\n\t\t},\n        settings: {\n            tooltip: 'Настройки таблицы',\n            tooltipPlacement: 'topRight',\n            onClick: () => {},\n            icon: <SettingOutlined />\n        },\n        filter: {\n            tooltip: 'Настройки фильтров',\n            tooltipPlacement: 'topRight',\n            onClick: () => {},\n            icon: <FilterOutlined />\n        }\n    };\n\n\tconst _onClickDelete = (event) => {\n\t\tif (deleteConfirmType === 'Modal') {\n\t\t\tdeleteButtonModalConfirm();\n\t\t} else {\n\t\t\tonClickDelete(event);\n\t\t}\n\t};\n\n\tconst deleteButtonPopupConfirm = () => {\n\t\treturn (\n\t\t\t<Popconfirm\n\t\t\t\tplacement='top'\n\t\t\t\ttitle={deleteConfirmDescription}\n\t\t\t\tonConfirm={onClickDelete}\n\t\t\t\tokText='Да'\n\t\t\t\tcancelText='Нет'\n\t\t\t>\n\t\t\t\t{renderDeleteBtn(false)}\n\t\t\t</Popconfirm>\n\t\t);\n\t};\n\n    const deleteButtonModalConfirm = () => {\n\t\tconfirm({\n\t\t\ttitle: deleteConfirmTitle,\n\t\t\ticon: <ExclamationCircleOutlined />,\n\t\t\tcontent: deleteConfirmDescription,\n\t\t\tcentered: true,\n\t\t\tokText: 'Ок',\n\t\t\tcancelText: 'Отмена',\n\t\t\tonOk() {\n\t\t\t\tonClickDelete();\n\t\t\t},\n\t\t});\n\t};\n\n    const renderDeleteBtn = (withOnClick) => {\n        const genProps = {...defaultSystemBtnProps['all'], ...systemBtnProps['all']};\n        const btnProps = {...defaultSystemBtnProps['delete'], ...systemBtnProps['delete']};\n\n        return (\n            <Tooltip title={btnProps.tooltip}>\n                <Button\n                    {...genProps}\n                    className={`${rtPrefix}-btn`}\n                    icon={btnProps.icon}\n                    onClick={withOnClick ? _onClickDelete : null}\n                    disabled={disabledElements.includes('delete')}\n                />\n            </Tooltip>\n        );\n    };\n\n    const renderBtn = (type) => {\n        const genProps = {...defaultSystemBtnProps['all'], ...systemBtnProps['all']};\n        const btnProps = {...defaultSystemBtnProps[type], ...systemBtnProps[type]};\n\n        if(showElements.includes(type)) {\n            if(btnProps.render)\n                return btnProps.render({\n                    disabled: disabledElements.includes(type),\n                    onClick: btnProps.onClick,\n\t\t\t\t\tonSearch: btnProps.onSearch\n\t\t\t\t});\n             else\n             \tif (type === 'search')\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Input.Search\n\t\t\t\t\t\t\tdisabled={disabledElements.includes(type)}\n\t\t\t\t\t\t\tdefaultValue={defaultValueSearch}\n\t\t\t\t\t\t\tplaceholder={btnProps.placeholder}\n\t\t\t\t\t\t\tonSearch={btnProps.onSearch}\n\t\t\t\t\t\t\tclassName={'search'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\telse\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Tooltip title={btnProps.tooltip} placement={btnProps.tooltipPlacement ? btnProps.tooltipPlacement : 'top'}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t{...genProps}\n\t\t\t\t\t\t\t\tclassName={`${rtPrefix}-btn`}\n\t\t\t\t\t\t\t\ticon={btnProps.icon}\n\t\t\t\t\t\t\t\tonClick={btnProps.onClick}\n\t\t\t\t\t\t\t\tdisabled={disabledElements.includes(type)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t)\n        }\n        else\n            return null\n    };\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{showElements.length ||\n\t\t\tleftCustomSideElement ||\n\t\t\tcenterCustomSideElement ||\n\t\t\trightCustomSideElement ? (\n\t\t\t\t<div\n\t\t\t\t\tclassName={`${rtPrefix}-command-panel border-${borderStyle}`}\n\t\t\t\t>\n\t\t\t\t\t<div className={'left-system-side'}>\n                        {renderBtn('add')}\n                        {renderBtn('addAsCopy')}\n                        {renderBtn('addGroup')}\n                        {renderBtn('edit')}\n\n\t\t\t\t\t\t{showElements.includes('delete')\n\t\t\t\t\t\t\t? deleteConfirm\n\t\t\t\t\t\t\t\t? deleteConfirmType === 'Popup'\n\t\t\t\t\t\t\t\t\t? deleteButtonPopupConfirm()\n\t\t\t\t\t\t\t\t\t: renderDeleteBtn(true)\n\t\t\t\t\t\t\t\t: renderDeleteBtn(true)\n\t\t\t\t\t\t\t: null}\n\n                        {renderBtn('up')}\n                        {renderBtn('down')}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'left-custom-side'}>\n\t\t\t\t\t\t{leftCustomSideElement ? <FormItems items={leftCustomSideElement} /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'center-custom-side'}>\n\t\t\t\t\t\t{centerCustomSideElement ? <FormItems items={centerCustomSideElement} /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'right-custom-side'}>\n\t\t\t\t\t\t{rightCustomSideElement ? <FormItems items={rightCustomSideElement} /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'right-system-side'}>\n\t\t\t\t\t\t{renderBtn('search')}\n                        {renderBtn('settings')}\n                        {renderBtn('filter')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n};\n\nCommandPanel.propTypes = {\n\t/** Центральный кастомный элемент командной панели */\n\tcenterCustomSideElement: PropTypes.arrayOf(PropTypes.object), // PropTypes.element,\n\n\t/** Тип бордера панели (по умолчанию 'bottom')\n\t * ['all', 'none', 'top', 'left', 'bottom', 'right', 'top-bottom', 'left-right'] */\n\tborderStyle: PropTypes.oneOf([\n\t\t'all',\n\t\t'none',\n\t\t'top',\n\t\t'left',\n\t\t'bottom',\n\t\t'right',\n\t\t'top-bottom',\n\t\t'left-right',\n\t]),\n\n\t/** Значение по умолчанию для строки поиска */\n\tdefaultValueSearch: PropTypes.string,\n\n\t/** Нужно ли делать подтверждение на кнопке удалить */\n\tdeleteConfirm: PropTypes.bool,\n\n\t/** Тип подтверждения удаления 'Popup' / 'Modal' */\n\tdeleteConfirmType: PropTypes.oneOf(['Popup', 'Modal']),\n\n\t/** Текст подтверждения на удаление элемента */\n\tdeleteConfirmTitle: PropTypes.string,\n\n\t/** Текст подтверждения на удаление элемента */\n\tdeleteConfirmDescription: PropTypes.string,\n\n\t/** Массив элементов командной панели для блокировки\n     ['add', 'addAsCopy', 'addGroup', 'delete', 'edit', 'up', 'down', 'search', 'settings', 'filter'] */\n\tdisabledElements: PropTypes.arrayOf(PropTypes.string),\n\n\t/** Левый кастомный элемент командной панели */\n\tleftCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Событие при нажатии на кнопку \"Добавить\" */\n\tonClickAdd: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Добавить копированием\" */\n\tonClickAddAsCopy: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Добавить группу\" */\n\tonClickAddGroup: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Удалить\" */\n\tonClickDelete: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Переместить вниз\" */\n\tonClickDown: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Изменить\" */\n\tonClickEdit: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Переместить вверх\" */\n\tonClickUp: PropTypes.func,\n\n\t/** Событие при поиске */\n\tonSearch: PropTypes.func,\n\n\t/** Правый кастомный элемент командной панели */\n\trightCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Массив элементов командной панели, которые надо отобразить\n     ['add', 'addAsCopy', 'addGroup', 'delete', 'edit', 'up', 'down', 'search', 'settings', 'filter'] */\n\tshowElements: PropTypes.arrayOf(PropTypes.string),\n\n    /** Объект кастомизации системных кнопок\n     { [btnType]: { tooltip: <String>, icon: <Icon />, render: ({disabled, onClick}) => <Component /> } } */\n    systemBtnProps: PropTypes.object\n};\n\nCommandPanel.defaultProps = {\n\tcenterCustomSideElement: null,\n\tborderStyle: 'bottom',\n\tdefaultValueSearch: undefined,\n\tdeleteConfirm: true,\n\tdeleteConfirmType: 'Modal',\n\tdeleteConfirmTitle: 'Подтвержение удаления',\n\tdeleteConfirmDescription: 'Вы действительно хотите удалить?',\n\tdisabledElements: [],\n\tleftCustomSideElement: null,\n\tonClickAdd: noop,\n\tonClickAddAsCopy: noop,\n\tonClickAddGroup: noop,\n\tonClickDelete: noop,\n\tonClickEdit: noop,\n\tonClickUp: noop,\n\tonClickDown: noop,\n\tonSearch: noop,\n\trightCustomSideElement: null,\n\tshowElements: [],\n    systemBtnProps: {},\n};\nexport default CommandPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '../Table/Table';\n\n/**\n * ### Список / Дерево.\n */\nconst List = (props) => {\n\tconst {rowKey, rowRender, title} = props;\n\n\tconst columns = [\n\t\t{\n\t\t\tkey: rowKey,\n\t\t\ttitle: title,\n\t\t\tdataKey: rowKey,\n\t\t\twidth: 500,\n\t\t\tcellRenderer:\n\t\t\t\ttypeof rowRender === 'function'\n\t\t\t\t\t? rowRender\n\t\t\t\t\t: ({rowData}) => <div>{rowData[rowRender]}</div>,\n\t\t},\n\t];\n\treturn <Table {...props} columns={columns} headerHeight={title ? 30 : 0} />;\n};\n\nList.propTypes = {\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { cellData, columns, column, columnIndex, rowData, rowIndex, container, isScrolling }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n\t/** Заголовок списка (по умолчанию скрыт)*/\n\ttitle: PropTypes.string,\n};\n\nList.defaultProps = {\n\trowKey: 'id',\n\trowRender: 'id',\n\ttitle: undefined,\n};\n\nexport default List;\n","import objectPath from 'object-path';\nimport {actionTypes} from './rtd.action.types';\n\nconst rtdReducer = (state = {}, action) => {\n    switch (action.type) {\n        case actionTypes.INIT_STORE: {\n            const {path} = action.payload;\n            // console.log(\"INIT_TABLE_STORE: \", path);\n            let newState = {...state};\n            objectPath.set(newState, path, {});\n            return newState;\n        }\n        case actionTypes.SET_DATA_STORE: {\n            const {path, row} = action.payload;\n\n            let newState = {...state};\n            objectPath.set(newState, path, row); // obj.a is now {}\n\n            console.log(\"Store change: \", path, row);\n            // console.group(\"Store\");\n            // console.log(\"Store: \", newState);\n            // console.log(\"New Data: \", path, row);\n            // console.groupEnd();\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\nexport default rtdReducer;\n","import { notification } from \"antd\";\nimport { notificationError } from \"./baseUtils\";\n\nexport const executeRequest = (request) => (options) => request(options)\n    .then(response => {\n        notification.success({\n            message: \"Сохранение прошло успешно\"\n        });\n    })\n    .catch(error => notificationError(error, 'Ошибка при сохранении') );","import {classic, declarative} from './components/declarative';\n\nconst components = { Form: classic.Form };\n\nexport {components, classic, declarative}\n\n/** deprecated */\n// Базовые копоненты\nexport {default as CommandPanel} from './components/deprecated/CommandPanel/CommandPanel';\nexport {default as FilterPanel} from './components/deprecated/FilterPanel/FilterPanel';\nexport {default as Table} from './components/deprecated/Table/Table';\nexport {default as AdvancedTable} from './components/deprecated/AdvancedTable/AdvancedTable';\nexport {default as List} from './components/deprecated/List/List';\nexport {default as Select} from './components/deprecated/Select/Select';\nexport {default as SingleDate} from './components/deprecated/SingleDate/SingleDate';\nexport {default as DateRange} from './components/deprecated/DateRange/DateRange';\n\n// Компоненты формы\nexport {default as Form} from './components/deprecated/Form/Form';\nexport {default as FileManager} from './components/deprecated/FileManager/FileManager';\nexport {default as Modal} from './components/deprecated/Modal/Modal';\n\n// Store\nexport { default as rtdReducer} from './redux/rtd.reducer';\nexport {setDateStore} from './redux/rtd.actions';\n\n// Utils\nexport {notificationError} from './components/utils/baseUtils'\nexport { executeRequest } from \"./components/utils/api\";\nexport * from './components/utils/datesUtils';\n\n\n\n\n"],"names":["APP_TIME_OFFSET","getMomentFromStringByFormat","date","format","moment","utcOffset","getMomentWithOffset","getMomentWithOffsetTruncateDay","startOf","toFormat","dateString","mom","isValid","toDDMMYYYYdot","toDDMMYYYYdotAltDashDash","toDDMMYYYYHHMMSS","toDDMMYYYYdash","getISO","toISOString","types","INIT_STORE","SET_DATA_STORE","setDateStore","path","row","type","actionTypes","payload","noop","flatten","arrayOfArrays","reduce","flattened","item","concat","Array","isArray","getTableRowObjects","data","rowKeys","map","children","length","getTableRowKeys","rowKey","findNodeByRowKey","rowValue","node","i","_findNodeByRowKey","currentNode","value","currentChild","result","generateUUID","replace","c","crypto","getRandomValues","Uint8Array","toString","getValueFromSingleSelect","name","keys","getValueFromMultiSelect","getObjectExcludedProps","object","exclude","returnObject","Object","forEach","key","includes","undefined","notificationError","error","message","response","console","status","errorDescription","description","dispatchToStore","dispatch","extraData","timestamp","useMounted","React","useState","isMounted","setIsMounted","useEffect","withStore","Component","antFormItemProps","mapStateToProps","store","ownProps","subscribe","state","objectPath","get","dispatchExtraData","mapDispatchToProps","bindActionCreators","defaultProps","trigger","valuePropName","withStoreProps","connect","props","componentType","subscribeProps","setSubscribeProps","excludeProps","onChange","_value","trim","_onSearch","searchLine","e","preventDefault","childProps","onSearchProps","onSearch","rtPrefix","DatePicker","style","width","TypographyDate","label","Button","onClick","field","renderClassicWithLabel","Custom","renderClassic","render","FormHeader","FormBody","cls","noPadding","push","scrollable","join","FormFooter","TabPane","className","FormItem","child","renderClassicByName","itemProps","propTypes","PropTypes","isRequired","FormItems","items","getItems","antFormListParams","index","_item","_key","fieldKey","fields","operation","param","fIndex","renderDeclarativeByName","arrayOf","Form","loadInitData","header","body","footer","autoSaveForm","requestSaveForm","methodSaveForm","processBeforeSaveForm","loaded","setLoaded","antFormProps","setAntFormProps","initFormData","setInitFormData","_setInitFormData","antForm","form","useForm","getBodyCls","onFinish","rawValues","values","saveObject","log","method","then","success","catch","onFinishFailed","errorInfo","Header","Footer","height","initialValues","bool","func","string","Layout","getCls","Switcher","_setValue","empty","overlay","fontSize","SelectionHead","column","container","onSelectAll","selectedRowKeys","selectAll","_handleChange","rowObjects","filter","totalLength","selectLength","checked","selected","getRowChildren","findBrothers","selfItem","parentKey","arr","parentAnalysis","rowData","nodeAssociated","treeData","indeterminateRowKeys","_selectedRowKeys","_indeterminateRowKeys","currentRowData","parentExist","lastTypeSelect","typeSelect","nextSquare","indeterminateBrothers","selectedBrothers","allBrothers","indexOf","splice","indexS","indexI","onChangeSelectionCell","rowIndex","rows","rowChildren","element","Set","_selectedRowObjects","_selectedRow","_selectAll","SelectionCell","det","SelectionList","selectedRowObjects","rowRender","onClickDropSelect","oneOfType","Table","forwardRef","ref","hasMore","setHasMore","loading","setLoading","_rows","_setRows","setSelectedRowKeys","_searchValue","setSearchValue","_filter","setFilter","_sortBy","setSortBy","setSelectAll","setIndeterminateRowKeys","_expandedRowKeys","setExpandedRowKeys","_footerShow","_setFooterShow","_totalCountRows","setTotalCountRows","tableRef","useRef","columns","infinityMode","editMode","defaultRows","defaultSelectedRowKeys","defaultSearchValue","defaultFilter","defaultSortBy","setRows","searchValue","sortBy","customFields","fixWidthColumn","headerHeight","rowHeight","rowRenderer","zebraStyle","estimatedRowHeight","rowBordered","loadThreshold","pageSize","requestLoadRows","requestLoadCount","searchParamName","selectable","expandColumnKey","expandDefaultAll","expandLazyLoad","expandParentKey","onRowClick","onRowDoubleClick","onRowExpand","onSelectedRowsChange","onExpandedRowsChange","showSelection","rowRenderShowSelection","dispatchPath","footerProps","selectedDispatchPath","rowsDispatchPath","rowDoubleClickDispatchPath","_setRowsHandler","_setSelectedRowsHandler","setFilterHandler","showElements","leftCustomSideElement","centerCustomSideElement","rightCustomSideElement","flatRows","selectedRow","ii","_dataProcessing","reload","reloadData","current","onChangeObject","reloadTable","addRows","_addRows","addRow","_addRow","addRowAsCopy","_addRowAsCopy","editRow","_editRow","removeRow","_removeRow","moveUpRow","_moveUpRow","moveDownRow","_moveDownRow","_setSubscribeProps","rowsDispatch","selectedKeys","selectedObjects","selectedDispatch","rowDoubleClickDispatch","onTableEventsDispatch","nameEvent","dp","appendParams","scrollToRow","__sortBy","__filter","__searchValue","params","expandRow","pageNum","Math","floor","page","size","sort","order","dataQuery","newRows","_onRowClick","_rowSelectAfterClick","_onRowDoubleClick","newRowObject","_getSelectionColumnProps","_rowEventHandlers","onDoubleClick","_onColumnSort","loadParams","_footer","selectedTitle","loadedTitle","totalTitle","_rowClassName","rowClassName","onEndReached","_onChangeSelectHandler","_onSelectAllHandler","_getColumns","selectColumn","headerRenderer","cellRenderer","flexShrink","resizable","frozen","_onExpandedRowsChange","expandedRowKeys","_onRowExpand","expanded","allChildKeys","loop","callback","saveRows","sRow","validate","_localRows","_row","event","newRowIndex","_getNewIndexRow","_changeIndexRow","oldIndex","newIndex","_onClickDropSelectHandler","dropObject","newSelectedKeys","number","shape","oneOf","customColumnProps","cellBordered","requestLoadConfig","ConfigLoader","tableConfig","setTableConfig","cleanupFunction","loadData","configParser","r","config","_columns","colProps","find","alias","title","dataKey","align","sortable","hidden","visible","headerClassName","cellData","_defaultFilter","hierarchical","hierarchyLazyLoad","hierarchyField","split","hierarchyView","Select","optionConverter","options","widthControl","mode","_hasMore","_setHasMore","_loading","_setLoading","_options","_setOptions","isEndReached","setIsEndReached","_setSortBy","_setFilter","_setSearchValue","_isSelectAll","_setIsSelectAll","_loadOptions","preValue","getPageNum","getSort","getSearchValue","requestOptions","option","onScroll","scrollTopMax","nativeEvent","target","scrollTop","_onChangeSelectAll","optionsValues","_onChange","getSelectAllCls","omittedValues","menu","disabled","TreeSelect","_treeData","_setTreeData","_optionConverter","serverModalTypes","localModalTypes","allModalTypes","getDefaultFooterProps","modal","okText","cancelText","modalTitle","okType","Modal","buttonProps","toolTipProps","modalConfig","modalData","modalProps","setVisible","_modalData","_setModalData","_buttonProps","setButtonProps","setModalData","openModal","_onOpenModal","closeModal","_onCloseModal","onFinishHandler","saveObj","startsWith","requestSaveRow","onOk","onFinishFailedHandler","loadInitDataHandler","callBack","formConfig","_onCancelHandler","onCancel","defaultFooter","cancelButtonProps","htmlType","okButtonProps","padding","bodyStyle","requestUploadFile","dataObject","onCompletedUpload","onFailedUpload","uploadProps","UploadFile","_uploadFile","file","notification","notifProps","uid","duration","icon","info","close","defaultUploadProps","multiple","showUploadList","beforeUpload","renderClassicWithComponentType","componentName","classic","renderDeclarative","renderFormItemComponent","componentProps","Item","noStyle","ComponentClassic","StoreComponent","ComponentClassicWithLabel","ComponentClassicWithPlaceholder","placeholder","_placeholder","ComponentClassicWithOutStore","classicComponents","RtForm","FormList","List","Space","Row","Col","RtLayout","Tabs","RtTabPane","withComponentType","RtButton","Title","Text","Divider","Checkbox","RtDatePicker","DateText","Input","Search","TextArea","Password","InputNumber","Switch","RadioGroup","Group","RtSelect","RtTreeSelect","RtTable","RtModal","RtSwitcher","RtUploadFile","obj","declarative","DateRange","mounted","setMounted","startValue","setStartValue","endValue","setEndValue","nameStart","nameEnd","dateFormat","valueStart","valueEnd","showTime","defaultValueStart","defaultValueEnd","disabledStartDate","valueOf","disabledEndDate","onStartChange","onEndChange","locale","SingleDate","setValue","defaultValue","_onChangePicker","FilterPanel","applyFilterTooltip","applyFilterSize","applyFilterRender","borderStyle","onChangeFilter","onApplyFilter","configFilter","resetFilterRender","resetFilterTooltip","resetFilterSize","_onChangeData","_applyFilter","_resetFilter","getPanelCls","findIndex","marginLeft","autoDeleteRows","footerHeight","footerShow","footerTitles","commandPanelProps","CommandPanel","filterPanelProps","setReloadTable","setRowsHandler","unshift","_getDisabledElementsOfCommandPanel","_disabledElements","disabledElements","_onClickAddAsCopy","onClickAddAsCopy","_onClickEdit","onClickEdit","_onClickDelete","onClickDelete","_onClickUp","onClickUp","_onClickDown","onClickDown","_onChangeFilter","_onApplyFilter","selectedRows","loadedRows","totalRows","Paragraph","_selectedRowData","_setSelectedRowData","isSelectOpened","setIsSelectOpened","isClickInSelect","setIsClickInSelect","widthPopup","heightPopup","onChangeKeys","requestLoadDefault","searchable","setSelectedRowData","loadSelectedObject","request","srk","findRow","window","addEventListener","handleMouseClick","removeEventListener","onClosePopup","_getHeadCls","_getHeadText","_getPopupCls","_getPopupStyle","defRowsLen","getEvents","systemBtnProps","_SingleSelectRow","contains","onOpenPopup","onClickClear","AdvancedTable","setConfig","configData","columnsByConfig","getDefaultFilter","FormModal","saveRow","_onLoadInitData","FormTable","addOnServer","editOnServer","addOnLocal","editOnLocal","addGroupOnServer","editGroupOnServer","addGroupOnLocal","editGroupOnLocal","select","viewGroup","viewObject","visibleModals","setVisibleModals","tableRows","setTableRows","tableSelectedRowKeys","setTableSelectedRowKeys","tableSelectedRow","setTableSelectedRow","setTableRef","_setTableRef","_ref","rowKeyType","modals","isGroupKey","history","requestDeleteRow","dataDeleteRow","cmdProps","_addRowsToLocalTable","getModals","_onSaveRow","isExistCmdBtn","btnType","equalsActionTypeCmdBtn","actionType","aTypes","_onClickAddHandler","location","pathname","_onClickAddAsCopyHandler","_addRowToLocalTable","_onClickAddGroupHandler","_onClickEditHandler","deleteData","_onClickUpHandler","_onClickDownHandler","selectRows","tRow","_addRowToServerTable","_editRowToLocalTable","_onSelectedRowsChange","getTableCls","onClickAdd","onClickAddGroup","SortOrder","ASC","DESC","getValueFromEvent","newValue","DatePickerHOC","TypographyTitle","TypographyText","getTitle","parentLoadHandler","labelCol","span","wrapperCol","rules","required","AddFolderModal","args","EditFolderModal","EditFileModal","copyTextToClipboard","navigator","clipboard","fallbackCopyTextToClipboard","text","writeText","openNotificationWithIcon","err","textArea","document","createElement","top","left","position","appendChild","focus","successful","execCommand","removeChild","msg","FileManager","breadcrumb","setBreadcrumb","deleted","tableFilter","setTableFilter","isGroup","loadTable","requestDownloadFile","_onClickBreadcrumb","parentId","slice","_onClickBack","newBreadcrumb","newFilter","processBeforeSaveModal","extension","newData","owner","requestLoadParent","pathDownloadFile","styleDiv","display","alignItems","Icon","styleIcon","marginRight","FolderFilled","color","FileWordOutlined","FileExcelOutlined","FileImageOutlined","FileMarkdownOutlined","FilePdfOutlined","FilePptOutlined","FileTextOutlined","FileZipOutlined","FileOutlined","uploadRender","breadcrumbRender","add","tooltip","addGroup","edit","delete","getItem","confirm","defaultValueSearch","deleteConfirm","deleteConfirmType","deleteConfirmTitle","deleteConfirmDescription","defaultSystemBtnProps","addAsCopy","up","down","search","settings","tooltipPlacement","deleteButtonModalConfirm","deleteButtonPopupConfirm","renderDeleteBtn","content","centered","withOnClick","genProps","btnProps","renderBtn","rtdReducer","action","newState","set","executeRequest","components"],"mappings":"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"}