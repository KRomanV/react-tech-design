{"version":3,"file":"index.es.js","sources":["../src/redux/rtd.action.types.js","../src/redux/rtd.actions.js","../src/components/utils/baseUtils.js","../src/components/utils/variables.js","../src/components/deprecated/Table/defaultSettings.js","../src/components/deprecated/Table/Selectable/SelectionHead.js","../src/components/deprecated/Table/Selectable/SelectionCell.js","../src/components/utils/datesUtils.js","../src/components/deprecated/DateRange/DateRange.js","../src/components/deprecated/SingleDate/SingleDate.js","../src/components/deprecated/FilterPanel/FilterPanel.js","../src/components/deprecated/Table/SelectionList/SelectionList.js","../src/components/deprecated/Table/Table.js","../src/components/deprecated/Select/Select.js","../src/components/deprecated/AdvancedTable/AdvancedTable.js","../src/components/deprecated/Form/Form.js","../src/components/deprecated/Form/FormModal.js","../src/components/deprecated/Form/FormTable.js","../src/components/deprecated/Form/HOCs.js","../src/components/deprecated/FileManager/AddFolderModal.js","../src/components/utils/clipboardUtils.js","../src/components/deprecated/FileManager/FileManager.js","../src/components/deprecated/Modal/Modal.js","../src/components/deprecated/Form/FormItem.js","../src/components/deprecated/Layout/Layout.js","../src/components/deprecated/Form/FormItems.js","../src/components/deprecated/CommandPanel/CommandPanel.js","../src/components/deprecated/List/List.js","../src/components/deprecated/index.js","../src/components/core/withStore.js","../src/components/Form/FormItem.js","../src/components/Form/FormItems.js","../src/components/Form/Form.js","../src/components/Select/Select.js","../src/components/TreeSelect/TreeSelect.js","../src/components/UploadFile/UploadFile.js","../src/components/Table/ReactBaseTable/defaultSettings.js","../src/components/Table/ReactBaseTable/Selectable/SelectionHead.js","../src/components/Table/ReactBaseTable/Selectable/SelectionCell.js","../src/components/Table/ReactBaseTable/SelectionList/SelectionList.js","../src/components/Table/ReactBaseTable/Table.js","../src/components/Table/ReactBaseTable/ConfigLoader.js","../src/components/Table/AntTable/HeaderCell.js","../src/components/Table/AntTable/HeaderRow.js","../src/components/Table/AntTable/BodyCell.js","../src/components/Table/AntTable/Table.js","../src/components/Table/AntTable/ConfigLoader.js","../src/components/Modal/Modal.js","../src/components/Dashboard/Panels/Logs.js","../src/components/Dashboard/Panels/LineChart.js","../src/components/Dashboard/Dashboard.js","../src/redux/rtd.reducer.js","../src/components/utils/api.js"],"sourcesContent":["const types =\n{\n    INIT_STORE: 'INIT_STORE',\n    SET_DATA_STORE: 'SET_DATA_STORE',\n};\n\nexport {types as actionTypes};\n","import {actionTypes} from './rtd.action.types';\n\nexport const setDataStore = (path, row) => ({\n    type: actionTypes.SET_DATA_STORE,\n    payload: {path, row}\n});\n","import React from 'react';\nimport {notification} from 'antd';\nimport moment from \"moment\";\nimport {setDataStore} from '../../redux/rtd.actions';\n\nexport const noop = () => {};\n\nexport const flatten = (arrayOfArrays) =>\n\tarrayOfArrays.reduce(\n\t\t(flattened, item) =>\n\t\t\tflattened.concat(Array.isArray(item) ? flatten(item) : [item]),\n\t\t[]\n\t);\n\nexport const getTableRowObjects = (data) => {\n\tconst rowKeys = data.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item, getTableRowObjects(item.children)];\n\t\t}\n\t\treturn item;\n\t});\n\treturn rowKeys;\n};\n\nexport const getTableRowKeys = (data, rowKey) => {\n\tconst rowKeys = data.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item[rowKey], getTableRowKeys(item.children, rowKey)];\n\t\t}\n\t\treturn item[rowKey];\n\t});\n\treturn rowKeys;\n};\n\nexport const findNodeByRowKey = (data, rowKey, rowValue) => {\n\tlet node = {};\n\tlet item = {};\n\tfor (let i = 0; i < data.length; i++) {\n\t\titem = _findNodeByRowKey(data[i], rowKey, rowValue);\n\t\tif (item !== false) return item;\n\t}\n\treturn node;\n};\n\nconst _findNodeByRowKey = (currentNode, rowKey, value) => {\n\tlet i, currentChild, result;\n\n\tif (value === currentNode[rowKey]) {\n\t\treturn currentNode;\n\t} else {\n\t\tif (currentNode.children) {\n\t\t\tfor (i = 0; i < currentNode.children.length; i += 1) {\n\t\t\t\tcurrentChild = currentNode.children[i];\n\t\t\t\tresult = _findNodeByRowKey(currentChild, rowKey, value);\n\t\t\t\tif (result !== false) return result;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n};\n\nexport const generateUUID = () => {\n\treturn ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n\t\t(\n\t\t\tc ^\n\t\t\t(crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n\t\t).toString(16)\n\t);\n};\n\n\nexport const getValueFromSingleSelect = (name, keys) => (keys && keys.length > 0) ? keys[0] : null;\n\nexport const getValueFromMultiSelect = (name, keys) => (keys && keys.length > 0) ? keys : null;\n\nexport const getValueFromSelectTable = (rows) => {\n    if (rows && rows.length > 0) return rows[0];\n    else return null;\n};\n\nexport const getObjectExcludedProps = (object, exclude) => {\n    let returnObject = {};\n    Object.keys(object).forEach((key) =>\n        !exclude.includes(key) ? (returnObject[key] = object[key]) : undefined // было null\n    );\n    return returnObject;\n};\n\nexport const notificationError = (error, message) => {\n\tif (error.response) {\n\t\tconsole.error(error.response.status, error.response.data);\n\t\tconst errorDescription = (error.response.data && error.response.data.error)\n\t\t\t? error.response.data.error\n\t\t\t: \"Нет описания ошибки\";\n\t\tnotification.error({\n\t\t\tmessage: `[${error.response.status}] ${message}`,\n\t\t\tdescription: errorDescription,\n\t\t});\n\t} else {\n\t\tconsole.error(error);\n\t\tnotification.error({\n\t\t\tmessage: 'Не удалось детектировать ошибку. См. console.error',\n\t\t});\n\t}\n};\n\nexport const dispatchToStore = ({dispatch, setDataStore, value, extraData}) => {\n\tif(dispatch.path) {\n\t\t// console.log(\"storeHOC => dispatchToStore\", dispatch, setDataStore);\n\t\tif(dispatch.type === 'event')\n\t\t\tsetDataStore && setDataStore(dispatch.path,  {\n\t\t\t\ttimestamp: moment(),\n\t\t\t\t// type: dispatch.type,\n\t\t\t\tvalue: value,\n\t\t\t\textraData: extraData\n\t\t\t});\n\t\telse\n\t\t\tsetDataStore && setDataStore(dispatch.path, value);\n\t}\n}\nexport const dispatchToStoreEx = ({dispatch, path, type, value}) => {\n\tif(type === 'event'){\n\t\tdispatch(\n\t\t\tsetDataStore(path, {\n\t\t\t\ttimestamp: moment(),\n\t\t\t\tvalue\n\t\t\t})\n\t\t);\n\t}\n\tdispatch( setDataStore(path, value) );\n}\n\n\nexport function useMounted() {\n\tconst [isMounted, setIsMounted] = React.useState(false)\n\n\tReact.useEffect(() => {\n\t\tsetIsMounted(true)\n\t}, [])\n\treturn isMounted\n}\n\nexport const getSortBy = (clientSortBy, serverSortBy, dataIndex) => {\n\tif (clientSortBy && clientSortBy.key === dataIndex) {\n\t\treturn [\n\t\t\tclientSortBy,\n\t\t\tclientSortBy.order === \"asc\" ? \"ascend\" : \"descend\"\n\t\t];\n\t} else if (serverSortBy) {\n\t\treturn [\n\t\t\t{ key: dataIndex, order: serverSortBy },\n\t\t\tserverSortBy === \"asc\" ? \"ascend\" : \"descend\"\n\t\t];\n\t} else\n\t\treturn [undefined, undefined];\n};\n","export const rtPrefix = 'rt';\n","import {Spin} from 'antd';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport React from 'react';\n\nexport const empty = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<span>Нет данных</span>{' '}\n\t</div>\n);\n\nexport const overlay = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<Spin\n\t\t\ttip='Загрузка...'\n\t\t\tindicator={<LoadingOutlined style={{fontSize: 24}} spin />}\n\t\t/>{' '}\n\t</div>\n);\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport { flatten, getTableRowKeys, getTableRowObjects } from \"../../../utils/baseUtils\";\n\nconst SelectionHead = (props) => {\n\tconst {column, container} = props;\n\tconst {rowKey, onSelectAll, selectedRowKeys, selectAll} = column;\n\n\tconst _handleChange = (e) => {\n\t\tconst rowKeys = flatten(getTableRowKeys(container.props.data, column.rowKey));\n\t\tconst rowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => rowKeys.includes(item[rowKey]));\n\t\tconst totalLength = rowKeys.length;\n\t\tconst selectLength = selectedRowKeys.length;\n\t\tconst checked = !(totalLength === selectLength);\n\n\t\t// const newRowKeys = container.props.data.map((item) => { return item[column.rowKey] });\n\t\tonSelectAll({selected: checked, rowKeys: rowKeys, rowObjects: rowObjects});\n\t};\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={selectAll === null}\n\t\t\tonChange={_handleChange}\n\t\t\tchecked={selectAll}\n\t\t/>\n\t);\n};\n\nexport default SelectionHead;\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport {\n\tflatten,\n\tgetTableRowKeys,\n\tfindNodeByRowKey, getTableRowObjects\n} from \"../../../utils/baseUtils\";\n\nconst getRowChildren = (data, rowKey) =>\n\tdata.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item[rowKey], getRowChildren(item.children, rowKey)];\n\t\t}\n\t\treturn item[rowKey];\n\t});\n\nconst findBrothers = (data, selfItem, rowKey, parentKey, rowKeys = null) => {\n\tlet arr = [];\n\tdata.forEach((item) => {\n\t\tif (\n\t\t\titem[parentKey] &&\n\t\t\titem[parentKey] === selfItem[parentKey] &&\n\t\t\titem[rowKey] !== selfItem[rowKey]\n\t\t) {\n\t\t\tif (rowKeys !== null) {\n\t\t\t\tif (rowKeys.includes(item[rowKey])) {\n\t\t\t\t\tarr.push(item[rowKey]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tarr.push(item[rowKey]);\n\t\t\t}\n\t\t} else if (item.children && item.children.length) {\n\t\t\tarr.push(\n\t\t\t\tfindBrothers(\n\t\t\t\t\titem.children,\n\t\t\t\t\tselfItem,\n\t\t\t\t\trowKey,\n\t\t\t\t\tparentKey,\n\t\t\t\t\trowKeys\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\treturn arr;\n};\n\nexport const parentAnalysis = ({\n\trowData,\n\trowKey,\n\tparentKey,\n\tchecked,\n\tnodeAssociated,\n\ttreeData,\n\tselectedRowKeys,\n\tindeterminateRowKeys,\n}) => {\n\tlet _selectedRowKeys = [...selectedRowKeys];\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\tlet currentRowData = rowData;\n\tlet parentExist = !!currentRowData[parentKey];\n\tlet lastTypeSelect = checked ? 'checked' : 'square';\n\tlet typeSelect = '';\n\tlet nextSquare = false;\n\n\t/** Пока есть родитель */\n\twhile (parentExist && nodeAssociated) {\n\t\tconst indeterminateBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_indeterminateRowKeys\n\t\t\t)\n\t\t);\n\t\tconst selectedBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_selectedRowKeys\n\t\t\t)\n\t\t);\n\t\tconst allBrothers = flatten(\n\t\t\tfindBrothers(treeData, currentRowData, rowKey, parentKey)\n\t\t);\n\n\t\tif (checked) {\n\t\t\tif (\n\t\t\t\tlastTypeSelect === 'checked' &&\n\t\t\t\tselectedBrothers.length === allBrothers.length\n\t\t\t)\n\t\t\t\ttypeSelect = 'checked';\n\t\t\telse typeSelect = 'square';\n\t\t} else {\n\t\t\tif (\n\t\t\t\t!checked &&\n\t\t\t\t!nextSquare &&\n\t\t\t\t(selectedBrothers.length || indeterminateBrothers.length)\n\t\t\t)\n\t\t\t\tnextSquare = true;\n\t\t\tif (nextSquare) typeSelect = 'square';\n\t\t\telse typeSelect = 'none';\n\t\t}\n\n\t\t// console.log(\"allBrothers \", allBrothers);\n\t\t// console.log(\"findParentById \", treeData,\n\t\t//     rowKey,\n\t\t//     parentKey,\n\t\t//     currentRowData[parentKey]);\n\t\t//\n\t\t// console.log(\"findNodeByRowKey \", findNodeByRowKey(treeData, rowKey, currentRowData[parentKey]));\n\n\t\t// Найти родителя\n\t\tcurrentRowData = findNodeByRowKey(\n\t\t\ttreeData,\n\t\t\trowKey,\n\t\t\tcurrentRowData[parentKey]\n\t\t);\n\n\t\tif (typeSelect === 'checked') {\n\t\t\t// Выделить галкой\n\t\t\t// console.log(\"checked\");\n\t\t\tlastTypeSelect = 'checked';\n\t\t\tif (!_selectedRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_selectedRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _indeterminateRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _indeterminateRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'square') {\n\t\t\t// Выдлеить квадратом\n\t\t\t// console.log(\"square: \");\n\t\t\tlastTypeSelect = 'square';\n\t\t\tif (!_indeterminateRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_indeterminateRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _selectedRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'none') {\n\t\t\t// Снять выделение\n\t\t\t// console.log(\"none: \");\n\t\t\tlastTypeSelect = 'none';\n\t\t\tconst indexS = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (indexS > -1) _selectedRowKeys.splice(indexS, 1);\n\t\t\tconst indexI = _indeterminateRowKeys.indexOf(\n\t\t\t\tcurrentRowData[rowKey]\n\t\t\t);\n\t\t\tif (indexI > -1) _indeterminateRowKeys.splice(indexI, 1);\n\t\t}\n\n\t\tparentExist = !!currentRowData[parentKey];\n\t\t// parentExist = проверка наличия след родителя\n\t}\n\n\treturn [_selectedRowKeys, _indeterminateRowKeys];\n};\n\nconst SelectionCell = (props) => {\n\tconst _handleChange = (checked) => {\n\t\tconst {rowData, rowIndex, column, container} = props;\n\t\tconst {\n\t\t\tonChange,\n\t\t\tselectedRowKeys,\n\t\t\tindeterminateRowKeys,\n\t\t\trowKey,\n\t\t\tparentKey,\n\t\t\tnodeAssociated,\n\t\t} = column;\n\n\t\t// const rowKeys = flatten(getTableRowKeys([rowData], column.rowKey));\n\t\t// const totalLength = container.props.data.length;\n\t\t// const checked = e.target.checked;\n\t\t// const currentRowKey = {[rowKey]: rowData[rowKey], checked};\n\t\t// console.log(\"_handleChange: \", selectedRowKeys);\n\n\t\tlet _selectedRowKeys = [...selectedRowKeys];\n\t\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\t\t/** Обработка себя, поиск детей, выделение / снятие их */\n\t\tlet rowChildren = [];\n\t\tif (checked) {\n\t\t\tif (rowData.children && nodeAssociated)\n\t\t\t\trowChildren = flatten(getRowChildren(rowData.children, rowKey));\n\n\t\t\t_selectedRowKeys = _selectedRowKeys\n\t\t\t\t.concat([rowData[rowKey]])\n\t\t\t\t.concat(rowChildren);\n\t\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t} else {\n\t\t\tif (rowData.children && nodeAssociated)\n\t\t\t\trowChildren = flatten(\n\t\t\t\t\tgetRowChildren(rowData.children, rowKey, false)\n\t\t\t\t);\n\n\t\t\t_selectedRowKeys = _selectedRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t}\n\n\t\t[_selectedRowKeys, _indeterminateRowKeys] = parentAnalysis({\n\t\t\trowData,\n\t\t\trowKey,\n\t\t\tparentKey,\n\t\t\tchecked,\n\t\t\tnodeAssociated,\n\t\t\ttreeData: container.props.data,\n\t\t\tselectedRowKeys: _selectedRowKeys,\n\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t});\n\n\t\tconst keys = [...new Set(_selectedRowKeys)];\n\t\tconst _selectedRowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => keys.includes(item[rowKey]));\n\t\t//return [...new Set(_disabledElements)]\n\t\t// onChange({ selected: checked, totalLength, rowData, rowIndex });\n\n\t\t/** Выясняем новое состояние галочки \"Выделить все\" */\n\t\tlet selectAll;\n\t\tconst selectLength = _selectedRowKeys.length;\n\t\tconst totalLength = flatten(\n\t\t\tgetTableRowKeys(container.props.data, column.rowKey)\n\t\t).length;\n\n\t\tif (selectLength === 0) selectAll = false;\n\t\telse if (totalLength === selectLength) selectAll = true;\n\t\telse if (totalLength !== selectLength) selectAll = null;\n\n\n\n\t\tonChange({\n\t\t\tselected: checked,\n\t\t\t_selectedRow: {\n\t\t\t\trowData: {...rowData},\n\t\t\t\trowIndex: rowIndex,\n\t\t\t\trowKey: rowKey,\n\t\t\t},\n\t\t\t_selectAll: selectAll,\n\t\t\t_selectedRowKeys: keys, //[...new Set(_selectedRowKeys)],\n\t\t\t_selectedRowObjects: _selectedRowObjects,\n\t\t\t_indeterminateRowKeys: [...new Set(_indeterminateRowKeys)],\n\t\t});\n\n\t\t// let uniqIds = {};\n\t\t// onChange({selected: checked, rowKeys: rowKeys.filter(obj => !uniqIds[obj[rowKey]] && (uniqIds[obj[rowKey]] = true)) });\n\t};\n\n\tconst {rowData, column} = props;\n\tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\n\tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\n\tconst checked = selectedRowKeys.includes(rowData[rowKey]);\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={det}\n\t\t\tonChange={(e) => _handleChange(e.target.checked)}\n\t\t\tchecked={checked}\n\t\t/>\n\t);\n};\n\nexport default SelectionCell;\n","import moment from 'moment';\n\nexport const APP_TIME_OFFSET = 3;\n\nexport const getMomentFromStringByFormat = (date, format) =>\n\tdate ? moment(date, format).utcOffset(APP_TIME_OFFSET) : null;\n\n// export const getMomentWithOffset = (date) =>\n// \tmoment(date).utcOffset(APP_TIME_OFFSET);\nexport const getMomentWithOffset = (date) => moment(date).format();\n\nexport const getMomentWithOffsetTruncateDay = (date) =>\n\tmoment(date).startOf('day')\n\t\t// .hours(0)\n\t\t// .minutes(0)\n\t\t// .seconds(0)\n\t\t// .milliseconds(0)\n\t\t.format();\n\n\nexport const toFormat = (dateString, format) => {\n\tif (!dateString) {\n\t\treturn '';\n\t}\n\tconst mom = moment(dateString);\n\treturn mom.isValid() ? mom.format(format) : dateString;\n};\n\nexport const toDDMMYYYYdot = (dateString) => toFormat(dateString, 'DD.MM.YYYY');\n\nexport const toDDMMYYYYdotAltDashDash = (dateString) =>\n\ttoDDMMYYYYdot(dateString) || '--';\n\nexport const toDDMMYYYYHHMMSS = (dateString) =>\n\ttoFormat(dateString, 'DD.MM.YYYY HH:mm:ss') || '--';\n\nexport const toDDMMYYYYdash = (dateString) =>\n\ttoFormat(dateString, 'DD-MM-YYYY');\n\nexport const getISO = (date) =>\n\tmoment(date).utcOffset(APP_TIME_OFFSET).toISOString();\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport {DatePicker} from 'antd';\nimport locale from 'antd/es/date-picker/locale/ru_RU';\nimport {noop} from '../../utils/baseUtils';\nimport {rtPrefix} from '../../utils/variables';\nimport {\n\tgetMomentWithOffset,\n\tgetMomentWithOffsetTruncateDay,\n\tgetMomentFromStringByFormat,\n} from '../../utils/datesUtils';\n\nconst DateRange = (props) => {\n\t/** Состояние первоначалной настройки компонента */\n\tconst [mounted, setMounted] = useState(false);\n\tconst [startValue, setStartValue] = useState(undefined);\n\tconst [endValue, setEndValue] = useState(undefined);\n\n\tconst {\n        className,\n\t\tnameStart,\n\t\tnameEnd,\n\t\tdateFormat,\n\t\tonChange,\n        size,\n\t\ttitle,\n\t\tvalueStart,\n\t\tvalueEnd,\n\t\tshowTime,\n\t} = props;\n\n\tuseEffect(() => {\n\t\tif (!mounted) {\n\t\t\tif (props.defaultValueStart) {\n                // console.log(\"DateRange mounted :\", nameStart, props.defaultValueStart);\n                _onChange(\n\t\t\t\t\tnameStart,\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueStart,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tsetStartValue(\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueStart,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (props.defaultValueEnd) {\n\t\t\t\t_onChange(\n\t\t\t\t\tnameEnd,\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueEnd,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tsetEndValue(\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueEnd,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tsetMounted(true);\n\t\t}\n\t}, [mounted]);\n\n\tuseEffect(() => {\n\t\tif (valueStart) {\n\t\t\tsetStartValue(moment(valueStart));\n\t\t\t// console.log('useEffect -> valueStart', valueStart);\n\t\t} else if (!props.defaultValueStart) setStartValue(null);\n\t}, [valueStart]);\n\tuseEffect(() => {\n\t\tif (valueEnd) {\n\t\t\tsetEndValue(moment(valueEnd));\n\t\t\t// console.log('useEffect -> valueEnd', valueEnd);\n\t\t} else if (!props.defaultValueEnd) setEndValue(null);\n\t}, [valueEnd]);\n\n\tconst disabledStartDate = (startValue) => {\n\t\tif (!startValue || !endValue) {\n\t\t\treturn false;\n\t\t}\n\t\treturn startValue.valueOf() > endValue.valueOf();\n\t};\n\n\tconst disabledEndDate = (endValue) => {\n\t\tif (!endValue || !startValue) {\n\t\t\treturn false;\n\t\t}\n\t\treturn endValue.valueOf() <= startValue.valueOf();\n\t};\n\n\tconst onStartChange = (date) => {\n\t\tsetStartValue(date);\n\t\t_onChange(nameStart, date);\n\t};\n\n\tconst onEndChange = (date) => {\n\t\tsetEndValue(date);\n\t\t_onChange(nameEnd, date);\n\t};\n\n\tconst _onChange = (name, value) => {\n\t\tif (value)\n\t\t\tif(showTime)\n\t\t\t\tonChange(name, getMomentWithOffset(value));\n\t\t\telse\n\t\t\t\tonChange(name, getMomentWithOffsetTruncateDay(value));\n\n\t\telse onChange(name, value);\n\t};\n\n\treturn (\n\t\t<div className={`${className} ${rtPrefix}-date-range`}>\n\t\t\t<div>\n                {title ? <div className={'title'}>{title}</div> : null}\n\t\t\t\t<span className={'subtitleStart'}>c</span>\n\t\t\t\t<DatePicker\n\t\t\t\t\tlocale={locale}\n\t\t\t\t\t// defaultValue={ checkDefValue(props.defaultValueStart) }\n\t\t\t\t\tsize={size}\n\t\t\t\t\tstyle={{width: !!showTime ? '160px' : '135px'}}\n\t\t\t\t\tdisabledDate={disabledStartDate}\n\t\t\t\t\tonChange={onStartChange}\n\t\t\t\t\tformat={dateFormat}\n\t\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\t\tvalue={startValue}\n\t\t\t\t\tshowTime={showTime}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span className={'subtitleEnd'}>по</span>\n\t\t\t\t<DatePicker\n\t\t\t\t\tlocale={locale}\n\t\t\t\t\t// defaultValue={ checkDefValue(props.defaultValueEnd) }\n\t\t\t\t\tsize={size}\n\t\t\t\t\tstyle={{width: showTime ? '160px' : '135px'}}\n\t\t\t\t\tdisabledDate={disabledEndDate}\n\t\t\t\t\tonChange={onEndChange}\n\t\t\t\t\tformat={dateFormat}\n\t\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\t\tvalue={endValue}\n\t\t\t\t\tshowTime={showTime}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nDateRange.propTypes = {\n\t/** Формат отображения даты (не влияет на формат в onChange) */\n\tdateFormat: PropTypes.string,\n\n\t/** Значение по умолчанию для первого пикера */\n\t// defaultValueStart: PropTypes.string,\n\n\t/** Значение по умолчанию для второго пикера */\n\t// defaultValueEnd: PropTypes.string,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Наименование параметра для первого пикера */\n\tnameStart: PropTypes.string,\n\n\t/** Наименование параметра для второго пикера */\n\tnameEnd: PropTypes.string,\n\n\t/** Событие при изменении любого из пикеров */\n\tonChange: PropTypes.func,\n\n    /** Размер пикера ['small', 'middle', 'large'] */\n    size: PropTypes.oneOf(['small', 'middle', 'large']),\n\n\t/** Заголовок */\n\ttitle: PropTypes.string,\n\n\t/** Значение даты первого пикера (используется для управления датой из родительного компонента) */\n\t// valueStart: PropTypes.string,\n\n\t/** Значение даты второго пикера (используется для управления датой из родительного компонента) */\n\t// valueEnd: PropTypes.string,\n};\n\nDateRange.defaultProps = {\n    className: '',\n\tnameStart: 'dateStart',\n\tnameEnd: 'dateEnd',\n\tdateFormat: 'DD.MM.YYYY',\n\tonChange: noop,\n    size: 'middle',\n    // title: 'Период',\n};\n\nexport default DateRange;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {DatePicker} from 'antd';\nimport moment from 'moment';\nimport {noop} from '../../utils/baseUtils';\nimport {\n\tgetMomentFromStringByFormat,\n\tgetMomentWithOffsetTruncateDay,\n} from '../../utils/datesUtils';\n\nconst SingleDate = (props) => {\n\t/** Состояние первоначалной настройки компонента */\n\tconst [mounted, setMounted] = useState(false);\n\tconst [_value, setValue] = useState(null);\n\n\tconst {dateFormat, defaultValue, name, onChange, title, value, className} = props;\n\n\tuseEffect(() => {\n\t\tif (!mounted) {\n\t\t\t// console.log(\"DateRange mounted :\", nameFrom, props.defaultValueFrom);\n\t\t\tif (defaultValue) {\n\t\t\t\t_onChange(\n\t\t\t\t\tname,\n\t\t\t\t\tgetMomentFromStringByFormat(defaultValue, dateFormat)\n\t\t\t\t);\n\t\t\t\tsetValue(getMomentFromStringByFormat(defaultValue, dateFormat));\n\t\t\t}\n\t\t\tsetMounted(true);\n\t\t}\n\t}, [mounted]);\n\n\tuseEffect(() => {\n\t\tif (value) {\n\t\t\tsetValue(moment(value));\n\t\t} else if (!defaultValue) setValue(null);\n\t}, [value]);\n\n\tconst _onChangePicker = (date) => {\n\t\tsetValue(date);\n\t\t_onChange(name, date);\n\t};\n\n\tconst _onChange = (name, value) => {\n\t\tif (value) onChange(name, getMomentWithOffsetTruncateDay(value));\n\t\telse onChange(name, value);\n\t};\n\n\treturn (\n\t\t<div className={`single-date-container ${className}`}>\n\t\t\t<div className={'title'}>{title}</div>\n\t\t\t<DatePicker\n\t\t\t\tsize={'small'}\n\t\t\t\tstyle={{width: '135px'}}\n\t\t\t\tonChange={_onChangePicker}\n\t\t\t\tformat={dateFormat}\n\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\tvalue={_value}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nSingleDate.propTypes = {\n\t/** Формат отображения даты (не влияет на формат в onChange) */\n\tdateFormat: PropTypes.string,\n\n\t/** Значение по умолчанию */\n\tdefaultValue: PropTypes.string,\n\n\t/** Наименование параметра */\n\tname: PropTypes.string,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Событие при изменении пикера */\n\tonChange: PropTypes.func,\n\n\t/** Заголовок */\n\ttitle: PropTypes.string,\n\n\t/** Значение даты */\n\tvalue: PropTypes.string,\n};\n\nSingleDate.defaultProps = {\n\tname: 'date',\n\tdateFormat: 'DD.MM.YYYY',\n\tonChange: noop,\n\ttitle: 'Дата',\n};\n\nexport default SingleDate;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Tooltip } from \"antd\";\nimport { noop } from \"../../utils/baseUtils\";\nimport DateRange from \"../DateRange/DateRange\";\nimport SingleDate from \"../SingleDate/SingleDate\";\nimport Select from \"../Select/Select\";\nimport { rtPrefix } from \"../../utils/variables\";\n\nconst FilterPanel = (props) => {\n  /**\n   * Период с, по (день / месяц / год)\n   * Множественный выбор (дерево с галочками с поиском) (ajax / const)\n   * Множественный выбор (список с поиском) (ajax / const)\n   * Единственный выбор (список с поиском) (ajax / const)\n   */\n\n  const [filter, setFilter] = useState(props.defaultFilter);\n  // const [multiSelectObjects, setMultiSelectObjects] = useState([]);\n\n  const {\n    applyFilterTooltip,\n    applyFilterSize,\n    applyFilterRender,\n    borderStyle,\n    onChangeFilter,\n    onApplyFilter,\n    configFilter,\n    resetFilterRender,\n    resetFilterTooltip,\n    resetFilterSize\n  } = props;\n\n  useEffect(() => {\n    setFilter(props.defaultFilter);\n  }, []);\n\n  const _onChangeData = (name, value) => {\n    // console.log(\"FilterPanel -> onChangeData\", name, value);\n    let _filter = { ...filter };\n    if (value === null) {\n      delete _filter[name];\n    } else {\n      _filter = { ..._filter, ...{ [name]: value } };\n    }\n    // console.log(\"onChangeData:\", _filter);\n    setFilter(_filter);\n    onChangeFilter(_filter);\n  };\n\n  const _applyFilter = () => {\n    // console.log(\"_applyFilter:\", filter);\n    onApplyFilter(filter);\n  };\n  const _resetFilter = () => {\n    // console.log(\"_resetFilter:\", props.defaultFilter);\n    setFilter(props.defaultFilter);\n    onChangeFilter(props.defaultFilter);\n    onApplyFilter(props.defaultFilter);\n    // setMultiSelectObjects([]);\n  };\n\n  // const _onChangeObjects = (name, value) => {\n  // \tlet _multiSelectObjects = {...multiSelectObjects};\n  // \tif (value === null) {\n  // \t\tdelete _multiSelectObjects[name];\n  // \t} else {\n  // \t\t_multiSelectObjects = {..._multiSelectObjects, ...{[name]: value}};\n  // \t}\n  // \t// console.log(\"onChangeData:\", _filter);\n  // \tsetMultiSelectObjects(_multiSelectObjects);\n  // };\n  const getPanelCls = () => {\n    let cls = [`${rtPrefix}-filter-panel`];\n    cls.push(`border-${borderStyle}`);\n    if (configFilter.findIndex((item) => !!item.title) === -1)\n      cls.push(`${rtPrefix}-filter-panel-no-title`);\n    return cls.join(\" \");\n  };\n\n  return (\n    <React.Fragment>\n      {configFilter && configFilter.length ? (\n        <div className={getPanelCls()}>\n          {configFilter.map((item, index) => {\n            // console.log(\"item.defaultRows\", item.defaultRows);\n            let cls = [`${rtPrefix}-filter-panel-item`];\n            item.className && cls.push(item.className);\n            switch (item.componentType) {\n              case \"DateRange\":\n                return (\n                  <DateRange\n                    key={index}\n                    {...item}\n                    className={cls.join(\" \")}\n                    defaultValueStart={\n                      filter[item.nameStart]\n                        ? filter[item.nameStart]\n                        : null\n                    }\n                    defaultValueEnd={\n                      filter[item.nameEnd]\n                        ? filter[item.nameEnd]\n                        : null\n                    }\n                    onChange={_onChangeData}\n                    valueStart={filter[item.nameStart]}\n                    valueEnd={filter[item.nameEnd]}\n                  />\n                );\n              case \"SingleDate\":\n                return (\n                  <SingleDate\n                    key={index}\n                    {...item}\n                    className={cls.join(\" \")}\n                    dateFormat={\n                      item.dateFormat\n                        ? item.dateFormat\n                        : undefined\n                    }\n                    defaultValue={\n                      filter[item.name]\n                        ? filter[item.name]\n                        : null\n                    }\n                    onChange={_onChangeData}\n                    value={filter[item.name]}\n                  />\n                );\n              case \"MultiSelect\":\n              case \"SingleSelect\":\n                return (\n                  <Select\n                    key={index}\n                    {...item}\n                    type={item.componentType}\n                    defaultSelectedRowKeys={\n                      filter[item.name]\n                        ? filter[item.name]\n                        : null\n                    }\n                    selectedRowKeys={filter[item.name] ? filter[item.name] : []}\n                    className={cls.join(\" \")}\n                    onChangeKeys={_onChangeData}\n                    defaultValue={\n                      filter[item.name]\n                        ? filter[item.name]\n                        : null\n                    }\n                    value={filter[item.name]}\n                  />\n                );\n              case \"Custom\":\n                return (\n                  <React.Fragment key={index}>\n                    {\n                      item.render({\n                        onChange: _onChangeData,\n                        defaultValue: filter[item.name]\n                          ? filter[item.name]\n                          : null,\n                        value: filter[item.name]\n                      })\n                    }\n                  </React.Fragment>);\n              default:\n                return null;\n            }\n          })}\n          <Tooltip title={applyFilterTooltip}>\n            <Button\n              type='primary'\n              size={applyFilterSize}\n              style={{ marginLeft: \"auto\" }}\n              onClick={_applyFilter}\n            >\n              {applyFilterRender}\n            </Button>\n          </Tooltip>\n          <Tooltip title={resetFilterTooltip}>\n            <Button\n              size={resetFilterSize}\n              style={{ marginLeft: \"10px\" }}\n              onClick={_resetFilter}\n            >\n              {resetFilterRender}\n            </Button>\n          </Tooltip>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\nFilterPanel.propTypes = {\n\n  /** Тест Tooltip для кнопки \"Применить фильтр\" */\n  applyFilterTooltip: PropTypes.string,\n\n  /** Размер кнопки \"Применить фильтр\" ['small', 'middle', 'large'] */\n  applyFilterSize: PropTypes.oneOf([\"small\", \"middle\", \"large\"]),\n\n  /** Строка / функция / элемент для отображения в кнопке \"Применить фильтр\" */\n  applyFilterRender: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.string\n  ]),\n\n  /** Тип бордера панели (по умолчанию 'none')\n   * ['all', 'none', 'top', 'left', 'bottom', 'right', 'top-bottom', 'left-right'] */\n  borderStyle: PropTypes.oneOf([\n    \"all\",\n    \"none\",\n    \"top\",\n    \"left\",\n    \"bottom\",\n    \"right\",\n    \"top-bottom\",\n    \"left-right\"\n  ]),\n\n  /** Объект фильтра по умолчанию */\n  defaultFilter: PropTypes.object,\n\n  /** Конфигурация панели фильтров */\n  configFilter: PropTypes.arrayOf(PropTypes.object),\n\n  /** Событие по кнопке выполнить фильтр */\n  onApplyFilter: PropTypes.func,\n\n  /** Событие по изменение объекта фильтра */\n  onChangeFilter: PropTypes.func,\n\n  /** Тест Tooltip для кнопки \"Сбросить фильтр\" */\n  resetFilterTooltip: PropTypes.string,\n\n  /** Размер кнопки \"Сбросить фильтр\" ['small', 'middle', 'large'] */\n  resetFilterSize: PropTypes.oneOf([\"small\", \"middle\", \"large\"]),\n\n  /** Строка / функция / элемент для отображения в кнопке \"Сбросить фильтр\" */\n  resetFilterRender: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.string\n  ])\n};\n\nFilterPanel.defaultProps = {\n  applyFilterTooltip: \"Применить фильтр\",\n  applyFilterSize: \"middle\",\n  applyFilterRender: \"Применить\",\n  borderStyle: \"none\",\n  defaultFilter: {},\n  configFilter: [],\n  onApplyFilter: noop,\n  onChangeFilter: noop,\n  resetFilterTooltip: \"Сбросить фильтр\",\n  resetFilterSize: \"middle\",\n  resetFilterRender: \"Сбросить\"\n};\n\nexport default FilterPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {CloseCircleOutlined} from '@ant-design/icons';\nimport {rtPrefix} from '../../../utils/variables';\n\nconst SelectionList = (props) => {\n\tconst {selectedRowObjects, rowRender, onClickDropSelect} = props;\n\n\t// console.log(\"SelectionList typeof -> \", typeof(rowRender));\n\treturn (\n\t\t<div className={`${rtPrefix}-table-selected-rows`}>\n\t\t\t{selectedRowObjects && selectedRowObjects.length > 0 ? (\n\t\t\t\t<ul>\n\t\t\t\t\t{selectedRowObjects.map((item, index) => (\n\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t{/*{(typeof(rowRender) === 'string') ? <div>{item[rowRender]}</div> : rowRender }*/}\n\t\t\t\t\t\t\t{typeof rowRender === 'function' ? (\n\t\t\t\t\t\t\t\trowRender({rowData: item, rowIndex: index})\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>{item[rowRender]}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<div onClick={() => onClickDropSelect(item)}>\n\t\t\t\t\t\t\t\t<CloseCircleOutlined />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t) : (\n\t\t\t\t<div>Нет выбранных записей</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nSelectionList.propTypes = {\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { rowData, rowIndex }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n\t/** Список выделенных объектов */\n\tselectedRowObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Событие удаления элемента */\n\tonClickDropSelect: PropTypes.func.isRequired,\n};\n\nSelectionList.defaultProps = {};\n\nexport default SelectionList;\n","import React, {useRef, forwardRef, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {notification} from 'antd';\nimport SortOrder from 'react-base-table/lib/SortOrder';\nimport BaseTable, {AutoResizer, callOrReturn, Column} from 'react-base-table';\nimport {empty, overlay} from './defaultSettings';\nimport SelectionHead from '../Table/Selectable/SelectionHead';\nimport SelectionCell, {parentAnalysis} from '../Table/Selectable/SelectionCell';\nimport CommandPanel from '../CommandPanel/CommandPanel';\nimport FilterPanel from '../FilterPanel/FilterPanel';\nimport SelectionList from '../Table/SelectionList/SelectionList';\nimport {rtPrefix} from '../../utils/variables';\nimport {\n\tflatten,\n\tgenerateUUID,\n\tgetTableRowKeys,\n\tfindNodeByRowKey,\n\tnoop,\n\tgetTableRowObjects, notificationError\n} from \"../../utils/baseUtils\";\nimport objectPath from \"object-path\";\nimport { setDataStore } from \"../../../redux/rtd.actions\";\nimport FormItems from \"../Form/FormItems\";\n\nconst Table = forwardRef((props, ref) => {\n\t/** Состояние первоначалной настройки компонента*/\n\tconst [mounted, setMounted] = useState(false);\n\t/** Наличие на сервере еще данных */\n\tconst [hasMore, setHasMore] = useState(true);\n\t/** Индикатор загрузки данных */\n\tconst [loading, setLoading] = useState(false);\n\n\t/** Indoor control */\n\tconst [_rows, _setRows] = useState([]);\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n\tconst [_searchValue, setSearchValue] = useState({});\n\tconst [_filter, setFilter] = useState(false);\n\tconst [_sortBy, setSortBy] = useState(false);\n\n\t/** Selectable States */\n\tconst [selectAll, setSelectAll] = useState(false);\n\n\t/** Tree States */\n\tconst [_indeterminateRowKeys, setIndeterminateRowKeys] = useState([]);\n    const [_expandedRowKeys, setExpandedRowKeys] = useState([]);\n\n    const [_totalCountRows, setTotalCountRows] = useState(0);\n\n    const [_footerShow, _setFooterShow] = useState(false);\n\n    const tableRef = useRef();\n\n\tconst {\n\t\t/** Def values */\n\t\tdefaultRows,\n\t\tdefaultSelectedRowKeys,\n\t\tdefaultSearchValue,\n\t\tdefaultFilter,\n\t\tdefaultSortBy,\n\n\t\t/** Outdoor control */\n\t\trows,\n\t\tsetRows,\n\t\tselectedRowKeys,\n\t\tsearchValue,\n\t\tfilter,\n\t\tsortBy,\n\n\t\t/** Required */\n\t\tcolumns,\n\t\ttype,\n\n\t\t/** Base Props */\n\t\tautoDeleteRows,\n\t\trowKey,\n\n\t\t/** View Props */\n\t\tempty,\n\t\tfixWidthColumn,\n\t\tfooterHeight,\n\t\tfooterShow,\n        footerTitles,\n\t\t// footerProps,\n\t\theaderHeight,\n\t\trowHeight,\n\t\tzebraStyle,\n\t\trowRenderer,\n\t\testimatedRowHeight,\n\n\t\t/** Load Data Props */\n\t\tloadThreshold,\n\t\tpageSize,\n\t\trequestLoadRows,\n        requestLoadCount,\n\t\tsearchParamName,\n\n\t\t/** Selectable Props */\n\t\tselectable,\n\n\t\t/** Tree Props */\n\t\tnodeAssociated,\n\t\texpandColumnKey,\n\t\texpandParentKey,\n\t\texpandLazyLoad,\n\t\texpandDefaultAll,\n\n\t\t/** Events */\n\t\tonRowClick,\n\t\tonRowDoubleClick,\n\t\tonRowExpand,\n\t\tonSelectedRowsChange,\n\t\tonExpandedRowsChange,\n\n\t\t/** SELECTED PANEL */\n\t\tshowSelection,\n\t\trowRenderShowSelection,\n\n\t\t/** REDUX PROPS */\n\t\tdispatchPath,\n\t\tsubscribe,\n\t} = props;\n\n\t// console.log('props.commandPanelProps => ', props.commandPanelProps);\n\tconst commandPanelProps = {\n\t\t...CommandPanel.defaultProps,\n\t\t...props.commandPanelProps,\n\t};\n\tconst filterPanelProps = {\n\t\t...FilterPanel.defaultProps,\n\t\t...props.filterPanelProps,\n\t};\n\n\tconst footerProps = {\n\t\t...Table.defaultProps.footerProps,\n\t\t...props.footerProps,\n\t};\n\n\tconst selectedDispatchPath = dispatchPath && `${dispatchPath}.selected`;\n\tconst rowsDispatchPath = dispatchPath && `${dispatchPath}.rows`;\n\n\n\tuseEffect(() => {\n        // console.log(\"Инициализация дефолтных значений \");\n        // console.log(\"Инициализация дефолтных значений defaultSelectedRowKeys > \", defaultSelectedRowKeys);\n\n\t\t// Инициализация дефолтных значений\n\t\t// _setRows(defaultRows);\n\t\t_setRowsHandler(defaultRows);\n\t\tsetSelectedRowKeys(defaultSelectedRowKeys);\n\t\tsetSearchValue(defaultSearchValue);\n\t\tsetFilter(defaultFilter);\n\t\tsetSortBy(defaultSortBy);\n\t\tsetSelectAll(\n\t\t\tdefaultRows.length > 0 &&\n\t\t\t\tdefaultRows.length === defaultSelectedRowKeys.length\n\t\t);\n\t\t// Определение нужно ли отображать подвал\n\t\t_setFooterShow(\n\t\t\t(footerProps.showElements.length ||\n\t\t\tfooterProps.leftCustomSideElement ||\n\t\t\tfooterProps.centerCustomSideElement ||\n\t\t\tfooterProps.rightCustomSideElement));\n\n\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t// Открытие всех нод\n\t\t\tif (expandDefaultAll)\n\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\tflatten(getTableRowKeys(defaultRows, rowKey))\n\t\t\t\t);\n\t\t\t// Установка квадратиков на нужных нодах\n\t\t\tif (defaultSelectedRowKeys && defaultSelectedRowKeys.length > 0) {\n\t\t\t\tlet flatRows = flatten(getTableRowKeys(defaultRows, rowKey));\n\t\t\t\tlet selectedRow = flatRows.filter((item) =>\n\t\t\t\t\tdefaultSelectedRowKeys.includes(item[rowKey])\n\t\t\t\t);\n\t\t\t\tlet _indeterminateRowKeys = [];\n\t\t\t\tselectedRow.forEach((item) => {\n\t\t\t\t\tconst [ss, ii] = parentAnalysis({\n\t\t\t\t\t\trowData: item,\n\t\t\t\t\t\trowKey,\n\t\t\t\t\t\tparentKey: expandParentKey,\n\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t\tnodeAssociated,\n\t\t\t\t\t\ttreeData: defaultRows,\n\t\t\t\t\t\tselectedRowKeys: defaultSelectedRowKeys,\n\t\t\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t\t\t\t});\n\t\t\t\t\t_indeterminateRowKeys.push(...ii);\n\t\t\t\t});\n\t\t\t\tsetIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\n\t\t\t}\n\t\t}\n\n\t\tif (type !== 'localSide') {\n\t\t\t_dataProcessing({\n\t\t\t\tsortBy: defaultSortBy,\n\t\t\t\tfilter: defaultFilter,\n\t\t\t\tsearchLine: defaultSearchValue,\n\t\t\t\treload: true,\n\t\t\t});\n\t\t}\n\t\t// console.log(\"Table => props \", props);\n\t\tsetMounted(true);\n\t\tif (ref && typeof ref === 'function') ref({reloadData});\n\t\telse if (ref && typeof ref === 'object') ref.current = {reloadData};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (type === 'localSide') {\n\t\t\t// console.log(\"Control useEffect => \", rows, selectedRowKeys, searchValue, filter, sortBy);\n\t\t\t// _setRows(rows);\n\t\t\t_setRowsHandler(rows);\n\t\t\tsetSelectedRowKeys(selectedRowKeys);\n\t\t\tsetSearchValue(searchValue);\n\t\t\tsetFilter(filter);\n\t\t\tsetSortBy(sortBy);\n\t\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t\t// Открытие всех нод\n\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\tsetExpandedRowKeys(flatten(getTableRowKeys(rows, rowKey)));\n\t\t\t}\n\t\t}\n    }, [rows, selectedRowKeys, searchValue, filter, sortBy]);\n\n\t/** Подписка на изменение props[subscribe.name] в сторе */\n\tuseEffect( () => {\n\t\tif(subscribe.name) {\n\t\t\t// console.log(\"Table => useEffect => subscribe.value \", props[subscribe.name]);\n\t\t\tsubscribe.onChange && subscribe.onChange({value: props[subscribe.name], setReloadTable: reloadData});\n\t\t}\n\t}, [props[subscribe.name]]);\n\n\n\t/** BASE FUNCTIONS */\n\tconst _setRowsHandler = (rows) => {\n\t\t_setRows(rows);\n\t\trowsDispatch(rows);\n\t};\n\tconst setRowsHandler = (rows) => {\n\t\tsetRows(rows);\n\t\trowsDispatch(rows);\n\t};\n\tconst rowsDispatch = (rows) => {\n\t\trowsDispatchPath && props.setDataStore && props.setDataStore(rowsDispatchPath, rows);\n\t};\n\n\tconst reloadData = ({sortBy, filter, searchValue}) => {\n\t\t// console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\n        if(props.value && props.value.length > 0)\n            setSelectedRowKeys(props.value.map(item => item[rowKey]));\n        else\n            setSelectedRowKeys([]);\n\t\t// setSelectedRowKeys([]);\n\t\tif(sortBy) setSortBy(sortBy);\n\t\tif(filter) setFilter(filter);\n\t\tif(searchValue) setSearchValue(searchValue);\n\t\t_dataProcessing({\n\t\t\tsortBy: sortBy ? sortBy : _sortBy,\n\t\t\tfilter: filter ? filter : _filter,\n\t\t\tsearchLine: searchValue ? searchValue : _searchValue,\n\t\t\treload: true,\n\t\t});\n        // console.log(\"reloadData loading \", loading);\n    };\n\n\tconst _dataProcessing = (params) => {\n\t\t// console.log('_dataProcessing', params);\n\t\tconst {sortBy, filter, searchLine, expandRow, reload} = params;\n\t\tswitch (type) {\n\t\t\tcase 'infinity':\n\t\t\tcase 'serverSide':\n\t\t\t\tif ((hasMore || reload) && !loading) {\n\t\t\t\t\tsetLoading(true);\n\t\t\t\t\tconst pageNum = reload\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: Math.floor(_rows.length / pageSize);\n\t\t\t\t\tconst params = {\n\t\t\t\t\t\tpage: pageNum,\n\t\t\t\t\t\tsize: pageSize,\n\t\t\t\t\t\tsort:\n\t\t\t\t\t\t\tsortBy && sortBy.key\n\t\t\t\t\t\t\t\t? sortBy.key + ',' + sortBy.order\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t};\n\t\t\t\t\tconst dataQuery = {\n                        ...filter,\n                        ...(searchLine\n                            ? {[searchParamName]: searchLine}\n                            : null),\n                    };\n\t\t\t\t\t// console.log('dataQuery', dataQuery);\n\n                    if(type === 'infinity' && reload && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad) {\n                        requestLoadCount({\n                            params,\n                            data: dataQuery,\n                        })\n                            .then((response) => {\n                                // console.log(\"infinity then response\", response);\n                                // const result = response.data;\n                                setTotalCountRows(response.data);\n                            })\n\t\t\t\t\t\t\t.catch(error =>\n\t\t\t\t\t\t\t\tnotificationError(error, 'Ошибка получения количества записей по фильтру') );\n                    }\n\n                    // console.log('requestLoadRows => ', typeof requestLoadRows);\n                    // if(typeof requestLoadRows !== 'function'){\n                    //     setLoading(false);\n                    // }\n                    requestLoadRows({\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tdata: dataQuery,\n\t\t\t\t\t})\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\t\t\tconst result = response.data;\n\t\t\t\t\t\t\t// Если иерархия и ленивая, то ищим кому добавть полученные записи\n\t\t\t\t\t\t\tif (!!expandColumnKey && expandLazyLoad) {\n\t\t\t\t\t\t\t\t// lastExpandRow//, setLastExpandRow\n\t\t\t\t\t\t\t\t// console.log('!!expandColumnKey && expandLazyLoad', result);\n\t\t\t\t\t\t\t\tif (pageNum === 0) {\n\t\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t\t{[rowKey]: generateUUID()},\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t// _setRows(result);\n\t\t\t\t\t\t\t\t\t_setRowsHandler(result);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlet newRows = [..._rows];\n\t\t\t\t\t\t\t\t\t// (data, rowKey, rowValue)\n\t\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t\t{[rowKey]: generateUUID()},\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tlet node = findNodeByRowKey(\n\t\t\t\t\t\t\t\t\t\tnewRows,\n\t\t\t\t\t\t\t\t\t\trowKey,\n\t\t\t\t\t\t\t\t\t\texpandRow[rowKey]\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tnode.children = result;\n\t\t\t\t\t\t\t\t\t// console.log('newRows -> ', newRows);\n\t\t\t\t\t\t\t\t\t// _setRows(newRows);\n\t\t\t\t\t\t\t\t\t_setRowsHandler(newRows);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (result && result.length < pageSize) {\n\t\t\t\t\t\t\t\t\tsetHasMore(false);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetHasMore(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpageNum === 0\n\t\t\t\t\t\t\t\t\t? _setRowsHandler(result) // _setRows\n\t\t\t\t\t\t\t\t\t: _setRowsHandler(_rows.concat(result)); // _setRows\n\n\t\t\t\t\t\t\t\t// console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\n\t\t\t\t\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\t\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\t\t\t\t\t\tflatten(getTableRowKeys(result, rowKey))\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t\t\t\t\t_setRowsHandler(_rows); // _setRows\n\t\t\t\t\t\t\t// setHasMore(false);\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t// case 'serverSide':\n\t\t\t// \tsetLoading(true);\n\t\t\t// \tbreak;\n\t\t\tcase 'localSide':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t/** Событие выделение одной строки в режиме без галочек */\n\tconst _rowEventHandlers = {\n\t\tonClick: ({rowData, rowIndex, rowKey, event}) => {\n\t\t\tif (!selectable) {\n\t\t\t\t// if (_selectedRowKeys.includes(rowKey)) {\n\t\t\t\t//     setSelectedRowKeys([]);\n\t\t\t\t//     // setSelectedRow([]);\n\t\t\t\t//     // setSelectedRowObjects([]);\n\t\t\t\t//     onRowClick({\n\t\t\t\t//         selected: false,\n\t\t\t\t//         rowData,\n\t\t\t\t//         rowIndex,\n\t\t\t\t//         rowKey,\n\t\t\t\t//     });\n\t\t\t\t//     onSelectedRowsChange([]);\n\t\t\t\t// } else {\n\t\t\t\t// console.log('_rowEventHandlers -> onClick', rowKey, rowIndex);\n\t\t\t\tconst newRowObject = {\n\t\t\t\t\trowData: {...rowData},\n\t\t\t\t\trowIndex: rowIndex,\n\t\t\t\t\trowKey: rowKey,\n\t\t\t\t};\n\t\t\t\t// if(type !== 'localSide')\n\t\t\t\tsetSelectedRowKeys([rowKey]);\n\t\t\t\t// setSelectedRow(newRowObject);\n\t\t\t\t// setSelectedRowObjects([newRowObject]);\n\t\t\t\tselectedDispatchPath && props.setDataStore && props.setDataStore(selectedDispatchPath, rowData);\n\t\t\t\tonRowClick({\n\t\t\t\t\tselected: true,\n\t\t\t\t\t...newRowObject,\n\t\t\t\t});\n\t\t\t\tonSelectedRowsChange([rowKey], [rowData]);\n\t\t\t\t// }\n\t\t\t}\n\t\t},\n\t\tonDoubleClick: ({rowData, rowIndex, rowKey}) => {\n\t\t\t// console.log('onDoubleClick', rowData, rowIndex, rowKey);\n\t\t\tonRowDoubleClick({rowData, rowIndex, rowKey});\n\t\t},\n\t\t// onContextMenu: console.log('context menu'),\n\t\t// onMouseEnter: console.log('mouse enter'),\n\t\t// onMouseLeave: console.log('mouse leave'),\n\t};\n\n\t/** Событие при сортировке */\n\tconst _onColumnSort = (sortBy) => {\n\t\t// console.log(\"sortBy\", sortBy);\n\t\ttableRef.current.scrollToRow(0, 'auto');\n\t\tsetSortBy(sortBy);\n\n\t\t// Для серверной сортировки - сбросить выделение\n\t\tif (type !== 'localSide') {\n\t\t\tsetSelectedRowKeys([]);\n\t\t}\n\t\tconst loadParams = {\n\t\t\tsortBy: sortBy,\n\t\t\tfilter: _filter,\n\t\t\tsearchLine: _searchValue,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t};\n\n\t/** Получение колонок таблицы */\n\tconst _getColumns = () => {\n\t\tlet _columns = [...columns];\n\n\t\t/** Создаем колонку с галочками (если надо) */\n\t\tif (selectable) {\n\t\t\tconst selectColumn = {\n\t\t\t\tkey: '__selection__',\n\t\t\t\theaderRenderer: SelectionHead,\n\t\t\t\tcellRenderer: SelectionCell,\n\t\t\t\twidth: 40,\n\t\t\t\tflexShrink: 0,\n\t\t\t\tresizable: false,\n\t\t\t\tfrozen: 'left',\n\t\t\t\trowKey: rowKey,\n\t\t\t\tparentKey: expandParentKey,\n\t\t\t\tselectedRowKeys: _selectedRowKeys,\n\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t\t\tnodeAssociated: nodeAssociated,\n\t\t\t\tonChange: _onChangeSelectHandler,\n\t\t\t\tselectAll: selectAll,\n\t\t\t\tonSelectAll: _onSelectAllHandler,\n\t\t\t};\n\t\t\t_columns.unshift(selectColumn);\n\t\t}\n\t\treturn _columns;\n\t};\n\n\t/** VIEW FUNCTIONS */\n\n\tconst _footer = (\n\t\t<React.Fragment>\n\t\t\t{_footerShow ? (\n\t\t\t\t\t<React.Fragment>\n                        {/*className={'BaseTable__footer__counter'}>*/}\n\t\t\t\t\t\t<div key={'footer-left-custom-side'} className={'left-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.leftCustomSideElement ? <FormItems items={footerProps.leftCustomSideElement} /> : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-center-custom-side'} className={'center-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.centerCustomSideElement ? <FormItems items={footerProps.centerCustomSideElement} /> : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-right-custom-side'} className={'right-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.rightCustomSideElement ? <FormItems items={footerProps.rightCustomSideElement} /> : null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{selectable ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('selected')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.selectedTitle} {_selectedRowKeys.length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('loaded')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.loadedTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{footerProps.showElements.includes('total')\n\t\t\t\t\t\t\t? type === 'infinity' && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad\n\t\t\t\t\t\t\t\t? <span>{footerProps.totalTitle} {_totalCountRows}</span>\n\t\t\t\t\t\t\t\t: <span>{footerProps.totalTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t: null}\n\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n\n\t/** Событие при рендере для стилизации */\n\tconst _rowClassName = ({rowData, rowIndex}) => {\n\t\tconst {rowClassName} = props;\n\t\treturn [\n\t\t\trowClassName,\n\t\t\t_selectedRowKeys.includes(rowData[rowKey]) && 'row-selected',\n\t\t\tzebraStyle ? (rowIndex % 2 === 0 ? 'even' : 'odd') : '',\n\t\t\t'bordered'\n\t\t].join(' ')\n\t};\n\n\t/** LOAD DATA FUNCTIONS */\n\tconst onEndReached = () => {\n\t\tlet selectAll;\n\t\tconst selectLength = _selectedRowKeys.length;\n\t\tif (selectLength === 0) selectAll = false;\n\t\telse if (selectLength > 0) selectAll = null;\n\n\t\tsetSelectAll(selectAll);\n\n\t\tif (type === 'infinity') {\n\t\t\tconst loadParams = {\n\t\t\t\tsortBy: _sortBy,\n\t\t\t\tfilter: _filter,\n\t\t\t\tsearchLine: _searchValue,\n\t\t\t\treload: false,\n\t\t\t};\n\t\t\t_dataProcessing(loadParams);\n\t\t}\n\t};\n\n\t/** SELECTABLE FUNCTIONS */\n\n\t/** Событие при изменении галочки одной строки */\n\tconst _onChangeSelectHandler = ({\n\t\tselected,\n\t\t_selectedRow,\n\t\t_selectAll,\n\t\t_selectedRowKeys,\n\t\t_selectedRowObjects,\n\t\t_indeterminateRowKeys,\n\t}) => {\n\t\tsetSelectedRowKeys(_selectedRowKeys);\n\t\tsetIndeterminateRowKeys(_indeterminateRowKeys);\n\t\tsetSelectAll(_selectAll);\n\t\t// setSelectedRow(_selectedRow);\n\n\t\t// let newSelectedObjects = [];\n\t\t// if (selected) {\n\t\t// \tif (!!expandColumnKey)\n\t\t// \t\tnewSelectedObjects = flatten(\n\t\t// \t\t\tgetTableRowObjects(rows, rowKey)\n\t\t// \t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]));\n\t\t// \telse\n\t\t// \t\tnewSelectedObjects = selectedRowObjects.concat([\n\t\t// \t\t\t_selectedRow.rowData,\n\t\t// \t\t]);\n\t\t// \t// setSelectedRowObjects(newSelectedObjects);\n\t\t// } else {\n\t\t// \tnewSelectedObjects = selectedRowObjects.filter(\n\t\t// \t\t(item) => item[rowKey] !== _selectedRow.rowData[rowKey]\n\t\t// \t);\n\t\t// \t// setSelectedRowObjects(newSelectedObjects);\n\t\t// }\n\t\t// console.log(\"_handleSelectChange\", props);\n\t\t// dispatchPath && props.setTableSelectedRow && props.setTableSelectedRow(dispatchPath, _selectedRow.rowData);\n\t\tselectedDispatchPath && props.setDataStore && props.setDataStore(selectedDispatchPath, _selectedRowObjects);\n\t\tonRowClick({\n\t\t\tselected,\n\t\t\trowData: _selectedRow.rowData,\n\t\t\trowIndex: _selectedRow.rowIndex,\n\t\t\trowKey,\n\t\t});\n\t\tonSelectedRowsChange(_selectedRowKeys, _selectedRowObjects);\n\t};\n\n\t/** Событие при изменении галочки \"Выделить все\" */\n\tconst _onSelectAllHandler = ({selected, rowKeys, rowObjects}) => {\n\t\tconst selectedKeys = selected ? rowKeys : [];\n\t\tsetSelectedRowKeys(selectedKeys);\n\t\tsetIndeterminateRowKeys([]);\n\t\tsetSelectAll(selected);\n\t\tselectedDispatchPath && props.setDataStore && props.setDataStore(selectedDispatchPath, selected ? rowObjects : []);\n\t\t// setSelectedRowObjects(rows);\n\t\t// console.log(\"_handleSelectAll\", selectedKeys);\n\t\tonSelectedRowsChange(selectedKeys, rowObjects);\n\t};\n\n\t/** TREE FUNCTIONS */\n\n\t/** Анализ дерева на пердмет квадратиков\n\t * Нужно для выделения по умолчанию свернутых элементов */\n\t// const _postLoadTreeAnalysis = () => {\n\t//     if (!!expandColumnKey && !expandLazyLoad) {\n\t//         let _indeterminateRowKeys = [];\n\t//         // console.log(\"mounted->selectedRowObjects: \", selectedRowObjects);\n\t//         selectedRowObjects.map((item) => {\n\t//             const [ss, ii] = parentAnalysis({\n\t//                 rowData: item,\n\t//                 rowKey,\n\t//                 parentKey: expandParentKey,\n\t//                 checked: true,\n\t//                 nodeAssociated,\n\t//                 treeData: _rows,\n\t//                 selectedRowKeys: _selectedRowKeys,\n\t//                 indeterminateRowKeys: _indeterminateRowKeys,\n\t//             });\n\t//             _indeterminateRowKeys.push(...ii);\n\t//         });\n\t//         setIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\n\t//     }\n\t// }\n\n\tconst _onExpandedRowsChange = (expandedRowKeys) => {\n\t\t// console.log(\"_onExpandedRowsChange\", expandedRowKeys);\n\t\tonExpandedRowsChange(expandedRowKeys);\n\t};\n\tconst _onRowExpand = ({expanded, rowData, rowIndex, rowKey}) => {\n\t\t// console.log(\"_onRowExpand\", rowData, expanded, rowIndex, rowKey);\n\t\tif (expanded) {\n\t\t\tsetExpandedRowKeys([..._expandedRowKeys, rowKey]);\n\n\t\t\tif (expandLazyLoad) {\n\t\t\t\tconst loadParams = {\n\t\t\t\t\tsortBy: _sortBy,\n\t\t\t\t\tfilter: {..._filter, [expandParentKey]: rowKey},\n\t\t\t\t\tsearchLine: _searchValue,\n\t\t\t\t\treload: false,\n\t\t\t\t\texpandRow: rowData,\n\t\t\t\t};\n\t\t\t\t// _callPropsOnLoad(loadParams);\n\t\t\t\t_dataProcessing(loadParams);\n\t\t\t}\n\t\t} else {\n\t\t\tlet expandedRowKeys = [..._expandedRowKeys];\n\t\t\tlet allChildKeys = flatten(\n\t\t\t\tgetTableRowKeys(rowData.children, props.rowKey)\n\t\t\t);\n\t\t\tallChildKeys.push(rowKey);\n\t\t\t// console.log('allChildKeys', allChildKeys);\n\t\t\tsetExpandedRowKeys(\n\t\t\t\texpandedRowKeys.filter((item) => !allChildKeys.includes(item))\n\t\t\t);\n\t\t}\n\t\tonRowExpand({expanded, rowData, rowIndex, rowKey});\n\t};\n\n\t/** COMMAND PANEL FUNCTIONS */\n\n\tconst _getDisabledElementsOfCommandPanel = () => {\n\t\t// console.log('commandPanelProps', commandPanelProps);\n\t\tlet _disabledElements = [...commandPanelProps.disabledElements];\n\t\tif (type === 'infinity') {\n\t\t\t_disabledElements.push('up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => infinity');\n        }\n\t\tif (selectable && _selectedRowKeys.length > 1) {\n\t\t\t_disabledElements.push('addAsCopy', 'edit', 'up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => selectable');\n        }\n\t\tif (_selectedRowKeys.length === 0) {\n\t\t\t_disabledElements.push('addAsCopy', 'edit', 'delete', 'up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => NO select');\n        }\n\t\t// if (expandColumnKey) {\n\t\t\t//|| !selectedRow) {\n\t\t\t// _disabledElements.push('up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => expandColumnKey');\n        // }\n        // console.log('_getDisabledElementsOfCommandPanel => ', _disabledElements, _selectedRowKeys);\n\n        return [...new Set(_disabledElements)];\n\t};\n\n\tconst _onClickAddAsCopy = (event) => {\n\t\t// console.log(\"_onClickAddAsCopy\", selectedRow);\n\t\tcommandPanelProps.onClickAddAsCopy(\n\t\t\tevent,\n\t\t\tfindNodeByRowKey(_rows, rowKey, _selectedRowKeys[0])\n\t\t);\n\t};\n\n\tconst _onClickEdit = (event) => {\n\t\t// console.log(\"_onClickEdit\", selectedRow);\n\t\tcommandPanelProps.onClickEdit(event, {\n\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t});\n\t\t// props.onClickEdit(event, selectedRow);\n\t};\n\n\tconst _onClickDelete = (event) => {\n\t\t// console.log(\"_onClickDelete\", autoDeleteRows, selectedRowKeys);\n\t\tif (autoDeleteRows) {\n\t\t\tif (type === 'localSide') {\n\t\t\t\tsetRowsHandler(\n\t\t\t\t\t_rows.filter(\n\t\t\t\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey])\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t_setRowsHandler(\n\t\t\t\t\t_rows.filter(\n\t\t\t\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey])\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tsetSelectedRowKeys([]);\n\t\t}\n\t\tcommandPanelProps.onClickDelete(event, _selectedRowKeys);\n\t};\n\n\tconst loop = (data, key, callback) => {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tif (data[i][rowKey] === key) {\n\t\t\t\t// console.log(`Selected => index: [${i}], path: [${data[i].path}]`, data);\n\t\t\t\treturn callback(data[i], i, data);\n\t\t\t} else {\n\t\t\t\t// console.log(`Other => index: [${i}], path: [${data[i].path}]`);\n\t\t\t}\n\t\t\tif (data[i].children) {\n\t\t\t\tloop(data[i].children, key, callback);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst _onClickUp = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index - 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data);\n\t\t\tcommandPanelProps.onClickUp(event, {\n\t\t\t\trowIndex: newRowIndex,\n\t\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t}, data);\n\t\t})\n\t};\n\n\tconst _onClickDown = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index + 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data);\n\t\t\tcommandPanelProps.onClickDown(event, {\n\t\t\t\trowIndex: newRowIndex,\n\t\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t}, data);\n\t\t})\n\t};\n\n\tconst _getNewIndexRow = (oldIndex, newIndex) =>\n\t\tnewIndex >= 0 && newIndex < _rows.length ? newIndex : oldIndex;\n\n\tconst _changeIndexRow = (oldIndex, newIndex, arr, data) => {\n\t\tif (newIndex >= 0 && newIndex < arr.length) {\n\t\t\t// let arr = [..._rows]; // Копируем массив\n\t\t\tconst item = arr.splice(oldIndex, 1); // Удаляем элемент со старого места\n\t\t\t// console.log('_changeIndexRow => ',item);\n\t\t\tarr.splice(newIndex > 0 ? newIndex : 0, 0, item[0]); // Ставим элемент на новое место\n\t\t\t// console.log(\"_changeIndexRow\", item[0]);\n\t\t\tif (type === 'localSide') {\n\t\t\t\tsetRowsHandler(data);\n\t\t\t} else {\n\t\t\t\t_setRowsHandler(data);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst _onSearch = (searchLine, e) => {\n        e.preventDefault();\n\t\t// console.log(\"_onSearch\", searchLine);\n        tableRef.current.scrollToRow(0, 'auto');\n\t\tsetSearchValue(searchLine);\n\t\tconst loadParams = {\n\t\t\tsortBy: _sortBy,\n\t\t\tfilter: _filter,\n\t\t\tsearchLine: searchLine,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t\tcommandPanelProps.onSearch(searchLine);\n\t};\n\n\t/** FILTER PANEL FUNCTIONS */\n\n\tconst _onChangeFilter = (filter) => {\n\t\t// console.log('_onChangeFilter', filter);\n\t\tsetHasMore(true);\n\t\tsetFilter(filter);\n\t\tfilterPanelProps.onChangeFilter(filter);\n\t};\n\tconst _onApplyFilter = (filter) => {\n\t\t// console.log('_onApplyFilter', filter);\n\t\tconst loadParams = {\n\t\t\tsortBy: _sortBy,\n\t\t\tfilter: filter,\n\t\t\tsearchLine: _searchValue,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t\tfilterPanelProps.onApplyFilter(filter);\n\t};\n\n\t/** SELECTED PANEL */\n\n\tconst _onClickDropSelectHandler = (dropObject) => {\n\t\tconst newSelectedKeys = _selectedRowKeys.filter(\n\t\t\t(item) => item !== dropObject[rowKey]\n\t\t);\n\t\tsetSelectedRowKeys(newSelectedKeys);\n\t\tonSelectedRowsChange(newSelectedKeys);\n\t};\n\n\t// const rowProps = {\n\t//     // tagName: 'button',\n\t//     // onClick: e => {\n\t//     //     e.preventDefault();\n\t//     //     e.stopPropagation();\n\t//     //     console.log(`You clicked row onClick`)\n\t//     // },\n\t//     onDoubleClick: e => {\n\t//         e.preventDefault();\n\t//         e.stopPropagation();\n\t//         console.log(`You clicked row onDoubleClick`)\n\t//     }\n\t// };\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`${rtPrefix}-table`}\n\t\t\tstyle={{width: '100%', height: '100%'}}\n\t\t>\n\t\t\t<div className={`${rtPrefix}-table-top-panel`}>\n\t\t\t\t<CommandPanel\n\t\t\t\t\t{...commandPanelProps}\n\t\t\t\t\tdefaultValueSearch={defaultSearchValue}\n\t\t\t\t\tdisabledElements={_getDisabledElementsOfCommandPanel()}\n\t\t\t\t\tonClickAddAsCopy={_onClickAddAsCopy}\n\t\t\t\t\tonClickDelete={_onClickDelete}\n\t\t\t\t\tonClickDown={_onClickDown}\n\t\t\t\t\tonClickEdit={_onClickEdit}\n\t\t\t\t\tonClickUp={_onClickUp}\n\t\t\t\t\tonSearch={_onSearch}\n\t\t\t\t/>\n\t\t\t\t{/*{!filter ? (*/}\n\t\t\t\t<FilterPanel\n\t\t\t\t\t{...filterPanelProps}\n\t\t\t\t\tdefaultFilter={defaultFilter}\n\t\t\t\t\tonChangeFilter={_onChangeFilter}\n\t\t\t\t\tonApplyFilter={_onApplyFilter}\n\t\t\t\t/>\n\t\t\t\t{/*) : null}*/}\n\t\t\t</div>\n\t\t\t<div className={`${rtPrefix}-baseTable`}>\n\t\t\t\t<AutoResizer>\n\t\t\t\t\t{({width, height}) => (\n\t\t\t\t\t\t<BaseTable\n\t\t\t\t\t\t\tref={tableRef}\n\t\t\t\t\t\t\t/** Required */\n\t\t\t\t\t\t\tcolumns={_getColumns()}\n\t\t\t\t\t\t\tdata={_rows}\n\t\t\t\t\t\t\t/** Control Props */\n\t\t\t\t\t\t\tsortBy={_sortBy}\n\t\t\t\t\t\t\t/** Base Props */\n\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\trowKey={rowKey}\n\t\t\t\t\t\t\t// rowProps={rowProps}\n\n\t\t\t\t\t\t\t/** View Props */\n\t\t\t\t\t\t\trowClassName={_rowClassName}\n\t\t\t\t\t\t\temptyRenderer={empty}\n\t\t\t\t\t\t\tfixed={fixWidthColumn}\n\t\t\t\t\t\t\tfooterHeight={_footerShow ? footerProps.height : 0}\n\t\t\t\t\t\t\theaderHeight={headerHeight}\n\t\t\t\t\t\t\trowHeight={rowHeight}\n\t\t\t\t\t\t\toverlayRenderer={loading ? overlay : null}\n\t\t\t\t\t\t\tfooterRenderer={_footer}\n\t\t\t\t\t\t\trowRenderer={rowRenderer}\n\t\t\t\t\t\t\testimatedRowHeight={estimatedRowHeight}\n\t\t\t\t\t\t\t/** Load Data Props */\n\t\t\t\t\t\t\tonEndReachedThreshold={loadThreshold}\n\t\t\t\t\t\t\tonEndReached={\n\t\t\t\t\t\t\t\ttype === 'infinity' ? onEndReached : undefined\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t/** Tree Props */\n\t\t\t\t\t\t\texpandColumnKey={expandColumnKey}\n\t\t\t\t\t\t\texpandedRowKeys={_expandedRowKeys}\n\t\t\t\t\t\t\t/** Events */\n\t\t\t\t\t\t\tonColumnSort={_onColumnSort}\n\t\t\t\t\t\t\trowEventHandlers={_rowEventHandlers}\n\t\t\t\t\t\t\tonExpandedRowsChange={_onExpandedRowsChange}\n\t\t\t\t\t\t\tonRowExpand={_onRowExpand}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</AutoResizer>\n\t\t\t</div>\n\t\t\t{showSelection && selectable && !expandColumnKey ? (\n\t\t\t\t<SelectionList\n\t\t\t\t\tonClickDropSelect={_onClickDropSelectHandler}\n\t\t\t\t\tselectedRowObjects={flatten(\n\t\t\t\t\t\tgetTableRowObjects(_rows, rowKey)\n\t\t\t\t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]))}\n\t\t\t\t\trowRender={rowRenderShowSelection}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</div>\n\t);\n});\n\nTable.propTypes = {\n\t/**\n\t * REQUIRED\n\t * */\n\n\t/** Столбцы таблицы */\n\tcolumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Тип таблицы\n\t * **infinity** - загрузка данных по скроллу. Фильтрация, сортировка и поиск через сервер.\n\t * **serverSide** - первичная загрузка таблицы с сервера. Фильтрация, сортировка и поиск через сервер. Lazy Load для дерева тоже тут.\n\t * **localSide** - полностью локальная таблица. Фильтрация, сортировка и поиск через локальный rows */\n\ttype: PropTypes.oneOf(['infinity', 'serverSide', 'localSide']).isRequired,\n\n\t/** Объект со свойствами Command Panel */\n\tcommandPanelProps: PropTypes.object,\n\n\t/** Объект со свойствами Filter Panel */\n\tfilterPanelProps: PropTypes.object,\n\n\t/**\n\t * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n\t * */\n\n\t/** Строки по умолчанию */\n\tdefaultRows: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Ключи выделенных по умолчанию строк */\n\tdefaultSelectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска по умолчанию строк */\n\tdefaultSearchValue: PropTypes.string,\n\n\t/** Объект фильтрации по умолчанию */\n\tdefaultFilter: PropTypes.object,\n\n\t/** Сортировка по умолчанию */\n\tdefaultSortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n\t * */\n\n\t/** Строки таблицы. Используется для контроля таблицы из вне. */\n\trows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Функция задания строк таблицы. */\n    setRows: PropTypes.func,\n\n\t/** Выделенные строки таблицы. */\n\tselectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Объект фильтрации */\n\tfilter: PropTypes.object,\n\n\t/** Объект сортировки */\n\tsortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * BASE PROPS\n\t * */\n\n\t/** Автоудаление строк из таблицы по кнопке в командной панели*/\n\tautoDeleteRows: PropTypes.bool,\n\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/**\n\t * VIEW PROPS\n\t * */\n\n\t/** Вывод когда нет данных */\n\tempty: PropTypes.element,\n\n\t/** Отображение загрузки данных */\n\toverlay: PropTypes.element,\n\n\t/** Фиксированная ширина столбцов. Появится боковой скрол */\n\tfixWidthColumn: PropTypes.bool,\n\n\t/** Высота подвала */\n\tfooterHeight: PropTypes.number,\n\n\t/** Отображать ли подвал */\n\tfooterShow: PropTypes.bool,\n\n    /** Заголовки футтера */\n    footerTitles: PropTypes.shape({\n\t\t/** Заголовок выделенных элементов */\n        selectedRows: PropTypes.string,\n\t\t/** Заголовок загруженных элементов */\n        loadedRows: PropTypes.string,\n\t\t/** Заголовок всего элементов */\n\t\ttotalRows: PropTypes.string,\n    }),\n\n\tfooterProps: PropTypes.shape({\n\n\t\t/** Высота подвала */\n\t\theight: PropTypes.number,\n\n\t\t/** Массив элементов футтера, которые надо отобразить\n\t\t * ['selected', 'loaded', 'total'] */\n\t\tshowElements: PropTypes.arrayOf(PropTypes.string),\n\n\t\t/** Заколовок для кол-ва выбранных объектов */\n\t\tselectedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва загруженны объектов */\n\t\tloadedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва всего объектов */\n\t\ttotalTitle: PropTypes.string,\n\n\t\t/** Левый кастомный элемент командной панели */\n\t\tleftCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/** Центральный кастомный элемент командной панели */\n\t\tcenterCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/** Правый кастомный элемент командной панели */\n\t\trightCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\t}),\n\n\t/** Высота заголовка таблицы */\n\theaderHeight: PropTypes.number,\n\n\t/** Высота строки таблицы */\n\trowHeight: PropTypes.number,\n\n\t/** Custom row renderer\n\t * Параметры - ({ isScrolling, cells, columns, rowData, rowIndex, depth }) */\n\trowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n\t/** Строки будут в зебро-стиле */\n\tzebraStyle: PropTypes.bool,\n\n\t/**\n\t * LOAD DATA PROPS\n\t * */\n\n\t/** Порог в пикселях для вызова _onLoad.\n\t * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n\tloadThreshold: PropTypes.number,\n\n\t/** Размер страницы */\n\tpageSize: PropTypes.number,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\t/**\n\t * SELECTABLE PROPS\n\t * */\n\n\t/** Таблица с возможностью выбора строки */\n\tselectable: PropTypes.bool,\n\n\t/**\n\t * TREE PROPS\n\t * */\n\n\t/** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\n\tnodeAssociated: PropTypes.bool,\n\n\t/** Ключ колонки по которой строить иерархию */\n\texpandColumnKey: PropTypes.string,\n\n\t/** Открыть по умолчанию вложенность до уровня N или 'All' */\n\texpandDefaultAll: PropTypes.bool,\n\n\t/** Загружать ноды иерархии по одной */\n\texpandLazyLoad: PropTypes.bool,\n\n\t/** Поле в котором хранится ссылка на родителя */\n\texpandParentKey: PropTypes.string,\n\n\t/**\n\t * EVENTS\n\t * */\n\n\t/** Событие при клике на строку (только при selectable = false)\n\t * Параметр - ({selected, rowData, rowIndex}) */\n\tonRowClick: PropTypes.func,\n\n\t/** Событие при двойном клике на строку.\n\t * Параметр - ({rowData, rowIndex, rowKey}) */\n\tonRowDoubleClick: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * Парметры - ({ expanded, rowData, rowIndex, rowKey }) */\n\tonRowExpand: PropTypes.func,\n\n\t/** Событие при выборе строки.\n\t * Параметр - массив выбранных строе (только rowKey) */\n\tonSelectedRowsChange: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * Парметры - (expandedRowKeys) - массив ключей открытых нод */\n\tonExpandedRowsChange: PropTypes.func,\n\n\t/** SELECTED PANEL */\n\n\t/** Отображать ли панель выбранных элементов */\n\tshowSelection: PropTypes.bool,\n\n\t/** Строка или функция для отображения элементов списка выбранных\n\t * Строка - имя поля\n\t * Функция - рендер строк.\n\t * `({ rowData, rowIndex }) => { return <Component> }` */\n\trowRenderShowSelection: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.string,\n\t]),\n\n\t/** Путь в сторе куда класть выбранную строку таблицы */\n\tdispatchPath: PropTypes.string,\n\n\t/** Объект для подписки на изменения в STORE */\n\tsubscribe: PropTypes.object,\n};\n\nTable.defaultProps = {\n\tdefaultRows: [],\n\tdefaultSelectedRowKeys: [],\n\tdefaultSearchValue: '',\n\tdefaultFilter: {},\n\tdefaultSortBy: {},\n\n\trows: [],\n\tselectedRowKeys: [],\n\tsearchValue: '',\n\tfilter: {},\n\tsortBy: {},\n\n\tautoDeleteRows: true,\n\trowKey: 'id',\n\n\tempty: empty,\n\toverlay: overlay,\n\tfixWidthColumn: false,\n\tfooterHeight: 30,\n\tfooterShow: false,\n    footerTitles: {\n        selectedRows: 'Выделено:',\n        loadedRows: 'Загружено записей:',\n        totalRows: 'Всего записей:',\n    },\n\tfooterProps: {\n\t\theight: 30,\n\t\tshowElements: [],\n\t\tselectedTitle: 'Выделено:',\n\t\tloadedTitle: 'Загружено записей:',\n\t\ttotalTitle: 'Всего записей:',\n\t\tleftCustomSideElement: null,\n\t\tcenterCustomSideElement: null,\n\t\trightCustomSideElement: null\n\t},\n\theaderHeight: 30,\n\trowHeight: 30,\n\tzebraStyle: false,\n\n\tloadThreshold: 300,\n\tpageSize: 50,\n\trequestLoadRows: noop,\n    requestLoadCount: noop,\n\tsearchParamName: 'searchLine',\n\n\tselectable: false,\n\n\tnodeAssociated: true,\n\texpandColumnKey: undefined,\n\texpandDefaultAll: true,\n\texpandLazyLoad: false,\n\texpandParentKey: 'parentId',\n\n\tonRowClick: noop,\n\tonRowDoubleClick: noop,\n\tonRowExpand: noop,\n\tonSelectedRowsChange: noop,\n\tonExpandedRowsChange: noop,\n\n\tshowSelection: false,\n\n\tsubscribe: {},\n};\n\nconst mapStateToProps = (store, ownProps) => {\n\tconst {subscribe} = ownProps;\n\tif(subscribe){\n\t\tconst {name, path} = subscribe;\n\t\tif(name && path)\n\t\t\treturn { [name]: objectPath.get(store, path) };\n\t}\n\n\treturn {};\n};\nconst mapDispatchToProps = (dispatch) =>\n\tbindActionCreators({ setDataStore: setDataStore}, dispatch);\n\n// const mapStateToProps = (store, ownProps) => {\n//     // console.log(\"mapStateToProps -> store\", store);\n//     // const {match , section} = ownProps;\n//     // const { path } = match;\n//     // const rows = store.table[path] && store.table[path][section] ? store.table[path][section].rows : [];\n//     // console.log(\"mapStateToProps -> rows\", rows);\n//     return { store: store };\n// };\n// const mapDispatchToProps = (dispatch, ownProps) => {\n//     // console.log(\"mapDispatchToProps -> ownProps\", ownProps);\n//     // const {match , section} = ownProps;\n//     // const { path } = match;\n//     // initTableStore(path, section);\n//     return bindActionCreators(\n//         {\n//             initTableStore,\n//             setRows,\n//         },\n//         dispatch\n//     );\n// };\n//\n// export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\n\n/**\n * @deprecated [#1] since version 0.0.54 [#2].\n * */\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\n","import React, {useEffect, useState, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { flatten, getTableRowKeys, noop, notificationError } from \"../../utils/baseUtils\";\nimport {rtPrefix} from '../../utils/variables';\nimport {Button, Typography} from 'antd';\nimport { DownOutlined, UpOutlined, CloseCircleFilled } from '@ant-design/icons'\nimport Table from '../Table/Table';\nimport { setDataStore } from \"../../../redux/rtd.actions\";\nconst {Paragraph} = Typography;\n\nconst Select = (props) => {\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n\tconst [_selectedRowData, _setSelectedRowData] = useState(null);\n\tconst [isSelectOpened, setIsSelectOpened] = useState(false);\n\tconst [isClickInSelect, setIsClickInSelect] = useState(false);\n\n\tconst {\n\t\tname,\n\t\trowRender,\n        className,\n\t\ttype,\n\t\ttitle,\n\t\tplaceholder,\n        selectedRowKeys,\n\t\t// searchable,\n        size,\n\t\twidthControl,\n\t\twidthPopup,\n\t\theightPopup,\n\n\t\tonChangeKeys,\n        defaultValue,\n        value,\n\n\t\t/** Table Props */\n\t\tdefaultSelectedRowKeys,\n\t\trowKey,\n\t\texpandColumnKey,\n\t\tshowSelection,\n\t\trequestLoadRows,\n\t\trequestLoadDefault,\n        commandPanelProps,\n\t\trows,\n\t\tdispatchPath,\n\t} = props;\n\n\tconst selectedDispatchPath = dispatchPath && `${dispatchPath}.selected`;\n\tconst searchable = commandPanelProps && commandPanelProps.showElements && commandPanelProps.showElements.includes('search');\n\tconst node = useRef(null);\n\n\tconst setSelectedRowData = (rowData) => {\n\t\tselectedDispatchPath && props.setDataStore && props.setDataStore(selectedDispatchPath, rowData);\n\t\t_setSelectedRowData(rowData);\n\t}\n\n\tconst loadSelectedObject = ({selectedRowKeys}) => {\n        if(selectedRowKeys) {\n            let _selectedRowKeys;\n\t\t\tif(Array.isArray(selectedRowKeys)) {\n\t\t\t\tsetSelectedRowKeys(selectedRowKeys);\n\t\t\t\t_selectedRowKeys = selectedRowKeys\n\t\t\t}\n            else {\n            \tsetSelectedRowKeys([selectedRowKeys]);\n\t\t\t\t_selectedRowKeys = [selectedRowKeys]\n\t\t\t}\n\n\t\t\t// console.log(\"setSelectedRowKeys[70] -> \", _selectedRowKeys);\n\n\t\t\tconst request = requestLoadDefault\n                ? requestLoadDefault\n                : requestLoadRows;\n\n            if (!!request && !rows && _selectedRowKeys.length > 0) {\n                // console.log('defaultSelectedRowKeys ', defaultSelectedRowKeys, defaultSelectedRowKeys.length);\n                request({\n                    data: {\n                        [rowKey]:  _selectedRowKeys, //defaultSelectedRowKeys,\n                    },\n                })\n                    .then((response) => {\n                        let result = response.data;\n\t\t\t\t\t\t// console.log(\"setSelectedRowData[84] => \", response.data);\n\t\t\t\t\t\tif (result.length > 0) setSelectedRowData(result[0]);\n                    })\n\t\t\t\t\t.catch(error => notificationError(error, 'Ошибка загрузки данных в Select') );\n\n            } else if (rows && _selectedRowKeys && type === 'SingleSelect') {\n            \tlet srk = _selectedRowKeys[0];\n\t\t\t\t// if(Array.isArray(selectedRowKeys) && selectedRowKeys.length > 0)\n\t\t\t\t// \tsrk = selectedRowKeys[0];\n            \t// else\n\t\t\t\t// \tsrk = selectedRowKeys;\n\n                const findRow = rows.find((row) => row[rowKey] === srk);\n                // console.log(\"setSelectedRowData[98] => \", findRow, rows, srk);\n                setSelectedRowData(findRow);\n            } else {\n                setSelectedRowData(null);\n            }\n        }\n\t};\n\n\tuseEffect(() => {\n        loadSelectedObject({selectedRowKeys: defaultSelectedRowKeys});\n\t\twindow.addEventListener('mousedown', handleMouseClick, false);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('mousedown', handleMouseClick, false);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// console.log(\"selectedRowKeys\", selectedRowKeys);\n        loadSelectedObject({selectedRowKeys: selectedRowKeys});\n    }, [selectedRowKeys]);\n\n\tuseEffect(() => {\n\t\tif(_selectedRowKeys !== undefined && _selectedRowData === undefined){\n\t\t\t// console.log(\"useEffect rows\", _selectedRowKeys, _selectedRowData, rows);\n\t\t\tloadSelectedObject({selectedRowKeys: _selectedRowKeys});\n\t\t}\n\t}, [rows])\n\n\tuseEffect(() => {\n\t\t// console.log(\"isClickInSelect \", isClickInSelect);\n\t\t// console.log(\"isSelectOpened \", isSelectOpened);\n\t\tif(!isClickInSelect && isSelectOpened)\n\t\t\tonClosePopup();\n\t}, [isClickInSelect]);\n\n\t// useEffect(() => {\n\t// \t// console.log(\"setSelectedRowData[117] => \", props.value, props.defaultValue);\n\t// }, [props])\n\n\tconst columns = [\n\t\t{\n\t\t\tkey: rowKey,\n\t\t\ttitle: title,\n\t\t\tdataKey: rowKey,\n\t\t\twidth: 500,\n\t\t\tcellRenderer:\n\t\t\t\ttypeof rowRender === 'function'\n\t\t\t\t\t? rowRender\n\t\t\t\t\t: ({rowData}) => <div className={'rt-table-cell'}>{rowData[rowRender]}</div>,\n\t\t},\n\t];\n\n\tconst _getHeadCls = () => {\n\t    let cls = [`${rtPrefix}-select-header`];\n\n\t    if(isSelectOpened)\n            cls.push('opened');\n\n\t    if(_selectedRowKeys && _selectedRowKeys.length > 0)\n\t        cls.push('selected');\n\n\t    switch (size) {\n            case 'small':\n                cls.push(`${rtPrefix}-select-header-sm`);\n                break;\n            case 'large':\n                cls.push(`${rtPrefix}-select-header-lg`);\n                break;\n            default: break;\n        }\n\n\t    return cls.join(' ');\n    };\n\n\tconst _getHeadText = () => {\n\t\tif (type === 'SingleSelect') {\n\t\t\t\tif(_selectedRowData)\n\t\t\t\t\tif(typeof rowRender === 'function')\n\t\t\t\t\t\treturn rowRender({rowData: _selectedRowData});\n\t\t\t\t\telse\n\t\t\t\t\t\treturn `${_selectedRowData[rowRender]}`;\n\t\t\t\telse\n\t\t\t\t\treturn `${placeholder}`;\n\t\t} else {\n\t\t\treturn _selectedRowKeys.length > 0\n\t\t\t\t? `Выбрано: ${_selectedRowKeys.length}`\n\t\t\t\t: `${placeholder}`;\n\t\t}\n\t};\n\n    const _getPopupCls = () => {\n    \t// console.log('_getPopupCls _selectedRowKeys => ', _selectedRowKeys);\n        let cls = [`${rtPrefix}-select-popup`];\n\n        if(title)\n            cls.push(`${rtPrefix}-select-popup-with-title`);\n\n        return cls.join(' ');\n    };\n\tconst _getPopupStyle = () => {\n\t\t// if (heightPopup)\n\t\t// \treturn {height: `${heightPopup}px`, width: `${widthPopup}px`};\n\n\t\tlet height = {};\n\t\tlet defRowsLen = 0;\n\n\t\tif (!requestLoadRows && rows)\n\t\t\tif (expandColumnKey)\n\t\t\t\tdefRowsLen = flatten(getTableRowKeys(rows, rowKey)).length;\n\t\t\telse defRowsLen = rows.length;\n\n\t\t// console.log('_getPopupStyle', defRowsLen);\n\t\tif (defRowsLen && defRowsLen > 0) {\n\t\t\theight =\n\t\t\t\tdefRowsLen * 30 + // Кол-во строк * высоту строки\n\t\t\t\t(searchable ? 46 : 0) + // Размер поисковой строки или 0\n\t\t\t\t(type === 'MultiSelect' ? 65 : 0) + // Размер футтера (30) + размер кнопки 35 или 0\n\t\t\t\t(showSelection ? 200 : 0) + // Размер панели выбранных элементов или 0\n\t\t\t\t22; // Паддинги и бордер\n\t\t\t// console.log('heightPopup', height);\n\t\t\tif (height > heightPopup) height = `${heightPopup}px`;\n\t\t\telse height = `${height}px`;\n\t\t} else {\n\t\t\t// console.log(\"heightPopup\", heightPopup);\n\t\t\theight = `${heightPopup}px`;\n\t\t}\n\n\t\t// console.log(\"heightPopup, widthPopup\", heightPopup, widthPopup);\n\t\treturn {height, width: `${widthPopup}px`};\n\t};\n\n\tconst getEvents = () => {\n\t\treturn (commandPanelProps && commandPanelProps.systemBtnProps && Object.keys(commandPanelProps.systemBtnProps)) || [];\n\t};\n\n\tconst _onChange = (selectedKeys) => {\n\t\t// console.log('_onChange [176]', selectedKeys);\n\t\tsetSelectedRowKeys(selectedKeys);\n\t\t// setSelectedRowData(selectedObjects);\n\t\tonChangeKeys(name, selectedKeys.length ? selectedKeys : null);\n\t\t// onChangeObjects(name, selectedObjects.length ? selectedObjects : null);\n\t\t// setCountSelect(selectedKeys.length);\n\t\tif (type === 'SingleSelect') {\n\t\t\tsetIsSelectOpened(false);\n\t\t}\n\t};\n\n\tconst _SingleSelectRow = ({selected, rowData, rowIndex}) => {\n\t\t// console.log(\"_SingleSelectRow => \", rowData);\n\t\tsetSelectedRowData(rowData);\n\t\t// selected ? setSingleSelectRowData(rowData) : setSingleSelectRowData({})\n\t};\n\n\tconst handleMouseClick = (e) => {\n\t\tnode && node.current && setIsClickInSelect(node.current.contains(e.target))\n\t};\n\n\tconst onClosePopup  = () => {\n\t\tsetIsSelectOpened(false);\n\t};\n\n\tconst onOpenPopup = () => {\n\t\tif(!isSelectOpened)\n\t\t\tsetIsSelectOpened(true);\n\t\telse\n\t\t\tsetIsSelectOpened(false);\n\t};\n\n\tconst onClickClear = () => {\n\t\t// console.log(\"delete Selected\");\n\t\tsetSelectedRowData(null);\n\t\t_onChange([]);\n\t};\n\n\treturn (\n\t\t<div\n            className={`${rtPrefix}-select ${className ? className : ''}`}\n\t\t\tref={node}\n\t\t>\n\t\t\t{title ? <div className={'title'}>{title}</div> : null}\n\t\t\t<div\n\t\t\t\tclassName={_getHeadCls()}\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: widthControl === 0 ? '100%' : `${widthControl}px`,\n\t\t\t\t}}\n\n\t\t\t>\n\t\t\t\t<div className={`${rtPrefix}-select-selector`}\n\t\t\t\t\t // onFocus={ () => {setIsSelectOpened(true)} }\n\t\t\t\t\t onClick={ onOpenPopup }\n\t\t\t\t>\n\t\t\t\t\t<Paragraph ellipsis> {_getHeadText()} </Paragraph>\n\t\t\t\t</div>\n                {isSelectOpened ? <UpOutlined onClick={ onOpenPopup } className={`${rtPrefix}-select-header-icon`} /> : <DownOutlined onClick={ onOpenPopup } className={`${rtPrefix}-select-header-icon`}/> }\n\t\t\t\t{/*<Button shape=\"circle\" icon={<CloseCircleFilled />} onClick={() => console.log(\"delete Selected\")} className={`${rtPrefix}-select-header-clear`} />*/}\n\t\t\t\t{_selectedRowKeys.length > 0 ? <CloseCircleFilled onClick={onClickClear} className={`${rtPrefix}-select-header-clear`}/> : null }\n\t\t\t</div>\n\n\t\t\t{isSelectOpened ? (\n\t\t\t\t<div className={_getPopupCls()} style={_getPopupStyle()}>\n\t\t\t\t\t<Table\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t\tcommandPanelProps={{\n\t\t\t\t\t\t\t...props.commandPanelProps,\n\t\t\t\t\t\t\tshowElements: getEvents(),// getShowElements(),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdefaultSelectedRowKeys={_selectedRowKeys}\n                        selectedRowKeys={_selectedRowKeys}\n\t\t\t\t\t\theaderHeight={0}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\ttype={!!requestLoadRows ? 'serverSide' : 'localSide'}\n\t\t\t\t\t\t// showElements={searchable ? ['search'] : undefined}\n\t\t\t\t\t\tselectable={type === 'MultiSelect'}\n\t\t\t\t\t\tfooterShow={type === 'MultiSelect'}\n\t\t\t\t\t\tshowSelection={showSelection}\n\t\t\t\t\t\trowRenderShowSelection={rowRender}\n\t\t\t\t\t\tonRowClick={_SingleSelectRow}\n\t\t\t\t\t\tonSelectedRowsChange={_onChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{type === 'MultiSelect' ? (\n\t\t\t\t\t\t<div className={'close-panel'}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={() => setIsSelectOpened(false)}\n\t\t\t\t\t\t\t\tsize={'small'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tOk\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\nSelect.propTypes = {\n\t/** Имя параметра селекта (вернется в onChangeKeys и onChangeObjects) */\n\tname: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.number,\n\t\tPropTypes.arrayOf(\n\t\t\tPropTypes.oneOfType(\n\t\t\t\t[PropTypes.string, PropTypes.number]\n\t\t\t)\n\t\t)]).isRequired,\n\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { rowData, rowIndex }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n\t\t.isRequired,\n\n\t/** Тип селекта (SingleSelect и MultiSelect) */\n\ttype: PropTypes.oneOf(['SingleSelect', 'MultiSelect']).isRequired,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Заголовок фильтра */\n\ttitle: PropTypes.string,\n\n\t/** Строка, когда ничего не выбрано */\n\tplaceholder: PropTypes.string,\n\n\t/** Запрос на загрузку дефолтных данных */\n\trequestLoadDefault: PropTypes.func,\n\n    /** Массив выбранных значений */\n    selectedRowKeys: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n\n    /** Размер селектора ['small', 'middle', 'large'] */\n    size: PropTypes.oneOf(['small', 'middle', 'large']),\n\n\t// /** Показывать ли поисковую строку */\n\t// searchable: PropTypes.bool,\n\n\t/** Ширина поля выбора в пикселях */\n\twidthControl: PropTypes.number,\n\n\t/** Ширина выпадающего меню */\n\twidthPopup: PropTypes.number,\n\n\t/** Высота выпадающего меню (по умолчанию считается сама) */\n\theightPopup: PropTypes.number,\n\n    /** Событие об изменении состояния селектора */\n\tonChangeKeys: PropTypes.func,\n\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/** Высота строки таблицы */\n\trowHeight: PropTypes.number,\n\n\t/** Строки будут в зебро-стиле */\n\tzebraStyle: PropTypes.bool,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadCount: PropTypes.func,\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\t/** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\n\tnodeAssociated: PropTypes.bool,\n\n\t/** Ключ колонки по которой строить иерархию */\n\texpandColumnKey: PropTypes.string,\n\n\t/** Открыть по умолчанию вложенность до уровня N или 'All' */\n\texpandDefaultAll: PropTypes.bool,\n\n\t/** Загружать ноды иерархии по одной */\n\texpandLazyLoad: PropTypes.bool,\n\n\t/** Поле в котором хранится ссылка на родителя */\n\texpandParentKey: PropTypes.string,\n};\n\nSelect.defaultProps = {\n\tonChangeKeys: noop,\n\t// onChangeObjects: noop,\n\tplaceholder: 'Выбрать',\n\t// searchable: false,\n    size: 'middle',\n\twidthControl: 110,\n\twidthPopup: 400,\n\theightPopup: 600,\n    rowKey: 'id',\n\trowHeight: 30,\n\tzebraStyle: false,\n\n\trequestLoadDefault: undefined,\n\trequestLoadRows: undefined,\n\trequestLoadCount: undefined,\n\tsearchValue: '',\n\tsearchParamName: 'searchLine',\n\n\tnodeAssociated: true,\n\texpandColumnKey: undefined,\n\texpandDefaultAll: true,\n\texpandLazyLoad: false,\n\texpandParentKey: 'parentId',\n};\nconst mapDispatchToProps = (dispatch) =>\n\tbindActionCreators({ setDataStore: setDataStore}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(Select);\n","import React, {forwardRef, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '../Table/Table';\nimport { notification, Typography } from \"antd\";\nimport { notificationError } from \"../../utils/baseUtils\";\n\nconst AdvancedTable = forwardRef((props, ref) => {\n\tconst [config, setConfig] = useState({});\n\n\tconst {\n\t\tconfigData,\n        customColumnProps,\n\t\tdefaultFilter,\n\t\texpandColumnKey,\n\t\texpandLazyLoad,\n\t\texpandParentKey,\n\t\tpageSize,\n\t\trowKey,\n\t\trequestLoadConfig,\n\t} = props;\n\n\tuseEffect(() => {\n        let cleanupFunction = false;\n        const loadData = async () => {\n            if (requestLoadConfig) {\n                // console.log('requestLoadConfig => ', typeof requestLoadConfig);\n                // console.log('requestLoadRows => ', typeof props.requestLoadRows);\n                requestLoadConfig()\n                    .then((response) => {\n                        // let result = response.data;\n                        // console.log('requestLoadConfig -> ', response.data);\n                        if(!cleanupFunction)\n                            setConfig(response.data);\n                    })\n                    .catch(error => notificationError(error, 'Ошибка получения конфигурации') );\n            } else {\n                if(!cleanupFunction)\n                    setConfig(configData);\n            }\n        };\n        loadData();\n        return () => cleanupFunction = true;\n\t}, []);\n\n\tconst columnsByConfig = () =>\n\t\tconfig &&\n\t\tconfig.fields &&\n\t\tconfig.fields.map((item) => {\n\n\t\t\tconst colProps =\n                customColumnProps &&\n                customColumnProps.find(\n                    (render) =>\n                        render.name === item.name || render.name === item.alias\n                );\n\t\t\treturn {\n\t\t\t\tkey: item.name,\n\t\t\t\ttitle: item.header ? item.header : item.name,\n\t\t\t\tdataKey: item.alias ? item.alias : item.name,\n\t\t\t\talign: item.align,\n\t\t\t\twidth: item.width,\n\t\t\t\tresizable: item.resizable,\n\t\t\t\tsortable: item.sortable,\n\t\t\t\thidden: !item.visible,\n\t\t\t\t// cellRenderer: cellR && cellR.cellRender,\n                ...colProps,\n                cellRenderer: (object) => {\n\t\t\t\t\tif (colProps && colProps.cellRenderer)\n\t\t\t\t\t\treturn <colProps.cellRenderer {...object}/>\n\t\t\t\t\t// return colProps.cellRenderer(object) ? colProps.cellRenderer(object) : '---';\n\t\t\t\t\telse\n\t\t\t\t\t\treturn object.cellData\n\t\t\t\t\t\t\t? <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>{object.cellData}</Typography.Text>\n\t\t\t\t\t\t\t: <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>---</Typography.Text> ;\n\t\t\t\t\t// return object.cellData ? object.cellData : '---';\n                },\n\t\t\t};\n\t\t});\n\n\tconst getDefaultFilter = () => {\n\t\tif (config && config.hierarchical && config.hierarchyLazyLoad) {\n\t\t\tconst parentKey = config.hierarchyField\n\t\t\t\t? config.hierarchyField.split('/')[1]\n\t\t\t\t: expandParentKey;\n\t\t\treturn {...defaultFilter, [parentKey]: null};\n\t\t} else return defaultFilter;\n\t};\n\n\tif (config && config.fields) {\n\t\t// console.log('AdvancedTable render table -> ', config);\n\t\treturn (\n\t\t\t<Table\n\t\t\t\t{...props}\n\t\t\t\tref={ref}\n\t\t\t\tcolumns={columnsByConfig()}\n\t\t\t\tdefaultFilter={getDefaultFilter()}\n\t\t\t\trowKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyField\n\t\t\t\t\t\t? config.hierarchyField.split('/')[0]\n\t\t\t\t\t\t: rowKey\n\t\t\t\t}\n\t\t\t\texpandParentKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyField\n\t\t\t\t\t\t? config.hierarchyField.split('/')[1]\n\t\t\t\t\t\t: expandParentKey\n\t\t\t\t}\n\t\t\t\texpandColumnKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyView\n\t\t\t\t\t\t? config.hierarchyView\n\t\t\t\t\t\t: expandColumnKey\n\t\t\t\t}\n\t\t\t\texpandLazyLoad={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyLazyLoad\n\t\t\t\t\t\t? config.hierarchyLazyLoad\n\t\t\t\t\t\t: expandLazyLoad\n\t\t\t\t}\n\t\t\t\tpageSize={config && config.hierarchical ? 1 : pageSize}\n\t\t\t/>\n\t\t);\n\t} else return null;\n});\n\nAdvancedTable.propTypes = {\n\t/** Функция запроса на получение конфига для таблицы */\n\trequestLoadConfig: PropTypes.func,\n\n\t/** Конфигурация внешнего вида таблицы */\n\tconfigData: PropTypes.shape({\n\t\thierarchical: PropTypes.bool,\n\t\thierarchyField: PropTypes.string,\n\t\thierarchyView: PropTypes.string,\n\t\thierarchyLazyLoad: PropTypes.bool,\n\t\tfields: PropTypes.arrayOf(\n\t\t\tPropTypes.shape({\n\t\t\t\tname: PropTypes.string,\n\t\t\t\talias: PropTypes.string,\n\t\t\t\theader: PropTypes.string,\n\t\t\t\tvisible: PropTypes.bool,\n\t\t\t\tresizable: PropTypes.bool,\n\t\t\t\tsortable: PropTypes.bool,\n\t\t\t\talign: PropTypes.oneOf(['left', 'center', 'right']),\n\t\t\t\twidth: PropTypes.number,\n\t\t\t})\n\t\t),\n\t}),\n\n\t/** Дополнительные пропсы для колонок */\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\n};\n\nAdvancedTable.defaultProps = {};\n\nexport default AdvancedTable;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormItems from \"./FormItems\";\nimport { Form as AntForm, notification } from \"antd\";\nimport { getObjectExcludedProps, noop, notificationError } from \"../../utils/baseUtils\";\nimport { rtPrefix } from \"../../utils/variables\";\n\nconst excludeProps = [\"noPadding\", \"scrollable\", \"header\", \"body\", \"footer\", \"loadInitData\", \"autoSaveForm\", \"requestSaveForm\", \"methodSaveForm\", \"processBeforeSaveForm\"];\n\n\nconst Form = (props) => {\n    const { loadInitData, header, body, footer,\n        autoSaveForm, requestSaveForm, methodSaveForm, processBeforeSaveForm } = props;\n\n    /** Состояние первоначалной настройки компонента*/\n    const [loaded, setLoaded] = useState(false);\n    const [antFormProps, setAntFormProps] = useState({});\n    const [initFormData, setInitFormData] = useState({});\n\n    useEffect(() => {\n        if (!loaded) {\n            if (loadInitData !== noop)\n                loadInitData(_setInitFormData);\n            else\n                setLoaded(true);\n        }\n    }, [loaded]);\n\n    useEffect(() => {\n        setAntFormProps(getObjectExcludedProps(props, excludeProps));\n        // console.log('antFormProps props => ', getObjectExcludedProps(props, excludeProps));\n    }, [props]);\n\n\n    const _setInitFormData = (data) => {\n        // console.log(\"Form loaded init data => \", data);\n        setInitFormData(data);\n        setLoaded(true);\n    };\n\n\n    let antForm;\n    if (props && props.form) {\n        antForm = props.form;\n    } else {\n        const [form] = AntForm.useForm();\n        antForm = form;\n    }\n\n    const getBodyCls = () => {\n        let cls = [`${rtPrefix}-form-body`];\n        props.noPadding && cls.push(`${rtPrefix}-form-body-no-padding`);\n        props.scrollable && cls.push(`${rtPrefix}-form-body-scrollable`);\n        return cls.join(\" \");\n    };\n\n    const onFinish = (rawValues) => {\n        const values = processBeforeSaveForm ? processBeforeSaveForm(rawValues) : rawValues;\n        console.log(`Success form [${props.name ? props.name : 'no name form'}]: `, values);\n        if (autoSaveForm && requestSaveForm) {\n            const saveObject = {\n                ...initFormData,\n                ...values,\n                // dateStart: getISO(values['dateStart'])\n            };\n            requestSaveForm({\n                method: methodSaveForm,\n                data: saveObject\n            })\n                .then(response => {\n                    notification.success({\n                        message: \"Сохранение прошло успешно\"\n                    });\n                    if (props.onFinish)\n                        props.onFinish(values);\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\n        } else if (props.onFinish)\n            props.onFinish(values);\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.error(\"Failed:\", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    return (\n        <React.Fragment>\n            {loaded ?\n                <AntForm\n                    form={antForm}\n                    {...antFormProps}\n                    className={`${antFormProps.className} ${rtPrefix}-form`}\n                    style={{ ...antFormProps.style, width: '100%', height: '100%' }}\n                    initialValues={{ ...antFormProps.initialValues, ...initFormData }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                >\n                    {header ? <div className={`${rtPrefix}-form-header`}><FormItems items={header}/></div> : null}\n                    <div className={getBodyCls()}><FormItems items={body}/></div>\n                    {footer ? <div className={`${rtPrefix}-form-footer`}><FormItems items={footer}/></div> : null}\n                </AntForm>\n                : null}\n        </React.Fragment>\n    );\n};\n\nForm.propTypes = {\n\n    /** Не делать отступы у формы от краев блока */\n    noPadding: PropTypes.bool,\n\n    /** scrollable\n     */\n    scrollable: PropTypes.bool,\n\n    /** Массив объектов для шапки формы. Как правило только заголовок. */\n    header: PropTypes.arrayOf(PropTypes.object),\n\n    /** Массив объектов для тела формы */\n    body: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n    /** Массив объектов для подвала формы. Как правило только кнопки \"Сохранить\" и \"Отмена\" */\n    footer: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ссылка на функцию загрузки значений по умолчанию\n     * (callBack) => callBack(initObject) */\n    loadInitData: PropTypes.func,\n\n    /** Производить ли автоматическое сохранение по параметрам requestSaveForm и methodSaveForm */\n    autoSaveForm: PropTypes.bool,\n\n    /** Запрос для автоматического сохранения формы */\n    requestSaveForm: PropTypes.func,\n\n    /** HTTP Метод, передаваемый в запрос сохранения */\n    methodSaveForm: PropTypes.string,\n\n    /** Функция обработки перед сохранением формы */\n    processBeforeSaveForm: PropTypes.func,\n};\n\nForm.defaultProps = {\n    noPadding: false,\n    scrollable: false,\n    loadInitData: noop,\n    autoSaveForm: true\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {getObjectExcludedProps} from '../../utils/baseUtils';\nimport Form from './Form';\nimport {Modal} from 'antd';\n\nconst excludeProps = ['type', 'initialValues', 'form'];\n\nconst FormModal = props => {\n\n    const {\n        modal,\n        selectedRow,\n        visible,\n        setVisible,\n        saveRow,\n    } = props;\n\n    const getDefaultFooterProps = () => {\n\n        let okText = '';\n        let cancelText = '';\n        let modalTitle = '';\n\n        switch (modal.type) {\n            case 'addOnServer':\n            case 'addGroupOnServer':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Сохранить на сервере';\n                break;\n            case 'addOnLocal':\n            case 'addGroupOnLocal':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Сохранить локально';\n                break;\n            case 'editOnServer':\n            case 'editGroupOnServer':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Измененить на сервере';\n                break;\n            case 'editOnLocal':\n            case 'editGroupOnLocal':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Изменение локально';\n                break;\n            case 'select':\n                okText = 'Добавить';\n                cancelText = 'Отмена';\n                modalTitle = 'Выбор';\n                break;\n            case 'viewGroup':\n            case 'viewObject':\n                okText = 'Закрыть';\n                modalTitle = 'Просмотр';\n                break;\n            default: break;\n        }\n\n        if(modal.okText)\n            okText = modal.okText;\n\n        if(modal.cancelText)\n            cancelText = modal.cancelText;\n\n        if(modal.title)\n            modalTitle = modal.title;\n\n        return {okText, cancelText, title: modalTitle, okType: 'primary'}\n    };\n\n    let modalProps = { ...getDefaultFooterProps(), ...getObjectExcludedProps(modal, excludeProps) };\n\n    const onFinish = values => {\n        // console.log('FormModal Success:', values, selectedRow);\n        let saveObj = {};\n        if(modal.type.startsWith('add'))\n            saveObj = {...values};\n        else\n            saveObj = {...selectedRow, ...values};\n\n        saveRow({type: modal.type, row: saveObj, requestSaveRow: modal.requestSaveRow});\n\n        if (modalProps.onOk) modalProps.onOk(values);\n        if (modalProps.onFinish) modalProps.onFinish(values);\n    };\n\n    const onFinishFailed = errorInfo => {\n        // console.log('FormModal Failed:', errorInfo);\n        console.error(\"FormModal fields failed: \", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    const _onCancelHandler = (e) => {\n        // setVisibleModals({ ...visibleModals, [modal.type]: false });\n        // form.resetFields();\n        setVisible(modal.type, false);\n        if (modalProps.onCancel) modalProps.onCancel(e)\n    };\n\n    const _onLoadInitData = (callBack) => {\n        // console.log(\"Modal => loadInitData\", selectedRow);\n        formConfig.loadInitData(callBack, selectedRow)\n    }\n\n    const defaultFooter = [\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.cancelText,\n                className: 'mr-8',\n                onClick: _onCancelHandler,\n                ...modalProps.cancelButtonProps\n            }\n        },\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.okText,\n                type: modalProps.okType,\n                htmlType: 'submit',\n                ...modalProps.okButtonProps\n            }\n        }\n    ];\n\n    const formConfig =  {\n        footer: defaultFooter,\n        ...modal.form\n    };\n    return (\n        <Modal\n            {...modalProps}\n            centered\n            destroyOnClose\n            visible={visible}\n            onCancel={_onCancelHandler}\n            bodyStyle={{padding: 0, ...modalProps.bodyStyle}}\n            footer={null}\n        >\n            <Form\n                {...formConfig}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                loadInitData={_onLoadInitData}\n            />\n        </Modal>\n    )\n};\n\nFormModal.propTypes = {\n    /** Объект модального окна */\n    modal: PropTypes.object,\n\n    /** Выделенная строка таблицы */\n    selectedRow: PropTypes.object,\n\n    /** Состояние видимости модалки */\n    visible: PropTypes.bool,\n\n    /** Задание состояния видимости модалки */\n    setVisible: PropTypes.func,\n\n    /** CallBack функция для сохранения данных */\n    saveRow: PropTypes.func,\n};\n\nexport default FormModal;\n","import React, {forwardRef, useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport SortOrder from 'react-base-table/lib/SortOrder';\nimport AdvancedTable from '../AdvancedTable/AdvancedTable';\nimport { generateUUID, getObjectExcludedProps, noop, notificationError } from \"../../utils/baseUtils\";\nimport FormModal from './FormModal';\nimport { notification as antNotification, notification } from \"antd\";\nimport { rtPrefix } from \"../../utils/variables\";\nimport { empty, overlay } from \"../Table/defaultSettings\";\n\n\nconst excludeProps = ['onChange', 'defaultValue', 'modals', 'events', 'history'];\n\nconst FormTable = forwardRef((props, ref) => {\n\n    /** Состояние первоначалной настройки компонента*/\n    const [loading, setLoading] = useState(false);\n\n    /** Состояние отображения модалок таблицы */\n    const [visibleModals, setVisibleModals] = useState({\n        addOnServer: false,\n        editOnServer: false,\n        addOnLocal: false,\n        editOnLocal: false,\n        addGroupOnServer: false,\n        editGroupOnServer: false,\n        addGroupOnLocal: false,\n        editGroupOnLocal: false,\n        select: false,\n        viewGroup: false,\n        viewObject: false});\n    const [tableRows, setTableRows] = useState([]);\n    const [tableSelectedRowKeys, setTableSelectedRowKeys] = useState([]);\n    const [tableSelectedRow, setTableSelectedRow] = useState({});\n\n    /** Ссылка на объект таблицы */\n    const [tableRef, setTableRef] = useState({});\n    const _setTableRef = (_ref) => {\n        setTableRef(_ref);\n        ref && ref(_ref)\n    };\n\n    const {\n        rowKey,\n        rowKeyType,\n        customFields,\n        modals,\n        isGroupKey,\n        history,\n\n        componentType,\n        name,\n\n        // Form.Item props\n        value,\n\n        // Requests\n        requestDeleteRow,\n\n        dataDeleteRow\n    } = props;\n    const cmdProps = props.commandPanelProps;\n\n    // let advancedTableProps = getObjectExcludedProps(props, excludeProps);\n\n    /** Аналог componentDidMounted */\n    useEffect(() => {\n        // Если таблица локальная, то пробуем загрузить исходные данные\n        if(!loading && props.type === 'localSide') {\n            let cleanupFunction = false;\n            setLoading(true);\n            const loadData = async () => {\n                if (!loading && props.requestLoadRows) {\n                    props.requestLoadRows({params: {page: 0, size: 1}, data: {}})\n                        .then((response) => {\n                            // console.log('FormTable -> requestLoadRows -> response', response);\n                            // console.log('FormTable -> requestLoadRows -> value', value);\n                            if (!cleanupFunction)\n                                _addRowsToLocalTable(response.data, value);\n                        })\n                        .catch(error => notificationError(error, 'Ошибка загрузки данных') );\n                }\n                // console.log('FormTable -> setMounted ', advancedTableProps.type);\n                setLoading(false);\n            };\n            loadData();\n            return () => cleanupFunction = true;\n        }\n    }, [props.type]);\n\n    useEffect(() => {\n        if(props.selectable) {\n            console.log(\"FormTable => useEffect => value: \", value);\n            if(value && value.length > 0)\n                setTableSelectedRowKeys(value.map(item => item[rowKey]));\n            else\n                setTableSelectedRowKeys([]);\n\n        }\n    }, [value]);\n\n    /** Получить список кнопок для Command Panel */\n    const getEvents = () => {\n        return (cmdProps && cmdProps.systemBtnProps && Object.keys(cmdProps.systemBtnProps)) || [];\n    };\n\n    /** Получить рендер модалок */\n    const getModals = () => {\n        return modals.map((modal, index) => {\n            return (\n                <FormModal\n                    key={index}\n                    modal={modal}\n                    selectedRow={tableSelectedRow}\n                    visible={visibleModals[modal.type]}\n                    setVisible={(type, value) => setVisibleModals({ ...visibleModals, [type]: value })}\n                    saveRow={_onSaveRow}\n                />\n            )\n\n        })\n    };\n\n    /** Проверка существования кнопки в Command Panel */\n    const isExistCmdBtn = (btnType) => (cmdProps && cmdProps.systemBtnProps && cmdProps.systemBtnProps[btnType]);\n\n    /** Проверка соответствия типа кнопки и события ? (params) === (props) */\n    const equalsActionTypeCmdBtn = (btnType, actionType) => {\n        if(isExistCmdBtn(btnType)) {\n            if(btnType === 'edit') {\n                const aTypes = actionType.split('/');\n                if(aTypes[0] === 'g') {\n                    return !!(cmdProps.systemBtnProps[btnType].actionType\n                        && cmdProps.systemBtnProps[btnType].actionType.length === 2\n                        && cmdProps.systemBtnProps[btnType].actionType[1] === aTypes[1]);\n                }\n                else if (aTypes[0] === 'i') {\n                    return !!(cmdProps.systemBtnProps[btnType].actionType\n                        && cmdProps.systemBtnProps[btnType].actionType.length === 2\n                        && cmdProps.systemBtnProps[btnType].actionType[0] === aTypes[1]);\n                }\n            } else {\n                return !!(cmdProps.systemBtnProps[btnType].actionType\n                    && cmdProps.systemBtnProps[btnType].actionType === actionType);\n            }\n        }\n        return false;\n    };\n\n    /** Command Panel Events */\n    /** Добавить */\n    const _onClickAddHandler = () => {\n        if(equalsActionTypeCmdBtn('add', 'modal')) {\n            // console.log(\"FormTable => _onClickAddHandler => modal\");\n            if (props.type !== 'localSide') {\n                setVisibleModals({...visibleModals, addOnServer: true});\n            } else {\n                if (modals && (modals.find(modal => modal.type === 'select') !== undefined)) {\n                    setVisibleModals({...visibleModals, select: true});\n                    // console.log(\"FormTable => _onClickAddHandler => select\", modals.find(modal => modal.type === 'select'));\n                } else {\n                    setVisibleModals({...visibleModals, addOnLocal: true});\n                    // console.log(\"FormTable => _onClickAddHandler => addOnLocal\"); location.pathname\n                }\n            }\n        } else if (equalsActionTypeCmdBtn('add', 'page')) {\n            history.push(`${history.location.pathname}/new`);\n        }\n    };\n\n    /** Добавить копированием */\n    const _onClickAddAsCopyHandler = (event, row) => {\n        _addRowToLocalTable(row);\n    };\n\n    /** Добавить группу */\n    const _onClickAddGroupHandler = () => {\n        if(equalsActionTypeCmdBtn('addGroup', 'modal')) {\n            // console.log(\"FormTable => _onClickAddGroupHandler => modal\");\n            if (props.type !== 'localSide')\n                setVisibleModals({...visibleModals, addGroupOnServer: true});\n            else\n                setVisibleModals({...visibleModals, addGroupOnLocal: true});\n        } else if (equalsActionTypeCmdBtn('addGroup', 'page')) {\n            // console.log(\"FormTable => _onClickAddGroupHandler => page\");\n            history.push(`${history.location.pathname}/newGroup`);\n        }\n    };\n\n    /** Изменить */\n    const _onClickEditHandler = (event, {rowData}) => {\n        // console.log(\"FormTable -> _onClickEditHandler -> row \", rowData, props.type);\n        if (rowData[isGroupKey]) {\n            if (equalsActionTypeCmdBtn('edit', 'g/modal')) {\n                // console.log(\"FormTable => _onClickEditHandler => g/modal\");\n                if (props.type !== 'localSide')\n                    setVisibleModals({...visibleModals, editGroupOnServer: true});\n                else\n                    setVisibleModals({...visibleModals, editGroupOnLocal: true});\n            } else if (equalsActionTypeCmdBtn('edit', 'g/page')) {\n                // console.log(\"FormTable => _onClickEditHandler => g/page\");\n                history.push(`${history.location.pathname}/${rowData[rowKey]}`);\n            }\n        } else {\n            if (equalsActionTypeCmdBtn('edit', 'i/modal')) {\n                // console.log(\"FormTable => _onClickEditHandler => i/modal\");\n                if (props.type !== 'localSide')\n                    setVisibleModals({...visibleModals, editOnServer: true});\n                else\n                    setVisibleModals({...visibleModals, editOnLocal: true});\n            } else if (equalsActionTypeCmdBtn('edit', 'i/page')) {\n                // console.log(\"FormTable => _onClickEditHandler => i/page\");\n                history.push(`${history.location.pathname}/${rowData[rowKey]}`);\n            }\n        }\n    };\n\n    /** Удалить */\n    const _onClickDelete = (event, _selectedRowKeys) => {\n        if(props.type === 'localSide') {\n            const _rows = tableRows.filter(\n                (item) => !_selectedRowKeys.includes(item[rowKey])\n            );\n            setTableRows(_rows);\n            _onChange(_rows);\n        } else {\n            if(_selectedRowKeys && _selectedRowKeys.length > 0 && requestDeleteRow){\n                const deleteData = _selectedRowKeys.map(item => { return {[rowKey]: item, ...dataDeleteRow} } );\n                requestDeleteRow({data: {deleteData: deleteData}})\n                    .then((response) => {\n                        antNotification.success({message: 'Успешное удаленение'});\n                        tableRef && tableRef.reloadData({});\n\n                    })\n                    .catch(error => {\n                        notificationError(error, 'Ошибка удаления записи');\n                        tableRef && tableRef.reloadData({});\n                    });\n            }\n        }\n        cmdProps.onClickDelete && cmdProps.onClickDelete(event, _selectedRowKeys);\n    };\n\n    /** Переместить вверх / вниз */\n    const _onClickUpHandler = (event, row, rows) => {\n        _onChange(rows);\n        cmdProps.onClickUp && cmdProps.onClickUp(event, row, rows);\n    };\n\n    const _onClickDownHandler = (event, row, rows) => {\n        _onChange(rows);\n        cmdProps.onClickDown && cmdProps.onClickDown(event, row, rows);\n    };\n\n    /** Modal Events */\n    const _onSaveRow = ({type, row, requestSaveRow}) => {\n        // console.log(\"FormTable -> _saveRow -> row \", row);\n        if(type === 'select') {\n            // Получить массив строк из таблицы в модальной форме\n            let selectRows = row[name];\n            // console.log(\"FormTable -> _onSaveRow -> row [0]\", row);\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [0]\", selectRows);\n\n            // Фильтрация выбранных строк, оставить только те которых еще нет в таблице\n            let saveRows = selectRows.filter((sRow) =>\n                tableRows.findIndex((tRow) => tRow[rowKey] === sRow[rowKey]) === -1\n            );\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [1]\", saveRows);\n            if (customFields)\n                // Фильтрация по пользовательским параметрам\n                saveRows = saveRows.filter((sRow) => {\n                    let isValid = [];\n                    customFields.forEach((field) => {\n                        // Валидация по пользовательской логике функции validate\n                        if(field.validate)\n                            isValid.push(field.validate(sRow, tableRows));\n\n                        // Создание или переобразование по пользовательской логике функции value\n                        if(field.value)\n                            sRow[field.name] = field.value(sRow, tableRows);\n                    });\n                    // console.log('_addRows isValid', isValid);\n                    if(!isValid.includes(false))\n                        return sRow;\n                });\n            setVisibleModals({ ...visibleModals, [type]: false });\n            notification.success({\n                message: `Добавлено ${saveRows.length} строк`\n            });\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [2]\", saveRows);\n            _addRowsToLocalTable([...tableRows, ...saveRows]);\n        }\n        else {\n            let saveRow = {...row};\n            if(type.indexOf('Group') !== -1)\n                saveRow[isGroupKey] = true;\n            else\n                saveRow[isGroupKey] = false;\n            if (customFields)\n                customFields.forEach((field) => saveRow[field.name] = field.value(saveRow, tableRows));\n            switch (type) {\n                case 'addOnServer':\n                case 'editOnServer':\n                case 'addGroupOnServer':\n                case 'editGroupOnServer':\n                    _addRowToServerTable({requestSaveRow, type, saveRow});\n                    break;\n                case 'addOnLocal':\n                case 'addGroupOnLocal':\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    _addRowToLocalTable(saveRow);\n                    break;\n                case 'editOnLocal':\n                case 'editGroupOnLocal':\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    _editRowToLocalTable(saveRow);\n                    break;\n\n                //            addGroupOnServer: false,\n                //         editGroupOnServer: false,\n                //         addGroupOnLocal: false,\n                //         editGroupOnLocal: false,\n                // case 'select':\n                case 'viewGroup':\n                case 'viewObject':\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    break;\n            }\n            // console.log(\"Modal Events => type: \", type, itemName, componentType, saveRow);\n        }\n\n    };\n\n    const _addRowToLocalTable = (row) => {\n        let saveObj = {...row};\n        if(rowKeyType === 'uuid')\n            saveObj[rowKey] = generateUUID();\n\n        // console.log('_addRowToLocalTable', tableRows);\n        _addRowsToLocalTable([...tableRows, saveObj]);\n    };\n\n    const _editRowToLocalTable = (row) => {\n        let arr = [...tableRows];\n        const rowIndex = arr.findIndex(item => item[rowKey] === row[rowKey]);\n        arr.splice(rowIndex, 1, row);\n        setTableRows(arr);\n        setTableSelectedRow(row);\n        _onChange(arr);\n    };\n\n    const _addRowsToLocalTable = (rows, keys) => {\n        // console.log('FormTable -> _addRowsToLocalTable -> rows', rows, keys);\n        setTableRows(rows);\n        if(props.selectable)\n            _onChange(keys);\n        else\n            _onChange(rows);\n    };\n\n    const _addRowToServerTable = ({requestSaveRow, type, saveRow}) => {\n        if (requestSaveRow\n            && ['addOnServer', 'editOnServer', 'addGroupOnServer', 'editGroupOnServer'].includes(type)\n        ) {\n            const method = (type === 'addOnServer' || type === 'addGroupOnServer') ? 'POST' : 'PUT';\n            // console.log(\"Modal Events => type: \", type, itemName, componentType, saveRow);\n            requestSaveRow({\n                method,\n                data: saveRow,\n            })\n                .then(response => {\n                    notification.success({\n                        message: 'Сохранение прошло успешно'\n                    });\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    tableRef && tableRef.reloadData({ filter: props.defaultFilter});\n                    // ref && ref.current && ref.current.reloadData({ filter: props.defaultFilter});\n                    // console.log('_addRowToServerTable tableRef =>', tableRef);\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\n        }\n    };\n\n    const _onRowClick = ({selected, rowData, rowIndex, rowKey}) => {\n        if(!props.selectable) {\n            setTableSelectedRow(rowData);\n            setTableSelectedRowKeys([rowKey]);\n            if(componentType === 'SelectTable')\n                _onChange([rowData]);\n        }\n        props.onRowClick && props.onRowClick({selected, rowData, rowIndex, rowKey});\n    };\n\n    const _onRowDoubleClick = ({rowData, rowIndex, rowKey}) => {\n        if (rowData[isGroupKey]) {\n            setVisibleModals({...visibleModals, viewGroup: true});\n        } else {\n            setVisibleModals({...visibleModals, viewObject: true});\n        }\n        props.onRowDoubleClick && props.onRowDoubleClick({rowData, rowIndex, rowKey});\n    };\n\n    const _onSelectedRowsChange = (keys, rows) => {\n        // console.log(\"_onSelectedRowsChange\", keys, rows);\n        if(props.selectable) {\n            setTableSelectedRow(rows[0]);\n            setTableSelectedRowKeys(keys);\n            _onChange(rows);\n        }\n    };\n\n    const _onChange = (rows) => {\n        if(rows !== undefined)\n            props.onChange(rows);\n        else\n            props.onChange(tableRows);\n    };\n\n    const getTableCls = () => {\n        let cls = [`${rtPrefix}-form-table`];\n        if (props.className)\n            cls.push(props.className);\n        return cls.join(' ');\n    };\n\n    return (\n        <div className={getTableCls()} style={props.style} >\n            <AdvancedTable\n                ref={_setTableRef}\n                {...getObjectExcludedProps(props, excludeProps)}\n                rows={tableRows}\n                setRows={setTableRows}\n                // selectedRowKeys={tableSelectedRow[rowKey] ? [tableSelectedRow[rowKey]] : []}\n                selectedRowKeys={tableSelectedRowKeys}\n                onRowClick={_onRowClick}\n                onRowDoubleClick={_onRowDoubleClick}\n                onSelectedRowsChange={_onSelectedRowsChange}\n                autoDeleteRows={false}\n                commandPanelProps={{\n                    ...props.commandPanelProps,\n                    showElements: getEvents(),// getShowElements(),\n                    onClickAdd: _onClickAddHandler,\n                    onClickAddAsCopy: _onClickAddAsCopyHandler,\n                    onClickAddGroup: _onClickAddGroupHandler,\n                    onClickEdit: _onClickEditHandler,\n                    onClickDelete: _onClickDelete,\n                    onClickDown: _onClickDownHandler,\n                    onClickUp: _onClickUpHandler,\n                }}\n                filterPanelProps={{\n                    ...props.filterPanelProps,\n                    // onApplyFilter: (filter) => console.log('filter', filter)\n                }}\n            />\n            {modals && getModals()}\n        </div>\n    );\n});\n\nFormTable.propTypes = {\n    /** Объект со свойствами Command Panel */\n    commandPanelProps: PropTypes.object,\n\n    /** Объект со свойствами Filter Panel */\n    filterPanelProps: PropTypes.object,\n\n    /**\n     * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n     * */\n\n    /** Строки по умолчанию */\n    defaultRows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ключи выделенных по умолчанию строк */\n    defaultSelectedRowKeys: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n\n    /** Значение строки поиска по умолчанию строк */\n    defaultSearchValue: PropTypes.string,\n\n    /** Объект фильтрации по умолчанию */\n    defaultFilter: PropTypes.object,\n\n    /** Сортировка по умолчанию */\n    defaultSortBy: PropTypes.shape({\n        key: PropTypes.string,\n        order: PropTypes.oneOf([SortOrder.ASC, SortOrder.DESC]),\n    }),\n\n    /**\n     * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n     * */\n\n    /** Значение строки поиска */\n    searchValue: PropTypes.string,\n\n    /** Фильтр */\n    filter: PropTypes.object,\n\n    /** Объект сортировки ({ key: 'string', order: 'asc' }).\n     * key - поле по которому сотрировать,\n     * order - направление сортировки (\"asc\", \"desc\")\n     * */\n    sortBy: PropTypes.shape({\n        key: PropTypes.string,\n        order: PropTypes.oneOf([SortOrder.ASC, SortOrder.DESC]),\n    }),\n\n    /**\n     * BASE PROPS\n     * */\n\n    /** Автоудаление строк из таблицы по кнопке в командной панели*/\n    autoDeleteRows: PropTypes.bool,\n\n    /** Поле для уникальной идентификации строки */\n    rowKey: PropTypes.string,\n\n    /** Тип поля для уникальной идентификации строки */\n    rowKeyType: PropTypes.oneOf(['uuid', 'number']),\n\n    /**\n     * VIEW PROPS\n     * */\n\n    /** Вывод когда нет данных. JSX для заглушки \"Нет данных\".  */\n    empty: PropTypes.element,\n\n    /** Отображение загрузки данных. JSX для загрузки данных. */\n    overlay: PropTypes.element,\n\n    /** Фиксированная ширина столбцов. Появится боковой скрол */\n    fixWidthColumn: PropTypes.bool,\n\n    /** Высота подвала */\n    footerHeight: PropTypes.number,\n\n    /** Отображать ли подвал */\n    footerShow: PropTypes.bool,\n\n    /** Названия футтера */\n    footerTitles: PropTypes.shape({\n        selectedRows: PropTypes.string,\n        loadedRows: PropTypes.string,\n        totalRows: PropTypes.string,\n    }),\n\n    /** Высота заголовка таблицы */\n    headerHeight: PropTypes.number,\n\n    /** Высота строки таблицы */\n    rowHeight: PropTypes.number,\n\n    /** Custom row renderer\n     * Параметры - ({ isScrolling, cells, columns, rowData, rowIndex, depth }) */\n    rowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n    /** Строки будут в зебро-стиле */\n    zebraStyle: PropTypes.bool,\n\n    /**\n     * LOAD DATA PROPS\n     * */\n\n    /** Порог в пикселях для вызова _onLoad.\n     * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n    loadThreshold: PropTypes.number,\n\n    /** Размер страницы */\n    pageSize: PropTypes.number,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n    /** Имя параметра для поиска */\n    searchParamName: PropTypes.string,\n\n    /**\n     * SELECTABLE PROPS\n     * */\n\n    /** Таблица с возможностью выбора строки */\n    selectable: PropTypes.bool,\n\n    /**\n     * TREE PROPS\n     * */\n\n    /** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\n    nodeAssociated: PropTypes.bool,\n\n    /** Ключ колонки по которой строить иерархию */\n    expandColumnKey: PropTypes.string,\n\n    /** Открыть по умолчанию вложенность до уровня N или 'All' */\n    expandDefaultAll: PropTypes.bool,\n\n    /** Загружать ноды иерархии по одной */\n    expandLazyLoad: PropTypes.bool,\n\n    /** Поле в котором хранится ссылка на родителя */\n    expandParentKey: PropTypes.string,\n\n    /**\n     * EVENTS\n     * */\n\n    /** Событие при клике на строку (только при selectable = false)\n     * Параметр - ({selected, rowData, rowIndex}) */\n    onRowClick: PropTypes.func,\n\n    /** Событие при двойном клике на строку.\n     * Параметр - ({rowData, rowIndex, rowKey}) */\n    onRowDoubleClick: PropTypes.func,\n\n    /** События при открытии / закрытии ноды\n     * Парметры - ({ expanded, rowData, rowIndex, rowKey }) */\n    onRowExpand: PropTypes.func,\n\n    /** Событие при выборе строки.\n     * Параметр - массив выбранных строе (только rowKey) */\n    onSelectedRowsChange: PropTypes.func,\n\n    /** События при открытии / закрытии ноды\n     * Парметры - (expandedRowKeys) - массив ключей открытых нод */\n    onExpandedRowsChange: PropTypes.func,\n\n    /** SELECTED PANEL */\n\n    /** Отображать ли панель выбранных элементов */\n    showSelection: PropTypes.bool,\n\n    /** Строка или функция для отображения элементов списка выбранных\n     * Строка - имя поля\n     * Функция - рендер строк.\n     * Параметры - ({ rowData, rowIndex }) */\n    rowRenderShowSelection: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.string,\n    ]),\n\n\n    /** Дополнительные пропсы для колонок */\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\n\n    /** Дополнительные поля и валидация в объекты таблицы */\n    customFields: PropTypes.arrayOf(PropTypes.object),\n\n    /** Модальные окна */\n    modals: PropTypes.arrayOf(PropTypes.object),\n\n    /** Событие об изменении объектов таблицы\n     * Параметр - (rows)*/\n    onChange: PropTypes.func,\n\n    /** implemented - только для (LocalTable + selectable) - Контроль значение из вне */\n    // value: PropTypes.arrayOf(PropTypes.object),\n\n    /** Not implemented - Задание значений по умолчанию */\n    defaultValue: PropTypes.arrayOf(PropTypes.object),\n\n    /** Классы стилей */\n    className: PropTypes.string,\n\n    /** Стили */\n    style: PropTypes.object,\n\n    /** Поле для идентификации группы */\n    isGroupKey: PropTypes.string,\n\n    /** Объект history для перемещения по путям */\n    history: PropTypes.object,\n\n    /** Функция запроса на получение конфига для таблицы */\n    requestLoadConfig: PropTypes.func,\n\n    /** Функция запроса на уделание данных */\n    requestDeleteRow: PropTypes.func,\n\n    /** Параметры объекта удаления */\n    dataDeleteRow: PropTypes.object,\n};\n\nFormTable.defaultProps = {\n    defaultRows: [],\n    defaultSelectedRowKeys: [],\n    defaultSearchValue: '',\n    defaultFilter: {},\n    defaultSortBy: {},\n\n    searchValue: '',\n    filter: {},\n    sortBy: {},\n\n    autoDeleteRows: true,\n    rowKey: 'id',\n\n    empty: empty,\n    overlay: overlay,\n    fixWidthColumn: false,\n    footerHeight: 30,\n    footerShow: false,\n    footerTitles: {\n        selectedRows: 'Выделено:',\n        loadedRows: 'Загружено записей:',\n        totalRows: 'Всего записей:',\n    },\n    headerHeight: 30,\n    rowHeight: 30,\n    zebraStyle: false,\n\n    loadThreshold: 300,\n    pageSize: 50,\n    requestLoadRows: noop,\n    requestLoadCount: noop,\n    searchParamName: 'searchLine',\n\n    selectable: false,\n\n    nodeAssociated: true,\n    expandColumnKey: undefined,\n    expandDefaultAll: true,\n    expandLazyLoad: false,\n    expandParentKey: 'parentId',\n\n    onRowClick: noop,\n    onRowDoubleClick: noop,\n    onRowExpand: noop,\n    onSelectedRowsChange: noop,\n    onExpandedRowsChange: noop,\n\n    showSelection: false,\n\n    rowKeyType: 'uuid',\n    onChange: noop,\n    isGroupKey: 'isGroup',\n};\n\nexport default FormTable;\n","import React, {useState, useEffect} from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport objectPath from \"object-path\";\nimport { setDataStore } from \"../../../redux/rtd.actions\";\nimport {getObjectExcludedProps} from '../../utils/baseUtils';\nimport moment from \"moment\";\nimport { Typography as AntTypography } from \"antd\";\nimport { getISO, toFormat } from \"../../utils/datesUtils\";\n\nexport const withStore = (Component, antFormItemProps) => {\n\n    const mapStateToProps = (store, ownProps) => {\n        const {subscribe} = ownProps;\n        if(subscribe){\n            const {name, path} = subscribe;\n            if(name && path)\n                return { [name]: objectPath.get(store, path) };\n        }\n\n        return {};\n    };\n    const mapDispatchToProps = (dispatch) =>\n        bindActionCreators({ setDataStore: setDataStore}, dispatch);\n\n    const defaultGetValueFromEvent = (valuePropName, event) => {\n        if (event && event.target && valuePropName in event.target) {\n            return event.target[valuePropName];\n        }\n        return event;\n    };\n\n    const defaultProps = {\n        trigger: 'onChange',\n        valuePropName: 'value',\n    };\n\n    const withStoreProps = { ...defaultProps, ...antFormItemProps };\n\n    return connect(mapStateToProps, mapDispatchToProps)( (props) => {\n\n        const {dispatchPath} = props;\n\n        const subscribe = props.subscribe ? props.subscribe : {};\n\n        const [subscribeProps, setSubscribeProps] = useState({});\n\n        const {trigger, getValueFromEvent, valuePropName} = withStoreProps;\n\n        const excludeProps = ['componentType', 'setDataStore', 'subscribe', subscribe.name, 'dispatchPath'];\n\n        const getValue = (...args) => {\n            let newValue;\n            if (getValueFromEvent) {\n                newValue = getValueFromEvent(...args);\n                // console.log(\"storeHOC => getValueFromEvent: \", newValue);\n            } else {\n                newValue = defaultGetValueFromEvent(valuePropName, ...args);\n                // console.log(\"storeHOC => defaultGetValueFromEvent: \", newValue);\n            }\n            return newValue;\n        };\n\n        /** Подписка на изменение props[subscribe.name] в сторе */\n        useEffect( () => {\n            if(subscribe.name) {\n                // console.log(\"storeHOC => subscribe: \", props[subscribe.name]);\n                subscribe.onChange && subscribe.onChange({value: props[subscribe.name], setSubscribeProps});\n            }\n            // console.log(\"Change Props[2]: \", props.subscribeЗф);\n        }, [props[subscribe.name]]);\n\n        useEffect(() => {\n            // dispatchPath && props.setDataStore && props.setDataStore(dispatchPath, props.value);\n            if(dispatchPath) {\n                const newValue = props[valuePropName];\n                // console.log(\"storeHOC => dispatch: \", newValue);\n                dispatchPath && props.setDataStore && props.setDataStore(dispatchPath, newValue);\n            }\n        }, [props]);\n\n        useEffect(() => {\n            if(subscribeProps.value) {\n                // console.log('subscribeProps.value => ', subscribeProps.value);\n                props[trigger] && props[trigger](subscribeProps.value);\n            }\n        }, [subscribeProps.value]);\n\n        const onChange = (...args) => {\n            // const newValue = getValue(...args);\n            // dispatchPath && props.setDataStore && props.setDataStore(dispatchPath, newValue);\n            props[trigger] && props[trigger](...args);\n        };\n\n        const childProps = getObjectExcludedProps(props, excludeProps);\n        return <Component {...childProps} {...subscribeProps} {...{[trigger]: onChange }}/>\n    })\n};\n\n\nexport const DatePickerHOC = (Component) => {\n    return props => {\n        // console.log(\"DatePickerHOC => \", props);\n        if(props.value){\n            if(typeof props.value === 'string'){\n                // console.log(\"DatePickerHOC => onChange => string\");\n                props.onChange(moment(props.value), props.value);\n            }\n            // else {\n            // \tconsole.log(\"DatePickerHOC => onChange => moment\");\n            // \tprops.onChange(props.value, props.format ? toFormat(props.value,props.format) : getISO(props.value));\n            // }\n        }\n        const value = props.value ? (typeof props.value === 'string' ? moment(props.value) : props.value) : null;\n        return <Component {...props} value={value} />\n    };\n};\n\nexport const TypographyTitle = (props) =>\n    <AntTypography.Title {...props}> {props.label || props.value} </AntTypography.Title>;\n\nexport const TypographyText = (props) =>\n    <AntTypography.Text {...props}> {props.label || props.value} </AntTypography.Text>;\n\nexport const TypographyDate = (props) => {\n    const {label, value, format } = props;\n    const _value = value ? (format ? toFormat(value, format) : getISO(value)) : null;\n    return <AntTypography.Text {...props}> {label || _value} </AntTypography.Text>;\n}\n","const getTitle = (type, element) => {\n    if(element === 'Group')\n        if(type === 'edit')\n            return 'Изменение папки';\n        else\n            return 'Создание папки';\n    else\n        return 'Изменение файла';\n};\n\nconst Modal = (type, element, requestSaveRow, processBeforeSaveForm, parentLoadHandler, requestLoadRows) => {\n    // console.log(\"FolderModal\", type, requestSaveRow, processBeforeSaveForm, parentLoadHandler, requestLoadRows);\n    let selectedRow;\n    return {\n        type: `${type}${element}OnServer`,\n        title: getTitle(type, element),\n        requestSaveRow: requestSaveRow,\n        width: 500,\n        // bodyStyle: {height: 650},\n        form: {\n            name: 'FileManagerModalModal',\n            labelCol: {span: 8},\n            wrapperCol: {span: 16},\n            processBeforeSaveForm: (rawValues) => processBeforeSaveForm(rawValues, type, element),\n            loadInitData: (callBack, row) => {\n                selectedRow = row;\n                callBack(type === 'edit' ? row : null);\n            },\n            body: [\n                {\n                    componentType: 'Item',\n                    label: 'Наименование',\n                    name: 'name',\n                    rules: [\n                        {\n                            message: `Заполните наименование`,\n                            required: true,\n                        },\n                    ],\n                    child: {componentType: 'Input'},\n                },\n                type === 'edit'\n                    ? {\n                        componentType: 'Item',\n                        label: 'Родитель',\n                        name: 'parentId',\n                        child: {\n                            componentType: 'SingleSelect',\n                            widthControl: 0,\n                            heightPopup: 300,\n                            expandColumnKey: 'id',\n                            rowRender: 'name',\n                            nodeAssociated: false,\n                            expandDefaultAll: true,\n                            // (info) аналогично ({params, data})\n                            // Но поскольку тут раскрывать объект не нужно, мы можем просто передать его дальше\n                            requestLoadRows: (info) => parentLoadHandler(type, selectedRow, info),\n                            requestLoadDefault: requestLoadRows,\n                        },\n                    }\n                    : {},\n            ],\n        },\n    };\n};\n\nexport const AddFolderModal = (...args) => Modal('add', 'Group', ...args);\nexport const EditFolderModal = (...args) => Modal('edit', 'Group', ...args);\nexport const EditFileModal = (...args) => Modal('edit', '', ...args);\n\n","import {notification} from 'antd';\n\nexport const copyTextToClipboard = text => {\n\tif (!navigator.clipboard) {\n\t\tfallbackCopyTextToClipboard(text);\n\t\treturn;\n\t}\n\tnavigator.clipboard.writeText(text).then(\n\t\tfunction() {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'success',\n\t\t\t\t'Успешно',\n\t\t\t\t`[${text}] успешно копирован в буфер обмена`\n\t\t\t);\n\t\t},\n\t\tfunction(err) {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'error',\n\t\t\t\t'Ошибка',\n\t\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\n\t\t\t);\n\t\t}\n\t);\n};\n\nconst fallbackCopyTextToClipboard = text => {\n\tlet textArea = document.createElement('textarea');\n\ttextArea.value = text;\n\n\t// Avoid scrolling to bottom\n\ttextArea.style.top = '0';\n\ttextArea.style.left = '0';\n\ttextArea.style.position = 'fixed';\n\n\tdocument.body.appendChild(textArea);\n\ttextArea.focus();\n\ttextArea.select();\n\n\ttry {\n\t\tlet successful = document.execCommand('copy');\n\t\tif (successful) {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'success',\n\t\t\t\t'Успешно',\n\t\t\t\t`[${text}] успешно копирован в буфер обмена`\n\t\t\t);\n\t\t} else {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'error',\n\t\t\t\t'Ошибка',\n\t\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\n\t\t\t);\n\t\t}\n\t} catch (err) {\n\t\topenNotificationWithIcon(\n\t\t\t'error',\n\t\t\t'Ошибка',\n\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\n\t\t);\n\t}\n\tdocument.body.removeChild(textArea);\n};\n\nconst openNotificationWithIcon = (type, title, msg) => {\n\tnotification[type]({\n\t\tmessage: title,\n\t\tdescription: msg\n\t});\n};\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormTable from \"../Form/FormTable\";\nimport {Button, Upload, notification as antNotification, Spin, Typography, Tooltip} from 'antd';\nimport {\n    HomeOutlined,\n    RollbackOutlined,\n    FolderFilled,\n    FileOutlined,\n    PlusOutlined,\n    LoadingOutlined,\n    FileWordOutlined,\n    FileExcelOutlined,\n    FileImageOutlined,\n    FileMarkdownOutlined,\n    FilePdfOutlined,\n    FilePptOutlined,\n    FileTextOutlined,\n    FileZipOutlined,\n    CopyOutlined\n} from '@ant-design/icons';\nimport { AddFolderModal, EditFileModal, EditFolderModal } from \"./AddFolderModal\";\nimport { rtPrefix } from \"../../utils/variables\";\nimport { toDDMMYYYYHHMMSS } from \"../../utils/datesUtils\";\nimport { copyTextToClipboard } from \"../../utils/clipboardUtils\";\nimport { notificationError } from \"../../utils/baseUtils\";\n\nconst FileManager = props => {\n\n    const {\n        rowKey,\n        isGroupKey,\n        expandParentKey\n    } = props;\n\n    const [tableRef, setTableRef] = useState({});\n    const _setTableRef = (ref) => setTableRef(ref);\n\n    // const tableRef = React.createRef();\n\n    const [breadcrumb, setBreadcrumb] = useState([{[rowKey]: null, name: <HomeOutlined />}]);\n    const [tableFilter, setTableFilter] = useState({deleted: false, [expandParentKey]: null});\n\n\n\n    /**\n     * TABLE EVENTS\n     */\n\n    // Down to folder OR download file\n    const _onRowDoubleClick = ({rowData, rowIndex, rowKey}) => {\n        if(rowData.isGroup) {\n            loadTable([...breadcrumb, rowData], { [expandParentKey]: rowKey });\n        } else {\n            props.requestDownloadFile(rowKey)\n        }\n        props.onRowDoubleClick && props.onRowDoubleClick({rowData, rowIndex, rowKey});\n    };\n\n    // Jump to folder\n    const _onClickBreadcrumb = (parentId, index) => {\n        loadTable(breadcrumb.slice(0, index), {[expandParentKey]: parentId})\n    };\n\n    // Up to folder\n    const _onClickBack = () => {\n        if(breadcrumb.length > 1) {\n            const newBreadcrumb = breadcrumb.slice(0, breadcrumb.length - 1);\n            // setBreadcrumb(newBreadcrumb);\n            // tableRef && tableRef.reloadData({ filter: { parentId: newBreadcrumb[newBreadcrumb.length - 1].id } });\n            loadTable(newBreadcrumb, { [expandParentKey]: newBreadcrumb[newBreadcrumb.length - 1][rowKey] })\n        }\n    };\n\n    // Delete folder OR file\n    const _onClickDelete = (event, _selectedRowKeys) => {\n        if(_selectedRowKeys && _selectedRowKeys.length > 0){\n            props.requestDeleteRow({data: {[rowKey]: _selectedRowKeys[0], deleted: true}})\n                .then((response) => {\n                    antNotification.success({message: 'Файл успешно удален'});\n                    tableRef && tableRef.reloadData({filter: tableFilter});\n                })\n                .catch(error => {\n                    notificationError(error, 'Ошибка удаления файла');\n                    tableRef && tableRef.reloadData({filter: tableFilter});\n                });\n        }\n    };\n\n    /**\n     * TABLE FUNCs\n     */\n    const loadTable = (breadcrumb, filter) => {\n        setBreadcrumb(breadcrumb);\n        const newFilter = {...tableFilter, ...filter};\n        setTableFilter(newFilter);\n        tableRef && tableRef.reloadData({filter: newFilter});\n    };\n\n\n    /**\n     * MODAL FUNCs\n     */\n    const processBeforeSaveModal = (rawValues, type, element) => {\n        let values = {...rawValues};\n        if(type === 'add')\n            values[expandParentKey] = breadcrumb[breadcrumb.length - 1][rowKey];\n\n        if(element === 'Group')\n            values.extension = 'dir';\n        // console.log(\"FileManager values =>\", values);\n        return values;\n    };\n\n    const parentLoadHandler = (type, selectedRow, {params, data}) => {\n        let newData = {...data, [isGroupKey]: true};\n        if (type === 'edit') newData.owner = selectedRow && selectedRow[rowKey];\n        return props.requestLoadParent({ params, data: newData, });\n    };\n\n    // const _onChangeViewDeleted = (checked) => {\n    //     const newFilter = {...tableFilter, deleted: checked };//? undefined : checked};\n    //     setTableFilter(newFilter);\n    //     tableRef && tableRef.reloadData({filter: newFilter});\n    // };\n\n    // console.log(\"EditFolderModal\", EditFolderModal(props.requestSaveRow, processBeforeSaveForm));\n\n\n    /**\n     * UPLOAD FUNCs\n     */\n\n    const _uploadFile = (file) => {\n        // console.log('beforeUpload fileList => ', fileList);\n        notification(file, 'loading');\n        if (props.requestUploadFile) {\n            props.requestUploadFile({ file: file, [expandParentKey]: breadcrumb[breadcrumb.length - 1][rowKey] })\n                .then((response) => {\n                    notification(file, 'success');\n                    tableRef && tableRef.reloadData({ filter: tableFilter });\n                })\n                .catch(() => {\n                    notification(file, 'error');\n                    tableRef && tableRef.reloadData({ filter: tableFilter });\n                });\n        }\n        return false;\n    };\n\n    const notification = (file, type) => {\n        const notifProps = {\n            key: file.uid,\n            duration: type === 'loading' ? 0 : 5,\n            icon: type === 'loading'\n                ? <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n                : null,\n            message: <span>Загрузка файла: <Typography.Text code>{file.name}</Typography.Text></span>\n        };\n        switch (type) {\n            case 'loading':\n                antNotification.info(notifProps);\n                break;\n            case 'success':\n                antNotification.success(notifProps);\n                break;\n            case 'error':\n                antNotification.error(notifProps);\n                break;\n            case 'close':\n                antNotification.close(file.uid);\n                break;\n            default:\n                break;\n        }\n    };\n\n    /**\n     * RENDER PARAMS\n     */\n    const customColumnProps = [\n        {\n            name: 'dateCreate',\n            cellRenderer: ({cellData}) => toDDMMYYYYHHMMSS(cellData),\n        },\n        {\n            name: 'dateUpdate',\n            cellRenderer: ({cellData}) => toDDMMYYYYHHMMSS(cellData),\n        },\n        {\n            name: 'path',\n            cellRenderer: ({rowData}) =>\n                rowData[isGroupKey] ? null\n                    :\n                <Tooltip title=\"Скопировать путь к файлу\">\n                    <CopyOutlined onClick={() => copyTextToClipboard(props.pathDownloadFile(rowData[rowKey]))}/>\n                </Tooltip>,\n        },\n        {\n            name: 'name',\n            cellRenderer: ({rowData}) => {\n                const styleDiv = {display: 'flex', alignItems: 'center'};\n                let Icon;\n                let styleIcon = {marginRight: '10px', fontSize: '16px'};\n                switch (rowData.extension) {\n                    case 'dir':\n                        Icon = FolderFilled;\n                        styleIcon.color = '#3a88c9';\n                        break;\n                    case 'doc':\n                    case 'docm':\n                    case 'docx':\n                    case 'dot':\n                    case 'dotx':\n                        Icon = FileWordOutlined;\n                        styleIcon.color = '#185abc';\n                        break;\n                    case 'xlm':\n                    case 'xls':\n                    case 'xlsm':\n                    case 'xlt':\n                    case 'xltm':\n                    case 'xltx':\n                    case 'xlsx':\n                        Icon = FileExcelOutlined;\n                        styleIcon.color = '#1f7244';\n                        break;\n                    case 'png':\n                    case 'jpg':\n                    case 'jpeg':\n                    case 'tiff':\n                    case 'bmp':\n                    case 'ico':\n                    case 'gif':\n                    case 'svg':\n                        Icon = FileImageOutlined;\n                        break;\n                    case 'markdown':\n                    case 'md':\n                        Icon = FileMarkdownOutlined;\n                        styleIcon.color = '#175987';\n                        break;\n                    case 'pdf':\n                        Icon = FilePdfOutlined;\n                        styleIcon.color = '#bd1f07';\n                        break;\n                    case 'ppt':\n                        Icon = FilePptOutlined;\n                        styleIcon.color = '#be5239';\n                        break;\n                    case 'txt':\n                        Icon = FileTextOutlined;\n                        break;\n                    case 'zip':\n                        Icon = FileZipOutlined;\n                        break;\n                    default:\n                        Icon = FileOutlined;\n                }\n\n\n                return (\n                    <div style={styleDiv}>\n                        {/*{rowData.isGroup*/}\n                        {/*    ? <FolderFilled style={{ marginRight: '10px', color: '#3a88c9'}}/>*/}\n                        {/*    : <FileOutlined style={{ marginRight: '10px' }}/>*/}\n                        {/*}*/}\n                        <Icon style={styleIcon}/>\n                        {rowData.name}\n                    </div>\n                );\n            },\n        }\n    ];\n\n    const uploadProps = {\n        multiple: true,\n        showUploadList: false,\n        beforeUpload: _uploadFile\n    };\n\n    const uploadRender = () => {\n        return (\n            <Upload {...uploadProps}>\n                <Button icon={<PlusOutlined />}/>\n            </Upload>\n        )\n    };\n\n    const breadcrumbRender = () => {\n        return (\n            <span className={`${rtPrefix}-file-manager-breadcrumb ml-8`}>\n                {breadcrumb.map((item, index) =>\n                    <span\n                        key={item[rowKey]}\n                        // type=\"text\"\n                        className={`${rtPrefix}-file-manager-breadcrumb-btn`}\n                        onClick={() => _onClickBreadcrumb(item[rowKey], index + 1)}\n                    >\n                        <span>/</span><span>{item.name}</span>\n                    </span>\n                )}\n            </span>\n        )\n    };\n\n    return (\n        <FormTable\n            {...props}\n            ref={_setTableRef}\n            type={'serverSide'}\n            componentType={'FilesTable'}\n            onRowDoubleClick={_onRowDoubleClick}\n            defaultFilter={tableFilter}\n            customColumnProps={customColumnProps}\n            commandPanelProps={{\n                ...props.commandPanelProps,\n                onClickDelete: _onClickDelete,\n                systemBtnProps: {\n                    add: {\n                        actionType: 'modal',\n                        tooltip: 'Загрузить файл(ы)',\n                        render: uploadRender\n                    },\n                    addGroup: {actionType: 'modal', tooltip: 'Создать папку'},\n                    edit: {actionType: ['modal', 'modal']},\n                    delete: {}\n                },\n                leftCustomSideElement: [\n                    {\n                        componentType: 'Item',\n                        child: {\n                            componentType: 'Button',\n                            icon: <RollbackOutlined />,\n                            label: 'Back',\n                            className: 'ml-4',\n                            disabled: (breadcrumb.length === 1),\n                            onClick: _onClickBack\n                        }\n                    },\n                    {\n                        componentType: 'Item',\n                        child: {\n                            componentType: 'Custom',\n                            render: breadcrumbRender\n                        }\n                    }\n                ],\n                // rightCustomSideElement: [\n                //     {\n                //         componentType: 'Item',\n                //         label: 'View deleted',\n                //         className: 'mb-0',\n                //         child: {\n                //             componentType: 'Switch',\n                //             checked: tableFilter.deleted,\n                //             onChange: _onChangeViewDeleted\n                //         }\n                //     },\n                // ]\n            }}\n            modals={[\n                AddFolderModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows),\n                EditFolderModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows),\n                EditFileModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows)\n            ]}\n        />\n    );\n};\n\nFileManager.propTypes = {\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция запроса на получение конфига для таблицы */\n    requestLoadConfig: PropTypes.func,\n};\n\nFileManager.defaultProps = {\n    rowKey: 'id',\n    isGroupKey: 'isGroup',\n    expandParentKey: 'parentId',\n};\n\nexport default FileManager;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport FormModal from \"../Form/FormModal\";\nimport { notification, Button} from \"antd\";\nimport { notificationError } from \"../../utils/baseUtils\";\nimport objectPath from \"object-path\";\nimport { setDataStore } from \"../../../redux/rtd.actions\";\n\nconst Modal = props => {\n\n    const {buttonProps, modalConfig, modalData, dispatchPath} = props;\n\n    const [visible, setVisible] = useState(false);\n    const [_modalData, _setModalData] = useState({});\n    const [_buttonProps, setButtonProps] = useState({});\n\n    const subscribe = props.subscribe ? props.subscribe : {};\n\n    const setModalData = (value) => {\n        // console.log(\"setModalData: \", value);\n        _setModalData && _setModalData(value);\n    }\n\n    useEffect(() => {\n        _setModalData(modalData);\n    }, []);\n\n    /** Подписка на изменение props[subscribe.name] в сторе */\n    useEffect( () => {\n        if(subscribe.name) {\n            // console.log(\"Modal => subscribe: \", props[subscribe.name]);\n            subscribe.onChange && subscribe.onChange({value: props[subscribe.name], setModalData, setButtonProps});\n        }\n        // console.log(\"Change Props[2]: \", props.subscribeЗф);\n    }, [props[subscribe.name]]);\n\n    const _onOpenModal = () => {\n        // console.log(\"Modal => _modalData: \", _modalData);\n        setVisible(true)\n    }\n\n    const _onCloseModal = () => {\n        setVisible(false)\n    }\n\n    const _onSaveRow = ({type, row, requestSaveRow}) => {\n        dispatchPath && props.setDataStore && props.setDataStore(dispatchPath, row);\n\n        if (requestSaveRow\n            && ['addOnServer', 'editOnServer', 'addGroupOnServer', 'editGroupOnServer'].includes(type)\n        ) {\n            const method = (type === 'addOnServer' || type === 'addGroupOnServer') ? 'POST' : 'PUT';\n            // console.log(\"Modal Events => type: \", type, method, row, _modalData);\n            requestSaveRow({\n                method,\n                data: row,\n            })\n                .then(response => {\n                    notification.success({\n                        message: 'Сохранение прошло успешно'\n                    });\n                    _onCloseModal();\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении'));\n        } else _onCloseModal();\n    };\n\n    return (\n        <React.Fragment>\n            <Button\n                type=\"primary\"\n                {...buttonProps}\n                {..._buttonProps}\n                onClick={_onOpenModal}\n            >{buttonProps && buttonProps.label}</Button>\n            <FormModal\n                modal={modalConfig}\n                selectedRow={_modalData}\n                visible={visible}\n                setVisible={_onCloseModal}\n                saveRow={_onSaveRow}\n            />\n        </React.Fragment>\n    )\n};\n\nModal.propTypes = {\n\n    /** Свойства [Button](https://ant.design/components/button/) из Ant Design\n     * Добавлено свойство `label` с типом `ReactNode` или `string` для формирования контента кнопки*/\n    buttonProps: PropTypes.object,\n\n    /** Объект модального окна. Стандартная конфигурация. */\n    modalConfig: PropTypes.object,\n\n    /** Данные для модального окна */\n    modalData: PropTypes.object,\n\n    /** Путь в сторе куда класть данных окна после закрытия */\n    dispatchPath: PropTypes.string,\n\n    /** Объект для подписки на изменения в STORE */\n    subscribe: PropTypes.object,\n};\n\nconst mapStateToProps = (store, ownProps) => {\n    const {subscribe} = ownProps;\n    if(subscribe){\n        const {name, path} = subscribe;\n        if(name && path)\n            return { [name]: objectPath.get(store, path) };\n    }\n    return {};\n};\nconst mapDispatchToProps = (dispatch) =>\n    bindActionCreators( { setDataStore: setDataStore, }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Select from '../Select/Select';\nimport {\n\tInput,\n\tInputNumber,\n\tForm as AntForm,\n\tButton,\n\tCheckbox,\n\tSwitch,\n\tDatePicker,\n\tRadio,\n    Divider,\n} from 'antd';\nimport { getObjectExcludedProps, getValueFromMultiSelect, getValueFromSingleSelect } from \"../../utils/baseUtils\";\nimport FormTable from './FormTable';\n// import Typography from './Typography';\nimport { withStore, DatePickerHOC, TypographyTitle, TypographyText, TypographyDate } from \"./HOCs\";\nimport FileManager from \"../FileManager/FileManager\";\nimport Modal from \"../Modal/Modal\";\n\nconst excludeProps = ['child', 'componentType', 'field'];\nconst noAntItemTypes = ['Title', 'Text', 'Divider', 'Button', 'LocalTable', 'ServerTable', 'InfinityTable'];\n\nconst FormItem = (props) => {\n\n\tconst {child, field} = props;\n\tlet antFormItemProps = getObjectExcludedProps(props, excludeProps);\n\n\t// Если тип элемента Select -> добавить доп свойства к Form.Item\n    if (child && child.componentType && (child.componentType === 'SingleSelect' || child.componentType === 'MultiSelect')) {\n        antFormItemProps.valuePropName = 'defaultSelectedRowKeys';\n        antFormItemProps.getValueFromEvent = child.componentType === 'SingleSelect' ? getValueFromSingleSelect : getValueFromMultiSelect;\n        antFormItemProps.trigger = 'onChangeKeys';\n    } else if (child && child.componentType && child.componentType === 'SelectTable') {\n        // antFormItemProps.getValueFromEvent = getValueFromSelectTable;\n        // antFormItemProps.trigger = 'onRowClick';\n    }\n\n\t// console.log('FormItem props => ', props);\n\n\tconst getItem = () => {\n\t\tif (child) {\n\t\t    // const childProps = getObjectExcludedProps(child, ['componentType']);\n\t\t\tconst childProps = {...child};\n            // console.log('FormItem childProps => ', childProps);\n\t\t\tlet Component;\n\t\t\tlet placeholder;\n            switch (child.componentType) {\n\t\t\t\tcase 'Button':\n\t\t\t\t\tComponent = withStore(Button, antFormItemProps);\n\t\t\t\t\t// console.log('Props field => ', field);\n\t\t\t\t\tconst onClick = (e) => childProps.onClick && childProps.onClick(e, field);\n\t\t\t\t\treturn (<Component {...childProps} onClick={onClick}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'Title':\n\t\t\t\t\tComponent = withStore(TypographyTitle, antFormItemProps);\n\t\t\t\t\treturn (<Component {...child} componentType={child.componentType}/>);\n\t\t\t\tcase 'Text':\n\t\t\t\t\tComponent = withStore(TypographyText, antFormItemProps);\n\t\t\t\t\treturn (<Component {...child} componentType/>);\n\t\t\t\tcase 'Divider':\n\t\t\t\t\tComponent = withStore(Divider, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'Checkbox':\n\t\t\t\t\tComponent = withStore(Checkbox, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'DatePicker':\n\t\t\t\t\tComponent = withStore(DatePickerHOC(DatePicker), antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Выберите дату';\n\t\t\t\t\tconst style = {width: '100%', ...(childProps && childProps.style)};\n\t\t\t\t\treturn (<Component{...childProps} style={style} placeholder={placeholder}/>);\n\t\t\t\tcase 'DateText':\n\t\t\t\t\tComponent = withStore(TypographyDate, antFormItemProps);\n\t\t\t\t\treturn (<Component {...child} />);\n\t\t\t\tcase 'Input':\n\t\t\t\t\tComponent = withStore(Input, antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите значение';\n\t\t\t\t\treturn (<Component {...childProps} placeholder={placeholder} />);\n\t\t\t\tcase 'TextArea':\n\t\t\t\t\tComponent = withStore(Input.TextArea, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps} />);\n\t\t\t\tcase 'Password':\n\t\t\t\t\tComponent = withStore(Input.Password, antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите пароль';\n\t\t\t\t\treturn (<Component {...childProps} placeholder={placeholder}/>);\n\t\t\t\tcase 'InputNumber':\n\t\t\t\t\tComponent = withStore(InputNumber, antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите значение';\n\t\t\t\t\treturn (<Component {...childProps} style={{width: '100%'}} placeholder={placeholder}/>);\n\t\t\t\tcase 'Radio':\n\t\t\t\t\tComponent = withStore(Radio, antFormItemProps);\n\t\t\t\t\treturn <Component {...childProps}>{childProps && childProps.label}</Component>;\n\t\t\t\tcase 'RadioButton':\n\t\t\t\t\tComponent = withStore(Radio.Button, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'Switch':\n\t\t\t\t\tComponent = withStore(Switch, antFormItemProps);\n\t\t\t\t\treturn <Component {...childProps} />;\n                case \"RadioGroup\":\n                    Component = withStore(Radio.Group, antFormItemProps);\n                    return (<Component {...childProps} />);\n\t\t\t\tcase 'SingleSelect':\n                case 'MultiSelect':\n\t\t\t\t\treturn <Select {...childProps} type={child.componentType} name={antFormItemProps.name}/>;\n\t\t\t\t\t//'infinity', 'serverSide', 'localSide'\n                case 'InfinityTable':\n                    childProps.type = 'infinity';\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\n                case 'ServerTable':\n                    childProps.type = 'serverSide';\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\n                case 'LocalTable':\n                    childProps.type = 'localSide';\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\n                case 'SelectTable':\n\t\t\t\t\tchildProps.type = 'localSide';\n\t\t\t\t\treturn <FormTable {...childProps} name={props.name} componentType={child.componentType} /> ;\n\t\t\t\tcase 'FileManager':\n\t\t\t\t\treturn <FileManager {...childProps} name={props.name} />;\n\t\t\t\tcase 'Modal':\n\t\t\t\t\treturn <Modal {...childProps} name={props.name} />;\n\t\t\t\tcase 'Custom':\n\t\t\t\t\tComponent = withStore(child.render, antFormItemProps);\n\t\t\t\t\treturn <Component {...childProps}/>;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t};\n\n    if(!antFormItemProps.label)\n        return <AntForm.Item {...antFormItemProps} noStyle>{getItem()}</AntForm.Item>;\n    else\n        return <AntForm.Item {...antFormItemProps}>{getItem()}</AntForm.Item>;\n};\n\nFormItem.propTypes = {\n\tchild: PropTypes.object.isRequired\n};\n\nexport default FormItem;\n","import React from 'react';\nimport {rtPrefix} from '../../utils/variables';\nimport PropTypes from \"prop-types\";\n\nconst Layout = props => {\n\n    let itemProps = {};\n    Object.keys(props).forEach((key) =>\n        key !== 'children' ? (itemProps[key] = props[key]) : null\n    );\n\n    const getCls = () => {\n        let cls = [`${rtPrefix}-layout`];\n        itemProps.className && cls.push(itemProps.className);\n        return cls.join(' ');\n    };\n\n    return (\n        <div {...itemProps} className={getCls()}>\n            {props.children}\n        </div>\n    );\n};\n\nLayout.propTypes = {\n    /** Строка класса */\n    className: PropTypes.string,\n\n    /** Объект стиля */\n    style: PropTypes.object,\n};\n\nexport default Layout;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormItem from \"./FormItem\";\nimport Layout from \"../Layout/Layout\";\nimport { Row, Col, Tabs, Radio, Form as AntForm, Input, Space } from \"antd\";\nimport { getObjectExcludedProps } from \"../../utils/baseUtils\";\n\nconst excludeProps = [\"children\", \"componentType\"];\n\nconst FormItems = (props) => {\n    const { items } = props;\n\n    // console.log('FormItems props => ', props);\n\n    const getItems = (data, antFormListParams) => {\n\n        return (data && data.map((item, index) => {\n            let itemProps = getObjectExcludedProps(item, excludeProps);\n            // console.log('FormItems index => ', index);\n\n            switch (item.componentType) {\n                case \"Row\":\n                    return (\n                        <Row key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Row>\n                    );\n                case \"Col\":\n                    return (\n                        <Col key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Col>\n                    );\n                case \"Layout\":\n                    return (\n                        <Layout key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Layout>\n                    );\n                case \"Tabs\":\n                    return (\n                        <Tabs key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Tabs>\n                    );\n                case \"TabPane\":\n                    return (\n                        <Tabs.TabPane key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Tabs.TabPane>\n                    );\n                case \"RadioGroup\":\n                    return (\n                        <Radio.Group key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Radio.Group>\n                    );\n                case \"Item\":\n                    let _item = { ...item };\n                    let _key = index;\n                    if (antFormListParams && antFormListParams.field) {\n                        if (_item.name) {\n                            if (Array.isArray(_item.name)) {\n                                _item.name = [antFormListParams.field.name, ..._item.name];\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\n                            } else {\n                                _item.name = [antFormListParams.field.name, _item.name];\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\n                            }\n                        }\n                    }\n                    // console.log('_item ', _item.name);\n                    return <FormItem key={`${_key}`} {..._item} field={{ ...antFormListParams }}/>;\n                case \"ListItems\":\n                    return (\n                        <AntForm.List key={index} {...itemProps}>\n                            {(fields, operation) => {\n                                const param = { fields: [...fields], operation: { ...operation } };\n                                return getItems(item.children, param);\n                            }}\n                        </AntForm.List>\n                    );\n                case \"ListItem\":\n                    // console.log('antFormListParams => ', antFormListParams);\n                    return (\n                        <div key={index}>\n                            {antFormListParams && antFormListParams.fields && antFormListParams.fields.map((field, fIndex) => {\n                                // console.log('index field.key', index, field);\n                                const param = { field: { ...field }, ...antFormListParams };\n                                return <div key={field.key}>{getItems(item.children, param)} </div>;\n                            })}\n                        </div>\n                    );\n\n\n                default:\n                    return null;\n            }\n        })) || null;\n    };\n\n    return getItems(items);\n};\n\nFormItems.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default FormItems;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {noop} from '../../utils/baseUtils';\nimport {rtPrefix} from '../../utils/variables';\nimport {Input, Tooltip, Popconfirm, Modal, Button} from 'antd';\nimport {\n\tPlusOutlined,\n\tCopyOutlined,\n\tFolderAddOutlined,\n\tDeleteOutlined,\n\tEditOutlined,\n\tArrowUpOutlined,\n\tArrowDownOutlined,\n\tSettingOutlined,\n\tFilterOutlined,\n\tExclamationCircleOutlined,\n} from '@ant-design/icons';\nimport FormItems from \"../Form/FormItems\";\nconst {confirm} = Modal;\n\nconst CommandPanel = (props) => {\n\tconst {\n\t\tborderStyle,\n\t\tdefaultValueSearch,\n\t\tdeleteConfirm,\n\t\tdeleteConfirmType,\n\t\tdeleteConfirmTitle,\n\t\tdeleteConfirmDescription,\n\t\tonClickAdd,\n\t\tonClickAddAsCopy,\n\t\tonClickAddGroup,\n\t\tonClickDelete,\n\t\tonClickEdit,\n\t\tonClickUp,\n\t\tonClickDown,\n\t\tonSearch,\n\t\tshowElements,\n        systemBtnProps,\n\t\tdisabledElements,\n\t\tleftCustomSideElement,\n\t\tcenterCustomSideElement,\n\t\trightCustomSideElement,\n\t} = props;\n\n    const defaultSystemBtnProps = {\n        add: {\n            tooltip: 'Добавить',\n            onClick: onClickAdd,\n            icon: <PlusOutlined />\n        },\n        addAsCopy: {\n            tooltip: 'Добавить копированием',\n            onClick: onClickAddAsCopy,\n            icon: <CopyOutlined />\n        },\n        addGroup: {\n            tooltip: 'Добавить группу',\n            onClick: onClickAddGroup,\n            icon: <FolderAddOutlined />\n        },\n        edit: {\n            tooltip: 'Изменить',\n            onClick: onClickEdit,\n            icon: <EditOutlined />\n        },\n        delete: {\n            tooltip: 'Удалить',\n            icon: <DeleteOutlined />\n        },\n        up: {\n            tooltip: 'Переместить вверх',\n            onClick: onClickUp,\n            icon: <ArrowUpOutlined />\n        },\n        down: {\n            tooltip: 'Переместить вниз',\n            onClick: onClickDown,\n            icon: <ArrowDownOutlined />\n        },\n\t\tsearch: {\n\t\t\tplaceholder: 'Поиск',\n\t\t\tonSearch: onSearch,\n\t\t},\n        settings: {\n            tooltip: 'Настройки таблицы',\n            tooltipPlacement: 'topRight',\n            onClick: () => {},\n            icon: <SettingOutlined />\n        },\n        filter: {\n            tooltip: 'Настройки фильтров',\n            tooltipPlacement: 'topRight',\n            onClick: () => {},\n            icon: <FilterOutlined />\n        }\n    };\n\n\tconst _onClickDelete = (event) => {\n\t\tif (deleteConfirmType === 'Modal') {\n\t\t\tdeleteButtonModalConfirm();\n\t\t} else {\n\t\t\tonClickDelete(event);\n\t\t}\n\t};\n\n\tconst deleteButtonPopupConfirm = () => {\n\t\treturn (\n\t\t\t<Popconfirm\n\t\t\t\tplacement='top'\n\t\t\t\ttitle={deleteConfirmDescription}\n\t\t\t\tonConfirm={onClickDelete}\n\t\t\t\tokText='Да'\n\t\t\t\tcancelText='Нет'\n\t\t\t>\n\t\t\t\t{renderDeleteBtn(false)}\n\t\t\t</Popconfirm>\n\t\t);\n\t};\n\n    const deleteButtonModalConfirm = () => {\n\t\tconfirm({\n\t\t\ttitle: deleteConfirmTitle,\n\t\t\ticon: <ExclamationCircleOutlined />,\n\t\t\tcontent: deleteConfirmDescription,\n\t\t\tcentered: true,\n\t\t\tokText: 'Ок',\n\t\t\tcancelText: 'Отмена',\n\t\t\tonOk() {\n\t\t\t\tonClickDelete();\n\t\t\t},\n\t\t});\n\t};\n\n    const renderDeleteBtn = (withOnClick) => {\n        const genProps = {...defaultSystemBtnProps['all'], ...systemBtnProps['all']};\n        const btnProps = {...defaultSystemBtnProps['delete'], ...systemBtnProps['delete']};\n\n        return (\n            <Tooltip title={btnProps.tooltip}>\n                <Button\n                    {...genProps}\n                    className={`${rtPrefix}-btn`}\n                    icon={btnProps.icon}\n                    onClick={withOnClick ? _onClickDelete : null}\n                    disabled={disabledElements.includes('delete')}\n                />\n            </Tooltip>\n        );\n    };\n\n    const renderBtn = (type) => {\n        const genProps = {...defaultSystemBtnProps['all'], ...systemBtnProps['all']};\n        const btnProps = {...defaultSystemBtnProps[type], ...systemBtnProps[type]};\n\n        if(showElements.includes(type)) {\n            if(btnProps.render)\n                return btnProps.render({\n                    disabled: disabledElements.includes(type),\n                    onClick: btnProps.onClick,\n\t\t\t\t\tonSearch: btnProps.onSearch\n\t\t\t\t});\n             else\n             \tif (type === 'search')\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Input.Search\n\t\t\t\t\t\t\tdisabled={disabledElements.includes(type)}\n\t\t\t\t\t\t\tdefaultValue={defaultValueSearch}\n\t\t\t\t\t\t\tplaceholder={btnProps.placeholder}\n\t\t\t\t\t\t\tonSearch={btnProps.onSearch}\n\t\t\t\t\t\t\tclassName={'search'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\telse\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Tooltip title={btnProps.tooltip} placement={btnProps.tooltipPlacement ? btnProps.tooltipPlacement : 'top'}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t{...genProps}\n\t\t\t\t\t\t\t\tclassName={`${rtPrefix}-btn`}\n\t\t\t\t\t\t\t\ticon={btnProps.icon}\n\t\t\t\t\t\t\t\tonClick={btnProps.onClick}\n\t\t\t\t\t\t\t\tdisabled={disabledElements.includes(type)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t)\n        }\n        else\n            return null\n    };\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{showElements.length ||\n\t\t\tleftCustomSideElement ||\n\t\t\tcenterCustomSideElement ||\n\t\t\trightCustomSideElement ? (\n\t\t\t\t<div\n\t\t\t\t\tclassName={`${rtPrefix}-command-panel border-${borderStyle}`}\n\t\t\t\t>\n\t\t\t\t\t<div className={'left-system-side'}>\n                        {renderBtn('add')}\n                        {renderBtn('addAsCopy')}\n                        {renderBtn('addGroup')}\n                        {renderBtn('edit')}\n\n\t\t\t\t\t\t{showElements.includes('delete')\n\t\t\t\t\t\t\t? deleteConfirm\n\t\t\t\t\t\t\t\t? deleteConfirmType === 'Popup'\n\t\t\t\t\t\t\t\t\t? deleteButtonPopupConfirm()\n\t\t\t\t\t\t\t\t\t: renderDeleteBtn(true)\n\t\t\t\t\t\t\t\t: renderDeleteBtn(true)\n\t\t\t\t\t\t\t: null}\n\n                        {renderBtn('up')}\n                        {renderBtn('down')}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'left-custom-side'}>\n\t\t\t\t\t\t{leftCustomSideElement ? <FormItems items={leftCustomSideElement} /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'center-custom-side'}>\n\t\t\t\t\t\t{centerCustomSideElement ? <FormItems items={centerCustomSideElement} /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'right-custom-side'}>\n\t\t\t\t\t\t{rightCustomSideElement ? <FormItems items={rightCustomSideElement} /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'right-system-side'}>\n\t\t\t\t\t\t{renderBtn('search')}\n                        {renderBtn('settings')}\n                        {renderBtn('filter')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n};\n\nCommandPanel.propTypes = {\n\t/** Центральный кастомный элемент командной панели */\n\tcenterCustomSideElement: PropTypes.arrayOf(PropTypes.object), // PropTypes.element,\n\n\t/** Тип бордера панели (по умолчанию 'bottom')\n\t * ['all', 'none', 'top', 'left', 'bottom', 'right', 'top-bottom', 'left-right'] */\n\tborderStyle: PropTypes.oneOf([\n\t\t'all',\n\t\t'none',\n\t\t'top',\n\t\t'left',\n\t\t'bottom',\n\t\t'right',\n\t\t'top-bottom',\n\t\t'left-right',\n\t]),\n\n\t/** Значение по умолчанию для строки поиска */\n\tdefaultValueSearch: PropTypes.string,\n\n\t/** Нужно ли делать подтверждение на кнопке удалить */\n\tdeleteConfirm: PropTypes.bool,\n\n\t/** Тип подтверждения удаления 'Popup' / 'Modal' */\n\tdeleteConfirmType: PropTypes.oneOf(['Popup', 'Modal']),\n\n\t/** Текст подтверждения на удаление элемента */\n\tdeleteConfirmTitle: PropTypes.string,\n\n\t/** Текст подтверждения на удаление элемента */\n\tdeleteConfirmDescription: PropTypes.string,\n\n\t/** Массив элементов командной панели для блокировки\n     ['add', 'addAsCopy', 'addGroup', 'delete', 'edit', 'up', 'down', 'search', 'settings', 'filter'] */\n\tdisabledElements: PropTypes.arrayOf(PropTypes.string),\n\n\t/** Левый кастомный элемент командной панели */\n\tleftCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Событие при нажатии на кнопку \"Добавить\" */\n\tonClickAdd: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Добавить копированием\" */\n\tonClickAddAsCopy: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Добавить группу\" */\n\tonClickAddGroup: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Удалить\" */\n\tonClickDelete: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Переместить вниз\" */\n\tonClickDown: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Изменить\" */\n\tonClickEdit: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Переместить вверх\" */\n\tonClickUp: PropTypes.func,\n\n\t/** Событие при поиске */\n\tonSearch: PropTypes.func,\n\n\t/** Правый кастомный элемент командной панели */\n\trightCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Массив элементов командной панели, которые надо отобразить\n     ['add', 'addAsCopy', 'addGroup', 'delete', 'edit', 'up', 'down', 'search', 'settings', 'filter'] */\n\tshowElements: PropTypes.arrayOf(PropTypes.string),\n\n    /** Объект кастомизации системных кнопок\n     { [btnType]: { tooltip: <String>, icon: <Icon />, render: ({disabled, onClick}) => <Component /> } } */\n    systemBtnProps: PropTypes.object\n};\n\nCommandPanel.defaultProps = {\n\tcenterCustomSideElement: null,\n\tborderStyle: 'bottom',\n\tdefaultValueSearch: undefined,\n\tdeleteConfirm: true,\n\tdeleteConfirmType: 'Modal',\n\tdeleteConfirmTitle: 'Подтвержение удаления',\n\tdeleteConfirmDescription: 'Вы действительно хотите удалить?',\n\tdisabledElements: [],\n\tleftCustomSideElement: null,\n\tonClickAdd: noop,\n\tonClickAddAsCopy: noop,\n\tonClickAddGroup: noop,\n\tonClickDelete: noop,\n\tonClickEdit: noop,\n\tonClickUp: noop,\n\tonClickDown: noop,\n\tonSearch: noop,\n\trightCustomSideElement: null,\n\tshowElements: [],\n    systemBtnProps: {},\n};\nexport default CommandPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '../Table/Table';\n\n/**\n * ### Список / Дерево.\n */\nconst List = (props) => {\n\tconst {rowKey, rowRender, title} = props;\n\n\tconst columns = [\n\t\t{\n\t\t\tkey: rowKey,\n\t\t\ttitle: title,\n\t\t\tdataKey: rowKey,\n\t\t\twidth: 500,\n\t\t\tcellRenderer:\n\t\t\t\ttypeof rowRender === 'function'\n\t\t\t\t\t? rowRender\n\t\t\t\t\t: ({rowData}) => <div>{rowData[rowRender]}</div>,\n\t\t},\n\t];\n\treturn <Table {...props} columns={columns} headerHeight={title ? 30 : 0} />;\n};\n\nList.propTypes = {\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { cellData, columns, column, columnIndex, rowData, rowIndex, container, isScrolling }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n\t/** Заголовок списка (по умолчанию скрыт)*/\n\ttitle: PropTypes.string,\n};\n\nList.defaultProps = {\n\trowKey: 'id',\n\trowRender: 'id',\n\ttitle: undefined,\n};\n\nexport default List;\n","/** deprecated */\nimport CommandPanel from './CommandPanel/CommandPanel';\nimport FilterPanel from './FilterPanel/FilterPanel';\nimport Table from './Table/Table';\nimport AdvancedTable from './AdvancedTable/AdvancedTable';\nimport List from './List/List';\nimport Select from './Select/Select';\nimport SingleDate from './SingleDate/SingleDate';\nimport DateRange from './DateRange/DateRange';\nimport Form from './Form/Form';\nimport FileManager from './FileManager/FileManager';\nimport Modal from './Modal/Modal';\n\n// export {default as CommandPanel} from './CommandPanel/CommandPanel';\n// export {default as FilterPanel} from './FilterPanel/FilterPanel';\n// export {default as Table} from './Table/Table';\n// export {default as AdvancedTable} from './AdvancedTable/AdvancedTable';\n// export {default as List} from './List/List';\n// export {default as Select} from './Select/Select';\n// export {default as SingleDate} from './SingleDate/SingleDate';\n// export {default as DateRange} from './DateRange/DateRange';\n//\n// // Компоненты формы\n// export {default as Form} from './Form/Form';\n// export {default as FileManager} from './FileManager/FileManager';\n// export {default as Modal} from './Modal/Modal';\n\n\nexport const deprecated = {\n    CommandPanel,\n    FilterPanel,\n    Table,\n    AdvancedTable,\n    List,\n    Select,\n    SingleDate,\n    DateRange,\n    Form,\n    FileManager,\n    Modal,\n}","import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport objectPath from \"object-path\";\nimport { dispatchToStore, getObjectExcludedProps, useMounted } from \"../utils/baseUtils\";\nimport { getExtraData, mapDispatchToProps, mapStateToProps } from \"../utils/storeUtils\";\n\nconst defaultProps = {\n    trigger: 'onChange',\n    valuePropName: 'value',\n};\n\nexport const withStore = (Component) => {\n\n    return connect(mapStateToProps, mapDispatchToProps)( (props) => {\n\n        const {componentType, setDataStore, dispatchExtraData} = props;\n\n        // Объект подписки на стор\n        const subscribe = props.subscribe ? props.subscribe : [];\n\n        // Объект публикации в стор\n        const dispatch = props.dispatch ? props.dispatch : {};\n\n        const [subscribeProps, setSubscribeProps] = useState({});\n\n        const {trigger, valuePropName} = { ...defaultProps, ...props.itemProps };\n\n        const excludeProps = ['itemProps', 'componentType', 'setDataStore', 'subscribe', ...subscribe.map(item => item.name), 'dispatch', 'dispatchExtraData']; // ...subscribe.map(item => item.name),\n\n        const isMounted = useMounted()\n\n        /** Подписка на изменение props[subscribe.name] в сторе */\n        subscribe.map(item => {\n            return useEffect( () => {\n                // console.log(\"withStore subscribe: \", item.name, item.withMount);\n                if((item.withMount || isMounted) && item.name) {\n                    // console.log(\"storeHOC => subscribe: \", props[subscribe.name]);\n                    item.onChange && item.onChange({\n                        value: props[item.name],\n                        extraData: getExtraData(item, props), //extraData,\n                        setSubscribeProps: setSubscribePropsHandler});\n                }\n                // console.log(\"Change Props[2]: \", props.subscribeЗф);\n            }, [props[item.name]]);\n        })\n\n        /** Подписка на изменение props и отправка данных в стор */\n        useEffect(() => {\n            let _value = props[valuePropName];\n            // console.log(`storeHOC => `, dispatch.path, _value, valuePropName);\n            // if (_value === null || _value === undefined || (typeof _value === 'string' && _value.trim() === ''))\n            //     _value = undefined;\n            if (componentType !== 'Button' && componentType !== 'Search')\n                dispatchToStore({ dispatch, setDataStore, value: _value });\n        }, [props[valuePropName]]);\n\n        /** Подписка на изменение subscribeProps.value и отправка данных в props[trigger] (как правило это onChange) */\n        // useEffect(() => {\n        //     if(isMounted) {\n        //         console.log('onChange subscribeProps.value => ', subscribeProps.value);\n        //         props[trigger] && props[trigger](subscribeProps.value);\n        //     }\n        // }, [subscribeProps.value]);\n\n        const setSubscribePropsHandler = (_subscribeProps) => {\n            // console.log('onChange setSubscribePropsHandler => ', dispatch.path, _subscribeProps);\n            setSubscribeProps((prevState) => ({ ...prevState, ..._subscribeProps }));\n            if(_subscribeProps && objectPath.has(_subscribeProps, valuePropName)) {\n                const value = _subscribeProps[valuePropName]\n                // console.log('setSubscribePropsHandler => ', componentType, value);\n                if(componentType === 'Search')\n                    _searchDispatchToStore(value)\n\n                props[trigger] && props[trigger](value);\n            }\n        }\n\n        const onChange = (...args) => {\n            // console.log('withStore [trigger] ', dispatch.path, props[trigger], args)\n            if(componentType === 'Button')\n                dispatchToStore({dispatch, setDataStore, value: args[0], extraData: dispatchExtraData});\n\n            if(subscribeProps && objectPath.has(subscribeProps, valuePropName)) {\n                const _subscribeProps = {...subscribeProps}\n                objectPath.del(_subscribeProps, valuePropName);\n                // console.log('onClear subscribeProps[valuePropName] => ', _subscribeProps);\n                setSubscribeProps(_subscribeProps)\n            }\n\n            props[trigger] && props[trigger](...args);\n        };\n\n        const _onSearch = (searchLine, e) => {\n            e.preventDefault();\n            // console.log(\"_onSearch\", searchLine);\n            _searchDispatchToStore(searchLine)\n        };\n        const _searchDispatchToStore = (searchLine) =>\n          dispatchToStore({dispatch, setDataStore, value: searchLine, extraData: dispatchExtraData});\n\n        const childProps = getObjectExcludedProps(props, excludeProps);\n        const onSearchProps = (componentType === 'Search') ? {onSearch: _onSearch} : {}\n        // console.log(`storeHOC Component => `, componentType, Component);\n        return (\n            <Component\n                {...childProps}\n                {...subscribeProps}\n                {...{[trigger]: onChange}}\n                {...onSearchProps}\n            >{props.children}</Component>\n        )\n    })\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getObjectExcludedProps } from \"../utils/baseUtils\";\nimport {renderClassicByName} from \"../core/renders\";\nconst excludeProps = ['child', 'componentType', 'field'];\nconst FormItem = (props) => {\n\n\tconst {child, field} = props;\n\tlet antFormItemProps = getObjectExcludedProps(props, excludeProps);\n\tif (child)\n\t\treturn renderClassicByName(child.componentType)\n\t\t\t({itemProps: {...antFormItemProps}, ...child, field})\n\telse\n\t\treturn null;\n};\n\nFormItem.propTypes = {\n\tchild: PropTypes.object.isRequired\n};\n\nexport default FormItem;\n","import React from \"react\";\nimport FormItem from \"./FormItem\";\nimport { Form as AntForm } from \"antd\";\nimport { renderDeclarativeByName } from \"../core/renders\";\n\nconst FormItems = (props) => {\n    const { items } = props;\n    // console.log('FormItems props => ', props);\n    const getItems = (data, formListProps) => {\n        return (data && data.map((item, index) => {\n            const {componentType, children, ...itemProps} = item;\n            // console.log('FormItems index => ', index);\n            switch (componentType) {\n                case \"Item\":\n                    let _item = { ...item };\n                    let _key = index;\n                    if (formListProps && formListProps.field) {\n                        if (_item.name) {\n                            if (Array.isArray(_item.name)) {\n                                _item.name = [formListProps.field.name, ..._item.name];\n                                _item.fieldKey = [formListProps.field.name, ..._item.name];\n                            } else {\n                                _item.name = [formListProps.field.name, _item.name];\n                                _item.fieldKey = [formListProps.field.name, ..._item.name];\n                            }\n                        }\n                    }\n                    // console.log('_item ', _item.name);\n                    return <FormItem key={`${_key}`} {..._item} field={{ ...formListProps }}/>;\n                case \"ListItems\":\n                    return (\n                        <AntForm.List key={index} {...itemProps}>\n                            {(fields, operation) => {\n                                const param = { fields: [...fields], operation: { ...operation } };\n                                return getItems(children, param);\n                            }}\n                        </AntForm.List>\n                    );\n                case \"ListItem\":\n                    // console.log('formListProps => ', formListProps);\n                    return (\n                        <div key={index}>\n                            {formListProps && formListProps.fields && formListProps.fields.map((field, fIndex) => {\n                                // console.log('index field.key', index, field);\n                                const param = { field: { ...field }, ...formListProps };\n                                return <div key={field.key}>{getItems(children, param)} </div>;\n                            })}\n                        </div>\n                    );\n                default:\n                    return renderDeclarativeByName(componentType)({ key: index, ...itemProps })(getItems(children, formListProps))\n            }\n        })) || null;\n    };\n\n    return getItems(items);\n};\n\nexport default FormItems;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport FormItems from \"./FormItems\";\nimport { Form as AntForm, notification } from \"antd\";\nimport { dispatchToStore, getObjectExcludedProps, noop, notificationError } from \"../utils/baseUtils\";\nimport { rtPrefix } from \"../utils/variables\";\nimport { setDataStore } from \"../../redux/rtd.actions\";\n\nconst excludeProps = [\n    \"dispatch\",\n    \"setDataStore\",\n    \"componentType\",\n    \"noPadding\",\n    \"scrollable\",\n    \"header\",\n    \"body\",\n    \"footer\",\n    \"loadInitData\",\n    \"requestSaveForm\",\n    \"methodSaveForm\",\n    \"processBeforeSaveForm\"\n];\n\n/** Компонент заголовка формы */\nexport const FormHeader = (props) =>\n    <div {...props} className={`${rtPrefix}-form-header ${props.className || ''}`}>{props.children}</div>\n\n/** Компонент тела формы */\nexport const FormBody = (props) => {\n    const {noPadding, scrollable, ...rest} = props;\n    let cls = [`${rtPrefix}-form-body`];\n    noPadding && cls.push(`${rtPrefix}-form-body-no-padding`);\n    scrollable && cls.push(`${rtPrefix}-form-body-scrollable`);\n    return <div {...rest} className={cls.join(\" \")}/>\n}\n\n/** Компонент подвала формы */\nexport const FormFooter = (props) =>\n    <div className={`${rtPrefix}-form-footer`}>{props.children}</div>\n\n\n/** Компонент формы */\nconst Form = (props) => {\n    const {\n        dispatch,\n        setDataStore,\n        loadInitData,\n        header,\n        body,\n        footer,\n        requestSaveForm,\n        methodSaveForm,\n        processBeforeSaveForm\n    } = props;\n\n    /** Состояние первоначалной настройки компонента*/\n    const [loaded, setLoaded] = useState(false);\n    const [antFormProps, setAntFormProps] = useState({});\n    const [initFormData, setInitFormData] = useState({});\n\n    useEffect(() => {\n        if (!loaded) {\n            if (loadInitData !== noop)\n                loadInitData(_setInitFormData);\n            else\n                setLoaded(true);\n        }\n    }, [loaded]);\n\n    useEffect(() => {\n        setAntFormProps(getObjectExcludedProps(props, excludeProps));\n        // console.log('antFormProps props => ', getObjectExcludedProps(props, excludeProps));\n    }, [props]);\n\n\n    const _setInitFormData = (data) => {\n        // console.log(\"Form loaded init data => \", data);\n        setInitFormData(data);\n        setLoaded(true);\n    };\n\n\n    let antForm;\n    if (props && props.form) {\n        antForm = props.form;\n    } else {\n        const [form] = AntForm.useForm();\n        antForm = form;\n    }\n\n    const getBodyCls = () => {\n        let cls = [`${rtPrefix}-form-body`];\n        props.noPadding && cls.push(`${rtPrefix}-form-body-no-padding`);\n        props.scrollable && cls.push(`${rtPrefix}-form-body-scrollable`);\n        return cls.join(\" \");\n    };\n\n    const onFinish = (rawValues) => {\n        const values = processBeforeSaveForm ? processBeforeSaveForm(rawValues) : rawValues;\n        // console.log(`Success form [${props.name ? props.name : 'no name form'}]: `, values);\n        const saveObject = {\n            ...initFormData,\n            ...values,\n        };\n        console.log(`Success form [${props.name ? props.name : 'no name form'}]: `, saveObject);\n        if (requestSaveForm && methodSaveForm) {\n            requestSaveForm({\n                method: methodSaveForm,\n                data: saveObject\n            })\n                .then(response => {\n                    notification.success({\n                        message: \"Сохранение прошло успешно\"\n                    });\n                    props.onFinish && props.onFinish(saveObject, response.data);\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\n        } else if (props.onFinish)\n            props.onFinish(saveObject);\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.error(\"Failed:\", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    const Header = (header) => <div className={`${rtPrefix}-form-header`}><FormItems items={header}/></div>\n    const Footer = (footer) => <div className={`${rtPrefix}-form-footer`}><FormItems items={footer}/></div>\n\n    return (\n        <React.Fragment>\n            {loaded\n                ? <AntForm\n                    form={antForm}\n                    {...antFormProps}\n                    className={`${antFormProps.className} ${rtPrefix}-form`}\n                    style={{ ...antFormProps.style, width: '100%', height: '100%' }}\n                    initialValues={{ ...antFormProps.initialValues, ...initFormData }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    onFieldsChange={(changedFields, allFields) => {\n                        const values = {\n                            ...initFormData,\n                            ...antForm.getFieldsValue(),\n                        };\n                        // console.log('dispatchToStore => ', dispatch, values);\n                        dispatch && dispatchToStore({ dispatch, setDataStore, value: values })}\n                    }\n                >\n                    <React.Fragment>\n                        {header ? Header(header) : null}\n                        {body ? <div className={getBodyCls()}><FormItems items={body}/></div> : null}\n                        {props.children}\n                        {footer ? Footer(footer) : null}\n                    </React.Fragment>\n                </AntForm>\n                : null}\n        </React.Fragment>\n    );\n};\n\nForm.propTypes = {\n\n    /** Не делать отступы у формы от краев блока. **Only config Form** */\n    noPadding: PropTypes.bool,\n\n    /** Разрешит скролл внтри формы. **Only config Form** */\n    scrollable: PropTypes.bool,\n\n    /** Массив объектов для шапки формы. Как правило только заголовок. */\n    header: PropTypes.arrayOf(PropTypes.object),\n\n    /** Массив объектов для тела формы */\n    body: PropTypes.arrayOf(PropTypes.object),\n\n    /** Массив объектов для подвала формы. Как правило только кнопки \"Сохранить\" и \"Отмена\" */\n    footer: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ссылка на функцию загрузки значений по умолчанию\n     * `(callBack) => callBack(initObject)` */\n    loadInitData: PropTypes.func,\n\n    /** Запрос для автоматического сохранения формы */\n    requestSaveForm: PropTypes.func,\n\n    /** HTTP Метод, передаваемый в запрос сохранения */\n    methodSaveForm: PropTypes.string,\n\n    /** Функция обработки перед сохранением формы */\n    processBeforeSaveForm: PropTypes.func\n};\n\nForm.defaultProps = {\n    noPadding: false,\n    scrollable: false,\n    loadInitData: noop,\n    methodSaveForm: 'POST'\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators({ setDataStore: setDataStore}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { notification, Select as AntSelect } from \"antd\";\nimport {\n\tgenerateUUID,\n\tgetObjectExcludedProps,\n\tnotificationError, useMounted\n} from \"../utils/baseUtils\";\n\nimport { CheckOutlined } from '@ant-design/icons';\n\nconst excludeProps = [\n\t'componentType',\n\t'defaultSortBy',\n\t'defaultFilter',\n\t'defaultSearchValue',\n\t'sortBy',\n\t'filter',\n\t'searchValue',\n\t'searchParamName',\n    'lostParamName',\n\t'infinityMode',\n\t'requestLoadRows',\n\t'optionConverter',\n\t'options',\n\t'widthControl',\n\t'pageSize'\n];\n\n/** Компонент выбора элемента(ов) из списка */\nconst Select = props => {\n\n\tconst {\n\t\t// Rt Props\n\t\tdefaultSortBy,\n\t\tdefaultFilter,\n\t\tdefaultSearchValue,\n\t\tsortBy,\n\t\tfilter,\n\t\tsearchValue,\n\t\tsearchParamName,\n\t\tlostParamName,\n\t\tinfinityMode,\n\t\trequestLoadRows,\n\t\toptionConverter,\n\t\toptions,\n\t\twidthControl,\n\t\tpageSize,\n\n\t\t// Ant Props\n\t\tmode,\n\t\tonChange,\n\t\tvalue,\n\t\tdropdownRender\n\t} = props;\n\n\t/** Наличие на сервере еще данных */\n\tconst [_hasMore, _setHasMore] = useState(true);\n\t/** Индикатор загрузки данных */\n\tconst [_loading, _setLoading] = useState(false);\n\t/** Опции селекта */\n\tconst [_options, _setOptions] = useState(options);\n\tconst [tmpOption, setTmpOption] = useState(undefined);\n\n\t/** Индикатор достижения низа окна */\n\tconst [isEndReached, setIsEndReached] = useState(false);\n\n\t/** Объект сортировки */\n\tconst [_sortBy, _setSortBy] = useState(undefined);\n\t/** Объект фильтрации */\n\tconst [_filter, _setFilter] = useState({});\n\t/** Строка поиска */\n\tconst [_searchValue, _setSearchValue] = useState(undefined);\n\n\t/** Состояние параметра выбрать все */\n\tconst [_isSelectAll, _setIsSelectAll] = useState(false);\n\n\tconst isMounted = useMounted()\n\n\tuseEffect(() => {\n\t\t_setSearchValue(defaultSearchValue);\n\t\t_loadOptions({\n\t\t\tsortBy: defaultSortBy,\n\t\t\tfilter: defaultFilter,\n\t\t\tsearchValue: defaultSearchValue,\n\t\t\treload: true,\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif(isMounted) {\n\t\t\t_setRowsHandler(options);\n\t\t}\n\t}, [options]);\n\n\tuseEffect(() => {\n\t\t// console.log(\"Change sortBy, filter, searchValue\", sortBy, filter, searchValue);\n\t\tif(isMounted) {\n\t\t\tconst __sortBy = sortBy ? sortBy : _sortBy;\n\t\t\tconst __filter = filter ? filter : _filter;\n\t\t\tconst __searchValue = searchValue ? searchValue : _searchValue;\n\t\t\t_setSortBy(__sortBy);\n\t\t\t_setFilter(__filter);\n\t\t\t_setSearchValue(__searchValue);\n\t\t\t_loadOptions({\n\t\t\t\tsortBy: __sortBy,\n\t\t\t\tfilter: __filter,\n\t\t\t\tsearchLine: __searchValue,\n\t\t\t\treload: true,\n\t\t\t});\n\t\t}\n\t}, [sortBy, filter, searchValue]);\n\n\tconst _setRowsHandler = (options) => {\n\t\t_setOptions(options);\n\t\t// console.log('Select _setRowsHandler value => ', options)\n\t\tif(mode === 'multiple') {\n\t\t\tif(Array.isArray(value))\n\t\t\t\tif(options.reduce((preValue, item) => value.includes(item.value) ? preValue + 1 : preValue, 0) === options.length)\n\t\t\t\t\t_setIsSelectAll(true);\n\t\t\t\telse\n\t\t\t\t\t_setIsSelectAll(false);\n\t\t\tonChange(value);\n\t\t} else {\n\t\t\tif(value && options && options.findIndex(option => option.value === value) === -1){\n\t\t\t\t// console.log('Load tmpOption');\n\t\t\t\t_loadTmpOption();\n\t\t\t} else {\n\t\t\t\t// console.log('Clear tmpOption');\n\t\t\t\tsetTmpOption(undefined)\n\t\t\t}\n\t\t}\n\t\t// setRows(rows);\n\t\t// rowsDispatch(rows);\n\t};\n\n\tconst getPageNum = (reload) =>\n\t\treload ? 0 : Math.floor(_options.length / pageSize);\n\n\tconst getSort = (sortBy) =>\n\t\tsortBy && sortBy.key ? sortBy.key + ',' + sortBy.order : null;\n\n\tconst getSearchValue = (searchValue) =>\n\t\tsearchValue ? {[searchParamName]: searchValue} : null\n\n\tconst _loadOptions = (params) => {\n\t\t// console.log('_dataProcessing', params);\n\t\tconst {sortBy, filter, searchValue, reload} = params;\n\t\tif ((_hasMore || reload) && !_loading && requestLoadRows) {\n\t\t\t_setLoading(true);\n\n\t\t\tconst requestOptions = {\n\t\t\t\tparams: {\n\t\t\t\t\tpage: getPageNum(reload),\n\t\t\t\t\tsize: pageSize,\n\t\t\t\t\tsort: getSort(sortBy)\n\t\t\t\t},\n\t\t\t\tdata: {\n\t\t\t\t\t...filter,\n\t\t\t\t\t...getSearchValue(searchValue)\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log('dataQuery', dataQuery);\n\n\t\t\trequestLoadRows(requestOptions)\n\t\t\t\t.then((response) => {\n\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\tconst result = response.data;\n\n\t\t\t\t\tif (result && result.length < pageSize) {\n\t\t\t\t\t\t_setHasMore(false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_setHasMore(true);\n\t\t\t\t\t\tsetIsEndReached(false);\n\t\t\t\t\t}\n\t\t\t\t\treload\n\t\t\t\t\t\t? _setRowsHandler(result.map(option => optionConverter(option))) // _setRows\n\t\t\t\t\t\t: _setRowsHandler(_options.concat(result.map(option => optionConverter(option)))); // _setRows\n\n\t\t\t\t\t// console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\n\n\t\t\t\t\t_setLoading(false);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t\t\t_setRowsHandler(_options); // _setRows\n\t\t\t\t\t// setHasMore(false);\n\t\t\t\t\t_setLoading(false);\n\t\t\t\t});\n\t\t}\n\t};\n\n\tconst _loadTmpOption = () => {\n\t\tif(requestLoadRows){\n\t\t\trequestLoadRows({params: {}, data: {[lostParamName]: value}})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tif(response.data){\n\t\t\t\t\t\tif(response.data.length === 1){\n\t\t\t\t\t\t\tsetTmpOption(optionConverter(response.data[0]))\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnotification.error({ message: `Ошибка загрузки потерянного элемента` });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t\t\tsetTmpOption(undefined)\n\t\t\t\t});\n\t\t}\n\t}\n\n\tconst onScroll = (event) => {\n\t\t// let scrollTopMax = event.nativeEvent.target.scrollTopMax\n\t\tlet scrollTopMax = event.nativeEvent.target.scrollHeight;\n\t\tlet scrollTop = event.nativeEvent.target.scrollTop;//.body.scrollTop\n\n\t\tconst onEndReached = scrollTopMax - scrollTop;\n\n\t\tif(onEndReached < 300 && !isEndReached) {\n\t\t\tsetIsEndReached(true);\n\t\t\tconst __searchValue = searchValue ? searchValue : _searchValue;\n\t\t\t_setSearchValue(__searchValue);\n\t\t\tconsole.log('Load Data:', __searchValue);\n\t\t\t// _setSearchValue(defaultSearchValue);\n\t\t\tif(infinityMode){\n\t\t\t\t_loadOptions({\n\t\t\t\t\tsortBy: defaultSortBy,\n\t\t\t\t\tfilter: defaultFilter,\n\t\t\t\t\tsearchValue: __searchValue,\n\t\t\t\t\treload: false,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// console.log(\"scrollTopMax / scrollTop\", scrollTopMax, scrollTop, onEndReached);\n\t\t// const lastScrollTop = this._scroll.scrxollTop;\n\t\t// if (args.scrollTop > lastScrollTop) this._maybeCallOnEndReached();\n\t}\n\n\tconst onSearch = (value) => {\n\t\t_setSearchValue(value);\n\t\t_loadOptions({\n\t\t\tsortBy: defaultSortBy,\n\t\t\tfilter: defaultFilter,\n\t\t\tsearchValue: value,\n\t\t\treload: true,\n\t\t});\n\t}\n\n\tconst _onChangeSelectAll = () => {\n\t\t// console.log(`_onChangeSelectAll`, _isSelectAll);\n\t\tif(mode === 'multiple') {\n\t\t\tif (_isSelectAll) {\n\t\t\t\tconst optionsValues = _options.map(item => item.value);\n\t\t\t\tonChange(value.filter(item => !optionsValues.includes(item)));\n\t\t\t\t_setIsSelectAll(false);\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(value) && value.length > 0)\n\t\t\t\t\tonChange([...new Set([...value, ..._options.map(item => item.value)])]);\n\t\t\t\telse\n\t\t\t\t\tonChange([...new Set([..._options.map(item => item.value)])]);\n\t\t\t\t_setIsSelectAll(true);\n\t\t\t}\n\t\t} else\n\t\t\tonChange(undefined);\n\t}\n    const _onChange = (value) => {\n        // console.log(`_onChange selected`, value);\n        if(Array.isArray(value))\n        \tif(_options.reduce((preValue, item) => value.includes(item.value) ? preValue + 1 : preValue, 0) === _options.length)\n        \t\t_setIsSelectAll(true);\n        \telse\n\t\t\t\t_setIsSelectAll(false);\n\n\t\tonChange(value);\n    }\n\n    const getSelectAllCls = () => {\n\t\tlet cls = ['ant-select-item', 'ant-select-item-option', 'ant-select-item-option-select-all'];\n\t\tif(_isSelectAll)\n\t\t\tcls.push('ant-select-item-option-selected');\n\t\treturn cls.join(' ');\n\t}\n\n\tconst childProps = getObjectExcludedProps(props, excludeProps);\n    return (\n\t\t<AntSelect\n\t\t\tshowArrow={true}\n\t\t\tshowSearch={true}\n\t\t\tallowClear={true}\n\t\t\tfilterOption={false}\n\t\t\tautoClearSearchValue={true}\n\n\t\t\t{...childProps}\n\n\t\t\tsearchValue={_searchValue}\n\t\t\tstyle={{ width: widthControl }}\n\t\t\t// listHeight={heightPopup}\n\t\t\t// defaultValue={['a10', 'c12']}\n\t\t\tonChange={_onChange}\n\t\t\tmaxTagCount={0}\n\t\t\tmaxTagPlaceholder={(omittedValues) => `Выбрано: ${omittedValues.length}`}\n\t\t\t// dropdownMatchSelectWidth={200}\n\t\t\t// listItemHeight={10} listHeight={250}\n\t\t\tonPopupScroll={onScroll}\n\t\t\tonSearch={onSearch}\n\t\t\tdropdownRender={!dropdownRender?(menu => (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t{mode === 'multiple' ?\n\t\t\t\t\t\t<div className={getSelectAllCls()} onClick={_onChangeSelectAll}>\n\t\t\t\t\t\t\t<div className=\"ant-select-item-option-content\">\n\t\t\t\t\t\t\t\t<span>Выбрать все</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{_isSelectAll ?\n\t\t\t\t\t\t\t\t<span className=\"ant-select-item-option-state\"><CheckOutlined/></span> : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t\t{menu}\n\t\t\t\t</React.Fragment>\n\t\t\t)):dropdownRender}\n\t\t>\n    \t\t{_options && _options.map(({ label, value, className, disabled }, i) =>\n\t\t\t\t<AntSelect.Option key={i.toString(36) + i} value={value} className={className} disabled={disabled}>{label}</AntSelect.Option>)}\n\t\t\t{tmpOption &&\n\t\t\t\t<AntSelect.Option key={generateUUID()} value={tmpOption.value} className={tmpOption.className} disabled={tmpOption.disabled}>{tmpOption.label}</AntSelect.Option>}\n    \t</AntSelect>\n    );\n};\n\nSelect.propTypes = {\n\t/** Сортировка по умолчанию */\n\tdefaultSortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/** Объект фильтрации по умолчанию */\n\tdefaultFilter: PropTypes.object,\n\n\t/** Значение строки поиска по умолчанию строк */\n\tdefaultSearchValue: PropTypes.string,\n\n\t/** Сортировка */\n\tsortBy: PropTypes.object,\n\n\t/** Режим селекта */\n\tmode:PropTypes.string,\n\n\t/** Фильтр */\n\tfilter: PropTypes.object,\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\tlostParamName: PropTypes.string,\n\n\t/** Режим загружки по скроллу */\n\tinfinityMode: PropTypes.bool,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n\t/** Функция преобразования загруженных объектов в объекты для селекта.\n\t * Сигнатура `(option) => ({})`\n\t * Требоваеть вернуть объект с параметрам\n\t * `{ label: ReactNode, value: any, className: string, disabled: bool }`\n\t * ##### Example:\n\t * ``` JS\n\t * (option) => ({\n\t * \tlabel: (<span><MehOutlined />{option.name}</span>),\n\t * \tvalue: option.id,\n\t * \tclassName: 'some-class',\n\t * \tdisabled: false,\n\t * })\n\t * ```\n\t */\n\toptionConverter: PropTypes.func,\n\n\t/** Select options `[{ label, value, className, disabled }]` */\n\toptions: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Ширина поля выбора в пикселях */\n\twidthControl: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n\t/** Размер страницы */\n\tpageSize: PropTypes.number,\n};\n\nSelect.defaultProps = {\n\t// Rt Props\n\tdefaultSortBy: undefined,\n\tdefaultFilter: {},\n\tdefaultSearchValue: undefined,\n\tinfinityMode: false,\n\trequestLoadRows: undefined,\n\toptions: [],\n\twidthControl: '100%',\n\tpageSize: 50,\n\tsearchParamName: 'name',\n\tlostParamName: 'id',\n\toptionConverter: (option) => ({ label: option.name, value: option.id })\n}\n\nexport default Select;\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TreeSelect as AntTreeSelect } from \"antd\";\nimport { getObjectExcludedProps, notificationError, useMounted } from \"../utils/baseUtils\";\n\nconst excludeProps = [\n    'componentType',\n    'defaultSortBy',\n    'defaultFilter',\n    'defaultSearchValue',\n    'sortBy',\n    'filter',\n    'searchValue',\n    'searchParamName',\n    'requestLoadRows',\n    'optionConverter',\n    'treeData'\n];\n\n/** Компонент выбора элемента(ов) из древовидного списка */\nconst TreeSelect = props => {\n\n    const {\n        // Rt Props\n        defaultSortBy,\n        defaultFilter,\n        defaultSearchValue,\n        sortBy,\n        filter,\n        searchValue,\n        searchParamName,\n        requestLoadRows,\n        optionConverter,\n        treeData,\n    } = props;\n    /** Индикатор загрузки данных */\n    const [_loading, _setLoading] = useState(false);\n    /** Опции селекта */\n    const [_treeData, _setTreeData] = useState(treeData);\n    /** Строка поиска */\n    const [_searchValue, _setSearchValue] = useState(undefined);\n\n    const isMounted = useMounted()\n\n    useEffect(() => {\n        _setSearchValue(defaultSearchValue);\n        _loadOptions({\n            sortBy: defaultSortBy,\n            filter: defaultFilter,\n            searchValue: defaultSearchValue,\n            reload: true,\n        });\n    }, []);\n\n    useEffect(() => {\n        // console.log(\"Change sortBy, filter, searchValue\", sortBy, filter, searchValue);\n        if(isMounted) {\n            _setSearchValue(searchValue);\n            _loadOptions({\n                sortBy: sortBy,\n                filter: filter,\n                searchLine: searchValue,\n                reload: true,\n            });\n        }\n    }, [sortBy, filter, searchValue]);\n\n    const onSearch = (value) => {\n        // console.log('TreeSelect onSearch => ', value);\n        _setSearchValue(value);\n        _loadOptions({\n            sortBy: defaultSortBy,\n            filter: defaultFilter,\n            searchValue: value,\n            reload: true,\n        });\n    }\n\n    const getSort = (sortBy) =>\n        sortBy && sortBy.key ? sortBy.key + ',' + sortBy.order : null;\n\n    const getSearchValue = (searchValue) =>\n        searchValue ? {[searchParamName]: searchValue} : null\n\n    const _optionConverter = (options) => {\n        if(Array.isArray(options))\n            return options.map(option => {\n                if(option.children && Array.isArray(option.children))\n                    option.children = _optionConverter(option.children)\n                return optionConverter(option)\n            })\n    }\n\n    const _loadOptions = (params) => {\n        const {sortBy, filter, searchValue} = params;\n        if (!_loading && requestLoadRows) {\n            _setLoading(true);\n            const requestOptions = {\n                params: {\n                    page: 0,\n                    size: 1,\n                    sort: getSort(sortBy)\n                },\n                data: {\n                    ...filter,\n                    ...getSearchValue(searchValue)\n                }\n            }\n            requestLoadRows(requestOptions)\n                .then((response) => {\n                    // console.log(\"infinity then response\", response);\n                    const result = response.data;\n                    _setTreeData(_optionConverter(result))\n                    _setLoading(false);\n                })\n                .catch((error) => {\n                    notificationError(error, 'Ошибка загрузки данных')\n                    // _setRowsHandler(_options); // _setRows\n                    // setHasMore(false);\n                    _setLoading(false);\n                });\n        }\n    }\n\n    const childProps = getObjectExcludedProps(props, excludeProps);\n    return (\n        <AntTreeSelect\n            showArrow={true}\n            showSearch={true}\n            allowClear={true}\n            filterTreeNode={false}\n            autoClearSearchValue={true}\n            treeDefaultExpandAll={true}\n\n            {...childProps}\n\n            searchValue={_searchValue}\n            onSearch={onSearch}\n            maxTagCount={0}\n            maxTagPlaceholder={(omittedValues) => `Выбрано: ${omittedValues.length}`}\n            treeData={_treeData}\n            // loadData={onLoadData}\n        />\n    );\n};\n\nTreeSelect.propTypes = {\n    /** Сортировка по умолчанию */\n    defaultSortBy: PropTypes.shape({\n        /** Ключ поля для сортировки */\n        key: PropTypes.string,\n        /** Направление сортировки */\n        order: PropTypes.oneOf(['asc', 'desc']),\n    }),\n\n    /** Объект фильтрации по умолчанию */\n    defaultFilter: PropTypes.object,\n\n    /** Значение строки поиска по умолчанию строк */\n    defaultSearchValue: PropTypes.string,\n\n    /** Сортировка */\n    sortBy: PropTypes.object,\n\n    /** Фильтр */\n    filter: PropTypes.object,\n\n    /** Значение строки поиска */\n    searchValue: PropTypes.string,\n\n    /** Имя параметра для поиска */\n    searchParamName: PropTypes.string,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция преобразования загруженных объектов в объекты для селекта.\n     * Сигнатура `(option) => ({})`\n     * Требоваеть вернуть объект с параметрам\n     * `{ label: ReactNode, value: any, children: any, checkable: bool, selectable: bool }`\n     * ##### Example:\n     * ``` JS\n     * (option) => ({\n     * \tlabel: (<span><MehOutlined />{option.name}</span>),\n     * \tvalue: option.id,\n     * \tchildren: option.children,\n     * \tcheckable: !option.isGroup,\n     * \tselectable: !option.isGroup,\n     * })\n     * ```*/\n    optionConverter: PropTypes.func.isRequired,\n\n    /** Select options `[{ label, value, children, checkable, selectable }]` */\n    options: PropTypes.arrayOf(PropTypes.object),\n};\n\nTreeSelect.defaultProps = {\n    // Rt Props\n    defaultSortBy: undefined,\n    defaultFilter: {},\n    defaultSearchValue: undefined,\n    requestLoadRows: undefined,\n    searchParamName: 'name',\n    optionConverter: (option) => ({ label: option.name, value: option.id, children: option.children })\n};\n\nexport default TreeSelect;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, notification as antNotification, Spin, Tooltip, Typography, Upload } from \"antd\";\nimport { LoadingOutlined, CloudUploadOutlined } from \"@ant-design/icons\";\nimport { noop } from \"../utils/baseUtils\";\n\n\nconst defaultProps = {\n    requestUploadFile: noop,\n    dataObject: undefined,\n    onCompletedUpload: noop,\n    onFailedUpload: noop,\n    uploadProps: {},\n    toolTipProps: {},\n    buttonProps: {}\n}\n\n/** Компонент загрузки файлов */\nconst UploadFile = props => {\n\n    const {\n        value,\n        requestUploadFile,\n        dataObject,\n        onCompletedUpload,\n        onFailedUpload,\n        uploadProps,\n        toolTipProps,\n        buttonProps,\n    } = props\n\n    const _uploadFile = (file) => {\n        // console.log('beforeUpload dataObject => ', dataObject, value, dataObject || value.dataObject);\n        notification(file, 'loading');\n        if (requestUploadFile) {\n            const _dataObject = dataObject || value.dataObject\n            requestUploadFile({ file: file, dataObject: _dataObject })\n                .then((response) => {\n                    notification(file, 'success');\n                })\n                .catch(() => {\n                    notification(file, 'error');\n                });\n        }\n        return false;\n    };\n    const notification = (file, type) => {\n        const notifProps = {\n            key: file.uid,\n            duration: type === 'loading' ? 0 : 5,\n            icon: type === 'loading'\n                ? <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n                : null,\n            message: <span>Загрузка файла: <Typography.Text code>{file.name}</Typography.Text></span>\n        };\n        switch (type) {\n            case 'loading':\n                antNotification.info(notifProps);\n                break;\n            case 'success':\n                antNotification.success(notifProps);\n                onCompletedUpload(file);\n                props.onChange({...value, file});\n                break;\n            case 'error':\n                antNotification.error(notifProps);\n                onFailedUpload(file);\n                break;\n            case 'close':\n                antNotification.close(file.uid);\n                break;\n            default:\n                break;\n        }\n    };\n    const defaultUploadProps = {\n        multiple: true,\n        showUploadList: false,\n        beforeUpload: _uploadFile\n    };\n\n    return (\n        <Upload {...defaultUploadProps} {...uploadProps}>\n            <Tooltip {...toolTipProps}>\n                <Button\n                    icon={<CloudUploadOutlined />}\n                    {...buttonProps}\n                >{buttonProps && buttonProps.label}</Button>\n            </Tooltip>\n        </Upload>\n    );\n};\n\nUploadFile.propTypes = {\n    /** Функция запроса для отправки файла с данным на сервер */\n    requestUploadFile: PropTypes.func.isRequired,\n\n    /** Данные, прикрепляемые к файлу */\n    dataObject: PropTypes.object,\n\n    /** Функция, вызываемая при удачной загрузке файла */\n    onCompletedUpload: PropTypes.func,\n\n    /** Функция, вызываемая при НЕ удачной загрузке файла */\n    onFailedUpload: PropTypes.func,\n\n    /** Ant Props для [Upload](https://ant.design/components/upload/) компонента */\n    uploadProps: PropTypes.object,\n\n    /** Ant Props для [Tooltip](https://ant.design/components/tooltip/) компонента */\n    toolTipProps: PropTypes.object,\n\n    /** Ant Props для [Button](https://ant.design/components/button/) компонента */\n    buttonProps: PropTypes.object,\n};\n\nUploadFile.defaultProps = defaultProps\n\nexport default UploadFile;\n","import {Spin} from 'antd';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport React from 'react';\n\nexport const empty = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<span>Нет данных</span>{' '}\n\t</div>\n);\n\nexport const overlay = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<Spin\n\t\t\ttip='Загрузка...'\n\t\t\tindicator={<LoadingOutlined style={{fontSize: 24}} spin />}\n\t\t/>{' '}\n\t</div>\n);\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport { flatten, getTableRowKeys, getTableRowObjects } from \"../../../utils/baseUtils\";\n\nconst SelectionHead = (props) => {\n\tconst {column, container} = props;\n\tconst {rowKey, onSelectAll, selectedRowKeys, selectAll} = column;\n\n\tconst _handleChange = (e) => {\n\t\tconst rowKeys = flatten(getTableRowKeys(container.props.data, column.rowKey));\n\t\tconst rowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => rowKeys.includes(item[rowKey]));\n\t\tconst totalLength = rowKeys.length;\n\t\tconst selectLength = selectedRowKeys.length;\n\t\tconst checked = !(totalLength === selectLength);\n\n\t\t// const newRowKeys = container.props.data.map((item) => { return item[column.rowKey] });\n\t\tonSelectAll({selected: checked, rowKeys: rowKeys, rowObjects: rowObjects});\n\t};\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={selectAll === null}\n\t\t\tonChange={_handleChange}\n\t\t\tchecked={selectAll}\n\t\t/>\n\t);\n};\n\nexport default SelectionHead;\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport {\n\tflatten,\n\tgetTableRowKeys,\n\tfindNodeByRowKey, getTableRowObjects\n} from \"../../../utils/baseUtils\";\n\nconst getRowChildren = (data, rowKey) =>\n\tdata.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item[rowKey], getRowChildren(item.children, rowKey)];\n\t\t}\n\t\treturn item[rowKey];\n\t});\n\nconst findBrothers = (data, selfItem, rowKey, parentKey, rowKeys = null) => {\n\tlet arr = [];\n\tdata.forEach((item) => {\n\t\tif (\n\t\t\titem[parentKey] &&\n\t\t\titem[parentKey] === selfItem[parentKey] &&\n\t\t\titem[rowKey] !== selfItem[rowKey]\n\t\t) {\n\t\t\tif (rowKeys !== null) {\n\t\t\t\tif (rowKeys.includes(item[rowKey])) {\n\t\t\t\t\tarr.push(item[rowKey]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tarr.push(item[rowKey]);\n\t\t\t}\n\t\t} else if (item.children && item.children.length) {\n\t\t\tarr.push(\n\t\t\t\tfindBrothers(\n\t\t\t\t\titem.children,\n\t\t\t\t\tselfItem,\n\t\t\t\t\trowKey,\n\t\t\t\t\tparentKey,\n\t\t\t\t\trowKeys\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\treturn arr;\n};\n\nexport const parentAnalysis = ({\n\trowData,\n\trowKey,\n\tparentKey,\n\tchecked,\n\tnodeAssociated,\n\ttreeData,\n\tselectedRowKeys,\n\tindeterminateRowKeys,\n}) => {\n\tlet _selectedRowKeys = [...selectedRowKeys];\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\tlet currentRowData = rowData;\n\tlet parentExist = !!currentRowData[parentKey];\n\tlet lastTypeSelect = checked ? 'checked' : 'square';\n\tlet typeSelect = '';\n\tlet nextSquare = false;\n\n\t/** Пока есть родитель */\n\twhile (parentExist && nodeAssociated) {\n\t\tconst indeterminateBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_indeterminateRowKeys\n\t\t\t)\n\t\t);\n\t\tconst selectedBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_selectedRowKeys\n\t\t\t)\n\t\t);\n\t\tconst allBrothers = flatten(\n\t\t\tfindBrothers(treeData, currentRowData, rowKey, parentKey)\n\t\t);\n\n\t\tif (checked) {\n\t\t\tif (\n\t\t\t\tlastTypeSelect === 'checked' &&\n\t\t\t\tselectedBrothers.length === allBrothers.length\n\t\t\t)\n\t\t\t\ttypeSelect = 'checked';\n\t\t\telse typeSelect = 'square';\n\t\t} else {\n\t\t\tif (\n\t\t\t\t!checked &&\n\t\t\t\t!nextSquare &&\n\t\t\t\t(selectedBrothers.length || indeterminateBrothers.length)\n\t\t\t)\n\t\t\t\tnextSquare = true;\n\t\t\tif (nextSquare) typeSelect = 'square';\n\t\t\telse typeSelect = 'none';\n\t\t}\n\n\t\t// console.log(\"allBrothers \", allBrothers);\n\t\t// console.log(\"findParentById \", treeData,\n\t\t//     rowKey,\n\t\t//     parentKey,\n\t\t//     currentRowData[parentKey]);\n\t\t//\n\t\t// console.log(\"findNodeByRowKey \", findNodeByRowKey(treeData, rowKey, currentRowData[parentKey]));\n\n\t\t// Найти родителя\n\t\tcurrentRowData = findNodeByRowKey(\n\t\t\ttreeData,\n\t\t\trowKey,\n\t\t\tcurrentRowData[parentKey]\n\t\t);\n\n\t\tif (typeSelect === 'checked') {\n\t\t\t// Выделить галкой\n\t\t\t// console.log(\"checked\");\n\t\t\tlastTypeSelect = 'checked';\n\t\t\tif (!_selectedRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_selectedRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _indeterminateRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _indeterminateRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'square') {\n\t\t\t// Выдлеить квадратом\n\t\t\t// console.log(\"square: \");\n\t\t\tlastTypeSelect = 'square';\n\t\t\tif (!_indeterminateRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_indeterminateRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _selectedRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'none') {\n\t\t\t// Снять выделение\n\t\t\t// console.log(\"none: \");\n\t\t\tlastTypeSelect = 'none';\n\t\t\tconst indexS = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (indexS > -1) _selectedRowKeys.splice(indexS, 1);\n\t\t\tconst indexI = _indeterminateRowKeys.indexOf(\n\t\t\t\tcurrentRowData[rowKey]\n\t\t\t);\n\t\t\tif (indexI > -1) _indeterminateRowKeys.splice(indexI, 1);\n\t\t}\n\n\t\tparentExist = !!currentRowData[parentKey];\n\t\t// parentExist = проверка наличия след родителя\n\t}\n\n\treturn [_selectedRowKeys, _indeterminateRowKeys];\n};\n\nexport const onChangeSelectionCell = (props) => {\n\tconst {rowData, rowIndex, column, rows, checked} = props;\n\tconst {\n\t\trowKey,\n\t\tparentKey,\n\t\tnodeAssociated,\n\t\tselectedRowKeys,\n\t\tindeterminateRowKeys,\n\t\tonChange\n\t} = column;\n\n\t// const rowKeys = flatten(getTableRowKeys([rowData], column.rowKey));\n\t// const totalLength = container.props.data.length;\n\t// const checked = e.target.checked;\n\t// const currentRowKey = {[rowKey]: rowData[rowKey], checked};\n\t// console.log(\"_handleChange: \", container);\n\n\tlet _selectedRowKeys = [...selectedRowKeys];\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\t/** Обработка себя, поиск детей, выделение / снятие их */\n\tlet rowChildren = [];\n\tif (checked) {\n\t\tif (rowData.children && nodeAssociated)\n\t\t\trowChildren = flatten(getRowChildren(rowData.children, rowKey));\n\n\t\t_selectedRowKeys = _selectedRowKeys\n\t\t\t.concat([rowData[rowKey]])\n\t\t\t.concat(rowChildren);\n\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t(element) =>\n\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t!rowChildren.includes(element)\n\t\t);\n\t} else {\n\t\tif (rowData.children && nodeAssociated)\n\t\t\trowChildren = flatten(\n\t\t\t\tgetRowChildren(rowData.children, rowKey, false)\n\t\t\t);\n\n\t\t_selectedRowKeys = _selectedRowKeys.filter(\n\t\t\t(element) =>\n\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t!rowChildren.includes(element)\n\t\t);\n\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t(element) =>\n\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t!rowChildren.includes(element)\n\t\t);\n\t}\n\n\t[_selectedRowKeys, _indeterminateRowKeys] = parentAnalysis({\n\t\trowData,\n\t\trowKey,\n\t\tparentKey,\n\t\tchecked,\n\t\tnodeAssociated,\n\t\ttreeData: rows,\n\t\tselectedRowKeys: _selectedRowKeys,\n\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t});\n\n\tconst keys = [...new Set(_selectedRowKeys)];\n\tconst _selectedRowObjects = flatten(getTableRowObjects(rows, rowKey)).filter((item) => keys.includes(item[rowKey]));\n\t//return [...new Set(_disabledElements)]\n\t// onChange({ selected: checked, totalLength, rowData, rowIndex });\n\n\t/** Выясняем новое состояние галочки \"Выделить все\" */\n\tlet selectAll;\n\tconst selectLength = keys.length;\n\tconst totalLength = flatten(\n\t\tgetTableRowKeys(rows, column.rowKey)\n\t).length;\n\n\tif (selectLength === 0) selectAll = false;\n\telse if (totalLength === selectLength) selectAll = true;\n\telse if (totalLength !== selectLength) selectAll = null;\n\n\n\n\tonChange({\n\t\tselected: checked,\n\t\t_selectedRow: {\n\t\t\trowData: {...rowData},\n\t\t\trowIndex: rowIndex,\n\t\t\trowKey: rowKey,\n\t\t},\n\t\t_selectAll: selectAll,\n\t\t_selectedRowKeys: keys, //[...new Set(_selectedRowKeys)],\n\t\t_selectedRowObjects: _selectedRowObjects,\n\t\t_indeterminateRowKeys: [...new Set(_indeterminateRowKeys)],\n\t});\n\n\t// let uniqIds = {};\n\t// onChange({selected: checked, rowKeys: rowKeys.filter(obj => !uniqIds[obj[rowKey]] && (uniqIds[obj[rowKey]] = true)) });\n};\n\nconst SelectionCell = (props) => {\n\n\tconst {rowData, column} = props;\n\tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\n\tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\n\tconst checked = selectedRowKeys.includes(rowData[rowKey]);\n\n\t// React.useEffect(() => {\n\t// \tconsole.log(\"selectionCell\", props);\n\t// }, [props]);\n\n\tconst _onChangeHandler = (checked) => {\n\t\tconst {rowData, rowIndex, column, container} = props;\n\t\tonChangeSelectionCell({\n\t\t\trowData, rowIndex, column, rows: container.props.data, checked\n\t\t})\n\t}\n\n\treturn (\n\t\t\t<Checkbox\n\t\t\t\tindeterminate={det}\n\t\t\t\t// onChange={(e) => _onChangeHandler(e.target.checked)}\n\t\t\t\tchecked={checked}\n\t\t\t/>\n\t);\n};\n\nexport default SelectionCell;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {CloseCircleOutlined} from '@ant-design/icons';\nimport {rtPrefix} from '../../../utils/variables';\n\nconst SelectionList = (props) => {\n\tconst {selectedRowObjects, rowRender, onClickDropSelect} = props;\n\n\t// console.log(\"SelectionList typeof -> \", typeof(rowRender));\n\treturn (\n\t\t<div className={`${rtPrefix}-table-selected-rows`}>\n\t\t\t{selectedRowObjects && selectedRowObjects.length > 0 ? (\n\t\t\t\t<ul>\n\t\t\t\t\t{selectedRowObjects.map((item, index) => (\n\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t{/*{(typeof(rowRender) === 'string') ? <div>{item[rowRender]}</div> : rowRender }*/}\n\t\t\t\t\t\t\t{typeof rowRender === 'function' ? (\n\t\t\t\t\t\t\t\trowRender({rowData: item, rowIndex: index})\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>{item[rowRender]}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<div onClick={() => onClickDropSelect(item)}>\n\t\t\t\t\t\t\t\t<CloseCircleOutlined />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t) : (\n\t\t\t\t<div>Нет выбранных записей</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nSelectionList.propTypes = {\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { rowData, rowIndex }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n\t/** Список выделенных объектов */\n\tselectedRowObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Событие удаления элемента */\n\tonClickDropSelect: PropTypes.func.isRequired,\n};\n\nSelectionList.defaultProps = {};\n\nexport default SelectionList;\n","import React, { useRef, forwardRef, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport BaseTable, { AutoResizer } from \"react-base-table\";\nimport { empty, overlay } from \"./defaultSettings\";\nimport SelectionHead from \"./Selectable/SelectionHead\";\nimport SelectionCell, { parentAnalysis, onChangeSelectionCell } from \"./Selectable/SelectionCell\";\nimport SelectionList from \"./SelectionList/SelectionList\";\nimport { rtPrefix } from \"../../utils/variables\";\nimport {\n    flatten,\n    generateUUID,\n    getTableRowKeys,\n    findNodeByRowKey,\n    noop,\n    getTableRowObjects, notificationError, useMounted\n} from \"../../utils/baseUtils\";\nimport FormItems from \"../../Form/FormItems\";\nimport moment from \"moment\";\nimport { getExtraData, mapDispatchToProps, mapStateToProps } from \"../../utils/storeUtils\";\n\n/** Компонент таблицы */\nconst Table = forwardRef((props, ref) => {\n\n    /** LOADING AND INFINITY MODE STATES */\n    /** Наличие на сервере еще данных */\n    const [hasMore, setHasMore] = useState(true);\n    /** Индикатор загрузки данных */\n    const [loading, setLoading] = useState(false);\n\n    /** TABLE STATES */\n    /** Колонки таблицы */\n    // const [_columns, _setColumns] = useState([]);\n    /** Строки таблицы */\n    const [_rows, _setRows] = useState([]);\n    /** Ключи выделенных строк */\n    const [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n    /** Значение строки поиска */\n    const [_searchValue, setSearchValue] = useState(\"\");\n    /** Объект фильтра */\n    const [_filter, setFilter] = useState({});\n    /** Объект соритировки */\n    const [_sortBy, setSortBy] = useState({});\n    /** Состояние selectAll галочки */\n    const [selectAll, setSelectAll] = useState(false);\n\n    /** TREE STATES */\n    /** Ключи строк с кубиками при selectable = true */\n    const [_indeterminateRowKeys, setIndeterminateRowKeys] = useState([]);\n    /** Ключи раскрытых строк при selectable = true */\n    const [_expandedRowKeys, setExpandedRowKeys] = useState([]);\n\n    /** FOOTER STATES */\n    /** Отображать ли footer */\n    const [_footerShow, _setFooterShow] = useState(false);\n    /** Всего строк по фильтру в таблице */\n    const [_totalCountRows, setTotalCountRows] = useState(0);\n\n\n    const [subscribeProps, setSubscribeProps] = useState({});\n\n    const tableRef = useRef();\n\n    const isMounted = useMounted();\n\n    const {\n        /** Required */\n        columns,\n        // type,\n        infinityMode,\n        editMode, // need Props.types\n        disabled,\n\n        /** Def values */\n        defaultRows,\n        defaultSelectedRowKeys,\n        defaultSearchValue,\n        defaultFilter,\n        defaultSortBy,\n\n        /** Outdoor control */\n        rows,\n        setRows, // ???\n        selectedRowKeys,\n        searchValue,\n        filter,\n        sortBy,\n\n        /** Base Props */\n        rowKey,\n        customFields,\n\n        /** View Props */\n        empty,\n        overlay,\n        fixWidthColumn,\n        // footerProps,\n        headerHeight,\n        rowHeight,\n        rowRenderer,\n        zebraStyle,\n        estimatedRowHeight,\n        // cellBordered, // need Props.types\n        rowBordered,  // need Props.types\n        className,\n        style,\n\n        /** Load Data Props */\n        loadThreshold,\n        pageSize,\n        requestLoadRows,\n        requestLoadCount,\n        searchParamName,\n\n        /** Selectable Props */\n        selectable,\n\n        /** Tree Props */\n        nodeAssociated,\n        expandColumnKey,\n        expandDefaultAll,\n        expandLazyLoad,\n        expandParentKey,\n\n        /** Events */\n        onRowClick,\n        onRowDoubleClick,\n        onRowExpand,\n        onSelectedRowsChange,\n        onExpandedRowsChange,\n\n        /** SELECTED PANEL */\n        showSelection,\n        rowRenderShowSelection,\n\n        /** REDUX PROPS */\n        dispatchPath,\n        dispatch,\n        subscribe,\n\n        value,\n        onChange\n    } = { ...props, ...subscribeProps };\n\n    const footerProps = {\n        ...Table.defaultProps.footerProps,\n        ...props.footerProps\n    };\n\n    const selectedDispatchPath = dispatch && dispatch.path\n        ? `${dispatch.path}.selected`\n        : dispatchPath && `${dispatchPath}.selected`;\n    const rowsDispatchPath = dispatch && dispatch.path\n        ? `${dispatch.path}.rows`\n        : dispatchPath && `${dispatchPath}.rows`;\n\n    useEffect(() => {\n        // console.log(\"Инициализация дефолтных значений \", selectColumn, columns);\n        // console.log(\"Инициализация дефолтных значений defaultSelectedRowKeys > \", defaultSelectedRowKeys);\n\n        // Инициализация дефолтных значений\n        // _setRows(defaultRows);\n        if (defaultRows.length > 0) _setRowsHandler(defaultRows);\n        else if (rows.length > 0) _setRowsHandler(rows);\n        // setSelectedRowKeys(defaultSelectedRowKeys);\n        // _setSelectedRowsHandler(defaultSelectedRowKeys, undefined, defaultRows)\n        if (selectable && props.value && props.value.length > 0)\n            _setSelectedRowsHandler(props.value.map(item => item[rowKey]), props.value);\n        else\n            _setSelectedRowsHandler(defaultSelectedRowKeys, undefined, defaultRows);\n        setSearchValue(defaultSearchValue);\n        setFilterHandler(defaultFilter);\n        setSortBy(defaultSortBy);\n        setSelectAll(\n            defaultRows.length > 0 &&\n            defaultRows.length === defaultSelectedRowKeys.length\n        );\n        // Определение нужно ли отображать подвал\n        _setFooterShow(\n            (footerProps.showElements.length ||\n                footerProps.leftCustomSideElement ||\n                footerProps.centerCustomSideElement ||\n                footerProps.rightCustomSideElement));\n\n        // Only tree table\n        if (!!expandColumnKey && !expandLazyLoad) {\n            // Открытие всех нод\n            if (expandDefaultAll)\n                setExpandedRowKeys(\n                    flatten(getTableRowKeys(defaultRows, rowKey))\n                );\n            // Установка квадратиков на нужных нодах\n            if (defaultSelectedRowKeys && defaultSelectedRowKeys.length > 0) {\n                let flatRows = flatten(getTableRowKeys(defaultRows, rowKey));\n                let selectedRow = flatRows.filter((item) =>\n                    defaultSelectedRowKeys.includes(item[rowKey])\n                );\n                let _indeterminateRowKeys = [];\n                selectedRow.forEach((item) => {\n                    const [ss, ii] = parentAnalysis({\n                        rowData: item,\n                        rowKey,\n                        parentKey: expandParentKey,\n                        checked: true,\n                        nodeAssociated,\n                        treeData: defaultRows,\n                        selectedRowKeys: defaultSelectedRowKeys,\n                        indeterminateRowKeys: _indeterminateRowKeys\n                    });\n                    _indeterminateRowKeys.push(...ii);\n                });\n                setIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\n            }\n        }\n\n        // if (type !== 'localSide') {\n        _dataProcessing({\n            sortBy: defaultSortBy,\n            filter: defaultFilter,\n            searchLine: defaultSearchValue,\n            reload: true\n        });\n        // }\n        // console.log(\"Table => useEffect start \");\n        // setMounted(true);\n        if (ref && typeof ref === \"function\") ref({ reloadData });\n        else if (ref && typeof ref === \"object\") ref.current = { reloadData };\n    }, []);\n\n    useEffect(() => {\n        if (isMounted) {\n            // console.log('useEffect rows');\n            _setRowsHandler(rows);\n            // setSelectedRowKeys(selectedRowKeys);\n            _setSelectedRowsHandler(selectedRowKeys, undefined, rows);\n            setSearchValue(searchValue);\n            setFilterHandler(filter);\n            setSortBy(sortBy);\n            if (!!expandColumnKey && !expandLazyLoad) {\n                // Открытие всех нод\n                if (expandDefaultAll)\n                    setExpandedRowKeys(flatten(getTableRowKeys(rows, rowKey)));\n            }\n        }\n    }, [rows, selectedRowKeys, searchValue, filter, sortBy]);\n\n    useEffect(() => {\n        if (editMode) {\n            _setSelectedRowsHandler([], []);\n        }\n    }, [editMode]);\n\n    useEffect(() => {\n        // console.log('useEffect value');\n        if (value && Array.isArray(value) && !requestLoadRows)\n            _setRowsHandler(value);\n    }, [value]);\n\n    /** Подписка на изменение props[subscribe.name] в сторе */\n    subscribe.map(item => {\n        return useEffect(() => {\n            if ((item.withMount || isMounted) && item.name) {\n                // console.log(\"Table => useEffect => [%s] \", item.name, props[item.name]);\n                const onChangeObject = {\n                    value: props[item.name],\n                    extraData: getExtraData(item, props), //extraData, //props[`${item.name}ExtraData`],\n                    reloadTable: reloadData,\n                    addRows: _addRows,\n                    addRow: _addRow,\n                    addRowAsCopy: _addRowAsCopy,\n                    editRow: _editRow,\n                    removeRow: _removeRow,\n                    moveUpRow: _moveUpRow,\n                    moveDownRow: _moveDownRow,\n                    setSubscribeProps: _setSubscribeProps\n                };\n                item.onChange && item.onChange(onChangeObject);\n            }\n        }, [props[item.name]]);\n    });\n\n    /** BASE FUNCTIONS */\n\n    const _setSubscribeProps = (props) => {\n        // setTimeout(() => {\n        // \tconsole.log('_setSubscribeProps');\n        setSubscribeProps({ ...subscribeProps, ...props });\n        // }, 2000)\n    };\n\n    const _setLoadedRowsHandler = (rows) => {\n        _setRowsHandler(rows);\n        // !selectable && onChange && onChange(rows)\n    };\n    const _setRowsHandler = (rows) => {\n        // console.log('_setRowsHandler onChange');\n        _setRows(rows);\n        setRows(rows);\n        rowsDispatch(rows);\n    };\n\n    const _setSelectedRowsHandler = (selectedKeys = [], selectedObjects = undefined, rows = []) => {\n        // console.log('_setSelectedRowsHandler => ', selectedKeys)\n        setSelectedRowKeys(selectedKeys);\n        if (selectedKeys.length === 0)\n            if (selectable)\n                selectedDispatch([]);\n            else\n                selectedDispatch(undefined);\n        else if (selectedKeys.length > 0 && !selectedObjects)\n            if (selectable)\n                selectedDispatch(flatten(getTableRowObjects(rows, rowKey)).filter((item) => selectedKeys.includes(item[rowKey])));\n            else\n                selectedDispatch(findNodeByRowKey(rows, rowKey, selectedKeys[0]));\n        else\n            selectedDispatch(selectedObjects);\n    };\n\n    const rowsDispatch = (rows) => {\n        // console.log('rowsDispatch ', rowsDispatchPath);\n        rowsDispatchPath && props.setDataStore && props.setDataStore(rowsDispatchPath, rows);\n        !selectable && onChange && onChange(rows);\n    };\n\n    const selectedDispatch = (data) => {\n        selectedDispatchPath && props.setDataStore && props.setDataStore(selectedDispatchPath, data);\n        selectable && onChange && onChange(data);\n    };\n\n    const onTableEventsDispatch = (nameEvent, value) => {\n        const dp = dispatch && dispatch.path\n            ? `${dispatch.path}.events.${nameEvent}`\n            : dispatchPath && `${dispatchPath}.events.${nameEvent}`;\n\n        dp && props.setDataStore && props.setDataStore(dp, {\n            timestamp: moment(),\n            value: value\n        });\n        // console.log('onTableEventsDispatch onChange');\n        Array.isArray(value) && onChange && onChange(value);\n    };\n\n    const setFilterHandler = (filter) => {\n        // console.log('setFilterHandler => ', filter);\n        setFilter(filter);\n    };\n\n    const reloadData = ({ sortBy, filter, searchValue }, appendParams) => {\n        // console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\n        tableRef.current && tableRef.current.scrollToRow(0, \"auto\");\n        if (props.value && props.value.length > 0)\n            _setSelectedRowsHandler(props.value.map(item => item[rowKey]), props.value);\n        else\n            _setSelectedRowsHandler();\n\n        const __sortBy = appendParams ? (sortBy ? sortBy : _sortBy) : sortBy;\n        const __filter = appendParams ? { ..._filter, ...filter } : filter;\n        const __searchValue = appendParams ? (searchValue ? searchValue : _searchValue) : searchValue;\n        setSortBy(__sortBy);\n        setFilterHandler(__filter);\n        setSearchValue(__searchValue);\n        _dataProcessing({\n            sortBy: __sortBy,\n            filter: __filter,\n            searchLine: __searchValue,\n            reload: true\n        });\n        // console.log(\"reloadData loading \", loading);\n    };\n\n    const _dataProcessing = (params) => {\n        // console.log('_dataProcessing', params);\n        const { sortBy, filter, searchLine, expandRow, reload } = params;\n        if ((hasMore || reload) && !loading) {\n            setLoading(true);\n            const pageNum = reload\n                ? 0\n                : Math.floor(_rows.length / pageSize);\n            const params = {\n                page: pageNum,\n                size: pageSize,\n                sort:\n                    sortBy && sortBy.key\n                        ? sortBy.key + \",\" + sortBy.order\n                        : null\n            };\n            const dataQuery = {\n                ...filter,\n                ...(searchLine\n                    ? { [searchParamName]: searchLine }\n                    : null)\n            };\n            // console.log('dataQuery', dataQuery);\n\n            if (infinityMode && reload && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad) {\n                requestLoadCount({\n                    params,\n                    data: dataQuery\n                })\n                    .then((response) => {\n                        // console.log(\"infinity then response\", response);\n                        // const result = response.data;\n                        setTotalCountRows(response.data);\n                    })\n                    .catch(error =>\n                        notificationError(error, \"Ошибка получения количества записей по фильтру\"));\n            }\n\n            // console.log('requestLoadRows => ', typeof requestLoadRows);\n            // if(typeof requestLoadRows !== 'function'){\n            //     setLoading(false);\n            // }\n            if (requestLoadRows) {\n                requestLoadRows({\n                    params,\n                    data: dataQuery\n                })\n                    .then((response) => {\n                        // console.log(\"infinity then response\", response);\n                        const result = response.data;\n                        // Если иерархия и ленивая, то ищим кому добавть полученные записи\n                        if (!!expandColumnKey && expandLazyLoad) {\n                            // lastExpandRow//, setLastExpandRow\n                            // console.log('!!expandColumnKey && expandLazyLoad', result);\n                            if (pageNum === 0) {\n                                result.forEach((child) => {\n                                    child.children = [\n                                        { [rowKey]: generateUUID() }\n                                    ];\n                                });\n                                // _setRows(result);\n                                _setLoadedRowsHandler(result);\n                            } else {\n                                let newRows = [..._rows];\n                                // (data, rowKey, rowValue)\n                                result.forEach((child) => {\n                                    child.children = [\n                                        { [rowKey]: generateUUID() }\n                                    ];\n                                });\n                                let node = findNodeByRowKey(\n                                    newRows,\n                                    rowKey,\n                                    expandRow[rowKey]\n                                );\n                                node.children = result;\n                                // console.log('newRows -> ', newRows);\n                                // _setRows(newRows);\n                                _setLoadedRowsHandler(newRows);\n                            }\n                        } else {\n                            if (result && result.length < pageSize) {\n                                setHasMore(false);\n                            } else {\n                                setHasMore(true);\n                            }\n                            pageNum === 0\n                                ? _setLoadedRowsHandler(result) // _setRows\n                                : _setLoadedRowsHandler(_rows.concat(result)); // _setRows\n\n                            // console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\n                            if (expandDefaultAll)\n                                setExpandedRowKeys(\n                                    flatten(getTableRowKeys(result, rowKey))\n                                );\n                        }\n\n                        setLoading(false);\n                    })\n                    .catch((error) => {\n                        notificationError(error, \"Ошибка загрузки данных\");\n                        _setLoadedRowsHandler(_rows); // _setRows\n                        // setHasMore(false);\n                        setLoading(false);\n                    });\n            } else setLoading(false);\n        }\n    };\n\n    /** Событие выделение одной строки в режиме без галочек */\n    const useSimpleAndDoubleClick = (actionSimpleClick, actionDoubleClick, delay = 200) => {\n        const [click, setClick] = useState(0);\n        const [data, setData] = useState(undefined);\n        useEffect(() => {\n            const timer = setTimeout(() => {\n                // simple click\n                if (click === 1) actionSimpleClick(data);\n                setClick(0);\n            }, delay);\n            if (click === 2) actionDoubleClick(data);\n            return () => clearTimeout(timer);\n        }, [click]);\n        return (_data) => {\n            setClick(prev => prev + 1);\n            setData(() => _data);\n        };\n    };\n\n    let timer;\n    const simpleAndDoubleClick = (actionSimpleClick, actionDoubleClick, data) => (event) => {\n        clearTimeout(timer);\n        if (event.detail === 1) {\n            // console.log('actionSimpleClick', data)\n            timer = setTimeout(() => actionSimpleClick(data), 200);\n        } else if (event.detail === 2) {\n            // console.log('actionDoubleClick', data)\n            actionDoubleClick(data);\n        }\n    };\n\n    const _onRowClick = ({ rowData, rowIndex, rowKey }) => {\n        // console.log('actionSimpleClick')\n        onTableEventsDispatch(\"onRowClick\", rowData);\n        _rowSelectAfterClick({ rowData, rowIndex, rowKey, onClick: onRowClick });\n    };\n    const _onRowDoubleClick = ({ rowData, rowIndex, rowKey }) => {\n        // console.log('onDoubleClick', rowData, rowIndex, rowKey);\n        // console.log('actionDoubleClick')\n        // rowDoubleClickDispatch(rowData);\n        onTableEventsDispatch(\"onRowDoubleClick\", rowData);\n        _rowSelectAfterClick({ rowData, rowIndex, rowKey, onClick: onRowDoubleClick });\n    };\n\n    const _rowSelectAfterClick = ({ rowData, rowIndex, rowKey, onClick }) => {\n        const checked = !_selectedRowKeys.includes(rowKey);\n        const newRowObject = {\n            rowData: { ...rowData },\n            rowIndex: rowIndex,\n            rowKey: rowKey\n        };\n        if (!selectable) {\n            // console.log('_rowEventHandlers -> onClick', rowKey, rowIndex);\n            // console.log('q onRowClick => ', rowData)\n            // if(_selectedRowKeys)\n            if (checked && !editMode)\n                _setSelectedRowsHandler([rowKey], rowData);\n            onSelectedRowsChange([rowKey], [rowData]);\n        } else {\n            onChangeSelectionCell({\n                ...newRowObject,\n                column: _getSelectionColumnProps(),\n                rows: _rows,\n                checked: checked\n            });\n        }\n        onClick && onClick({ selected: checked, ...newRowObject });\n    };\n\n    const _rowEventHandlers = {\n        onClick: _onRowClick,\n        onDoubleClick: _onRowDoubleClick\n\n        // onClick: useSimpleAndDoubleClick(_onRowClick, _onRowDoubleClick),\n        // onClick: simpleAndDoubleClick(_onRowClick, _onRowDoubleClick),\n\n        // onDoubleClick: console.log('onDoubleClick'),\n        // onContextMenu: console.log('context menu'),\n        // onMouseEnter: console.log('mouse enter'),\n        // onMouseLeave: console.log('mouse leave'),\n    };\n\n\n    /** Событие при сортировке */\n    const _onColumnSort = (sortBy) => {\n        // console.log(\"sortBy\", sortBy);\n        tableRef.current.scrollToRow(0, \"auto\");\n        let localSortBy = {key: sortBy.key, order: sortBy.order};\n        if (_sortBy && _sortBy.order === \"desc\") {\n            localSortBy = {};\n        }\n        // let localSortBy = sortBy && sortBy.order ? {key: sortBy.key, order: sortBy.order} : {} //\n        setSortBy(localSortBy);\n        // console.log(\"localSortBy\", localSortBy);\n\n\n        // Для серверной сортировки - сбросить выделение\n        // if (type !== 'localSide') {\n        // setSelectedRowKeys([]);\n        _setSelectedRowsHandler();\n        // }\n        const loadParams = {\n            sortBy: localSortBy,\n            filter: _filter,\n            searchLine: _searchValue,\n            reload: true\n        };\n        _dataProcessing(loadParams);\n    };\n\n    /** VIEW FUNCTIONS */\n\n\n    const _footer = (\n        <React.Fragment>\n            {_footerShow ? (\n                <React.Fragment>\n                    {/*className={'BaseTable__footer__counter'}>*/}\n                    <div key={\"footer-left-custom-side\"} className={\"left-custom-side\"}>\n                        {footerProps.leftCustomSideElement\n                            ? Array.isArray(footerProps.leftCustomSideElement)\n                                ? <FormItems items={footerProps.leftCustomSideElement} />\n                                : <footerProps.leftCustomSideElement />\n                            : null}\n                    </div>\n                    <div key={\"footer-center-custom-side\"} className={\"center-custom-side\"}>\n                        {footerProps.centerCustomSideElement\n                            ? Array.isArray(footerProps.centerCustomSideElement)\n                                ? <FormItems items={footerProps.centerCustomSideElement} />\n                                : <footerProps.centerCustomSideElement />\n                            : null}\n                    </div>\n                    <div key={\"footer-right-custom-side\"} className={\"right-custom-side\"}>\n                        {footerProps.rightCustomSideElement\n                            ? Array.isArray(footerProps.rightCustomSideElement)\n                                ? <FormItems items={footerProps.rightCustomSideElement} />\n                                : <footerProps.rightCustomSideElement />\n                            : null}\n                    </div>\n\n                    {selectable ? (\n                        <React.Fragment>\n                            {footerProps.showElements.includes(\"selected\")\n                                ? <span>{footerProps.selectedTitle} {_selectedRowKeys.length}</span>\n                                : null}\n                            {footerProps.showElements.includes(\"loaded\")\n                                ?\n                                <span>{footerProps.loadedTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n                                : null}\n                        </React.Fragment>\n                    ) : null}\n\n                    {footerProps.showElements.includes(\"total\")\n                        ? infinityMode && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad\n                            ? <span>{footerProps.totalTitle} {_totalCountRows}</span>\n                            : <span>{footerProps.totalTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n                        : null}\n\n                </React.Fragment>\n            ) : null}\n        </React.Fragment>\n    );\n\n    /** Событие при рендере для стилизации */\n    const _rowClassName = ({ rowData, rowIndex }) => {\n        const { rowClassName } = props;\n        return [\n            rowClassName,\n            _selectedRowKeys.includes(rowData[rowKey]) && \"row-selected\",\n            zebraStyle ? (rowIndex % 2 === 0 ? \"even\" : \"odd\") : \"\",\n            rowBordered ? \"bordered\" : \"\"\n        ].join(\" \");\n    };\n\n    // const _cellProps = () => ({ className: [cellBordered ? 'cellBordered' : ''].join(' ')})\n\n    const _rowRenderer = (props) => {\n        const { cells, rowData, rowIndex } = props;\n\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    width: \"100%\",\n                    height: \"100%\"\n                }}\n                onClick={(e) =>\n                    simpleAndDoubleClick(_onRowClick, _onRowDoubleClick, {\n                        rowData,\n                        rowIndex,\n                        rowKey: rowData[rowKey]\n                    })(e)}\n            >\n                {cells}\n            </div>\n        );\n    };\n\n    const _rowProps = ({ columns, rowData, rowIndex }) => ({\n        onClick: (e) =>\n            simpleAndDoubleClick(_onRowClick, _onRowDoubleClick, { rowData, rowIndex, rowKey: rowData[rowKey] })(e)\n\n    });\n\n    /** LOAD DATA FUNCTIONS */\n    const onEndReached = () => {\n        let selectAll;\n        const selectLength = _selectedRowKeys.length;\n        if (selectLength === 0) selectAll = false;\n        else if (selectLength > 0) selectAll = null;\n\n        setSelectAll(selectAll);\n        // console.log('_filter', _filter);\n\n        if (infinityMode) {\n            const loadParams = {\n                sortBy: _sortBy,\n                filter: _filter,\n                searchLine: _searchValue,\n                reload: false\n            };\n            _dataProcessing(loadParams);\n        }\n    };\n\n    /** SELECTABLE FUNCTIONS */\n\n    /** Событие при изменении галочки одной строки */\n    const _onChangeSelectHandler = ({\n                                        selected,\n                                        _selectedRow,\n                                        _selectAll,\n                                        _selectedRowKeys,\n                                        _selectedRowObjects,\n                                        _indeterminateRowKeys\n                                    }) => {\n        // console.group(\"_onChangeSelectHandler\", _selectedRowKeys);\n        // console.log(\"_selectedRowKeys\", _selectedRowKeys);\n        // console.log(\"_indeterminateRowKeys\", _indeterminateRowKeys);\n        // console.log(\"_selectAll\", _selectAll);\n        // console.groupEnd();\n\n        // setSelectedRowKeys(_selectedRowKeys);\n        // selectedDispatch(_selectedRowObjects);\n        _setSelectedRowsHandler(_selectedRowKeys, _selectedRowObjects);\n        setIndeterminateRowKeys(_indeterminateRowKeys);\n        setSelectAll(_selectAll);\n        onSelectedRowsChange(_selectedRowKeys, _selectedRowObjects);\n    };\n\n    /** Событие при изменении галочки \"Выделить все\" */\n    const _onSelectAllHandler = ({ selected, rowKeys, rowObjects }) => {\n        const selectedKeys = selected ? rowKeys : [];\n        // setSelectedRowKeys(selectedKeys);\n        // selectedDispatch(selected ? rowObjects : []);\n        _setSelectedRowsHandler(selectedKeys, selected ? rowObjects : []);\n        setIndeterminateRowKeys([]);\n        setSelectAll(selected);\n        // setSelectedRowObjects(rows);\n        // console.log(\"_handleSelectAll\", selectedKeys);\n        onSelectedRowsChange(selectedKeys, rowObjects);\n    };\n    //\n    // const SelectionCell = (props) => {\n    // \tconst {rowData, column} = props;\n    // \tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\n    // \tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\n    // \tconst checked = selectedRowKeys.includes(rowData[rowKey]);\n    // \tReact.useEffect(() => {\n    // \t\tconsole.log(\"selectionCell\", props);\n    // \t}, []);\n    //\n    // \tconst _handleChange = (checked) => {\n    // \t\tconsole.log(\"_handleChange\", checked);\n    // \t}\n    //\n    // \treturn (\n    // \t\t<Checkbox\n    // \t\t\tindeterminate={det}\n    // \t\t\tonChange={(e) => _handleChange(e.target.checked)}\n    // \t\t\tchecked={checked}\n    // \t\t/>\n    // \t);\n    // };\n\n    const _getSelectionColumnProps = () => ({\n        rowKey: rowKey,\n        parentKey: expandParentKey,\n        nodeAssociated: nodeAssociated,\n        selectedRowKeys: _selectedRowKeys,\n        indeterminateRowKeys: _indeterminateRowKeys,\n        onChange: _onChangeSelectHandler\n    });\n\n    const _getColumns = () => {\n        const selectColumn = {\n            key: \"__selection__\",\n            headerRenderer: SelectionHead,\n            cellRenderer: <SelectionCell />,\n            width: 40,\n            flexShrink: 0,\n            resizable: false,\n            frozen: \"left\",\n            selectAll: selectAll,\n            onSelectAll: _onSelectAllHandler,\n            ..._getSelectionColumnProps()\n        };\n        return selectable ? [selectColumn, ...columns] : [...columns];\n    };\n\n\n    /** TREE FUNCTIONS */\n\n    const _onExpandedRowsChange = (expandedRowKeys) => {\n        // console.log(\"_onExpandedRowsChange\", expandedRowKeys);\n        onExpandedRowsChange(expandedRowKeys);\n    };\n    const _onRowExpand = ({ expanded, rowData, rowIndex, rowKey }) => {\n        // console.log(\"_onRowExpand\", rowData, expanded, rowIndex, rowKey);\n        if (expanded) {\n            setExpandedRowKeys([..._expandedRowKeys, rowKey]);\n\n            if (expandLazyLoad) {\n                const loadParams = {\n                    sortBy: _sortBy,\n                    filter: { ..._filter, [expandParentKey]: rowKey },\n                    searchLine: _searchValue,\n                    reload: false,\n                    expandRow: rowData\n                };\n                // _callPropsOnLoad(loadParams);\n                _dataProcessing(loadParams);\n            }\n        } else {\n            let expandedRowKeys = [..._expandedRowKeys];\n            let allChildKeys = flatten(\n                getTableRowKeys(rowData.children, props.rowKey)\n            );\n            allChildKeys.push(rowKey);\n            // console.log('allChildKeys', allChildKeys);\n            setExpandedRowKeys(\n                expandedRowKeys.filter((item) => !allChildKeys.includes(item))\n            );\n        }\n        onRowExpand({ expanded, rowData, rowIndex, rowKey });\n    };\n\n\n    /** ROW CHANGE FUNCTIONS */\n\n    /**\n     * Find row by key\n     * @param data - table rows\n     * @param key - key row for find\n     * @param callback - function for return result\n     */\n    const loop = (data, key, callback) => {\n        for (let i = 0; i < data.length; i++) {\n            if (data[i][rowKey] === key) {\n                // console.log(`Selected => index: [${i}], path: [${data[i].path}]`, data);\n                return callback(data[i], i, data);\n            } else {\n                // console.log(`Other => index: [${i}], path: [${data[i].path}]`);\n            }\n            if (data[i].children) {\n                loop(data[i].children, key, callback);\n            }\n        }\n    };\n\n    const _addRows = (rows) => {\n        let saveRows = [...rows];\n        if (customFields)\n            // Фильтрация по пользовательским параметрам\n            saveRows = saveRows.filter((sRow) => {\n                let isValid = [];\n                customFields.forEach((field) => {\n                    // Валидация по пользовательской логике функции validate\n                    if (field.validate)\n                        isValid.push(field.validate(sRow, _rows));\n\n                    // Создание или переобразование по пользовательской логике функции value\n                    if (field.value)\n                        sRow[field.name] = field.value(sRow, _rows);\n                });\n                // console.log('_addRows isValid', isValid);\n                if (!isValid.includes(false))\n                    return sRow;\n            });\n        const _localRows = [..._rows, ...saveRows];\n        _setRowsHandler(_localRows);\n        onTableEventsDispatch(\"onAddRows\", _localRows);\n    };\n\n    const _addRow = (row) => {\n        let _row = { ...row };\n        let isValid = true;\n        if (customFields) {\n            let validations = [];\n            customFields.forEach((field) => {\n                if (field.validate)\n                    validations.push(field.validate(_row, _rows));\n\n                if (field.value)\n                    _row[field.name] = field.value(_row, _rows);\n            });\n            isValid = !validations.includes(false);\n        }\n        if (isValid) {\n            const _localRows = [..._rows, _row];\n            _setRowsHandler(_localRows);\n            onTableEventsDispatch(\"onAddRow\", _localRows);\n        }\n\n    };\n\n    const _addRowAsCopy = () => {\n        // console.log(\"_onClickAddAsCopy\", selectedRow);\n        const _localRows = [..._rows, findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0])];\n        _setRowsHandler(_localRows);\n        onTableEventsDispatch(\"onAddRowAsCopy\", _localRows);\n\n    };\n\n    const _editRow = (row) => {\n        // console.log(\"_onClickEdit\", selectedRow);\n        const data = [..._rows];\n        const key = row[rowKey];\n        loop(data, key, (item, index, arr) => {\n            data[index] = row;\n            _setRowsHandler(data);\n            // selectedDispatch(row)\n            _setSelectedRowsHandler(_selectedRowKeys, undefined, data);\n            onTableEventsDispatch(\"onEditRow\", data);\n\n            // setSelectedRowKeys([]);\n        });\n        // props.onClickEdit(event, selectedRow);\n    };\n\n    const _removeRow = (event) => {\n        // console.log(\"_onClickDelete\", autoDeleteRows, selectedRowKeys);\n        const _localRows = _rows.filter(\n            (item) => !_selectedRowKeys.includes(item[rowKey]));\n        _setRowsHandler(_localRows);\n        _setSelectedRowsHandler();\n        onTableEventsDispatch(\"onRemoveRow\", _localRows);\n\n        // setSelectedRowKeys([]);\n        // if (selectable)\n        // \tselectedDispatch([]);\n        // else\n        // \tselectedDispatch(undefined);\n        // commandPanelProps.onClickDelete(event, _selectedRowKeys);\n    };\n\n    // const _moveUpRow\n\n    const _moveUpRow = (event) => {\n        const data = [..._rows];\n        const key = _selectedRowKeys[0];\n        loop(data, key, (item, index, arr) => {\n            const newRowIndex = _getNewIndexRow(index, index - 1);\n            _changeIndexRow(index, newRowIndex, arr, data, \"onMoveUpRow\");\n            // commandPanelProps.onClickUp(event, {\n            // \trowIndex: newRowIndex,\n            // \trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n            // }, data);\n        });\n    };\n\n    const _moveDownRow = (event) => {\n        const data = [..._rows];\n        const key = _selectedRowKeys[0];\n        loop(data, key, (item, index, arr) => {\n            const newRowIndex = _getNewIndexRow(index, index + 1);\n            _changeIndexRow(index, newRowIndex, arr, data, \"onMoveDownRow\");\n            // commandPanelProps.onClickDown(event, {\n            // \trowIndex: newRowIndex,\n            // \trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n            // }, data);\n        });\n    };\n\n    const _getNewIndexRow = (oldIndex, newIndex) =>\n        newIndex >= 0 && newIndex < _rows.length ? newIndex : oldIndex;\n\n    const _changeIndexRow = (oldIndex, newIndex, arr, data, nameEvent) => {\n        if (newIndex >= 0 && newIndex < arr.length) {\n            // let arr = [..._rows]; // Копируем массив\n            const item = arr.splice(oldIndex, 1); // Удаляем элемент со старого места\n            // console.log('_changeIndexRow => ',item);\n            arr.splice(newIndex > 0 ? newIndex : 0, 0, item[0]); // Ставим элемент на новое место\n            // console.log(\"_changeIndexRow\", item[0]);\n            _setRowsHandler(data);\n            onTableEventsDispatch(nameEvent, data);\n\n        }\n    };\n\n    // const _onSearch = (searchLine, e) => {\n    // \te.preventDefault();\n    // \t// console.log(\"_onSearch\", searchLine);\n    // \ttableRef.current.scrollToRow(0, 'auto');\n    // \tsetSearchValue(searchLine);\n    // \tconst loadParams = {\n    // \t\tsortBy: _sortBy,\n    // \t\tfilter: _filter,\n    // \t\tsearchLine: searchLine,\n    // \t\treload: true,\n    // \t};\n    // \t_dataProcessing(loadParams);\n    // \tcommandPanelProps.onSearch(searchLine);\n    // };\n\n    /** SELECTED PANEL */\n    const _onClickDropSelectHandler = (dropObject) => {\n        const newSelectedKeys = _selectedRowKeys.filter(\n            (item) => item !== dropObject[rowKey]\n        );\n        // setSelectedRowKeys(newSelectedKeys);\n        _setSelectedRowsHandler(newSelectedKeys, undefined, _rows);\n        setSelectAll((newSelectedKeys.length === 0 ? false : null));\n        onSelectedRowsChange(newSelectedKeys);\n    };\n\n    return (\n        <div className={`${rtPrefix}-table ${className}`} style={style}>\n            <div className={`${rtPrefix}-baseTable`}>\n                <AutoResizer>\n                    {({ width, height }) => (\n                        <BaseTable\n                            ref={tableRef}\n                            /** Required */\n                            columns={_getColumns()}\n                            data={_rows}\n                            /** Control Props */\n                            sortBy={_sortBy}\n                            /** Base Props */\n                            width={width}\n                            height={height}\n                            rowKey={rowKey}\n                            // rowProps={rowProps}\n\n                            /** View Props */\n                            rowClassName={_rowClassName}\n                            emptyRenderer={empty}\n                            fixed={fixWidthColumn}\n                            footerHeight={_footerShow ? footerProps.height : 0}\n                            headerHeight={headerHeight}\n                            rowHeight={rowHeight}\n                            overlayRenderer={loading ? overlay : null}\n                            footerRenderer={_footer}\n                            rowRenderer={rowRenderer}\n                            // rowProps={_rowProps}\n                            // cellProps={_cellProps}\n                            estimatedRowHeight={estimatedRowHeight}\n                            /** Load Data Props */\n                            onEndReachedThreshold={loadThreshold}\n                            onEndReached={infinityMode ? onEndReached : undefined}\n                            disabled={disabled? disabled:loading}\n                            /** Tree Props */\n                            expandColumnKey={expandColumnKey}\n                            expandedRowKeys={_expandedRowKeys}\n                            /** Events */\n                            onColumnSort={_onColumnSort}\n                            rowEventHandlers={_rowEventHandlers}\n                            onExpandedRowsChange={_onExpandedRowsChange}\n                            onRowExpand={_onRowExpand}\n                            editMode={editMode}\n                        />\n                    )}\n                </AutoResizer>\n            </div>\n            {showSelection && selectable && !expandColumnKey ? (\n                <SelectionList\n                    onClickDropSelect={_onClickDropSelectHandler}\n                    selectedRowObjects={flatten(\n                        getTableRowObjects(_rows, rowKey)\n                    ).filter((item) => _selectedRowKeys.includes(item[rowKey]))}\n                    rowRender={rowRenderShowSelection}\n                />\n            ) : null}\n        </div>\n    );\n});\n\nTable.propTypes = {\n    /**\n     * REQUIRED\n     * */\n\n    /** Столбцы таблицы */\n    columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n    /** Режим загрузки данных по скроллу */\n    infinityMode: PropTypes.bool,\n\n    /**\n     * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n     * */\n\n    /** Строки по умолчанию */\n    defaultRows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ключи выделенных по умолчанию строк */\n    defaultSelectedRowKeys: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n\n    /** Значение строки поиска по умолчанию строк */\n    defaultSearchValue: PropTypes.string,\n\n    /** Объект фильтрации по умолчанию */\n    defaultFilter: PropTypes.object,\n\n    /** Сортировка по умолчанию */\n    defaultSortBy: PropTypes.shape({\n        /** Ключ поля для сортировки */\n        key: PropTypes.string,\n        /** Направление сортировки */\n        order: PropTypes.oneOf([\"asc\", \"desc\"])\n    }),\n\n    /**\n     * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n     * */\n\n    /** Строки таблицы. Используется для контроля таблицы из вне. */\n    rows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Функция задания строк таблицы. */\n    setRows: PropTypes.func,\n\n    /** Выделенные строки таблицы. */\n    selectedRowKeys: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n\n    /** Значение строки поиска */\n    searchValue: PropTypes.string,\n\n    /** Объект фильтрации */\n    filter: PropTypes.object,\n\n    /** Объект сортировки */\n    sortBy: PropTypes.shape({\n        /** Ключ поля для сортировки */\n        key: PropTypes.string,\n        /** Направление сортировки */\n        order: PropTypes.oneOf([\"asc\", \"desc\"])\n    }),\n\n    /**\n     * BASE PROPS\n     * */\n\n    /** Поле для уникальной идентификации строки */\n    rowKey: PropTypes.string,\n\n\n    /** Дополнительные поля и валидация в объекты таблицы\n     * Данный параметр (props) осуществляет дополнительную обработку объекта таблицы после закрытия модалки, но перед добавлением в таблицу.\n     * Можно как изменить существующие поля объекта, так и добавить новые поля объекта.\n     * `customFields` - массив объектов для дополнения или изменения полей объектов таблицы\n     * ```json\n     * [\n     *    {\n     * \t\tname: <String>,\n     * \t\tvalue: <func>,\n     * \t\tvalidate: <func>\n     * \t}\n     * ]\n     * ```\n     * `name` – Имя параметра в объекте\n     * `value` – Функция формирования значения - `(row, rows) => { return {} }`\n     * `validate` – Функция проверки значения - `(row, rows) => { return <Bool> }`\n     * Параметра **validate** работает **только** для модельного окна тип `select`.\n     * Validate можно наложить на любое кол-во полей объекта и если хотя бы один `validate` === `false`, то исключает строку из добавления.\n     */\n    customFields: PropTypes.arrayOf(PropTypes.object),\n\n    /**\n     * Данный параметр (props) позволяет добавить или переопределить пропсы для колонок, которые заданы конфигурацией на сервере\n     * `customColumnProps` - массив объектов `props` к `columns`. Один объект описывает доп. параметры для одной колонки\n     * ```json\n     * [\n     *    {\n     * \t\tname: <String>,\n     * \t\tcellRenderer: <func>,\n     * \t\t...advancedColProps\n     * \t}\n     * ]\n     * ```\n     * `name` – key колонки к которой надо применить дополнительные пропсы\n     * `cellRenderer` – `({ cellData, columns, column, columnIndex, rowData, rowIndex, container, isScrolling }) => return <ReactNode>`\n     * `advancedColProps` – подолнительные свойства колонок тут -> [Column](https://autodesk.github.io/react-base-table/api/column)\n     */\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\n\n    /**\n     * VIEW PROPS\n     * */\n\n    /** Вывод когда нет данных */\n    empty: PropTypes.element,\n\n    /** Отображение загрузки данных */\n    overlay: PropTypes.element,\n\n    /** Фиксированная ширина столбцов. Появится боковой скрол */\n    fixWidthColumn: PropTypes.bool,\n\n    footerProps: PropTypes.shape({\n\n        /** Высота подвала */\n        height: PropTypes.number,\n\n        /** Массив элементов футтера, которые надо отобразить\n         * ['selected', 'loaded', 'total'] */\n        showElements: PropTypes.arrayOf(PropTypes.string),\n\n        /** Заколовок для кол-ва выбранных объектов */\n        selectedTitle: PropTypes.string,\n\n        /** Заколовок для кол-ва загруженны объектов */\n        loadedTitle: PropTypes.string,\n\n        /** Заколовок для кол-ва всего объектов */\n        totalTitle: PropTypes.string,\n\n        /** Левый кастомный элемент командной панели */\n        leftCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\n        /** Центральный кастомный элемент командной панели */\n        centerCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\n        /** Правый кастомный элемент командной панели */\n        rightCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)])\n    }),\n\n    /** Высота заголовка таблицы */\n    headerHeight: PropTypes.number,\n\n    /** Высота строки таблицы */\n    rowHeight: PropTypes.number,\n\n    /** Custom row renderer\n     * Параметры - `({ isScrolling, cells, columns, rowData, rowIndex, depth })` */\n    rowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n    /** Строки будут в зебро-стиле */\n    zebraStyle: PropTypes.bool,\n\n    /** Высота расширения */\n    estimatedRowHeight: PropTypes.number,\n\n    /** Отображать ли разделители ячеек в строке */\n    cellBordered: PropTypes.bool,\n\n    /** Отобрадать ли разделители строк */\n    rowBordered: PropTypes.bool,\n\n    className: PropTypes.string,\n\n    style: PropTypes.object,\n\n    /**\n     * LOAD DATA PROPS\n     * */\n\n    /** Порог в пикселях для вызова _onLoad.\n     * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n    loadThreshold: PropTypes.number,\n\n    /** Размер страницы */\n    pageSize: PropTypes.number,\n\n    /** Функция запроса для конфигурации */\n    requestLoadConfig: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n    /** Имя параметра для поиска */\n    searchParamName: PropTypes.string,\n\n    /**\n     * SELECTABLE PROPS\n     * */\n\n    /** Таблица с возможностью выбора строки */\n    selectable: PropTypes.bool,\n\n    /**\n     * TREE PROPS\n     * */\n\n    /** Родительский узел и дочерние узлы связаны (Работает только при `selectable`) */\n    nodeAssociated: PropTypes.bool,\n\n    /** Ключ колонки по которой строить иерархию */\n    expandColumnKey: PropTypes.string,\n\n    /** Открыть по умолчанию вложенность до уровня N или 'All' */\n    expandDefaultAll: PropTypes.bool,\n\n    /** Загружать ноды иерархии по одной */\n    expandLazyLoad: PropTypes.bool,\n\n    /** Поле в котором хранится ссылка на родителя */\n    expandParentKey: PropTypes.string,\n\n    /**\n     * EVENTS\n     * */\n\n    /** Событие при клике на строку (только при `selectable` = `false`)\n     * `({selected, rowData, rowIndex}) => {}` */\n    onRowClick: PropTypes.func,\n\n    /** Событие при двойном клике на строку.\n     * `({rowData, rowIndex, rowKey}) => {}` */\n    onRowDoubleClick: PropTypes.func,\n\n    /** События при открытии / закрытии ноды\n     * `({ expanded, rowData, rowIndex, rowKey }) => {}` */\n    onRowExpand: PropTypes.func,\n\n    /** Событие при выборе строки.\n     * `([rowKeys], [rowDatas]) => {}` */\n    onSelectedRowsChange: PropTypes.func,\n\n    /** События при открытии / закрытии ноды\n     * `(expandedRowKeys) => {}` - массив ключей открытых нод */\n    onExpandedRowsChange: PropTypes.func,\n\n    /** SELECTED PANEL */\n\n    /** Отображать ли панель выбранных элементов */\n    showSelection: PropTypes.bool,\n\n    /** Строка или функция для отображения элементов списка выбранных\n     * Строка - имя поля\n     * Функция - рендер строк.\n     * `({ rowData, rowIndex }) => { return <Component> }` */\n    rowRenderShowSelection: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.string\n    ]),\n\n    /** Путь в сторе куда класть выбранную строку таблицы */\n    dispatchPath: PropTypes.string,\n\n    /** Объект для подписки на изменения в STORE */\n    subscribe: PropTypes.arrayOf(PropTypes.object)\n};\n\nTable.defaultProps = {\n    infinityMode: false,\n    editMode: false,\n    defaultRows: [],\n    defaultSelectedRowKeys: [],\n    defaultSearchValue: \"\",\n    defaultFilter: {},\n    defaultSortBy: {},\n\n    rows: [],\n    setRows: noop,\n    selectedRowKeys: [],\n    searchValue: \"\",\n    filter: {},\n    sortBy: {},\n\n    rowKey: \"id\",\n\n    empty: empty,\n    overlay: overlay,\n    fixWidthColumn: false,\n    footerProps: {\n        height: 30,\n        showElements: [],\n        selectedTitle: \"Выделено:\",\n        loadedTitle: \"Загружено записей:\",\n        totalTitle: \"Всего записей:\",\n        leftCustomSideElement: null,\n        centerCustomSideElement: null,\n        rightCustomSideElement: null\n    },\n    headerHeight: 36,\n    rowHeight: 36,\n    zebraStyle: false,\n    estimatedRowHeight: undefined,\n    cellBordered: false,\n    rowBordered: true,\n    className: \"\",\n    style: {},\n\n    loadThreshold: 300,\n    pageSize: 50,\n    requestLoadRows: undefined,\n    requestLoadCount: noop,\n    searchParamName: \"searchLine\",\n\n    selectable: false,\n\n    nodeAssociated: true,\n    expandColumnKey: undefined,\n    expandDefaultAll: true,\n    expandLazyLoad: false,\n    expandParentKey: \"parentId\",\n\n    onRowClick: noop,\n    onRowDoubleClick: noop,\n    onRowExpand: noop,\n    onSelectedRowsChange: noop,\n    onExpandedRowsChange: noop,\n\n    showSelection: false,\n\n    dispatchPath: undefined,\n    subscribe: []\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\n","import React, {useEffect, useState} from \"react\";\nimport { getSortBy, noop, notificationError } from \"../../utils/baseUtils\";\nimport Table from \"./Table\";\nimport { Typography } from \"antd\";\n\nconst defaultProps = {\n    defaultFilter: {},\n    rowKey: 'id',\n    pageSize: 50,\n    requestLoadConfig: noop,\n    expandColumnKey: undefined,\n    expandLazyLoad: false,\n    expandParentKey: 'parentId',\n    customColumnProps: [],\n};\n\nconst ConfigLoader = props => {\n\n    /** Конфигурация таблицы */\n    const [tableConfig, setTableConfig] = useState(undefined);\n\n    const {\n        defaultSortBy,\n        defaultFilter,\n        rowKey,\n        pageSize,\n        requestLoadConfig,\n        expandColumnKey,\n        expandLazyLoad,\n        expandParentKey,\n        customColumnProps,\n        cellBordered,\n    } = {...defaultProps, ...props};\n\n    useEffect(() => {\n        let cleanupFunction = false;\n        const loadData = async () => {\n            if (requestLoadConfig) {\n                // console.log('requestLoadConfig => ', typeof requestLoadConfig);\n                // console.log('requestLoadRows => ', typeof props.requestLoadRows);\n                requestLoadConfig()\n                    .then((response) => {\n                        // let result = response.data;\n                        // console.log('requestLoadConfig -> ', response.data);\n                        if(!cleanupFunction) {\n                            // setTableConfig(response.data);\n                            configParser(response.data);\n                        }\n                    })\n                    .catch(error => notificationError(error, 'Ошибка получения конфигурации') );\n            }\n        };\n        loadData().then(r => r);\n        return () => cleanupFunction = true;\n    }, []);\n\n    const configParser = (config) => {\n        // Массив колонок\n        let _columns = [];\n        // Сортировка по умолчанию\n        let _defaultSorter = [];\n\n        config && config.fields && config.fields.forEach((item) => {\n            const colProps = customColumnProps &&\n                customColumnProps.find((render) =>\n                    render.name === item.name || render.name === item.alias);\n\n            // Индекс или имя поля в данных\n            const dataIndex = (item.alias ? item.alias : item.name);\n\n            if (_defaultSorter.length === 0 || _defaultSorter[1] === undefined)\n                _defaultSorter = getSortBy(defaultSortBy, item.defaultSort, dataIndex);\n\n            _columns.push({\n                key: dataIndex,\n                title: item.header ? item.header : item.name,\n                dataKey: dataIndex,\n                align: item.align,\n                width: item.width,\n                resizable: item.resizable,\n                sortable: item.sortable,\n                hidden: !item.visible,\n                className: [cellBordered ? 'bordered' : ''].join(' '),\n                headerClassName: [cellBordered ? 'bordered' : ''].join(' '),\n                // cellRenderer: cellR && cellR.cellRender,\n                ...colProps,\n                cellRenderer: (object) => {\n                    if (colProps && colProps.cellRenderer)\n                        return <colProps.cellRenderer {...object}/>\n                        // return colProps.cellRenderer(object) ? colProps.cellRenderer(object) : '---';\n                    else\n                        return object.cellData\n                            ? <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>{object.cellData}</Typography.Text>\n                            : <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>---</Typography.Text> ;\n                        // return object.cellData ? object.cellData : '---';\n                },\n            });\n        });\n\n        let _defaultFilter;\n        if (config && config.hierarchical && config.hierarchyLazyLoad) {\n            const parentKey = config.hierarchyField\n                ? config.hierarchyField.split('/')[1]\n                : expandParentKey;\n            _defaultFilter =  {...defaultFilter, [parentKey]: null};\n        } else _defaultFilter = defaultFilter;\n\n\n        setTableConfig({\n            columns: _columns,\n            defaultSortBy: _defaultSorter[0],\n            defaultFilter: _defaultFilter,\n            rowKey:\n                config && config.hierarchical && config.hierarchyField\n                    ? config.hierarchyField.split('/')[0]\n                    : rowKey,\n            expandParentKey:\n                config && config.hierarchical && config.hierarchyField\n                    ? config.hierarchyField.split('/')[1]\n                    : expandParentKey,\n            expandColumnKey:\n                config && config.hierarchical && config.hierarchyView\n                    ? config.hierarchyView\n                    : expandColumnKey,\n            expandLazyLoad:\n                config && config.hierarchical && config.hierarchyLazyLoad\n                    ? config.hierarchyLazyLoad\n                    : expandLazyLoad,\n            pageSize: config && config.hierarchical ? 1 : pageSize,\n        });\n    }\n\n    if(tableConfig)\n        return ( <Table {...props} {...tableConfig} /> );\n    else\n        return null\n};\n\nexport default ConfigLoader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ColumnResizer from \"react-base-table/lib/ColumnResizer\";\nimport { rtPrefix } from \"../../utils/variables\";\n\nconst HeaderCell = (props) => {\n    // console.log('HeaderCell => ', props);\n\n    const { column, onResize, ...restProps } = props;\n\n    if (!column)\n        return <th {...restProps} />;\n\n    const { width, resizable, headerRenderer } = column;\n\n    if (!width)\n        return <th {...restProps} />;\n\n    // if (headerRenderer) {\n    //     let childNode\n    //     if( typeof headerRenderer === 'function') {\n    //         childNode = headerRenderer()\n    //     }\n    //     else {\n    //         childNode = headerRenderer\n    //     }\n    //\n    //     return (\n    //         <th {...restProps}>\n    //             {childNode}\n    //             {resizable &&\n    //             <ColumnResizer\n    //                 className={`${rtPrefix}-column-resizer`}\n    //                 column={{ width: width, maxWidth: 1000 }}\n    //                 onResize={onResize}\n    //             />}\n    //         </th>\n    //     );\n    // } else {\n        return (\n            <th {...restProps}>\n                {restProps.children}\n                {resizable &&\n                <ColumnResizer\n                    className={`${rtPrefix}-column-resizer`}\n                    column={{ width: width, maxWidth: 1000 }}\n                    onResize={onResize}\n                />}\n            </th>\n        );\n    // }\n};\n\nHeaderCell.propTypes = {\n    onResize: PropTypes.func,\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    resizable: PropTypes.bool\n};\n\nexport default HeaderCell;\n","import React, {useRef, useEffect} from 'react';\nimport PropTypes from 'prop-types';\n\nconst HeaderRow =  props => {\n    const headerRowRef = useRef();\n    const {headerHeight, setHeaderHeight, ...restProps} = props;\n    useEffect(() => {\n\n        const newHeight = headerRowRef && headerRowRef.current && headerRowRef.current.clientHeight;\n        if(headerHeight !== newHeight) {\n            // console.log('Row height', newHeight) //clientHeight\n            setHeaderHeight(newHeight)\n        }\n    })\n    return (\n        <tr {...restProps} ref={headerRowRef}/>\n    );\n};\n\nHeaderRow.propTypes = {\n    headerHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    setHeaderHeight: PropTypes.func,\n}\n\nexport default HeaderRow;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst BodyCell = props => {\n\n  const {column, rowData, rowIndex, ...restProps} = props;\n\n  if(column && column.cellComponent) {\n    // console.log('BodyCell => ', restProps);\n    return (\n      <td {...restProps} style={{...restProps.style, padding: 0}}>\n        <column.cellComponent\n          column={column}\n          cellData={restProps.title}\n          rowData={rowData}\n          rowIndex={rowIndex}\n        />\n      </td>\n    )\n  } else {\n    return <td {...restProps}/>;\n  }\n\n};\n\nBodyCell.propTypes = {\n\n};\n\nexport default BodyCell;\n","import React, { useState, useEffect } from \"react\";\nimport { rtPrefix } from \"../../utils/variables\";\nimport { connect } from \"react-redux\";\nimport { AutoResizer } from \"react-base-table\";\nimport {\n    findNodeByRowKey,\n    flatten,\n    getObjectExcludedProps, getTableRowKeys, getTableRowObjects, noop,\n    notificationError,\n    useMounted\n} from \"../../utils/baseUtils\";\nimport { Space, Table as AntTable } from \"antd\";\nimport { CaretDownOutlined, CaretRightOutlined, CaretUpOutlined } from \"@ant-design/icons\";\nimport { empty, overlay } from \"../ReactBaseTable/defaultSettings\";\nimport HeaderCell from \"./HeaderCell\";\nimport HeaderRow from \"./HeaderRow\";\nimport PropTypes from \"prop-types\";\nimport FormItems from \"../../Form/FormItems\";\nimport moment from \"moment\";\nimport BodyCell from \"./BodyCell\";\nimport { getExtraData, mapDispatchToProps, mapStateToProps } from \"../../utils/storeUtils\";\n\nconst excludeProps = [\n    \"defaultRows\",\n    \"defaultSelectedRowKeys\",\n    \"defaultSearchValue\",\n    \"defaultFilter\",\n    \"defaultSortBy\",\n    \"rows\",\n    \"requestLoadRows\",\n    \"pageSize\",\n    \"searchParamName\",\n    \"onRowClick\",\n    \"onRowDoubleClick\",\n];\n\nconst Table = props => {\n    /** Индикатор загрузки данных */\n    const [loading, setLoading] = useState(false);\n\n    /** TABLE STATES */\n    /** Столбцы таблицы */\n    const [_columns, _setColumns] = useState([]);\n    /** Строки таблицы */\n    const [_rows, _setRows] = useState([]);\n    /** Ключи выделенных строк */\n    const [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n    /** Значение строки поиска */\n    const [_searchValue, setSearchValue] = useState(\"\");\n    /** Объект фильтра */\n    const [_filter, setFilter] = useState({});\n    /** Объект соритировки */\n    const [_sortBy, setSortBy] = useState({});\n\n    /** TREE STATES */\n    /** Ключи строк с кубиками при selectable = true */\n    // const [_indeterminateRowKeys, setIndeterminateRowKeys] = useState([]);\n    /** Ключи раскрытых строк при selectable = true */\n    const [_expandedRowKeys, setExpandedRowKeys] = useState([]);\n\n    /** FOOTER STATES */\n    /** Отображать ли footer */\n    const [_footerShow, _setFooterShow] = useState(false);\n    /** Всего строк по фильтру в таблице */\n    const [_totalCountRows, setTotalCountRows] = useState(0);\n\n    const [subscribeProps, setSubscribeProps] = useState({});\n\n    const [headerHeight, setHeaderHeight] = useState(0);\n\n    const isMounted = useMounted();\n\n    const {\n        /** Required */\n        columns,\n        // type,\n        // infinityMode, // no use\n        editMode, // need Props.types\n\n        /** Def values */\n        defaultRows,\n        defaultSelectedRowKeys,\n        defaultSearchValue,\n        defaultFilter,\n        defaultSortBy,\n\n        /** Outdoor control */\n        rows,\n        // setRows, // ???\n        // selectedRowKeys,\n        // searchValue,\n        // filter,\n        // sortBy,\n\n        /** Base Props */\n        rowKey,\n        customFields,\n\n        /** View Props */\n        // empty,\n        // overlay,\n        // fixWidthColumn,\n        // footerProps,\n        // headerHeight,\n        // rowHeight,\n        // rowRenderer,\n        zebraStyle,\n        // estimatedRowHeight,\n        className,\n        style,\n        // cellBordered, // need Props.types\n        // rowBordered,  // need Props.types\n\n        /** Load Data Props */\n        pageSize,\n        requestLoadRows,\n        requestLoadCount,\n        searchParamName,\n\n        /** Selectable Props */\n        rowSelection,\n        selectable,\n\n        /** Tree Props */\n        expandable,\n        nodeAssociated,\n        expandColumnKey,\n        expandDefaultAll,\n        // expandLazyLoad, // no use\n        // expandParentKey, // no use\n\n        /** Events */\n        onRowClick,\n        onRowDoubleClick,\n        // onRowExpand,\n        // onSelectedRowsChange,\n        onExpandedRowsChange,\n\n        /** SELECTED PANEL */\n        // showSelection,\n        // rowRenderShowSelection,\n\n        /** REDUX PROPS */\n        dispatchPath,\n        dispatch,\n        subscribe,\n\n        value,\n        onChange\n    } = { ...props, ...subscribeProps };\n\n    const footerProps = {\n        ...Table.defaultProps.footerProps,\n        ...props.footerProps\n    };\n\n    const selectedDispatchPath = dispatch && dispatch.path\n        ? `${dispatch.path}.selected`\n        : dispatchPath && `${dispatchPath}.selected`;\n    const rowsDispatchPath = dispatch && dispatch.path\n        ? `${dispatch.path}.rows`\n        : dispatchPath && `${dispatchPath}.rows`;\n\n    useEffect(() => {\n        // console.log(\"Инициализация дефолтных значений \", selectColumn, columns);\n        // console.log(\"Инициализация дефолтных значений defaultSelectedRowKeys > \", defaultSelectedRowKeys);\n\n        // Инициализация дефолтных значений\n        // _setRows(defaultRows);\n        if (defaultRows.length > 0) _setRowsHandler(defaultRows);\n        else if (rows.length > 0) _setRowsHandler(rows);\n        if (selectable && props.value && props.value.length > 0)\n            _setSelectedRowsHandler(props.value.map(item => item[rowKey]), props.value);\n        else\n            _setSelectedRowsHandler(defaultSelectedRowKeys, undefined, defaultRows);\n        setSearchValue(defaultSearchValue);\n        setFilter(defaultFilter);\n        setSortBy(defaultSortBy);\n\n        // Определение нужно ли отображать подвал\n        _setFooterShow(\n            (footerProps.showElements.length ||\n                footerProps.leftCustomSideElement ||\n                footerProps.centerCustomSideElement ||\n                footerProps.rightCustomSideElement));\n\n        _loadRows({\n            sortBy: defaultSortBy,\n            filter: defaultFilter,\n            searchLine: defaultSearchValue,\n            reload: true\n        });\n        // console.log(\"tableRef\", tableRef);\n    }, []);\n\n    useEffect(() => {\n        _setColumns(columns);\n    }, [columns]);\n\n    useEffect(() => {\n        if(value && Array.isArray(value) && !requestLoadRows)\n            _setRowsHandler(value)\n    }, [value])\n\n    /** Подписка на изменение props[subscribe.name] в сторе */\n    subscribe.map(item => {\n        return useEffect(() => {\n            if ((item.withMount || isMounted) && item.name) {\n                // console.log(\"Table => useEffect => \", props); //item.name, props[item.name]\n                const onChangeObject = {\n                    value: props[item.name],\n                    extraData: getExtraData(item, props), //props[`${item.name}ExtraData`],\n                    reloadTable: reloadData,\n                    addRows: _addRows,\n                    addRow: _addRow,\n                    addRowAsCopy: _addRowAsCopy,\n                    editRow: _editRow,\n                    removeRow: _removeRow,\n                    moveUpRow: _moveUpSelectedRow,\n                    moveUpRowByKey: _moveUpRowByKey,\n                    moveDownRow: _moveDownSelectedRow,\n                    moveDownRowByKey: _moveDownRowByKey,\n                    setSubscribeProps: _setSubscribeProps\n                };\n                item.onChange && item.onChange(onChangeObject);\n            }\n        }, [props[item.name]]);\n    });\n\n    /** BASE FUNCTIONS */\n    const _setSubscribeProps = (props) => {\n        setSubscribeProps({ ...subscribeProps, ...props });\n    };\n\n    const _setLoadedRowsHandler = (rows) => {\n        _setRowsHandler(rows);\n        // !selectable && onChange && onChange(rows);\n    };\n    const _setRowsHandler = (rows) => {\n        // console.log('_setRowsHandler onChange');\n        _setRows(rows);\n        // setRows(rows);\n        rowsDispatch(rows);\n    };\n\n    const _setSelectedRowsHandler = (selectedKeys = [], selectedObjects = undefined, rows = []) => {\n        // console.log('_setSelectedRowsHandler => ', selectedKeys)\n        if(!editMode) {\n            setSelectedRowKeys(selectedKeys);\n            if (selectedKeys.length === 0)\n                if (selectable)\n                    selectedDispatch([]);\n                else\n                    selectedDispatch(undefined);\n            else if (selectedKeys.length > 0 && !selectedObjects)\n                if (selectable)\n                    selectedDispatch(flatten(getTableRowObjects(rows, rowKey)).filter((item) => selectedKeys.includes(item[rowKey])));\n                else\n                    selectedDispatch(findNodeByRowKey(rows, rowKey, selectedKeys[0]));\n            else\n                selectedDispatch(selectedObjects);\n        }\n    };\n\n    const rowsDispatch = (rows) => {\n        // console.log('rowsDispatch ', rowsDispatchPath);\n        rowsDispatchPath && props.setDataStore && props.setDataStore(rowsDispatchPath, rows);\n        !selectable && onChange && onChange(rows);\n    };\n\n    const selectedDispatch = (data) => {\n        selectedDispatchPath && props.setDataStore && props.setDataStore(selectedDispatchPath, data);\n        selectable && onChange && onChange(data);\n    };\n\n    const onTableEventsDispatch = (nameEvent, value) => {\n        const dp = dispatch && dispatch.path\n            ? `${dispatch.path}.events.${nameEvent}`\n            : dispatchPath && `${dispatchPath}.events.${nameEvent}`;\n\n        dp && props.setDataStore && props.setDataStore(dp, {\n            timestamp: moment(),\n            value: value\n        });\n        // console.log('onTableEventsDispatch onChange');\n        Array.isArray(value) && onChange && onChange(value);\n    };\n\n    const reloadData = ({ sortBy, filter, searchValue }, appendParams) => {\n        // console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\n        if (selectable && props.value && props.value.length > 0)\n            _setSelectedRowsHandler(props.value.map(item => item[rowKey]), props.value);\n        else\n            _setSelectedRowsHandler();\n\n        const __sortBy = appendParams ? (sortBy ? sortBy : _sortBy) : sortBy;\n        const __filter = appendParams ? { ..._filter, ...filter } : filter;\n        const __searchValue = appendParams ? (searchValue ? searchValue : _searchValue) : searchValue;\n        setSortBy(__sortBy);\n        setFilter(__filter);\n        setSearchValue(__searchValue);\n        // console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\n        _loadRows({\n            sortBy: __sortBy,\n            filter: __filter,\n            searchLine: __searchValue,\n            reload: true\n        });\n    };\n\n    const _loadRows = (params) => {\n        const { sortBy, filter, searchLine, expandRow, reload } = params;\n        if (!loading && requestLoadRows) {\n            setLoading(true);\n            const pageNum = 0;\n            const params = {\n                page: 0,\n                size: pageSize,\n                sort:\n                    sortBy && sortBy.key\n                        ? sortBy.key + \",\" + sortBy.order\n                        : null\n            };\n            const dataQuery = {\n                ...filter,\n                ...(searchLine\n                    ? { [searchParamName]: searchLine }\n                    : null)\n            };\n            if(reload && requestLoadCount !== noop && !expandColumnKey) {\n                requestLoadCount({ params, data: dataQuery, })\n                    .then((response) => {\n                        // console.log(\"infinity then response\", response);\n                        setTotalCountRows(response.data);\n                    })\n                    .catch(error =>\n                        notificationError(error, 'Ошибка получения количества записей по фильтру') );\n            }\n            requestLoadRows({ params, data: dataQuery })\n                .then((response) => {\n                    // console.log(\"infinity then response\", response);\n                    const result = response.data;\n                    _setLoadedRowsHandler(result); // _setRows\n\n                    if (expandColumnKey) {\n                        expandDefaultAll &&\n                        setExpandedRowKeys(flatten(getTableRowKeys(result, rowKey)));\n                    }\n\n                    setLoading(false);\n                })\n                .catch((error) => {\n                    notificationError(error, \"Ошибка загрузки данных\");\n                    _setLoadedRowsHandler(_rows); // _setRows\n                    // setHasMore(false);\n                    setLoading(false);\n                });\n        }\n    };\n\n    const onChangeTable = (pagination, filters, sorter, extra) => {\n        // console.log('Table onChange', pagination, filters, sorter, extra)\n        switch (extra.action) {\n            case \"paginate\":\n                break;\n            case \"sort\":\n                onSort(sorter);\n                break;\n            case \"filter\":\n                break;\n            default:\n                break;\n        }\n    };\n\n    const onSort = (sorter) => {\n        // console.log(\"Table onSort from RT\", sorter);\n        const sortBy = sorter.order\n            ? { key: sorter.field, order: sorter.order === \"ascend\" ? \"asc\" : \"desc\" }\n            : {};\n        setSortBy(sortBy);\n        _loadRows({\n            sortBy: sortBy,\n            filter: _filter,\n            searchLine: _searchValue,\n            reload: true\n        });\n    };\n\n    const _onRowClick = ({ rowData, rowIndex, rowKey }) => {\n        // console.log('onClick', onRowClick, rowData, rowIndex, rowKey)\n        // console.log('onClick', _selectedRowKeys)\n        onTableEventsDispatch(\"onRowClick\", rowData);\n        _rowSelectAfterClick({ rowData, rowIndex, rowKey, onClick: onRowClick });\n    };\n    const _onRowDoubleClick = ({ rowData, rowIndex, rowKey }) => {\n        // console.log('onDoubleClick', onRowDoubleClick, rowData, rowIndex, rowKey);\n        // console.log('actionDoubleClick')\n        onTableEventsDispatch(\"onRowDoubleClick\", rowData);\n        _rowSelectAfterClick({ rowData, rowIndex, rowKey, onClick: onRowDoubleClick });\n    };\n\n    const _rowSelectAfterClick = ({ rowData, rowIndex, rowKey, onClick }) => {\n        const checked = !_selectedRowKeys.includes(rowKey);\n        const newRowObject = {\n            rowData: { ...rowData },\n            rowIndex: rowIndex,\n            rowKey: rowKey\n        };\n        // _setSelectedRowsHandler([rowKey], rowData);\n        // if (!expandColumnKey) {\n        // setSelectedRowKeys([rowKey]);\n        if (selectable) {\n            // console.log('_rowSelectAfterClick ', checked);\n            if (checked && !expandColumnKey)\n                _setSelectedRowsHandler([..._selectedRowKeys, rowKey], undefined, _rows);\n            else {\n                // console.log('_rowSelectAfterClick', _selectedRowKeys.filter(row => row !== rowKey), rowKey);\n                _setSelectedRowsHandler(_selectedRowKeys.filter(row => row !== rowKey), undefined, _rows);\n            }\n\n        } else {\n            if(checked)\n                _setSelectedRowsHandler([rowKey], rowData);\n        }\n        // onSelectedRowsChange([rowKey], [rowData]);\n        // console.log('onRowDoubleClick = ', onClick);\n        onClick && onClick({ selected: checked, ...newRowObject });\n    };\n\n    const onHeaderRowProps = () => ({ headerHeight, setHeaderHeight })\n\n    const onRowEvents = (rowData, rowIndex) => {\n        return {\n            onClick: event => _onRowClick({ rowData, rowIndex, rowKey: rowData[rowKey] }), // click row\n            onDoubleClick: event => _onRowDoubleClick({ rowData, rowIndex, rowKey: rowData[rowKey] }), // double click row\n            // onScroll: console.log\n            // onContextMenu: event => {}, // right button click row\n            // onMouseEnter: event => {}, // mouse enter row\n            // onMouseLeave: event => {}, // mouse leave row\n        };\n    };\n\n\n    const onResizeHandler = (index) => ({ key }, width) => {\n        // console.log('handleResize index ', index, width)\n        _setColumns((columns) => {\n            const nextColumns = [...columns];\n            nextColumns[index] = {\n                ...nextColumns[index],\n                width: width\n            };\n            return nextColumns;\n        });\n    };\n\n    /** Utile function\n     * Find row by key\n     * @param data - table rows\n     * @param key - key row for find\n     * @param callback - function for return result\n     */\n    const loop = (data, key, callback) => {\n        for (let i = 0; i < data.length; i++) {\n            if (data[i][rowKey] === key) {\n                // console.log(`Selected => index: [${i}], path: [${data[i].path}]`, data);\n                return callback(data[i], i, data);\n            } else {\n                // console.log(`Other => index: [${i}], path: [${data[i].path}]`);\n            }\n            if (data[i].children) {\n                loop(data[i].children, key, callback);\n            }\n        }\n    };\n\n    /** ROW CHANGE FUNCTIONS */\n    const _addRows = (rows) => {\n        let saveRows = [...rows];\n        if(!expandColumnKey)\n            saveRows = saveRows.map(row => { row.children = undefined; return row; });\n        if (customFields) {\n            // Фильтрация по пользовательским параметрам\n            saveRows = saveRows.filter((sRow) => {\n                let isValid = [];\n                customFields.forEach((field) => {\n                    // Валидация по пользовательской логике функции validate\n                    if (field.validate)\n                        isValid.push(field.validate(sRow, _rows));\n\n                    // Создание или переобразование по пользовательской логике функции value\n                    if (field.value)\n                        sRow[field.name] = field.value(sRow, _rows);\n                });\n                // console.log(\"_addRows isValid\", isValid);\n                if (!isValid.includes(false))\n                    return sRow;\n            });\n        }\n        const _localRows = [..._rows, ...saveRows];\n        _setRowsHandler(_localRows);\n        onTableEventsDispatch(\"onAddRows\", _localRows);\n    };\n\n    const _addRow = (row) => {\n        let _row = { ...row };\n        if(!expandColumnKey)\n            _row.children = undefined;\n        let isValid = true;\n        if (customFields) {\n            let validations = [];\n            customFields.forEach((field) => {\n                if (field.validate)\n                    validations.push(field.validate(_row, _rows));\n\n                if (field.value)\n                    _row[field.name] = field.value(_row, _rows);\n            });\n            isValid = !validations.includes(false);\n        }\n        if (isValid) {\n            const _localRows = [..._rows, _row];\n            _setRowsHandler(_localRows);\n            onTableEventsDispatch(\"onAddRow\", _localRows);\n        }\n    };\n\n    const _addRowAsCopy = () => {\n        // console.log(\"_onClickAddAsCopy\", selectedRow);\n        const _localRows = [..._rows, findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0])];\n        _setRowsHandler(_localRows);\n        onTableEventsDispatch(\"onAddRowAsCopy\", _localRows);\n\n    };\n\n    const _editRow = (row) => {\n        // console.log(\"_onClickEdit\", selectedRow);\n        const data = [..._rows];\n        const key = row[rowKey];\n        loop(data, key, (item, index, arr) => {\n            data[index] = row;\n            _setRowsHandler(data);\n            _setSelectedRowsHandler(_selectedRowKeys, undefined, data);\n            onTableEventsDispatch(\"onEditRow\", data);\n        });\n    };\n\n    const _removeRow = (event) => {\n        // console.log(\"_onClickDelete\", autoDeleteRows, selectedRowKeys);\n        const _localRows = _rows.filter(\n            (item) => !_selectedRowKeys.includes(item[rowKey]));\n        _setRowsHandler(_localRows);\n        _setSelectedRowsHandler();\n        onTableEventsDispatch(\"onRemoveRow\", _localRows);\n    };\n\n    const _moveUpSelectedRow = () => {\n        _moveUpRowByKey(_selectedRowKeys[0])\n    }\n\n    const _moveUpRowByKey = (rowKey) => {\n        const data = [..._rows];\n        loop(data, rowKey, (item, index, arr) => {\n            const newRowIndex = _getNewIndexRow(index, index - 1);\n            _changeIndexRow(index, newRowIndex, arr, data, \"onMoveUpRow\");\n        });\n    };\n\n    const _moveDownSelectedRow = () => {\n        _moveDownRowByKey(_selectedRowKeys[0])\n    }\n\n    const _moveDownRowByKey = (rowKey) => {\n        const data = [..._rows];\n        loop(data, rowKey, (item, index, arr) => {\n            const newRowIndex = _getNewIndexRow(index, index + 1);\n            _changeIndexRow(index, newRowIndex, arr, data, \"onMoveDownRow\");\n        });\n    };\n\n    const _getNewIndexRow = (oldIndex, newIndex) =>\n        newIndex >= 0 && newIndex < _rows.length ? newIndex : oldIndex;\n\n    const _changeIndexRow = (oldIndex, newIndex, arr, data, nameEvent) => {\n        if (newIndex >= 0 && newIndex < arr.length) {\n            // let arr = [..._rows]; // Копируем массив\n            const item = arr.splice(oldIndex, 1); // Удаляем элемент со старого места\n            // console.log('_changeIndexRow => ',item);\n            arr.splice(newIndex > 0 ? newIndex : 0, 0, item[0]); // Ставим элемент на новое место\n            // console.log(\"_changeIndexRow\", item[0]);\n            _setRowsHandler(data);\n            onTableEventsDispatch(nameEvent, data);\n        }\n    };\n\n    /** TREE FUNCTIONS */\n    const _onExpandedRowsChange = (expandedRowKeys) => {\n        setExpandedRowKeys(expandedRowKeys);\n        onExpandedRowsChange(expandedRowKeys);\n    };\n\n    /** SELECTABLE FUNCTIONS */\n    const onChangeSelectedHandler = (selectedRowKeys, selectedRows) => {\n        // console.log(\"onChangeSelectedHandler\");\n        _setSelectedRowsHandler(selectedRowKeys, selectedRows);\n    };\n\n    const onSelectAllHandler = (selected, selectedRows, changeRows) => {\n        // console.log(\"onSelectAllHandler\");\n        const selectedKeys = selected ? selectedRows.map(row => row[rowKey]) : [];\n        _setSelectedRowsHandler(selectedKeys, selectedRows);\n    };\n\n    /** VIEW FUNCTIONS */\n    const _rowClassName = (rowData, rowIndex) => {\n        // const {rowClassName} = props;\n        return [\n            // rowClassName,\n            _selectedRowKeys.includes(rowData[rowKey]) && \"ant-table-row-selected\", //\n            zebraStyle ? (rowIndex % 2 === 0 ? \"even\" : \"odd\") : \"\"\n            // rowBordered ? 'bordered' : ''\n        ].join(\" \");\n    };\n\n    const ExpandIcon = ({ Icon, ...restProps }) =>\n        <span {...restProps} className={`${rtPrefix}-table-expand-icon`}><Icon /></span>;\n\n    const expandIconRender = ({ expanded, onExpand, record }) =>\n        record.children && record.children.length === 0\n            ? <ExpandIcon Icon={CaretUpOutlined} style={{ visibility: \"hidden\" }} />\n            : expanded\n            ? <ExpandIcon Icon={CaretDownOutlined} onClick={e => onExpand(record, e)} />\n            : <ExpandIcon Icon={CaretRightOutlined} onClick={e => onExpand(record, e)} />;\n\n    const _footer = (currentPageData) => {\n        // console.log('_footer => ', currentPageData);\n        return (\n            _footerShow ? (\n                <div style={{display: 'flex', flex: 'auto', height: `${footerProps.height}px`}}>\n                    {/*className={'BaseTable__footer__counter'}>*/}\n                    <div key={\"footer-left-custom-side\"} className={`${rtPrefix}-footer-left-custom-side`}>\n                        {footerProps.leftCustomSideElement\n                            ? Array.isArray(footerProps.leftCustomSideElement)\n                                ? <FormItems items={footerProps.leftCustomSideElement} />\n                                : <footerProps.leftCustomSideElement />\n                            : null}\n                    </div>\n                    <div key={\"footer-center-custom-side\"} className={`${rtPrefix}-footer-center-custom-side`}>\n                        {footerProps.centerCustomSideElement\n                            ? Array.isArray(footerProps.centerCustomSideElement)\n                                ? <FormItems items={footerProps.centerCustomSideElement} />\n                                : <footerProps.centerCustomSideElement />\n                            : null}\n                    </div>\n                    <div key={\"footer-right-custom-side\"} className={`${rtPrefix}-footer-right-custom-side`}>\n                        {footerProps.rightCustomSideElement\n                            ? Array.isArray(footerProps.rightCustomSideElement)\n                                ? <FormItems items={footerProps.rightCustomSideElement} />\n                                : <footerProps.rightCustomSideElement />\n                            : null}\n                    </div>\n                    <div className={`${rtPrefix}-footer-right-system-side`}>\n                        <Space>\n                            {selectable ? (\n                                <React.Fragment>\n                                    {footerProps.showElements.includes(\"selected\")\n                                        ? <span>{footerProps.selectedTitle} {_selectedRowKeys.length}</span>\n                                        : null}\n                                    {footerProps.showElements.includes(\"loaded\")\n                                        ? <span>{footerProps.loadedTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n                                        : null}\n                                </React.Fragment>\n                            ) : null}\n\n                            {footerProps.showElements.includes(\"total\")\n                                ? requestLoadCount !== noop && !expandColumnKey\n                                    ? <span>{footerProps.totalTitle} {_totalCountRows}</span>\n                                    : <span>{footerProps.totalTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n                                : null}\n                        </Space>\n                    </div>\n                </div>\n            ) : undefined\n        );\n    };\n\n    const getColumns = () => {\n        return _columns.map((col, index) => ({\n            ...col,\n            onHeaderCell: (column) =>\n                ({\n                    column,\n                    // resizable: column.resizable,\n                    // width: column.width,\n                    onResize: onResizeHandler(index)\n                })\n        }));\n    };\n\n    const restProps = getObjectExcludedProps(props, excludeProps);\n    const expandableProps = expandColumnKey\n        ? {\n            defaultExpandAllRows: expandDefaultAll,\n            expandIcon: expandIconRender,\n            ...expandable,\n            expandedRowKeys: _expandedRowKeys,\n            onExpandedRowsChange: _onExpandedRowsChange\n        } : {};\n\n    const rowSelectionProps = selectable\n        ? {\n            type: \"checkbox\",\n            fixed: true,\n            checkStrictly: !nodeAssociated,\n            selectedRowKeys: _selectedRowKeys,\n            onChange: onChangeSelectedHandler,\n            onSelectAll: onSelectAllHandler,\n            ...rowSelection\n        } : undefined;\n\n    return (\n        <div className={`${rtPrefix}-table ${className}`} style={style}>\n            <div className={`${rtPrefix}-baseTable`}>\n                <AutoResizer\n                    // onResize={({ height, width }) => {setHeight(height); setWidth(width)} }\n                >\n                    {({ height, width }) => (\n                        <div style={{ width: width, height: height }}>\n                            <AntTable\n                                {...restProps}\n\n                                /** Required */\n                                columns={getColumns()}\n                                dataSource={_rows}\n                                // scroll={{ x: width, y: height - headerHeight }} // 16 (paddings) + 2 + 2 borders\n                                scroll={{ y: height - headerHeight - (_footerShow ? (footerProps.height + 20) : 0) }}\n                                pagination={{ position: [\"none\", \"none\"], ...restProps.pagination, pageSize: _rows.length }}\n\n                                /** Base Props */\n                                loading={loading}\n\n                                /** Tree Props */\n                                expandable={{ ...expandableProps }}\n                                /** Selection Props */\n                                rowSelection={rowSelectionProps}\n\n                                /** View Props */\n                                rowClassName={_rowClassName}\n                                footer={_footerShow ? _footer : undefined}\n                                components={{\n                                    header: {\n                                        row: HeaderRow,\n                                        cell: HeaderCell\n                                    },\n                                    body: {\n                                        cell: BodyCell,\n                                    }\n                                }}\n\n                                /** Events */\n                                onChange={onChangeTable}\n                                onHeaderRow={onHeaderRowProps}\n                                onRow={onRowEvents}\n                            />\n                        </div>\n                    )}\n                </AutoResizer>\n            </div>\n        </div>\n    );\n};\n\nTable.propTypes = {\n    /**\n     * REQUIRED\n     * */\n\n    /** Столбцы таблицы */\n    columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n    /** Режим загрузки данных по скроллу */\n    infinityMode: PropTypes.bool,\n\n    /**\n     * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n     * */\n\n    /** Строки по умолчанию */\n    defaultRows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ключи выделенных по умолчанию строк */\n    defaultSelectedRowKeys: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n\n    /** Значение строки поиска по умолчанию строк */\n    defaultSearchValue: PropTypes.string,\n\n    /** Объект фильтрации по умолчанию */\n    defaultFilter: PropTypes.object,\n\n    /** Сортировка по умолчанию */\n    defaultSortBy: PropTypes.shape({\n        /** Ключ поля для сортировки */\n        key: PropTypes.string,\n        /** Направление сортировки */\n        order: PropTypes.oneOf([\"asc\", \"desc\"])\n    }),\n\n    /**\n     * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n     * */\n\n    /** Строки таблицы. Используется для контроля таблицы из вне. */\n    rows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Функция задания строк таблицы. */\n    setRows: PropTypes.func,\n\n    /** Выделенные строки таблицы. */\n    selectedRowKeys: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n\n    /** Значение строки поиска */\n    searchValue: PropTypes.string,\n\n    /** Объект фильтрации */\n    filter: PropTypes.object,\n\n    /** Объект сортировки */\n    sortBy: PropTypes.shape({\n        /** Ключ поля для сортировки */\n        key: PropTypes.string,\n        /** Направление сортировки */\n        order: PropTypes.oneOf([\"asc\", \"desc\"])\n    }),\n\n    /**\n     * BASE PROPS\n     * */\n\n    /** Поле для уникальной идентификации строки */\n    rowKey: PropTypes.string,\n\n\n    /** Дополнительные поля и валидация в объекты таблицы\n     * Данный параметр (props) осуществляет дополнительную обработку объекта таблицы после закрытия модалки, но перед добавлением в таблицу.\n     * Можно как изменить существующие поля объекта, так и добавить новые поля объекта.\n     * `customFields` - массив объектов для дополнения или изменения полей объектов таблицы\n     * ```json\n     * [\n     *  {\n     * \t\tname: <String>,\n     * \t\tvalue: <func>,\n     * \t\tvalidate: <func>\n     * \t}\n     * ]\n     * ```\n     * `name` – Имя параметра в объекте\n     * `value` – Функция формирования значения - `(row, rows) => { return {} }`\n     * `validate` – Функция проверки значения - `(row, rows) => { return <Bool> }`\n     * Параметра **validate** работает **только** для модельного окна тип `select`.\n     * Validate можно наложить на любое кол-во полей объекта и если хотя бы один `validate` === `false`, то исключает строку из добавления.\n     */\n    customFields: PropTypes.arrayOf(PropTypes.object),\n\n    /**\n     * Данный параметр (props) позволяет добавить или переопределить пропсы для колонок, которые заданы конфигурацией на сервере\n     * `customColumnProps` - массив объектов `props` к `columns`. Один объект описывает доп. параметры для одной колонки\n     * ```json\n     * [\n     *  {\n     * \t\tname: <String>,\n     * \t\tcellRenderer: <func>,\n     * \t\t...advancedColProps\n     * \t}\n     * ]\n     * ```\n     * `name` – key колонки к которой надо применить дополнительные пропсы\n     * `cellRenderer` – `({ cellData, columns, column, columnIndex, rowData, rowIndex, container, isScrolling }) => return <ReactNode>`\n     * `advancedColProps` – подолнительные свойства колонок тут -> [Column](https://autodesk.github.io/react-base-table/api/column)\n     */\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\n\n    /**\n     * VIEW PROPS\n     * */\n\n    /** Вывод когда нет данных */\n    empty: PropTypes.element,\n\n    /** Отображение загрузки данных */\n    overlay: PropTypes.element,\n\n    /** Фиксированная ширина столбцов. Появится боковой скрол */\n    fixWidthColumn: PropTypes.bool,\n\n    footerProps: PropTypes.shape({\n\n        /** Высота подвала */\n        height: PropTypes.number,\n\n        /** Массив элементов футтера, которые надо отобразить\n         * ['selected', 'loaded', 'total'] */\n        showElements: PropTypes.arrayOf(PropTypes.string),\n\n        /** Заколовок для кол-ва выбранных объектов */\n        selectedTitle: PropTypes.string,\n\n        /** Заколовок для кол-ва загруженны объектов */\n        loadedTitle: PropTypes.string,\n\n        /** Заколовок для кол-ва всего объектов */\n        totalTitle: PropTypes.string,\n\n        /** Левый кастомный элемент командной панели */\n        leftCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\n        /** Центральный кастомный элемент командной панели */\n        centerCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\n        /** Правый кастомный элемент командной панели */\n        rightCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)])\n    }),\n\n    /** Высота заголовка таблицы */\n    headerHeight: PropTypes.number,\n\n    /** Высота строки таблицы */\n    rowHeight: PropTypes.number,\n\n    /** Custom row renderer\n     * Параметры - `({ isScrolling, cells, columns, rowData, rowIndex, depth })` */\n    rowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n    /** Строки будут в зебро-стиле */\n    zebraStyle: PropTypes.bool,\n\n    /** Высота расширения */\n    estimatedRowHeight: PropTypes.number,\n\n    /** Отображать ли разделители ячеек в строке */\n    cellBordered: PropTypes.bool,\n\n    /** Отобрадать ли разделители строк */\n    rowBordered: PropTypes.bool,\n\n    className: PropTypes.string,\n\n    style: PropTypes.object,\n\n    /**\n     * LOAD DATA PROPS\n     * */\n\n    /** Порог в пикселях для вызова _onLoad.\n     * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n    loadThreshold: PropTypes.number,\n\n    /** Размер страницы */\n    pageSize: PropTypes.number,\n\n    /** Функция запроса для конфигурации */\n    requestLoadConfig: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n    /** Имя параметра для поиска */\n    searchParamName: PropTypes.string,\n\n    /**\n     * SELECTABLE PROPS\n     * */\n\n    /** Таблица с возможностью выбора строки */\n    selectable: PropTypes.bool,\n\n    /**\n     * TREE PROPS\n     * */\n\n    /** Родительский узел и дочерние узлы связаны (Работает только при `selectable`) */\n    nodeAssociated: PropTypes.bool,\n\n    /** Ключ колонки по которой строить иерархию */\n    expandColumnKey: PropTypes.string,\n\n    /** Открыть по умолчанию вложенность до уровня N или 'All' */\n    expandDefaultAll: PropTypes.bool,\n\n    /** Загружать ноды иерархии по одной */\n    expandLazyLoad: PropTypes.bool,\n\n    /** Поле в котором хранится ссылка на родителя */\n    expandParentKey: PropTypes.string,\n\n    /**\n     * EVENTS\n     * */\n\n    /** Событие при клике на строку (только при `selectable` = `false`)\n     * `({selected, rowData, rowIndex}) => {}` */\n    onRowClick: PropTypes.func,\n\n    /** Событие при двойном клике на строку.\n     * `({rowData, rowIndex, rowKey}) => {}` */\n    onRowDoubleClick: PropTypes.func,\n\n    /** События при открытии / закрытии ноды\n     * `({ expanded, rowData, rowIndex, rowKey }) => {}` */\n    onRowExpand: PropTypes.func,\n\n    /** Событие при выборе строки.\n     * `([rowKeys], [rowDatas]) => {}` */\n    onSelectedRowsChange: PropTypes.func,\n\n    /** События при открытии / закрытии ноды\n     * `(expandedRowKeys) => {}` - массив ключей открытых нод */\n    onExpandedRowsChange: PropTypes.func,\n\n    /** SELECTED PANEL */\n\n    /** Отображать ли панель выбранных элементов */\n    showSelection: PropTypes.bool,\n\n    /** Строка или функция для отображения элементов списка выбранных\n     * Строка - имя поля\n     * Функция - рендер строк.\n     * `({ rowData, rowIndex }) => { return <Component> }` */\n    rowRenderShowSelection: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.string\n    ]),\n\n    /** Путь в сторе куда класть выбранную строку таблицы */\n    dispatchPath: PropTypes.string,\n\n    /** Объект для подписки на изменения в STORE */\n    subscribe: PropTypes.arrayOf(PropTypes.object)\n};\n\n\nTable.defaultProps = {\n    size: \"small\",\n    bordered: true,\n    infinityMode: false,\n    editMode: false,\n    defaultRows: [],\n    defaultSelectedRowKeys: [],\n    defaultSearchValue: \"\",\n    defaultFilter: {},\n    defaultSortBy: {},\n\n    rows: [],\n    setRows: noop,\n    selectedRowKeys: [],\n    searchValue: \"\",\n    filter: {},\n    sortBy: {},\n\n    rowKey: \"id\",\n\n    empty: empty,\n    overlay: overlay,\n    fixWidthColumn: false,\n    footerProps: {\n        height: 30,\n        showElements: [],\n        selectedTitle: \"Выделено:\",\n        loadedTitle: \"Загружено записей:\",\n        totalTitle: \"Всего записей:\",\n        leftCustomSideElement: null,\n        centerCustomSideElement: null,\n        rightCustomSideElement: null\n    },\n    headerHeight: 30,\n    rowHeight: 30,\n    zebraStyle: false,\n    estimatedRowHeight: undefined,\n    cellBordered: false,\n    rowBordered: true,\n    className: \"\",\n    style: {},\n\n    loadThreshold: 300,\n    pageSize: 50,\n    requestLoadRows: undefined,\n    requestLoadCount: noop,\n    searchParamName: \"searchLine\",\n\n    selectable: false,\n\n    nodeAssociated: true,\n    expandColumnKey: undefined,\n    expandDefaultAll: true,\n    expandLazyLoad: false,\n    expandParentKey: \"parentId\",\n\n    onRowClick: noop,\n    onRowDoubleClick: noop,\n    onRowExpand: noop,\n    onSelectedRowsChange: noop,\n    onExpandedRowsChange: noop,\n\n    showSelection: false,\n\n    dispatchPath: undefined,\n    subscribe: []\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\n\n","import React, { useEffect, useState } from \"react\";\nimport { getSortBy, noop, notificationError } from \"../../utils/baseUtils\";\nimport Table from \"./Table\";\n\nconst defaultProps = {\n    defaultFilter: {},\n    rowKey: \"id\",\n    pageSize: 50,\n    requestLoadConfig: noop,\n    expandColumnKey: undefined,\n    expandLazyLoad: false,\n    expandParentKey: \"parentId\",\n    customColumnProps: []\n};\n\nconst ConfigLoader = props => {\n\n    /** Конфигурация таблицы */\n    const [tableConfig, setTableConfig] = useState(undefined);\n\n    const {\n        defaultFilter,\n        defaultSortBy,\n        rowKey,\n        pageSize,\n        requestLoadConfig,\n        expandColumnKey,\n        // expandLazyLoad,\n        expandParentKey,\n        customColumnProps,\n        // cellBordered,\n        fixWidthColumn,\n        selectable\n    } = { ...defaultProps, ...props };\n\n    useEffect(() => {\n        let cleanupFunction = false;\n        const loadData = async () => {\n            if (requestLoadConfig) {\n                // console.log(\"requestLoadConfig => \", typeof requestLoadConfig);\n                // console.log(\"requestLoadRows => \", typeof props.requestLoadRows);\n                requestLoadConfig()\n                    .then((response) => {\n                        // let result = response.data;\n                        // console.log('requestLoadConfig -> ', response.data);\n                        if (!cleanupFunction) {\n                            // setTableConfig(response.data);\n                            configParser(response.data);\n                        }\n                    })\n                    .catch(error => notificationError(error, \"Ошибка получения конфигурации\"));\n            }\n        };\n        loadData().then(r => r);\n        return () => cleanupFunction = true;\n    }, []);\n\n    const configParser = (config) => {\n\n        // Массив колонок\n        let _columns = [];\n        // Сортировка по умолчанию\n        let _defaultSorter = [];\n        // Счетчик видимых полей\n        let visibleIndex = 0;\n        // Индекс колонки около которой ставить иконку дерева\n        let expandIconColumnIndex = -1;\n        // Ключ иерархии\n        let _expandColumnKey = config && config.hierarchical && config.hierarchyView\n            ? config.hierarchyView\n            : expandColumnKey;\n\n        config && config.fields && config.fields.forEach((item, index) => {\n            // console.log('configParser item => ', item);\n\n            // Дополнительные props колонок\n            const colProps = customColumnProps &&\n                customColumnProps.find((render) =>\n                    render.name === item.name || render.name === item.alias);\n\n            // Если поле не надо показывать, то след цикл\n            if (!item.visible || (colProps && colProps.hidden))\n                return;\n\n            // Индекс или имя поля в данных\n            const dataIndex = (item.alias ? item.alias : item.name);\n            // Сортировка по умолчанию\n            if (_defaultSorter.length === 0 || _defaultSorter[1] === undefined)\n                _defaultSorter = getSortBy(defaultSortBy, item.defaultSort, dataIndex);\n\n            // Ширина колонок\n            const widthCol = fixWidthColumn ? { width: item.width, maxWidth: 1000 } : {};\n            // Увеличить счетчик видимых полей\n            visibleIndex++;\n            // Проверка у этого ли поля ставить иконку дерева\n            if (_expandColumnKey === dataIndex)\n                expandIconColumnIndex = visibleIndex + (selectable ? 1 : -1);\n            // Формирование title колонки\n            let titleNode = colProps && colProps.headerRenderer\n                ? (typeof colProps.headerRenderer === \"function\" ? colProps.headerRenderer() : colProps.headerRenderer)\n                : (item.header ? item.header : item.name);\n\n            const column = {\n                key: dataIndex,\n                title: titleNode,\n                dataIndex: dataIndex,\n                align: item.align,\n                resizable: item.resizable,\n                sorter: item.sortable ? item.sortable : undefined,\n                ellipsis: true,\n                defaultSortOrder: _defaultSorter[1],\n                ...widthCol,\n                ...colProps\n            };\n            // Дополнительные props для компонента ячейки\n            column.onCell = (rowData, rowIndex) => ({ column, rowData, rowIndex });\n            // Рендер ячейки\n            column.render = (cellData, rowData, rowIndex) => {\n                if (colProps && colProps.cellRenderer)\n                    return <colProps.cellRenderer\n                        column={column}\n                        cellData={cellData}\n                        rowData={rowData}\n                        rowIndex={rowIndex} />;\n                else\n                    return item.typeData === \"json\" ? JSON.stringify(cellData) : cellData ? cellData : \"---\";\n            };\n            _columns.push(column);\n        });\n\n        let _defaultFilter;\n        if (config && config.hierarchical && config.hierarchyLazyLoad) {\n            const parentKey = config.hierarchyField\n                ? config.hierarchyField.split(\"/\")[1]\n                : expandParentKey;\n            _defaultFilter = { ...defaultFilter, [parentKey]: null };\n        } else _defaultFilter = defaultFilter;\n\n        // console.log('expandIconColumnIndex => ', _expandColumnKey, expandIconColumnIndex);\n        setTableConfig({\n            columns: _columns,\n            defaultSortBy: _defaultSorter[0],\n            defaultFilter: _defaultFilter,\n            rowKey:\n                config && config.hierarchical && config.hierarchyField\n                    ? config.hierarchyField.split(\"/\")[0]\n                    : rowKey,\n            // expandParentKey:\n            //     config && config.hierarchical && config.hierarchyField\n            //         ? config.hierarchyField.split('/')[1]\n            //         : expandParentKey,\n            expandColumnKey: _expandColumnKey,\n            expandable: { expandIconColumnIndex },\n            // expandLazyLoad:\n            //     config && config.hierarchical && config.hierarchyLazyLoad\n            //         ? config.hierarchyLazyLoad\n            //         : expandLazyLoad,\n            pageSize: config && config.hierarchical ? 1 : pageSize,\n        });\n    };\n\n    if (tableConfig)\n        return (<Table {...props} {...tableConfig} />);\n    else\n        return null;\n};\n\nexport default ConfigLoader;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { notification, Button, Tooltip, Modal as AntModal} from \"antd\";\nimport { notificationError, dispatchToStore, useMounted, getObjectExcludedProps } from \"../utils/baseUtils\";\nimport Form from \"../Form/Form\";\nimport { getExtraData, mapDispatchToProps, mapStateToProps } from \"../utils/storeUtils\";\n\nconst excludeProps = [\"buttonProps\", \"toolTipProps\", \"modalConfig\", \"modalData\", \"subscribe\", \"dispatch\"];\nconst modalTypes = ['save', 'select', 'view']\n\nconst defaultProps = {\n    subscribe: [],\n    dispatch: {},\n    methodSaveForm: 'POST'\n}\n\nconst getDefaultFooterProps = (modal) => {\n\n    let okText = '';\n    let cancelText = '';\n    let modalTitle = '';\n\n    switch (modal.type) {\n        case 'save':\n            okText = 'Сохранить';\n            cancelText = 'Отмена';\n            break;\n        case 'select':\n            okText = 'Добавить';\n            cancelText = 'Отмена';\n            break;\n        case 'view':\n            okText = 'Закрыть';\n            break;\n        default: break;\n    }\n\n    if(modal.okText)\n        okText = modal.okText;\n\n    if(modal.cancelText)\n        cancelText = modal.cancelText;\n\n    if(modal.title)\n        modalTitle = modal.title;\n\n    return {okText, cancelText, title: modalTitle, okType: 'primary'}\n};\n\n/**\n * Компонент модального окна\n */\nconst Modal = props => {\n\n    const {buttonProps, toolTipProps, modalConfig, modalData, subscribe, dispatch} = props;\n    const modalProps = { ...getDefaultFooterProps(modalConfig), ...getObjectExcludedProps(modalConfig, excludeProps) };\n\n    const [visible, setVisible] = useState(false);\n    const [_modalData, _setModalData] = useState({});\n    const [_buttonProps, setButtonProps] = useState({});\n\n    const isMounted = useMounted()\n\n    useEffect(() => {\n        _setModalData(modalData);\n    }, []);\n\n    /** Подписка на изменение props[subscribe.name] в сторе */\n    subscribe.map(item => {\n        return useEffect( () => {\n            // if(!isMounted && !item.name)\n            //     return;\n            if((item.withMount || isMounted) && item.name) {\n            // console.log(\"storeHOC => subscribe: \", props[subscribe.name]);\n                item.onChange && item.onChange({\n                    value: props[item.name],\n                    extraData: getExtraData(item, props), //extraData,\n                    setModalData,\n                    setButtonProps,\n                    openModal: _onOpenModal,\n                    closeModal: _onCloseModal\n                });\n            }\n            // console.log(\"Change Props[2]: \", props.subscribeЗф);\n        }, [props[item.name]]);\n    })\n\n    const setModalData = (value) => _setModalData && _setModalData(value);\n    const _onOpenModal = () => setVisible(true)\n    const _onCloseModal = () => setVisible(false)\n\n    const onFinishHandler = (values) => { //} {type, row, requestSaveRow}) => {\n        // console.log(\"Modal Events => before dispatchToStore: \", dispatch);\n        const saveObj = {..._modalData, ...values};\n\n        if (modalProps.requestSaveForm && modalProps.methodSaveForm) {\n            // console.log(\"Modal Events => type: \", type, method, row, _modalData);\n            modalProps.requestSaveForm({\n                method: modalProps.methodSaveForm,\n                data: saveObj,\n            })\n                .then(response => {\n                    notification.success({\n                        message: 'Сохранение прошло успешно'\n                    });\n                    modalProps.onOk && modalProps.onOk(saveObj, response.data);\n                    modalProps.onFinish && modalProps.onFinish(saveObj, response.data);\n                    dispatchToStore({dispatch, setDataStore: props.setDataStore, value: saveObj});\n                    _onCloseModal();\n                })\n                .catch(error => notificationError((modalProps.onFailed && modalProps.onFailed(error))||error, 'Ошибка при сохранении'));\n        } else {\n            modalProps.onOk && modalProps.onOk(saveObj);\n            modalProps.onFinish && modalProps.onFinish(saveObj);\n            dispatchToStore({dispatch, setDataStore: props.setDataStore, value: saveObj});\n            _onCloseModal();\n        }\n    };\n\n    const onFinishFailedHandler = (errorInfo) => {\n        // console.log('FormModal Failed:', errorInfo);\n        console.error(\"FormModal fields failed: \", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    const loadInitDataHandler = (callBack) =>\n        formConfig.loadInitData(callBack, _modalData)\n\n\n    const _onCancelHandler = (e) => {\n        // setVisibleModals({ ...visibleModals, [modal.type]: false });\n        // form.resetFields();\n        _onCloseModal()\n        if (modalProps.onCancel) modalProps.onCancel(e)\n    };\n\n    const defaultFooter = [\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.cancelText,\n                className: 'mr-8',\n                onClick: _onCancelHandler,\n                ...modalProps.cancelButtonProps\n            }\n        },\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.okText,\n                type: modalProps.okType,\n                htmlType: 'submit',\n                ...modalProps.okButtonProps\n            }\n        }\n    ];\n\n    const formConfig =  {\n        footer: defaultFooter,\n        loadInitData: (callBack, row) => callBack(row),\n        ...modalProps.form\n    };\n\n    return (\n        <React.Fragment>\n            <Tooltip {...toolTipProps}>\n                <Button\n                    type=\"primary\"\n                    {...buttonProps}\n                    {..._buttonProps}\n                    onClick={_onOpenModal}\n                >{buttonProps && buttonProps.label}</Button>\n            </Tooltip>\n            <AntModal\n                {...modalProps}\n                centered\n                destroyOnClose\n                visible={visible}\n                onCancel={_onCancelHandler}\n                bodyStyle={{padding: 0, ...modalProps.bodyStyle}}\n                footer={null}\n            >\n                <Form\n                    {...formConfig}\n                    onFinish={onFinishHandler}\n                    onFinishFailed={onFinishFailedHandler}\n                    loadInitData={loadInitDataHandler}\n                >{props.children}</Form>\n            </AntModal>\n        </React.Fragment>\n    )\n};\n\nModal.propTypes = {\n\n    /** Свойства [Button](https://ant.design/components/button/) из Ant Design\n     * Добавлено свойство `label` с типом `ReactNode` или `string` для формирования контента кнопки*/\n    buttonProps: PropTypes.object,\n\n    /** Объект модального окна. Стандартная конфигурация. */\n    modalConfig: PropTypes.shape({\n        /** Тип модального окна */\n        type: PropTypes.oneOf(modalTypes),\n\n        /** Запрос для автоматического сохранения формы */\n        requestSaveForm: PropTypes.func,\n\n        /** HTTP Метод, передаваемый в запрос сохранения */\n        methodSaveForm: PropTypes.string,\n\n        /** Пропсы формы.\n         * Если верстка через конфиги, то пропс body обязателен */\n        form: PropTypes.object\n    }),\n\n    /** Данные для модального окна */\n    modalData: PropTypes.object,\n\n    /** Путь в сторе куда класть данных окна после закрытия */\n    dispatch: PropTypes.object,\n\n    /** Объект для подписки на изменения в STORE.\n     * Параметры в `onChange`:\n     * * `value`: значение за которым ведется наблюдение,\n     * * `extraData`: дополнительные данные, передаваемые при срабатывании события\n     * * `setModalData`: функция задания объекта формы\n     * * `setButtonProps`: функция задания пропсов кнопке\n     * * `openModal`: функция открытия модального окна\n     * * `closeModal`: функция закрытия модального окна */\n    subscribe: PropTypes.arrayOf(PropTypes.object),\n};\n\nModal.defaultProps = defaultProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React, {useState} from 'react';\nimport {w3cwebsocket as W3CWebSocket} from 'websocket';\nimport { Button, Cascader, Checkbox, Input } from \"antd\";\nimport {\n\tCaretRightOutlined,\n\tStopOutlined,\n} from '@ant-design/icons';\nimport moment from 'moment';\n\nconst styles = {\n\trow: {\n\t\tdisplay: 'flex',\n\t\tborderBottom: '1px solid #d9d9d9',\n\t},\n\tinputUrl: {\n\t\tflexBasis: '200px',\n\t\tborderRight: '1px solid #d9d9d9',\n\t},\n\tinputQuery: {\n\t\tflex: '1',\n\t\tborderRight: '1px solid #d9d9d9',\n\t},\n\tautoScroll: {\n\t\tpadding: '0 8px',\n\t\tdisplay: 'flex',\n\t\tborderRight: '1px solid #d9d9d9',\n\t},\n\tbuttonStart: {color: 'green'},\n\tbuttonStop: {color: 'red'},\n\tpre: {\n\t\t// height: '100%',\n\t\toverflow: 'auto',\n\t\tmarginBottom: 0,\n\t},\n};\n\nconst scrollToBottom = (block) => {\n\tconst scrollHeight = block.scrollHeight;\n\tconst height = block.clientHeight;\n\tconst maxScrollTop = scrollHeight - height;\n\tblock.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n};\n\nconst Logs = (props) => {\n\tconst [ws, setWs] = useState(null);\n\tconst [Logs, setLogs] = useState([]);\n\tconst [logsRef, setLogsRef] = useState(null);\n\tconst [wsParams, setWsParams] = useState({url: props.loki.url, query: props.loki.query});\n\tconst [autoScroll, setAutoScroll] = useState(true);\n\n\tconst onOpen = () => {\n\t\t// setWs(new W3CWebSocket(\"ws://10.5.121.117:3100/loki/api/v1/tail?query={dynamicdq=\\\"oauth.dias-dev.ru\\\"}\", 'echo-protocol'));\n\t\tsetWs(\n\t\t\tnew W3CWebSocket(\n\t\t\t\t`ws://${wsParams.url}/loki/api/v1/tail?query=${wsParams.query}`,\n\t\t\t\t'echo-protocol'\n\t\t\t)\n\t\t);\n\t\tsetLogs([]);\n\t\tconsole.log('onCreate ws => ', ws);\n\t};\n\tconst onClose = () => {\n\t\tconsole.log('onClose ws => ', ws);\n\t\tws && ws.close();\n\t\tsetWs(undefined);\n\t};\n\n\tif (ws != null) {\n\t\tws.onmessage = (msg) => {\n\t\t\tconst streams = JSON.parse(msg.data).streams;\n\t\t\tconst data = streams.map((streamItem) => {\n\t\t\t\treturn streamItem.values.map((valueItem) => {\n\t\t\t\t\t// console.log('valueItem[0].substr(0, 13) => ', moment(valueItem[0].substr(0, 13),\"x\").format(\"YYYY-MM-DD hh:mm:ss\") ); //\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={valueItem[0]}>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{moment(valueItem[0].substr(0, 13), 'x').format(\n\t\t\t\t\t\t\t\t\t'YYYY-MM-DD hh:mm:ss'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span>{valueItem[1]}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\t\t\tsetLogs((state) => [...state, data]);\n\t\t\tif (logsRef && autoScroll) scrollToBottom(logsRef);\n\t\t\t// console.log('Logs => ', streams)\n\t\t};\n\t}\n\n\tconst onChangeApp = (value) => {\n\t\t// console.log(value);\n\t\tonClose();\n\t\tsetWsParams({...wsParams, query: `{server=\"${value[0]}\", app=\"${value[1]}\"}`})\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div style={styles.row}>\n\t\t\t\t{/*<div style={styles.inputUrl}>*/}\n\t\t\t\t{/*\t<Input value={wsParams.url} bordered={false} />*/}\n\t\t\t\t{/*</div>*/}\n\t\t\t\t<div style={styles.inputUrl}>\n\t\t\t\t\t<Cascader options={props.servers} onChange={onChangeApp} placeholder=\"Выберите приложение\"  bordered={false} />\n\t\t\t\t</div>\n\t\t\t\t<div style={styles.inputQuery}>\n\t\t\t\t\t<Input value={wsParams.query} bordered={false} disabled={true} />\n\t\t\t\t</div>\n\t\t\t\t<div style={styles.autoScroll}>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tstyle={{margin: 'auto'}}\n\t\t\t\t\t\tchecked={autoScroll}\n\t\t\t\t\t\tonChange={(e) => setAutoScroll(e.target.checked)}\n\t\t\t\t\t>\n\t\t\t\t\t\tAuto scroll\n\t\t\t\t\t</Checkbox>\n\t\t\t\t</div>\n\t\t\t\t{ws != null ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={onClose}\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\ticon={<StopOutlined />}\n\t\t\t\t\t\t\tstyle={styles.buttonStop}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={onOpen}\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\ticon={<CaretRightOutlined />}\n\t\t\t\t\t\t\tstyle={styles.buttonStart}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{/*<div><Button type=\"text\" icon={<StopOutlined />} style={styles.buttonStop}/></div>*/}\n\t\t\t\t{/*<Col span={3}><Button>Close connect</Button></Col>*/}\n\t\t\t</div>\n\t\t\t<pre style={styles.pre} ref={(ref) => setLogsRef(ref)}>\n\t\t\t\t{Logs}\n\t\t\t</pre>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Logs;\n","import React, {useEffect, useState} from 'react';\nimport {\n\tLineChart as LC,\n\tLine,\n\tXAxis,\n\tYAxis,\n\tCartesianGrid,\n\tTooltip,\n\tLegend,\n} from 'recharts';\nimport { notificationError } from \"../../utils/baseUtils\";\n\n// interface LineChartProps {\n//     size: {width: number; height: number}\n//     configName?: string;\n//     grid?: CartesianGridProps | undefined;\n//     tooltip?: object;\n//     legend?: LegendProps;\n//     xAxis?: XAxisProps;\n//     yAxes?: YAxisProps[];\n//     lines?: LineProps[];\n// }\n\nconst LineChart = (props) => {\n\tconst {size, configName, requestLoadRows, grid, tooltip, legend, xAxis, yAxes, lines} =\n\t\tprops;\n\tconst [data, setData] = useState([]);\n\n\tuseEffect(() => {\n\t\trequestLoadRows(configName)({\n\t\t\tdata: {\n\t\t\t\tfrom: '2021-09-29T16:00:00.000Z',\n\t\t\t\tto: '2021-09-30T20:00:00.000Z',\n\t\t\t},\n\t\t\tparams: {},\n\t\t})\n\t\t\t.then((res) => setData(res.data))\n\t\t\t.catch((error) =>\n\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t);\n\t}, []);\n\n\tif (data.length > 0) {\n\t\t// console.log(\"data.length / 105 => \", Math.floor(data.length / 105))\n\t\treturn (\n\t\t\t<LC width={size.width} height={size.height - 32} data={data}>\n\t\t\t\t{grid ? <CartesianGrid {...grid} /> : null}\n\t\t\t\t{tooltip ? <Tooltip {...tooltip} /> : null}\n\t\t\t\t{legend ? <Legend {...legend} /> : null}\n\t\t\t\t{xAxis ? (\n\t\t\t\t\t<XAxis\n\t\t\t\t\t\t{...xAxis}\n\t\t\t\t\t\tinterval={Math.floor(data.length / xAxis.interval)}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t{yAxes &&\n\t\t\t\t\tArray.isArray(yAxes) &&\n\t\t\t\t\tyAxes.map((yAxis) => <YAxis {...yAxis} />)}\n\t\t\t\t{lines &&\n\t\t\t\t\tArray.isArray(lines) &&\n\t\t\t\t\tlines.map((line) => <Line {...line} />)}\n\t\t\t</LC>\n\t\t);\n\t} else return null;\n};\n\nexport default LineChart;\n","import React, {useEffect, useState} from 'react';\nimport RGL, {WidthProvider} from 'react-grid-layout';\nimport sizeMe from 'react-sizeme';\nimport Logs from './Panels/Logs';\nimport LineChart from './Panels/LineChart';\nimport { notificationError } from \"../utils/baseUtils\";\n\nconst ReactGridLayout = WidthProvider(RGL);\nconst startGridWidth = 1200;\n\nconst contents = {\n\tlogs: Logs,\n\tlineChart: LineChart,\n};\n\nconst DashboardPanel = sizeMe.withSize({monitorHeight: true})(\n\t({size, title, type, params}) => {\n\t\t// console.log('DashboardPanel', size)\n\t\tconst Content = contents[type];\n\t\treturn (\n\t\t\t<div className={'dashboard-panel'}>\n\t\t\t\t<div className={'dashboard-panel-header'}>{title}</div>\n\t\t\t\t<div className={'dashboard-panel-content'}>\n\t\t\t\t\t<Content size={size} {...params} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n);\n\nconst DashboardGrid = sizeMe.withSize()(({size, panels}) => {\n\tconst width = size.width > 0 ? size.width : startGridWidth;\n\t// console.log('Grid dashboard', size)\n\tconst renderPanels =\n\t\tpanels &&\n\t\tpanels.map(({gridPos, ...panel}, index) => (\n\t\t\t<div key={index} data-grid={gridPos}>\n\t\t\t\t<DashboardPanel {...panel} />\n\t\t\t</div>\n\t\t));\n\treturn (\n\t\t<ReactGridLayout\n\t\t\tclassName='layout'\n\t\t\trowHeight={30}\n\t\t\tcols={12}\n\t\t\twidth={width}\n\t\t\tdraggableHandle={'.dashboard-panel-header'}\n\t\t>\n\t\t\t{renderPanels}\n\t\t</ReactGridLayout>\n\t);\n});\n\nconst Dashboard = (props) => {\n\tconst {id, requestLoadConfig} = props\n\tconst [dashboard, setDashboard] = useState(props.dashboard);\n\n\tuseEffect(() => {\n\t\trequestLoadConfig && requestLoadConfig({\n\t\t\tdata: {id: id},\n\t\t\tparams: {},\n\t\t})\n\t\t\t.then(res => res.data && res.data.dashboard && setDashboard(JSON.parse(res.data.dashboard)))\n\t\t\t.catch(err => notificationError(\"Ошибка загрузки dashboard\", err));\n\t}, [id]);\n\n\tconsole.log('dashboard => ', dashboard);\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: '#f0f2f5',\n\t\t\t\twidth: '100%',\n\t\t\t\theight: '100%',\n\t\t\t\toverflow: 'auto',\n\t\t\t}}\n\t\t>\n\t\t\t<DashboardGrid panels={dashboard.panels} />\n\t\t</div>\n\t);\n};\n\nexport default Dashboard;\n","import objectPath from 'object-path';\nimport {actionTypes} from './rtd.action.types';\n\nconst rtdReducer = (state = {}, action) => {\n    switch (action.type) {\n        case actionTypes.INIT_STORE: {\n            const {path} = action.payload;\n            // console.log(\"INIT_TABLE_STORE: \", path);\n            let newState = {...state};\n            objectPath.set(newState, path, {});\n            return newState;\n        }\n        case actionTypes.SET_DATA_STORE: {\n            const {path, row} = action.payload;\n\n            let newState = {...state};\n            if(row === undefined)\n                objectPath.del(newState, path); // newState[path] is now undefined\n            else\n                objectPath.set(newState, path, row); // newState[path] is now row\n\n            console.debug(\"Store change: \", path, row);\n            // console.group(\"Store\");\n            // console.log(\"Store: \", newState);\n            // console.log(\"New Data: \", path, row);\n            // console.groupEnd();\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\nexport default rtdReducer;\n","import { notification } from \"antd\";\nimport { notificationError } from \"./baseUtils\";\n\nexport const executeRequest = (request) => (options) => request(options)\n    .then(response => {\n        notification.success({\n            message: \"Сохранение прошло успешно\"\n        });\n    })\n    .catch(error => notificationError(error, 'Ошибка при сохранении') );"],"names":["types","INIT_STORE","SET_DATA_STORE","setDataStore","path","row","type","actionTypes","payload","noop","flatten","arrayOfArrays","reduce","flattened","item","concat","Array","isArray","getTableRowObjects","data","rowKeys","map","children","length","getTableRowKeys","rowKey","findNodeByRowKey","rowValue","node","i","_findNodeByRowKey","currentNode","value","currentChild","result","generateUUID","replace","c","crypto","getRandomValues","Uint8Array","toString","getValueFromSingleSelect","name","keys","getValueFromMultiSelect","getObjectExcludedProps","object","exclude","returnObject","Object","forEach","key","includes","undefined","notificationError","error","message","response","console","status","errorDescription","description","dispatchToStore","dispatch","extraData","timestamp","moment","useMounted","React","useState","babelHelpers.slicedToArray","isMounted","setIsMounted","useEffect","getSortBy","clientSortBy","serverSortBy","dataIndex","order","rtPrefix","empty","overlay","fontSize","SelectionHead","props","column","container","onSelectAll","selectedRowKeys","selectAll","_handleChange","e","rowObjects","filter","totalLength","selectLength","checked","selected","getRowChildren","findBrothers","selfItem","parentKey","arr","push","parentAnalysis","rowData","nodeAssociated","treeData","indeterminateRowKeys","_selectedRowKeys","_indeterminateRowKeys","currentRowData","parentExist","lastTypeSelect","typeSelect","nextSquare","indeterminateBrothers","selectedBrothers","allBrothers","index","indexOf","splice","indexS","indexI","SelectionCell","rowIndex","onChange","rowChildren","element","Set","_selectedRowObjects","_selectedRow","_selectAll","det","target","APP_TIME_OFFSET","getMomentFromStringByFormat","date","format","utcOffset","getMomentWithOffset","getMomentWithOffsetTruncateDay","startOf","toFormat","dateString","mom","isValid","toDDMMYYYYHHMMSS","getISO","toISOString","DateRange","mounted","setMounted","startValue","setStartValue","endValue","setEndValue","className","nameStart","nameEnd","dateFormat","size","title","valueStart","valueEnd","showTime","defaultValueStart","_onChange","defaultValueEnd","disabledStartDate","valueOf","disabledEndDate","onStartChange","onEndChange","locale","width","propTypes","PropTypes","string","func","oneOf","defaultProps","SingleDate","_value","setValue","defaultValue","_onChangePicker","FilterPanel","defaultFilter","setFilter","applyFilterTooltip","applyFilterSize","applyFilterRender","borderStyle","onChangeFilter","onApplyFilter","configFilter","resetFilterRender","resetFilterTooltip","resetFilterSize","_onChangeData","_filter","babelHelpers.defineProperty","_applyFilter","_resetFilter","getPanelCls","cls","findIndex","join","componentType","babelHelpers.extends","Select","render","marginLeft","oneOfType","arrayOf","SelectionList","selectedRowObjects","rowRender","onClickDropSelect","isRequired","Table","forwardRef","ref","hasMore","setHasMore","loading","setLoading","_rows","_setRows","setSelectedRowKeys","_searchValue","setSearchValue","_sortBy","setSortBy","setSelectAll","setIndeterminateRowKeys","_expandedRowKeys","setExpandedRowKeys","_totalCountRows","setTotalCountRows","_footerShow","_setFooterShow","tableRef","useRef","defaultRows","defaultSelectedRowKeys","defaultSearchValue","defaultSortBy","rows","setRows","searchValue","sortBy","columns","autoDeleteRows","fixWidthColumn","footerHeight","footerShow","footerTitles","headerHeight","rowHeight","zebraStyle","rowRenderer","estimatedRowHeight","loadThreshold","pageSize","requestLoadRows","requestLoadCount","searchParamName","selectable","expandColumnKey","expandParentKey","expandLazyLoad","expandDefaultAll","onRowClick","onRowDoubleClick","onRowExpand","onSelectedRowsChange","onExpandedRowsChange","showSelection","rowRenderShowSelection","dispatchPath","subscribe","commandPanelProps","CommandPanel","filterPanelProps","footerProps","selectedDispatchPath","rowsDispatchPath","_setRowsHandler","showElements","leftCustomSideElement","centerCustomSideElement","rightCustomSideElement","flatRows","selectedRow","ii","_dataProcessing","searchLine","reload","reloadData","current","setReloadTable","rowsDispatch","setRowsHandler","params","expandRow","pageNum","Math","floor","page","sort","dataQuery","then","catch","child","newRows","_rowEventHandlers","onClick","event","newRowObject","onDoubleClick","_onColumnSort","scrollToRow","loadParams","_getColumns","_columns","selectColumn","headerRenderer","cellRenderer","flexShrink","resizable","frozen","_onChangeSelectHandler","_onSelectAllHandler","unshift","_footer","FormItems","selectedTitle","loadedTitle","totalTitle","_rowClassName","rowClassName","onEndReached","selectedKeys","_onExpandedRowsChange","expandedRowKeys","_onRowExpand","expanded","allChildKeys","_getDisabledElementsOfCommandPanel","_disabledElements","disabledElements","babelHelpers.toConsumableArray","_onClickAddAsCopy","onClickAddAsCopy","_onClickEdit","onClickEdit","_onClickDelete","onClickDelete","loop","callback","_onClickUp","newRowIndex","_getNewIndexRow","_changeIndexRow","onClickUp","_onClickDown","onClickDown","oldIndex","newIndex","_onSearch","preventDefault","onSearch","_onChangeFilter","_onApplyFilter","_onClickDropSelectHandler","dropObject","newSelectedKeys","height","number","shape","bool","selectedRows","loadedRows","totalRows","mapStateToProps","store","ownProps","objectPath","get","mapDispatchToProps","bindActionCreators","connect","Paragraph","_selectedRowData","_setSelectedRowData","isSelectOpened","setIsSelectOpened","isClickInSelect","setIsClickInSelect","placeholder","widthControl","widthPopup","heightPopup","onChangeKeys","requestLoadDefault","searchable","setSelectedRowData","loadSelectedObject","request","srk","findRow","find","window","addEventListener","handleMouseClick","removeEventListener","onClosePopup","dataKey","_getHeadCls","_getHeadText","_getPopupCls","_getPopupStyle","defRowsLen","getEvents","systemBtnProps","_SingleSelectRow","contains","onOpenPopup","onClickClear","AdvancedTable","config","setConfig","configData","customColumnProps","requestLoadConfig","cleanupFunction","loadData","babelHelpers.asyncToGenerator","_this","columnsByConfig","fields","colProps","alias","header","align","sortable","hidden","visible","cellData","getDefaultFilter","hierarchical","hierarchyLazyLoad","hierarchyField","split","hierarchyView","excludeProps","Form","loadInitData","body","footer","autoSaveForm","requestSaveForm","methodSaveForm","processBeforeSaveForm","loaded","setLoaded","antFormProps","setAntFormProps","initFormData","setInitFormData","_setInitFormData","antForm","form","useForm","getBodyCls","noPadding","scrollable","onFinish","rawValues","values","log","saveObject","method","success","onFinishFailed","errorInfo","style","initialValues","FormModal","modal","setVisible","saveRow","getDefaultFooterProps","okText","cancelText","modalTitle","okType","modalProps","saveObj","startsWith","requestSaveRow","onOk","_onCancelHandler","onCancel","_onLoadInitData","callBack","formConfig","defaultFooter","label","cancelButtonProps","htmlType","okButtonProps","padding","bodyStyle","FormTable","addOnServer","editOnServer","addOnLocal","editOnLocal","addGroupOnServer","editGroupOnServer","addGroupOnLocal","editGroupOnLocal","select","viewGroup","viewObject","visibleModals","setVisibleModals","tableRows","setTableRows","tableSelectedRowKeys","setTableSelectedRowKeys","tableSelectedRow","setTableSelectedRow","setTableRef","_setTableRef","_ref","rowKeyType","customFields","modals","isGroupKey","history","requestDeleteRow","dataDeleteRow","cmdProps","_addRowsToLocalTable","getModals","_onSaveRow","isExistCmdBtn","btnType","equalsActionTypeCmdBtn","actionType","aTypes","_onClickAddHandler","location","pathname","_onClickAddAsCopyHandler","_addRowToLocalTable","_onClickAddGroupHandler","_onClickEditHandler","deleteData","_onClickUpHandler","_onClickDownHandler","selectRows","saveRows","sRow","tRow","field","validate","_addRowToServerTable","_editRowToLocalTable","_onRowClick","_onRowDoubleClick","_onSelectedRowsChange","getTableCls","onClickAdd","onClickAddGroup","SortOrder","ASC","DESC","withStore","Component","antFormItemProps","trigger","valuePropName","withStoreProps","subscribeProps","setSubscribeProps","getValueFromEvent","newValue","childProps","DatePickerHOC","TypographyTitle","TypographyText","TypographyDate","getTitle","Modal","parentLoadHandler","labelCol","span","wrapperCol","rules","required","info","AddFolderModal","args","EditFolderModal","EditFileModal","copyTextToClipboard","navigator","clipboard","fallbackCopyTextToClipboard","text","writeText","openNotificationWithIcon","err","textArea","document","createElement","top","left","position","appendChild","focus","successful","execCommand","removeChild","msg","FileManager","breadcrumb","setBreadcrumb","deleted","tableFilter","setTableFilter","isGroup","loadTable","requestDownloadFile","_onClickBreadcrumb","parentId","slice","_onClickBack","newBreadcrumb","newFilter","processBeforeSaveModal","extension","newData","owner","requestLoadParent","_uploadFile","file","notification","requestUploadFile","notifProps","uid","duration","icon","close","pathDownloadFile","styleDiv","display","alignItems","Icon","styleIcon","marginRight","FolderFilled","color","FileWordOutlined","FileExcelOutlined","FileImageOutlined","FileMarkdownOutlined","FilePdfOutlined","FilePptOutlined","FileTextOutlined","FileZipOutlined","FileOutlined","uploadProps","multiple","showUploadList","beforeUpload","uploadRender","breadcrumbRender","add","tooltip","addGroup","edit","delete","disabled","buttonProps","modalConfig","modalData","_modalData","_setModalData","_buttonProps","setButtonProps","setModalData","_onOpenModal","_onCloseModal","FormItem","getItem","TextArea","Password","Button","Group","Layout","itemProps","getCls","items","getItems","antFormListParams","_item","_key","fieldKey","operation","param","fIndex","confirm","defaultValueSearch","deleteConfirm","deleteConfirmType","deleteConfirmTitle","deleteConfirmDescription","defaultSystemBtnProps","addAsCopy","up","down","search","settings","tooltipPlacement","deleteButtonModalConfirm","deleteButtonPopupConfirm","renderDeleteBtn","content","centered","withOnClick","genProps","btnProps","renderBtn","List","deprecated","dispatchExtraData","withMount","getExtraData","setSubscribePropsHandler","_subscribeProps","prevState","has","_searchDispatchToStore","del","onSearchProps","renderClassicByName","formListProps","renderDeclarativeByName","FormHeader","FormBody","rest","FormFooter","Header","Footer","changedFields","allFields","getFieldsValue","lostParamName","infinityMode","optionConverter","options","mode","dropdownRender","_hasMore","_setHasMore","_loading","_setLoading","_options","_setOptions","tmpOption","setTmpOption","isEndReached","setIsEndReached","_setSortBy","_setFilter","_setSearchValue","_isSelectAll","_setIsSelectAll","_loadOptions","__sortBy","__filter","__searchValue","preValue","option","_loadTmpOption","getPageNum","getSort","getSearchValue","requestOptions","onScroll","scrollTopMax","nativeEvent","scrollHeight","scrollTop","_onChangeSelectAll","optionsValues","getSelectAllCls","omittedValues","menu","id","TreeSelect","_treeData","_setTreeData","_optionConverter","dataObject","onCompletedUpload","onFailedUpload","toolTipProps","UploadFile","_dataObject","defaultUploadProps","onChangeSelectionCell","editMode","rowBordered","_setSelectedRowsHandler","setFilterHandler","onChangeObject","reloadTable","addRows","_addRows","addRow","_addRow","addRowAsCopy","_addRowAsCopy","editRow","_editRow","removeRow","_removeRow","moveUpRow","_moveUpRow","moveDownRow","_moveDownRow","_setSubscribeProps","_setLoadedRowsHandler","selectedObjects","selectedDispatch","onTableEventsDispatch","nameEvent","dp","appendParams","_rowSelectAfterClick","_getSelectionColumnProps","localSortBy","_localRows","_row","validations","cellBordered","ConfigLoader","tableConfig","setTableConfig","configParser","r","_defaultSorter","defaultSort","headerClassName","_defaultFilter","HeaderCell","onResize","restProps","maxWidth","HeaderRow","headerRowRef","setHeaderHeight","newHeight","clientHeight","BodyCell","cellComponent","_setColumns","rowSelection","expandable","_loadRows","_moveUpSelectedRow","moveUpRowByKey","_moveUpRowByKey","_moveDownSelectedRow","moveDownRowByKey","_moveDownRowByKey","onChangeTable","pagination","filters","sorter","extra","action","onSort","onHeaderRowProps","onRowEvents","onResizeHandler","nextColumns","onChangeSelectedHandler","onSelectAllHandler","changeRows","ExpandIcon","babelHelpers.objectWithoutProperties","expandIconRender","onExpand","record","CaretUpOutlined","visibility","CaretDownOutlined","CaretRightOutlined","currentPageData","flex","getColumns","col","onHeaderCell","expandableProps","defaultExpandAllRows","expandIcon","rowSelectionProps","fixed","checkStrictly","y","cell","bordered","visibleIndex","expandIconColumnIndex","_expandColumnKey","widthCol","titleNode","ellipsis","defaultSortOrder","onCell","typeData","JSON","stringify","modalTypes","openModal","closeModal","onFinishHandler","onFailed","onFinishFailedHandler","loadInitDataHandler","styles","borderBottom","inputUrl","flexBasis","borderRight","inputQuery","autoScroll","buttonStart","buttonStop","pre","overflow","marginBottom","scrollToBottom","block","maxScrollTop","Logs","ws","setWs","setLogs","logsRef","setLogsRef","url","loki","query","wsParams","setWsParams","setAutoScroll","onOpen","W3CWebSocket","onClose","onmessage","streams","parse","streamItem","valueItem","substr","state","onChangeApp","servers","margin","LineChart","configName","grid","legend","xAxis","yAxes","lines","setData","from","to","res","LC","Tooltip","interval","yAxis","line","ReactGridLayout","WidthProvider","RGL","startGridWidth","contents","logs","lineChart","DashboardPanel","sizeMe","withSize","monitorHeight","Content","DashboardGrid","panels","renderPanels","gridPos","panel","Dashboard","dashboard","setDashboard","backgroundColor","rtdReducer","newState","set","debug","executeRequest"],"mappings":"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"}