{"version":3,"file":"index.es.js","sources":["../src/redux/rtd.action.types.js","../src/redux/rtd.actions.js","../src/components/utils/baseUtils.js","../src/components/utils/variables.js","../src/components/deprecated/Table/defaultSettings.js","../src/components/deprecated/Table/Selectable/SelectionHead.js","../src/components/deprecated/Table/Selectable/SelectionCell.js","../src/components/utils/datesUtils.js","../src/components/deprecated/DateRange/DateRange.js","../src/components/deprecated/SingleDate/SingleDate.js","../src/components/deprecated/FilterPanel/FilterPanel.js","../src/components/deprecated/Table/SelectionList/SelectionList.js","../src/components/deprecated/Table/Table.js","../src/components/deprecated/Select/Select.js","../src/components/deprecated/AdvancedTable/AdvancedTable.js","../src/components/deprecated/Form/Form.js","../src/components/deprecated/Form/FormModal.js","../src/components/deprecated/Form/FormTable.js","../src/components/deprecated/Form/HOCs.js","../src/components/deprecated/FileManager/AddFolderModal.js","../src/components/utils/clipboardUtils.js","../src/components/deprecated/FileManager/FileManager.js","../src/components/deprecated/Modal/Modal.js","../src/components/deprecated/Form/FormItem.js","../src/components/deprecated/Layout/Layout.js","../src/components/deprecated/Form/FormItems.js","../src/components/deprecated/CommandPanel/CommandPanel.js","../src/components/deprecated/List/List.js","../src/components/deprecated/index.js","../src/components/core/withStore.js","../src/components/Form/FormItem.js","../src/components/Form/FormItems.js","../src/components/Form/Form.js","../src/components/Select/Select.js","../src/components/TreeSelect/TreeSelect.js","../src/components/UploadFile/UploadFile.js","../src/components/Table/ReactBaseTable/defaultSettings.js","../src/components/Table/ReactBaseTable/Selectable/SelectionHead.js","../src/components/Table/ReactBaseTable/Selectable/SelectionCell.js","../src/components/Table/ReactBaseTable/SelectionList/SelectionList.js","../src/components/Table/ReactBaseTable/Table.js","../src/components/Table/ReactBaseTable/ConfigLoader.js","../src/components/Table/AntTable/HeaderCell.js","../src/components/Table/AntTable/HeaderRow.js","../src/components/Table/AntTable/BodyCell.js","../src/components/Table/AntTable/Table.js","../src/components/Table/AntTable/ConfigLoader.js","../src/components/Modal/Modal.js","../src/components/Dashboard/Panels/Logs.js","../src/components/Dashboard/Panels/LineChart.js","../src/components/Dashboard/Dashboard.js","../src/redux/rtd.reducer.js","../src/components/utils/api.js"],"sourcesContent":["const types =\n{\n    INIT_STORE: 'INIT_STORE',\n    SET_DATA_STORE: 'SET_DATA_STORE',\n};\n\nexport {types as actionTypes};\n","import {actionTypes} from './rtd.action.types';\n\nexport const setDataStore = (path, row) => ({\n    type: actionTypes.SET_DATA_STORE,\n    payload: {path, row}\n});\n","import React from 'react';\nimport {notification} from 'antd';\nimport moment from \"moment\";\nimport {setDataStore} from '../../redux/rtd.actions';\n\nexport const noop = () => {};\n\nexport const flatten = (arrayOfArrays) =>\n\tarrayOfArrays.reduce(\n\t\t(flattened, item) =>\n\t\t\tflattened.concat(Array.isArray(item) ? flatten(item) : [item]),\n\t\t[]\n\t);\n\nexport const getTableRowObjects = (data) => {\n\tconst rowKeys = data.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item, getTableRowObjects(item.children)];\n\t\t}\n\t\treturn item;\n\t});\n\treturn rowKeys;\n};\n\nexport const getTableRowKeys = (data, rowKey) => {\n\tconst rowKeys = data.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item[rowKey], getTableRowKeys(item.children, rowKey)];\n\t\t}\n\t\treturn item[rowKey];\n\t});\n\treturn rowKeys;\n};\n\nexport const findNodeByRowKey = (data, rowKey, rowValue) => {\n\tlet node = {};\n\tlet item = {};\n\tfor (let i = 0; i < data.length; i++) {\n\t\titem = _findNodeByRowKey(data[i], rowKey, rowValue);\n\t\tif (item !== false) return item;\n\t}\n\treturn node;\n};\n\nconst _findNodeByRowKey = (currentNode, rowKey, value) => {\n\tlet i, currentChild, result;\n\n\tif (value === currentNode[rowKey]) {\n\t\treturn currentNode;\n\t} else {\n\t\tif (currentNode.children) {\n\t\t\tfor (i = 0; i < currentNode.children.length; i += 1) {\n\t\t\t\tcurrentChild = currentNode.children[i];\n\t\t\t\tresult = _findNodeByRowKey(currentChild, rowKey, value);\n\t\t\t\tif (result !== false) return result;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n};\n\nexport const generateUUID = () => {\n\treturn ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n\t\t(\n\t\t\tc ^\n\t\t\t(crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n\t\t).toString(16)\n\t);\n};\n\n\nexport const getValueFromSingleSelect = (name, keys) => (keys && keys.length > 0) ? keys[0] : null;\n\nexport const getValueFromMultiSelect = (name, keys) => (keys && keys.length > 0) ? keys : null;\n\nexport const getValueFromSelectTable = (rows) => {\n    if (rows && rows.length > 0) return rows[0];\n    else return null;\n};\n\nexport const getObjectExcludedProps = (object, exclude) => {\n    let returnObject = {};\n    Object.keys(object).forEach((key) =>\n        !exclude.includes(key) ? (returnObject[key] = object[key]) : undefined // было null\n    );\n    return returnObject;\n};\n\nexport const notificationError = (error, message) => {\n\tif (error.response) {\n\t\tconsole.error(error.response.status, error.response.data);\n\t\tconst errorDescription = (error.response.data && error.response.data.error)\n\t\t\t? error.response.data.error\n\t\t\t: \"Нет описания ошибки\";\n\t\tnotification.error({\n\t\t\tmessage: `[${error.response.status}] ${message}`,\n\t\t\tdescription: errorDescription,\n\t\t});\n\t} else {\n\t\tconsole.error(error);\n\t\tnotification.error({\n\t\t\tmessage: 'Не удалось детектировать ошибку. См. console.error',\n\t\t});\n\t}\n};\n\nexport const dispatchToStore = ({dispatch, setDataStore, value, extraData}) => {\n\tif(dispatch.path) {\n\t\t// console.log(\"storeHOC => dispatchToStore\", dispatch, setDataStore);\n\t\tif(dispatch.type === 'event')\n\t\t\tsetDataStore && setDataStore(dispatch.path,  {\n\t\t\t\ttimestamp: moment(),\n\t\t\t\t// type: dispatch.type,\n\t\t\t\tvalue: value,\n\t\t\t\textraData: extraData\n\t\t\t});\n\t\telse\n\t\t\tsetDataStore && setDataStore(dispatch.path, value);\n\t}\n}\nexport const dispatchToStoreEx = ({dispatch, path, type, value}) => {\n\tif(type === 'event'){\n\t\tdispatch(\n\t\t\tsetDataStore(path, {\n\t\t\t\ttimestamp: moment(),\n\t\t\t\tvalue\n\t\t\t})\n\t\t);\n\t}\n\tdispatch( setDataStore(path, value) );\n}\n\n\nexport function useMounted() {\n\tconst [isMounted, setIsMounted] = React.useState(false)\n\n\tReact.useEffect(() => {\n\t\tsetIsMounted(true)\n\t}, [])\n\treturn isMounted\n}\n\nexport const getSortBy = (clientSortBy, serverSortBy, dataIndex) => {\n\tif (clientSortBy && clientSortBy.key === dataIndex) {\n\t\treturn [\n\t\t\tclientSortBy,\n\t\t\tclientSortBy.order === \"asc\" ? \"ascend\" : \"descend\"\n\t\t];\n\t} else if (serverSortBy) {\n\t\treturn [\n\t\t\t{ key: dataIndex, order: serverSortBy },\n\t\t\tserverSortBy === \"asc\" ? \"ascend\" : \"descend\"\n\t\t];\n\t} else\n\t\treturn [undefined, undefined];\n};\n","export const rtPrefix = 'rt';\n","import {Spin} from 'antd';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport React from 'react';\n\nexport const empty = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<span>Нет данных</span>{' '}\n\t</div>\n);\n\nexport const overlay = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<Spin\n\t\t\ttip='Загрузка...'\n\t\t\tindicator={<LoadingOutlined style={{fontSize: 24}} spin />}\n\t\t/>{' '}\n\t</div>\n);\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport { flatten, getTableRowKeys, getTableRowObjects } from \"../../../utils/baseUtils\";\n\nconst SelectionHead = (props) => {\n\tconst {column, container} = props;\n\tconst {rowKey, onSelectAll, selectedRowKeys, selectAll} = column;\n\n\tconst _handleChange = (e) => {\n\t\tconst rowKeys = flatten(getTableRowKeys(container.props.data, column.rowKey));\n\t\tconst rowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => rowKeys.includes(item[rowKey]));\n\t\tconst totalLength = rowKeys.length;\n\t\tconst selectLength = selectedRowKeys.length;\n\t\tconst checked = !(totalLength === selectLength);\n\n\t\t// const newRowKeys = container.props.data.map((item) => { return item[column.rowKey] });\n\t\tonSelectAll({selected: checked, rowKeys: rowKeys, rowObjects: rowObjects});\n\t};\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={selectAll === null}\n\t\t\tonChange={_handleChange}\n\t\t\tchecked={selectAll}\n\t\t/>\n\t);\n};\n\nexport default SelectionHead;\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport {\n\tflatten,\n\tgetTableRowKeys,\n\tfindNodeByRowKey, getTableRowObjects\n} from \"../../../utils/baseUtils\";\n\nconst getRowChildren = (data, rowKey) =>\n\tdata.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item[rowKey], getRowChildren(item.children, rowKey)];\n\t\t}\n\t\treturn item[rowKey];\n\t});\n\nconst findBrothers = (data, selfItem, rowKey, parentKey, rowKeys = null) => {\n\tlet arr = [];\n\tdata.forEach((item) => {\n\t\tif (\n\t\t\titem[parentKey] &&\n\t\t\titem[parentKey] === selfItem[parentKey] &&\n\t\t\titem[rowKey] !== selfItem[rowKey]\n\t\t) {\n\t\t\tif (rowKeys !== null) {\n\t\t\t\tif (rowKeys.includes(item[rowKey])) {\n\t\t\t\t\tarr.push(item[rowKey]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tarr.push(item[rowKey]);\n\t\t\t}\n\t\t} else if (item.children && item.children.length) {\n\t\t\tarr.push(\n\t\t\t\tfindBrothers(\n\t\t\t\t\titem.children,\n\t\t\t\t\tselfItem,\n\t\t\t\t\trowKey,\n\t\t\t\t\tparentKey,\n\t\t\t\t\trowKeys\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\treturn arr;\n};\n\nexport const parentAnalysis = ({\n\trowData,\n\trowKey,\n\tparentKey,\n\tchecked,\n\tnodeAssociated,\n\ttreeData,\n\tselectedRowKeys,\n\tindeterminateRowKeys,\n}) => {\n\tlet _selectedRowKeys = [...selectedRowKeys];\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\tlet currentRowData = rowData;\n\tlet parentExist = !!currentRowData[parentKey];\n\tlet lastTypeSelect = checked ? 'checked' : 'square';\n\tlet typeSelect = '';\n\tlet nextSquare = false;\n\n\t/** Пока есть родитель */\n\twhile (parentExist && nodeAssociated) {\n\t\tconst indeterminateBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_indeterminateRowKeys\n\t\t\t)\n\t\t);\n\t\tconst selectedBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_selectedRowKeys\n\t\t\t)\n\t\t);\n\t\tconst allBrothers = flatten(\n\t\t\tfindBrothers(treeData, currentRowData, rowKey, parentKey)\n\t\t);\n\n\t\tif (checked) {\n\t\t\tif (\n\t\t\t\tlastTypeSelect === 'checked' &&\n\t\t\t\tselectedBrothers.length === allBrothers.length\n\t\t\t)\n\t\t\t\ttypeSelect = 'checked';\n\t\t\telse typeSelect = 'square';\n\t\t} else {\n\t\t\tif (\n\t\t\t\t!checked &&\n\t\t\t\t!nextSquare &&\n\t\t\t\t(selectedBrothers.length || indeterminateBrothers.length)\n\t\t\t)\n\t\t\t\tnextSquare = true;\n\t\t\tif (nextSquare) typeSelect = 'square';\n\t\t\telse typeSelect = 'none';\n\t\t}\n\n\t\t// console.log(\"allBrothers \", allBrothers);\n\t\t// console.log(\"findParentById \", treeData,\n\t\t//     rowKey,\n\t\t//     parentKey,\n\t\t//     currentRowData[parentKey]);\n\t\t//\n\t\t// console.log(\"findNodeByRowKey \", findNodeByRowKey(treeData, rowKey, currentRowData[parentKey]));\n\n\t\t// Найти родителя\n\t\tcurrentRowData = findNodeByRowKey(\n\t\t\ttreeData,\n\t\t\trowKey,\n\t\t\tcurrentRowData[parentKey]\n\t\t);\n\n\t\tif (typeSelect === 'checked') {\n\t\t\t// Выделить галкой\n\t\t\t// console.log(\"checked\");\n\t\t\tlastTypeSelect = 'checked';\n\t\t\tif (!_selectedRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_selectedRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _indeterminateRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _indeterminateRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'square') {\n\t\t\t// Выдлеить квадратом\n\t\t\t// console.log(\"square: \");\n\t\t\tlastTypeSelect = 'square';\n\t\t\tif (!_indeterminateRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_indeterminateRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _selectedRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'none') {\n\t\t\t// Снять выделение\n\t\t\t// console.log(\"none: \");\n\t\t\tlastTypeSelect = 'none';\n\t\t\tconst indexS = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (indexS > -1) _selectedRowKeys.splice(indexS, 1);\n\t\t\tconst indexI = _indeterminateRowKeys.indexOf(\n\t\t\t\tcurrentRowData[rowKey]\n\t\t\t);\n\t\t\tif (indexI > -1) _indeterminateRowKeys.splice(indexI, 1);\n\t\t}\n\n\t\tparentExist = !!currentRowData[parentKey];\n\t\t// parentExist = проверка наличия след родителя\n\t}\n\n\treturn [_selectedRowKeys, _indeterminateRowKeys];\n};\n\nconst SelectionCell = (props) => {\n\tconst _handleChange = (checked) => {\n\t\tconst {rowData, rowIndex, column, container} = props;\n\t\tconst {\n\t\t\tonChange,\n\t\t\tselectedRowKeys,\n\t\t\tindeterminateRowKeys,\n\t\t\trowKey,\n\t\t\tparentKey,\n\t\t\tnodeAssociated,\n\t\t} = column;\n\n\t\t// const rowKeys = flatten(getTableRowKeys([rowData], column.rowKey));\n\t\t// const totalLength = container.props.data.length;\n\t\t// const checked = e.target.checked;\n\t\t// const currentRowKey = {[rowKey]: rowData[rowKey], checked};\n\t\t// console.log(\"_handleChange: \", selectedRowKeys);\n\n\t\tlet _selectedRowKeys = [...selectedRowKeys];\n\t\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\t\t/** Обработка себя, поиск детей, выделение / снятие их */\n\t\tlet rowChildren = [];\n\t\tif (checked) {\n\t\t\tif (rowData.children && nodeAssociated)\n\t\t\t\trowChildren = flatten(getRowChildren(rowData.children, rowKey));\n\n\t\t\t_selectedRowKeys = _selectedRowKeys\n\t\t\t\t.concat([rowData[rowKey]])\n\t\t\t\t.concat(rowChildren);\n\t\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t} else {\n\t\t\tif (rowData.children && nodeAssociated)\n\t\t\t\trowChildren = flatten(\n\t\t\t\t\tgetRowChildren(rowData.children, rowKey, false)\n\t\t\t\t);\n\n\t\t\t_selectedRowKeys = _selectedRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t}\n\n\t\t[_selectedRowKeys, _indeterminateRowKeys] = parentAnalysis({\n\t\t\trowData,\n\t\t\trowKey,\n\t\t\tparentKey,\n\t\t\tchecked,\n\t\t\tnodeAssociated,\n\t\t\ttreeData: container.props.data,\n\t\t\tselectedRowKeys: _selectedRowKeys,\n\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t});\n\n\t\tconst keys = [...new Set(_selectedRowKeys)];\n\t\tconst _selectedRowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => keys.includes(item[rowKey]));\n\t\t//return [...new Set(_disabledElements)]\n\t\t// onChange({ selected: checked, totalLength, rowData, rowIndex });\n\n\t\t/** Выясняем новое состояние галочки \"Выделить все\" */\n\t\tlet selectAll;\n\t\tconst selectLength = _selectedRowKeys.length;\n\t\tconst totalLength = flatten(\n\t\t\tgetTableRowKeys(container.props.data, column.rowKey)\n\t\t).length;\n\n\t\tif (selectLength === 0) selectAll = false;\n\t\telse if (totalLength === selectLength) selectAll = true;\n\t\telse if (totalLength !== selectLength) selectAll = null;\n\n\n\n\t\tonChange({\n\t\t\tselected: checked,\n\t\t\t_selectedRow: {\n\t\t\t\trowData: {...rowData},\n\t\t\t\trowIndex: rowIndex,\n\t\t\t\trowKey: rowKey,\n\t\t\t},\n\t\t\t_selectAll: selectAll,\n\t\t\t_selectedRowKeys: keys, //[...new Set(_selectedRowKeys)],\n\t\t\t_selectedRowObjects: _selectedRowObjects,\n\t\t\t_indeterminateRowKeys: [...new Set(_indeterminateRowKeys)],\n\t\t});\n\n\t\t// let uniqIds = {};\n\t\t// onChange({selected: checked, rowKeys: rowKeys.filter(obj => !uniqIds[obj[rowKey]] && (uniqIds[obj[rowKey]] = true)) });\n\t};\n\n\tconst {rowData, column} = props;\n\tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\n\tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\n\tconst checked = selectedRowKeys.includes(rowData[rowKey]);\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={det}\n\t\t\tonChange={(e) => _handleChange(e.target.checked)}\n\t\t\tchecked={checked}\n\t\t/>\n\t);\n};\n\nexport default SelectionCell;\n","import moment from 'moment';\n\nexport const APP_TIME_OFFSET = 3;\n\nexport const getMomentFromStringByFormat = (date, format) =>\n\tdate ? moment(date, format).utcOffset(APP_TIME_OFFSET) : null;\n\n// export const getMomentWithOffset = (date) =>\n// \tmoment(date).utcOffset(APP_TIME_OFFSET);\nexport const getMomentWithOffset = (date) => moment(date).format();\n\nexport const getMomentWithOffsetTruncateDay = (date) =>\n\tmoment(date).startOf('day')\n\t\t// .hours(0)\n\t\t// .minutes(0)\n\t\t// .seconds(0)\n\t\t// .milliseconds(0)\n\t\t.format();\n\n\nexport const toFormat = (dateString, format) => {\n\tif (!dateString) {\n\t\treturn '';\n\t}\n\tconst mom = moment(dateString);\n\treturn mom.isValid() ? mom.format(format) : dateString;\n};\n\nexport const toDDMMYYYYdot = (dateString) => toFormat(dateString, 'DD.MM.YYYY');\n\nexport const toDDMMYYYYdotAltDashDash = (dateString) =>\n\ttoDDMMYYYYdot(dateString) || '--';\n\nexport const toDDMMYYYYHHMMSS = (dateString) =>\n\ttoFormat(dateString, 'DD.MM.YYYY HH:mm:ss') || '--';\n\nexport const toDDMMYYYYdash = (dateString) =>\n\ttoFormat(dateString, 'DD-MM-YYYY');\n\nexport const getISO = (date) =>\n\tmoment(date).utcOffset(APP_TIME_OFFSET).toISOString();\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport {DatePicker} from 'antd';\nimport locale from 'antd/es/date-picker/locale/ru_RU';\nimport {noop} from '../../utils/baseUtils';\nimport {rtPrefix} from '../../utils/variables';\nimport {\n\tgetMomentWithOffset,\n\tgetMomentWithOffsetTruncateDay,\n\tgetMomentFromStringByFormat,\n} from '../../utils/datesUtils';\n\nconst DateRange = (props) => {\n\t/** Состояние первоначалной настройки компонента */\n\tconst [mounted, setMounted] = useState(false);\n\tconst [startValue, setStartValue] = useState(undefined);\n\tconst [endValue, setEndValue] = useState(undefined);\n\n\tconst {\n        className,\n\t\tnameStart,\n\t\tnameEnd,\n\t\tdateFormat,\n\t\tonChange,\n        size,\n\t\ttitle,\n\t\tvalueStart,\n\t\tvalueEnd,\n\t\tshowTime,\n\t} = props;\n\n\tuseEffect(() => {\n\t\tif (!mounted) {\n\t\t\tif (props.defaultValueStart) {\n                // console.log(\"DateRange mounted :\", nameStart, props.defaultValueStart);\n                _onChange(\n\t\t\t\t\tnameStart,\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueStart,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tsetStartValue(\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueStart,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (props.defaultValueEnd) {\n\t\t\t\t_onChange(\n\t\t\t\t\tnameEnd,\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueEnd,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tsetEndValue(\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueEnd,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tsetMounted(true);\n\t\t}\n\t}, [mounted]);\n\n\tuseEffect(() => {\n\t\tif (valueStart) {\n\t\t\tsetStartValue(moment(valueStart));\n\t\t\t// console.log('useEffect -> valueStart', valueStart);\n\t\t} else if (!props.defaultValueStart) setStartValue(null);\n\t}, [valueStart]);\n\tuseEffect(() => {\n\t\tif (valueEnd) {\n\t\t\tsetEndValue(moment(valueEnd));\n\t\t\t// console.log('useEffect -> valueEnd', valueEnd);\n\t\t} else if (!props.defaultValueEnd) setEndValue(null);\n\t}, [valueEnd]);\n\n\tconst disabledStartDate = (startValue) => {\n\t\tif (!startValue || !endValue) {\n\t\t\treturn false;\n\t\t}\n\t\treturn startValue.valueOf() > endValue.valueOf();\n\t};\n\n\tconst disabledEndDate = (endValue) => {\n\t\tif (!endValue || !startValue) {\n\t\t\treturn false;\n\t\t}\n\t\treturn endValue.valueOf() <= startValue.valueOf();\n\t};\n\n\tconst onStartChange = (date) => {\n\t\tsetStartValue(date);\n\t\t_onChange(nameStart, date);\n\t};\n\n\tconst onEndChange = (date) => {\n\t\tsetEndValue(date);\n\t\t_onChange(nameEnd, date);\n\t};\n\n\tconst _onChange = (name, value) => {\n\t\tif (value)\n\t\t\tif(showTime)\n\t\t\t\tonChange(name, getMomentWithOffset(value));\n\t\t\telse\n\t\t\t\tonChange(name, getMomentWithOffsetTruncateDay(value));\n\n\t\telse onChange(name, value);\n\t};\n\n\treturn (\n\t\t<div className={`${className} ${rtPrefix}-date-range`}>\n\t\t\t<div>\n                {title ? <div className={'title'}>{title}</div> : null}\n\t\t\t\t<span className={'subtitleStart'}>c</span>\n\t\t\t\t<DatePicker\n\t\t\t\t\tlocale={locale}\n\t\t\t\t\t// defaultValue={ checkDefValue(props.defaultValueStart) }\n\t\t\t\t\tsize={size}\n\t\t\t\t\tstyle={{width: !!showTime ? '160px' : '135px'}}\n\t\t\t\t\tdisabledDate={disabledStartDate}\n\t\t\t\t\tonChange={onStartChange}\n\t\t\t\t\tformat={dateFormat}\n\t\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\t\tvalue={startValue}\n\t\t\t\t\tshowTime={showTime}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span className={'subtitleEnd'}>по</span>\n\t\t\t\t<DatePicker\n\t\t\t\t\tlocale={locale}\n\t\t\t\t\t// defaultValue={ checkDefValue(props.defaultValueEnd) }\n\t\t\t\t\tsize={size}\n\t\t\t\t\tstyle={{width: showTime ? '160px' : '135px'}}\n\t\t\t\t\tdisabledDate={disabledEndDate}\n\t\t\t\t\tonChange={onEndChange}\n\t\t\t\t\tformat={dateFormat}\n\t\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\t\tvalue={endValue}\n\t\t\t\t\tshowTime={showTime}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nDateRange.propTypes = {\n\t/** Формат отображения даты (не влияет на формат в onChange) */\n\tdateFormat: PropTypes.string,\n\n\t/** Значение по умолчанию для первого пикера */\n\t// defaultValueStart: PropTypes.string,\n\n\t/** Значение по умолчанию для второго пикера */\n\t// defaultValueEnd: PropTypes.string,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Наименование параметра для первого пикера */\n\tnameStart: PropTypes.string,\n\n\t/** Наименование параметра для второго пикера */\n\tnameEnd: PropTypes.string,\n\n\t/** Событие при изменении любого из пикеров */\n\tonChange: PropTypes.func,\n\n    /** Размер пикера ['small', 'middle', 'large'] */\n    size: PropTypes.oneOf(['small', 'middle', 'large']),\n\n\t/** Заголовок */\n\ttitle: PropTypes.string,\n\n\t/** Значение даты первого пикера (используется для управления датой из родительного компонента) */\n\t// valueStart: PropTypes.string,\n\n\t/** Значение даты второго пикера (используется для управления датой из родительного компонента) */\n\t// valueEnd: PropTypes.string,\n};\n\nDateRange.defaultProps = {\n    className: '',\n\tnameStart: 'dateStart',\n\tnameEnd: 'dateEnd',\n\tdateFormat: 'DD.MM.YYYY',\n\tonChange: noop,\n    size: 'middle',\n    // title: 'Период',\n};\n\nexport default DateRange;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {DatePicker} from 'antd';\nimport moment from 'moment';\nimport {noop} from '../../utils/baseUtils';\nimport {\n\tgetMomentFromStringByFormat,\n\tgetMomentWithOffsetTruncateDay,\n} from '../../utils/datesUtils';\n\nconst SingleDate = (props) => {\n\t/** Состояние первоначалной настройки компонента */\n\tconst [mounted, setMounted] = useState(false);\n\tconst [_value, setValue] = useState(null);\n\n\tconst {dateFormat, defaultValue, name, onChange, title, value, className} = props;\n\n\tuseEffect(() => {\n\t\tif (!mounted) {\n\t\t\t// console.log(\"DateRange mounted :\", nameFrom, props.defaultValueFrom);\n\t\t\tif (defaultValue) {\n\t\t\t\t_onChange(\n\t\t\t\t\tname,\n\t\t\t\t\tgetMomentFromStringByFormat(defaultValue, dateFormat)\n\t\t\t\t);\n\t\t\t\tsetValue(getMomentFromStringByFormat(defaultValue, dateFormat));\n\t\t\t}\n\t\t\tsetMounted(true);\n\t\t}\n\t}, [mounted]);\n\n\tuseEffect(() => {\n\t\tif (value) {\n\t\t\tsetValue(moment(value));\n\t\t} else if (!defaultValue) setValue(null);\n\t}, [value]);\n\n\tconst _onChangePicker = (date) => {\n\t\tsetValue(date);\n\t\t_onChange(name, date);\n\t};\n\n\tconst _onChange = (name, value) => {\n\t\tif (value) onChange(name, getMomentWithOffsetTruncateDay(value));\n\t\telse onChange(name, value);\n\t};\n\n\treturn (\n\t\t<div className={`single-date-container ${className}`}>\n\t\t\t<div className={'title'}>{title}</div>\n\t\t\t<DatePicker\n\t\t\t\tsize={'small'}\n\t\t\t\tstyle={{width: '135px'}}\n\t\t\t\tonChange={_onChangePicker}\n\t\t\t\tformat={dateFormat}\n\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\tvalue={_value}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nSingleDate.propTypes = {\n\t/** Формат отображения даты (не влияет на формат в onChange) */\n\tdateFormat: PropTypes.string,\n\n\t/** Значение по умолчанию */\n\tdefaultValue: PropTypes.string,\n\n\t/** Наименование параметра */\n\tname: PropTypes.string,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Событие при изменении пикера */\n\tonChange: PropTypes.func,\n\n\t/** Заголовок */\n\ttitle: PropTypes.string,\n\n\t/** Значение даты */\n\tvalue: PropTypes.string,\n};\n\nSingleDate.defaultProps = {\n\tname: 'date',\n\tdateFormat: 'DD.MM.YYYY',\n\tonChange: noop,\n\ttitle: 'Дата',\n};\n\nexport default SingleDate;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Tooltip } from \"antd\";\nimport { noop } from \"../../utils/baseUtils\";\nimport DateRange from \"../DateRange/DateRange\";\nimport SingleDate from \"../SingleDate/SingleDate\";\nimport Select from \"../Select/Select\";\nimport { rtPrefix } from \"../../utils/variables\";\n\nconst FilterPanel = (props) => {\n  /**\n   * Период с, по (день / месяц / год)\n   * Множественный выбор (дерево с галочками с поиском) (ajax / const)\n   * Множественный выбор (список с поиском) (ajax / const)\n   * Единственный выбор (список с поиском) (ajax / const)\n   */\n\n  const [filter, setFilter] = useState(props.defaultFilter);\n  // const [multiSelectObjects, setMultiSelectObjects] = useState([]);\n\n  const {\n    applyFilterTooltip,\n    applyFilterSize,\n    applyFilterRender,\n    borderStyle,\n    onChangeFilter,\n    onApplyFilter,\n    configFilter,\n    resetFilterRender,\n    resetFilterTooltip,\n    resetFilterSize\n  } = props;\n\n  useEffect(() => {\n    setFilter(props.defaultFilter);\n  }, []);\n\n  const _onChangeData = (name, value) => {\n    // console.log(\"FilterPanel -> onChangeData\", name, value);\n    let _filter = { ...filter };\n    if (value === null) {\n      delete _filter[name];\n    } else {\n      _filter = { ..._filter, ...{ [name]: value } };\n    }\n    // console.log(\"onChangeData:\", _filter);\n    setFilter(_filter);\n    onChangeFilter(_filter);\n  };\n\n  const _applyFilter = () => {\n    // console.log(\"_applyFilter:\", filter);\n    onApplyFilter(filter);\n  };\n  const _resetFilter = () => {\n    // console.log(\"_resetFilter:\", props.defaultFilter);\n    setFilter(props.defaultFilter);\n    onChangeFilter(props.defaultFilter);\n    onApplyFilter(props.defaultFilter);\n    // setMultiSelectObjects([]);\n  };\n\n  // const _onChangeObjects = (name, value) => {\n  // \tlet _multiSelectObjects = {...multiSelectObjects};\n  // \tif (value === null) {\n  // \t\tdelete _multiSelectObjects[name];\n  // \t} else {\n  // \t\t_multiSelectObjects = {..._multiSelectObjects, ...{[name]: value}};\n  // \t}\n  // \t// console.log(\"onChangeData:\", _filter);\n  // \tsetMultiSelectObjects(_multiSelectObjects);\n  // };\n  const getPanelCls = () => {\n    let cls = [`${rtPrefix}-filter-panel`];\n    cls.push(`border-${borderStyle}`);\n    if (configFilter.findIndex((item) => !!item.title) === -1)\n      cls.push(`${rtPrefix}-filter-panel-no-title`);\n    return cls.join(\" \");\n  };\n\n  return (\n    <React.Fragment>\n      {configFilter && configFilter.length ? (\n        <div className={getPanelCls()}>\n          {configFilter.map((item, index) => {\n            // console.log(\"item.defaultRows\", item.defaultRows);\n            let cls = [`${rtPrefix}-filter-panel-item`];\n            item.className && cls.push(item.className);\n            switch (item.componentType) {\n              case \"DateRange\":\n                return (\n                  <DateRange\n                    key={index}\n                    {...item}\n                    className={cls.join(\" \")}\n                    defaultValueStart={\n                      filter[item.nameStart]\n                        ? filter[item.nameStart]\n                        : null\n                    }\n                    defaultValueEnd={\n                      filter[item.nameEnd]\n                        ? filter[item.nameEnd]\n                        : null\n                    }\n                    onChange={_onChangeData}\n                    valueStart={filter[item.nameStart]}\n                    valueEnd={filter[item.nameEnd]}\n                  />\n                );\n              case \"SingleDate\":\n                return (\n                  <SingleDate\n                    key={index}\n                    {...item}\n                    className={cls.join(\" \")}\n                    dateFormat={\n                      item.dateFormat\n                        ? item.dateFormat\n                        : undefined\n                    }\n                    defaultValue={\n                      filter[item.name]\n                        ? filter[item.name]\n                        : null\n                    }\n                    onChange={_onChangeData}\n                    value={filter[item.name]}\n                  />\n                );\n              case \"MultiSelect\":\n              case \"SingleSelect\":\n                return (\n                  <Select\n                    key={index}\n                    {...item}\n                    type={item.componentType}\n                    defaultSelectedRowKeys={\n                      filter[item.name]\n                        ? filter[item.name]\n                        : null\n                    }\n                    selectedRowKeys={filter[item.name] ? filter[item.name] : []}\n                    className={cls.join(\" \")}\n                    onChangeKeys={_onChangeData}\n                    defaultValue={\n                      filter[item.name]\n                        ? filter[item.name]\n                        : null\n                    }\n                    value={filter[item.name]}\n                  />\n                );\n              case \"Custom\":\n                return (\n                  <React.Fragment key={index}>\n                    {\n                      item.render({\n                        onChange: _onChangeData,\n                        defaultValue: filter[item.name]\n                          ? filter[item.name]\n                          : null,\n                        value: filter[item.name]\n                      })\n                    }\n                  </React.Fragment>);\n              default:\n                return null;\n            }\n          })}\n          <Tooltip title={applyFilterTooltip}>\n            <Button\n              type='primary'\n              size={applyFilterSize}\n              style={{ marginLeft: \"auto\" }}\n              onClick={_applyFilter}\n            >\n              {applyFilterRender}\n            </Button>\n          </Tooltip>\n          <Tooltip title={resetFilterTooltip}>\n            <Button\n              size={resetFilterSize}\n              style={{ marginLeft: \"10px\" }}\n              onClick={_resetFilter}\n            >\n              {resetFilterRender}\n            </Button>\n          </Tooltip>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\nFilterPanel.propTypes = {\n\n  /** Тест Tooltip для кнопки \"Применить фильтр\" */\n  applyFilterTooltip: PropTypes.string,\n\n  /** Размер кнопки \"Применить фильтр\" ['small', 'middle', 'large'] */\n  applyFilterSize: PropTypes.oneOf([\"small\", \"middle\", \"large\"]),\n\n  /** Строка / функция / элемент для отображения в кнопке \"Применить фильтр\" */\n  applyFilterRender: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.string\n  ]),\n\n  /** Тип бордера панели (по умолчанию 'none')\n   * ['all', 'none', 'top', 'left', 'bottom', 'right', 'top-bottom', 'left-right'] */\n  borderStyle: PropTypes.oneOf([\n    \"all\",\n    \"none\",\n    \"top\",\n    \"left\",\n    \"bottom\",\n    \"right\",\n    \"top-bottom\",\n    \"left-right\"\n  ]),\n\n  /** Объект фильтра по умолчанию */\n  defaultFilter: PropTypes.object,\n\n  /** Конфигурация панели фильтров */\n  configFilter: PropTypes.arrayOf(PropTypes.object),\n\n  /** Событие по кнопке выполнить фильтр */\n  onApplyFilter: PropTypes.func,\n\n  /** Событие по изменение объекта фильтра */\n  onChangeFilter: PropTypes.func,\n\n  /** Тест Tooltip для кнопки \"Сбросить фильтр\" */\n  resetFilterTooltip: PropTypes.string,\n\n  /** Размер кнопки \"Сбросить фильтр\" ['small', 'middle', 'large'] */\n  resetFilterSize: PropTypes.oneOf([\"small\", \"middle\", \"large\"]),\n\n  /** Строка / функция / элемент для отображения в кнопке \"Сбросить фильтр\" */\n  resetFilterRender: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.string\n  ])\n};\n\nFilterPanel.defaultProps = {\n  applyFilterTooltip: \"Применить фильтр\",\n  applyFilterSize: \"middle\",\n  applyFilterRender: \"Применить\",\n  borderStyle: \"none\",\n  defaultFilter: {},\n  configFilter: [],\n  onApplyFilter: noop,\n  onChangeFilter: noop,\n  resetFilterTooltip: \"Сбросить фильтр\",\n  resetFilterSize: \"middle\",\n  resetFilterRender: \"Сбросить\"\n};\n\nexport default FilterPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {CloseCircleOutlined} from '@ant-design/icons';\nimport {rtPrefix} from '../../../utils/variables';\n\nconst SelectionList = (props) => {\n\tconst {selectedRowObjects, rowRender, onClickDropSelect} = props;\n\n\t// console.log(\"SelectionList typeof -> \", typeof(rowRender));\n\treturn (\n\t\t<div className={`${rtPrefix}-table-selected-rows`}>\n\t\t\t{selectedRowObjects && selectedRowObjects.length > 0 ? (\n\t\t\t\t<ul>\n\t\t\t\t\t{selectedRowObjects.map((item, index) => (\n\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t{/*{(typeof(rowRender) === 'string') ? <div>{item[rowRender]}</div> : rowRender }*/}\n\t\t\t\t\t\t\t{typeof rowRender === 'function' ? (\n\t\t\t\t\t\t\t\trowRender({rowData: item, rowIndex: index})\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>{item[rowRender]}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<div onClick={() => onClickDropSelect(item)}>\n\t\t\t\t\t\t\t\t<CloseCircleOutlined />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t) : (\n\t\t\t\t<div>Нет выбранных записей</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nSelectionList.propTypes = {\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { rowData, rowIndex }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n\t/** Список выделенных объектов */\n\tselectedRowObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Событие удаления элемента */\n\tonClickDropSelect: PropTypes.func.isRequired,\n};\n\nSelectionList.defaultProps = {};\n\nexport default SelectionList;\n","import React, {useRef, forwardRef, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {notification} from 'antd';\nimport SortOrder from 'react-base-table/lib/SortOrder';\nimport BaseTable, {AutoResizer, callOrReturn, Column} from 'react-base-table';\nimport {empty, overlay} from './defaultSettings';\nimport SelectionHead from '../Table/Selectable/SelectionHead';\nimport SelectionCell, {parentAnalysis} from '../Table/Selectable/SelectionCell';\nimport CommandPanel from '../CommandPanel/CommandPanel';\nimport FilterPanel from '../FilterPanel/FilterPanel';\nimport SelectionList from '../Table/SelectionList/SelectionList';\nimport {rtPrefix} from '../../utils/variables';\nimport {\n\tflatten,\n\tgenerateUUID,\n\tgetTableRowKeys,\n\tfindNodeByRowKey,\n\tnoop,\n\tgetTableRowObjects, notificationError\n} from \"../../utils/baseUtils\";\nimport objectPath from \"object-path\";\nimport { setDataStore } from \"../../../redux/rtd.actions\";\nimport FormItems from \"../Form/FormItems\";\n\nconst Table = forwardRef((props, ref) => {\n\t/** Состояние первоначалной настройки компонента*/\n\tconst [mounted, setMounted] = useState(false);\n\t/** Наличие на сервере еще данных */\n\tconst [hasMore, setHasMore] = useState(true);\n\t/** Индикатор загрузки данных */\n\tconst [loading, setLoading] = useState(false);\n\n\t/** Indoor control */\n\tconst [_rows, _setRows] = useState([]);\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n\tconst [_searchValue, setSearchValue] = useState({});\n\tconst [_filter, setFilter] = useState(false);\n\tconst [_sortBy, setSortBy] = useState(false);\n\n\t/** Selectable States */\n\tconst [selectAll, setSelectAll] = useState(false);\n\n\t/** Tree States */\n\tconst [_indeterminateRowKeys, setIndeterminateRowKeys] = useState([]);\n    const [_expandedRowKeys, setExpandedRowKeys] = useState([]);\n\n    const [_totalCountRows, setTotalCountRows] = useState(0);\n\n    const [_footerShow, _setFooterShow] = useState(false);\n\n    const tableRef = useRef();\n\n\tconst {\n\t\t/** Def values */\n\t\tdefaultRows,\n\t\tdefaultSelectedRowKeys,\n\t\tdefaultSearchValue,\n\t\tdefaultFilter,\n\t\tdefaultSortBy,\n\n\t\t/** Outdoor control */\n\t\trows,\n\t\tsetRows,\n\t\tselectedRowKeys,\n\t\tsearchValue,\n\t\tfilter,\n\t\tsortBy,\n\n\t\t/** Required */\n\t\tcolumns,\n\t\ttype,\n\n\t\t/** Base Props */\n\t\tautoDeleteRows,\n\t\trowKey,\n\n\t\t/** View Props */\n\t\tempty,\n\t\tfixWidthColumn,\n\t\tfooterHeight,\n\t\tfooterShow,\n        footerTitles,\n\t\t// footerProps,\n\t\theaderHeight,\n\t\trowHeight,\n\t\tzebraStyle,\n\t\trowRenderer,\n\t\testimatedRowHeight,\n\n\t\t/** Load Data Props */\n\t\tloadThreshold,\n\t\tpageSize,\n\t\trequestLoadRows,\n        requestLoadCount,\n\t\tsearchParamName,\n\n\t\t/** Selectable Props */\n\t\tselectable,\n\n\t\t/** Tree Props */\n\t\tnodeAssociated,\n\t\texpandColumnKey,\n\t\texpandParentKey,\n\t\texpandLazyLoad,\n\t\texpandDefaultAll,\n\n\t\t/** Events */\n\t\tonRowClick,\n\t\tonRowDoubleClick,\n\t\tonRowExpand,\n\t\tonSelectedRowsChange,\n\t\tonExpandedRowsChange,\n\n\t\t/** SELECTED PANEL */\n\t\tshowSelection,\n\t\trowRenderShowSelection,\n\n\t\t/** REDUX PROPS */\n\t\tdispatchPath,\n\t\tsubscribe,\n\t} = props;\n\n\t// console.log('props.commandPanelProps => ', props.commandPanelProps);\n\tconst commandPanelProps = {\n\t\t...CommandPanel.defaultProps,\n\t\t...props.commandPanelProps,\n\t};\n\tconst filterPanelProps = {\n\t\t...FilterPanel.defaultProps,\n\t\t...props.filterPanelProps,\n\t};\n\n\tconst footerProps = {\n\t\t...Table.defaultProps.footerProps,\n\t\t...props.footerProps,\n\t};\n\n\tconst selectedDispatchPath = dispatchPath && `${dispatchPath}.selected`;\n\tconst rowsDispatchPath = dispatchPath && `${dispatchPath}.rows`;\n\n\n\tuseEffect(() => {\n        // console.log(\"Инициализация дефолтных значений \");\n        // console.log(\"Инициализация дефолтных значений defaultSelectedRowKeys > \", defaultSelectedRowKeys);\n\n\t\t// Инициализация дефолтных значений\n\t\t// _setRows(defaultRows);\n\t\t_setRowsHandler(defaultRows);\n\t\tsetSelectedRowKeys(defaultSelectedRowKeys);\n\t\tsetSearchValue(defaultSearchValue);\n\t\tsetFilter(defaultFilter);\n\t\tsetSortBy(defaultSortBy);\n\t\tsetSelectAll(\n\t\t\tdefaultRows.length > 0 &&\n\t\t\t\tdefaultRows.length === defaultSelectedRowKeys.length\n\t\t);\n\t\t// Определение нужно ли отображать подвал\n\t\t_setFooterShow(\n\t\t\t(footerProps.showElements.length ||\n\t\t\tfooterProps.leftCustomSideElement ||\n\t\t\tfooterProps.centerCustomSideElement ||\n\t\t\tfooterProps.rightCustomSideElement));\n\n\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t// Открытие всех нод\n\t\t\tif (expandDefaultAll)\n\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\tflatten(getTableRowKeys(defaultRows, rowKey))\n\t\t\t\t);\n\t\t\t// Установка квадратиков на нужных нодах\n\t\t\tif (defaultSelectedRowKeys && defaultSelectedRowKeys.length > 0) {\n\t\t\t\tlet flatRows = flatten(getTableRowKeys(defaultRows, rowKey));\n\t\t\t\tlet selectedRow = flatRows.filter((item) =>\n\t\t\t\t\tdefaultSelectedRowKeys.includes(item[rowKey])\n\t\t\t\t);\n\t\t\t\tlet _indeterminateRowKeys = [];\n\t\t\t\tselectedRow.forEach((item) => {\n\t\t\t\t\tconst [ss, ii] = parentAnalysis({\n\t\t\t\t\t\trowData: item,\n\t\t\t\t\t\trowKey,\n\t\t\t\t\t\tparentKey: expandParentKey,\n\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t\tnodeAssociated,\n\t\t\t\t\t\ttreeData: defaultRows,\n\t\t\t\t\t\tselectedRowKeys: defaultSelectedRowKeys,\n\t\t\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t\t\t\t});\n\t\t\t\t\t_indeterminateRowKeys.push(...ii);\n\t\t\t\t});\n\t\t\t\tsetIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\n\t\t\t}\n\t\t}\n\n\t\tif (type !== 'localSide') {\n\t\t\t_dataProcessing({\n\t\t\t\tsortBy: defaultSortBy,\n\t\t\t\tfilter: defaultFilter,\n\t\t\t\tsearchLine: defaultSearchValue,\n\t\t\t\treload: true,\n\t\t\t});\n\t\t}\n\t\t// console.log(\"Table => props \", props);\n\t\tsetMounted(true);\n\t\tif (ref && typeof ref === 'function') ref({reloadData});\n\t\telse if (ref && typeof ref === 'object') ref.current = {reloadData};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (type === 'localSide') {\n\t\t\t// console.log(\"Control useEffect => \", rows, selectedRowKeys, searchValue, filter, sortBy);\n\t\t\t// _setRows(rows);\n\t\t\t_setRowsHandler(rows);\n\t\t\tsetSelectedRowKeys(selectedRowKeys);\n\t\t\tsetSearchValue(searchValue);\n\t\t\tsetFilter(filter);\n\t\t\tsetSortBy(sortBy);\n\t\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t\t// Открытие всех нод\n\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\tsetExpandedRowKeys(flatten(getTableRowKeys(rows, rowKey)));\n\t\t\t}\n\t\t}\n    }, [rows, selectedRowKeys, searchValue, filter, sortBy]);\n\n\t/** Подписка на изменение props[subscribe.name] в сторе */\n\tuseEffect( () => {\n\t\tif(subscribe.name) {\n\t\t\t// console.log(\"Table => useEffect => subscribe.value \", props[subscribe.name]);\n\t\t\tsubscribe.onChange && subscribe.onChange({value: props[subscribe.name], setReloadTable: reloadData});\n\t\t}\n\t}, [props[subscribe.name]]);\n\n\n\t/** BASE FUNCTIONS */\n\tconst _setRowsHandler = (rows) => {\n\t\t_setRows(rows);\n\t\trowsDispatch(rows);\n\t};\n\tconst setRowsHandler = (rows) => {\n\t\tsetRows(rows);\n\t\trowsDispatch(rows);\n\t};\n\tconst rowsDispatch = (rows) => {\n\t\trowsDispatchPath && props.setDataStore && props.setDataStore(rowsDispatchPath, rows);\n\t};\n\n\tconst reloadData = ({sortBy, filter, searchValue}) => {\n\t\t// console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\n        if(props.value && props.value.length > 0)\n            setSelectedRowKeys(props.value.map(item => item[rowKey]));\n        else\n            setSelectedRowKeys([]);\n\t\t// setSelectedRowKeys([]);\n\t\tif(sortBy) setSortBy(sortBy);\n\t\tif(filter) setFilter(filter);\n\t\tif(searchValue) setSearchValue(searchValue);\n\t\t_dataProcessing({\n\t\t\tsortBy: sortBy ? sortBy : _sortBy,\n\t\t\tfilter: filter ? filter : _filter,\n\t\t\tsearchLine: searchValue ? searchValue : _searchValue,\n\t\t\treload: true,\n\t\t});\n        // console.log(\"reloadData loading \", loading);\n    };\n\n\tconst _dataProcessing = (params) => {\n\t\t// console.log('_dataProcessing', params);\n\t\tconst {sortBy, filter, searchLine, expandRow, reload} = params;\n\t\tswitch (type) {\n\t\t\tcase 'infinity':\n\t\t\tcase 'serverSide':\n\t\t\t\tif ((hasMore || reload) && !loading) {\n\t\t\t\t\tsetLoading(true);\n\t\t\t\t\tconst pageNum = reload\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: Math.floor(_rows.length / pageSize);\n\t\t\t\t\tconst params = {\n\t\t\t\t\t\tpage: pageNum,\n\t\t\t\t\t\tsize: pageSize,\n\t\t\t\t\t\tsort:\n\t\t\t\t\t\t\tsortBy && sortBy.key\n\t\t\t\t\t\t\t\t? sortBy.key + ',' + sortBy.order\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t};\n\t\t\t\t\tconst dataQuery = {\n                        ...filter,\n                        ...(searchLine\n                            ? {[searchParamName]: searchLine}\n                            : null),\n                    };\n\t\t\t\t\t// console.log('dataQuery', dataQuery);\n\n                    if(type === 'infinity' && reload && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad) {\n                        requestLoadCount({\n                            params,\n                            data: dataQuery,\n                        })\n                            .then((response) => {\n                                // console.log(\"infinity then response\", response);\n                                // const result = response.data;\n                                setTotalCountRows(response.data);\n                            })\n\t\t\t\t\t\t\t.catch(error =>\n\t\t\t\t\t\t\t\tnotificationError(error, 'Ошибка получения количества записей по фильтру') );\n                    }\n\n                    // console.log('requestLoadRows => ', typeof requestLoadRows);\n                    // if(typeof requestLoadRows !== 'function'){\n                    //     setLoading(false);\n                    // }\n                    requestLoadRows({\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tdata: dataQuery,\n\t\t\t\t\t})\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\t\t\tconst result = response.data;\n\t\t\t\t\t\t\t// Если иерархия и ленивая, то ищим кому добавть полученные записи\n\t\t\t\t\t\t\tif (!!expandColumnKey && expandLazyLoad) {\n\t\t\t\t\t\t\t\t// lastExpandRow//, setLastExpandRow\n\t\t\t\t\t\t\t\t// console.log('!!expandColumnKey && expandLazyLoad', result);\n\t\t\t\t\t\t\t\tif (pageNum === 0) {\n\t\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t\t{[rowKey]: generateUUID()},\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t// _setRows(result);\n\t\t\t\t\t\t\t\t\t_setRowsHandler(result);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlet newRows = [..._rows];\n\t\t\t\t\t\t\t\t\t// (data, rowKey, rowValue)\n\t\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t\t{[rowKey]: generateUUID()},\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tlet node = findNodeByRowKey(\n\t\t\t\t\t\t\t\t\t\tnewRows,\n\t\t\t\t\t\t\t\t\t\trowKey,\n\t\t\t\t\t\t\t\t\t\texpandRow[rowKey]\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tnode.children = result;\n\t\t\t\t\t\t\t\t\t// console.log('newRows -> ', newRows);\n\t\t\t\t\t\t\t\t\t// _setRows(newRows);\n\t\t\t\t\t\t\t\t\t_setRowsHandler(newRows);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (result && result.length < pageSize) {\n\t\t\t\t\t\t\t\t\tsetHasMore(false);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetHasMore(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpageNum === 0\n\t\t\t\t\t\t\t\t\t? _setRowsHandler(result) // _setRows\n\t\t\t\t\t\t\t\t\t: _setRowsHandler(_rows.concat(result)); // _setRows\n\n\t\t\t\t\t\t\t\t// console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\n\t\t\t\t\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\t\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\t\t\t\t\t\tflatten(getTableRowKeys(result, rowKey))\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t\t\t\t\t_setRowsHandler(_rows); // _setRows\n\t\t\t\t\t\t\t// setHasMore(false);\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t// case 'serverSide':\n\t\t\t// \tsetLoading(true);\n\t\t\t// \tbreak;\n\t\t\tcase 'localSide':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t/** Событие выделение одной строки в режиме без галочек */\n\tconst _rowEventHandlers = {\n\t\tonClick: ({rowData, rowIndex, rowKey, event}) => {\n\t\t\tif (!selectable) {\n\t\t\t\t// if (_selectedRowKeys.includes(rowKey)) {\n\t\t\t\t//     setSelectedRowKeys([]);\n\t\t\t\t//     // setSelectedRow([]);\n\t\t\t\t//     // setSelectedRowObjects([]);\n\t\t\t\t//     onRowClick({\n\t\t\t\t//         selected: false,\n\t\t\t\t//         rowData,\n\t\t\t\t//         rowIndex,\n\t\t\t\t//         rowKey,\n\t\t\t\t//     });\n\t\t\t\t//     onSelectedRowsChange([]);\n\t\t\t\t// } else {\n\t\t\t\t// console.log('_rowEventHandlers -> onClick', rowKey, rowIndex);\n\t\t\t\tconst newRowObject = {\n\t\t\t\t\trowData: {...rowData},\n\t\t\t\t\trowIndex: rowIndex,\n\t\t\t\t\trowKey: rowKey,\n\t\t\t\t};\n\t\t\t\t// if(type !== 'localSide')\n\t\t\t\tsetSelectedRowKeys([rowKey]);\n\t\t\t\t// setSelectedRow(newRowObject);\n\t\t\t\t// setSelectedRowObjects([newRowObject]);\n\t\t\t\tselectedDispatchPath && props.setDataStore && props.setDataStore(selectedDispatchPath, rowData);\n\t\t\t\tonRowClick({\n\t\t\t\t\tselected: true,\n\t\t\t\t\t...newRowObject,\n\t\t\t\t});\n\t\t\t\tonSelectedRowsChange([rowKey], [rowData]);\n\t\t\t\t// }\n\t\t\t}\n\t\t},\n\t\tonDoubleClick: ({rowData, rowIndex, rowKey}) => {\n\t\t\t// console.log('onDoubleClick', rowData, rowIndex, rowKey);\n\t\t\tonRowDoubleClick({rowData, rowIndex, rowKey});\n\t\t},\n\t\t// onContextMenu: console.log('context menu'),\n\t\t// onMouseEnter: console.log('mouse enter'),\n\t\t// onMouseLeave: console.log('mouse leave'),\n\t};\n\n\t/** Событие при сортировке */\n\tconst _onColumnSort = (sortBy) => {\n\t\t// console.log(\"sortBy\", sortBy);\n\t\ttableRef.current.scrollToRow(0, 'auto');\n\t\tsetSortBy(sortBy);\n\n\t\t// Для серверной сортировки - сбросить выделение\n\t\tif (type !== 'localSide') {\n\t\t\tsetSelectedRowKeys([]);\n\t\t}\n\t\tconst loadParams = {\n\t\t\tsortBy: sortBy,\n\t\t\tfilter: _filter,\n\t\t\tsearchLine: _searchValue,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t};\n\n\t/** Получение колонок таблицы */\n\tconst _getColumns = () => {\n\t\tlet _columns = [...columns];\n\n\t\t/** Создаем колонку с галочками (если надо) */\n\t\tif (selectable) {\n\t\t\tconst selectColumn = {\n\t\t\t\tkey: '__selection__',\n\t\t\t\theaderRenderer: SelectionHead,\n\t\t\t\tcellRenderer: SelectionCell,\n\t\t\t\twidth: 40,\n\t\t\t\tflexShrink: 0,\n\t\t\t\tresizable: false,\n\t\t\t\tfrozen: 'left',\n\t\t\t\trowKey: rowKey,\n\t\t\t\tparentKey: expandParentKey,\n\t\t\t\tselectedRowKeys: _selectedRowKeys,\n\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t\t\tnodeAssociated: nodeAssociated,\n\t\t\t\tonChange: _onChangeSelectHandler,\n\t\t\t\tselectAll: selectAll,\n\t\t\t\tonSelectAll: _onSelectAllHandler,\n\t\t\t};\n\t\t\t_columns.unshift(selectColumn);\n\t\t}\n\t\treturn _columns;\n\t};\n\n\t/** VIEW FUNCTIONS */\n\n\tconst _footer = (\n\t\t<React.Fragment>\n\t\t\t{_footerShow ? (\n\t\t\t\t\t<React.Fragment>\n                        {/*className={'BaseTable__footer__counter'}>*/}\n\t\t\t\t\t\t<div key={'footer-left-custom-side'} className={'left-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.leftCustomSideElement ? <FormItems items={footerProps.leftCustomSideElement} /> : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-center-custom-side'} className={'center-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.centerCustomSideElement ? <FormItems items={footerProps.centerCustomSideElement} /> : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-right-custom-side'} className={'right-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.rightCustomSideElement ? <FormItems items={footerProps.rightCustomSideElement} /> : null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{selectable ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('selected')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.selectedTitle} {_selectedRowKeys.length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('loaded')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.loadedTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{footerProps.showElements.includes('total')\n\t\t\t\t\t\t\t? type === 'infinity' && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad\n\t\t\t\t\t\t\t\t? <span>{footerProps.totalTitle} {_totalCountRows}</span>\n\t\t\t\t\t\t\t\t: <span>{footerProps.totalTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t: null}\n\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n\n\t/** Событие при рендере для стилизации */\n\tconst _rowClassName = ({rowData, rowIndex}) => {\n\t\tconst {rowClassName} = props;\n\t\treturn [\n\t\t\trowClassName,\n\t\t\t_selectedRowKeys.includes(rowData[rowKey]) && 'row-selected',\n\t\t\tzebraStyle ? (rowIndex % 2 === 0 ? 'even' : 'odd') : '',\n\t\t\t'bordered'\n\t\t].join(' ')\n\t};\n\n\t/** LOAD DATA FUNCTIONS */\n\tconst onEndReached = () => {\n\t\tlet selectAll;\n\t\tconst selectLength = _selectedRowKeys.length;\n\t\tif (selectLength === 0) selectAll = false;\n\t\telse if (selectLength > 0) selectAll = null;\n\n\t\tsetSelectAll(selectAll);\n\n\t\tif (type === 'infinity') {\n\t\t\tconst loadParams = {\n\t\t\t\tsortBy: _sortBy,\n\t\t\t\tfilter: _filter,\n\t\t\t\tsearchLine: _searchValue,\n\t\t\t\treload: false,\n\t\t\t};\n\t\t\t_dataProcessing(loadParams);\n\t\t}\n\t};\n\n\t/** SELECTABLE FUNCTIONS */\n\n\t/** Событие при изменении галочки одной строки */\n\tconst _onChangeSelectHandler = ({\n\t\tselected,\n\t\t_selectedRow,\n\t\t_selectAll,\n\t\t_selectedRowKeys,\n\t\t_selectedRowObjects,\n\t\t_indeterminateRowKeys,\n\t}) => {\n\t\tsetSelectedRowKeys(_selectedRowKeys);\n\t\tsetIndeterminateRowKeys(_indeterminateRowKeys);\n\t\tsetSelectAll(_selectAll);\n\t\t// setSelectedRow(_selectedRow);\n\n\t\t// let newSelectedObjects = [];\n\t\t// if (selected) {\n\t\t// \tif (!!expandColumnKey)\n\t\t// \t\tnewSelectedObjects = flatten(\n\t\t// \t\t\tgetTableRowObjects(rows, rowKey)\n\t\t// \t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]));\n\t\t// \telse\n\t\t// \t\tnewSelectedObjects = selectedRowObjects.concat([\n\t\t// \t\t\t_selectedRow.rowData,\n\t\t// \t\t]);\n\t\t// \t// setSelectedRowObjects(newSelectedObjects);\n\t\t// } else {\n\t\t// \tnewSelectedObjects = selectedRowObjects.filter(\n\t\t// \t\t(item) => item[rowKey] !== _selectedRow.rowData[rowKey]\n\t\t// \t);\n\t\t// \t// setSelectedRowObjects(newSelectedObjects);\n\t\t// }\n\t\t// console.log(\"_handleSelectChange\", props);\n\t\t// dispatchPath && props.setTableSelectedRow && props.setTableSelectedRow(dispatchPath, _selectedRow.rowData);\n\t\tselectedDispatchPath && props.setDataStore && props.setDataStore(selectedDispatchPath, _selectedRowObjects);\n\t\tonRowClick({\n\t\t\tselected,\n\t\t\trowData: _selectedRow.rowData,\n\t\t\trowIndex: _selectedRow.rowIndex,\n\t\t\trowKey,\n\t\t});\n\t\tonSelectedRowsChange(_selectedRowKeys, _selectedRowObjects);\n\t};\n\n\t/** Событие при изменении галочки \"Выделить все\" */\n\tconst _onSelectAllHandler = ({selected, rowKeys, rowObjects}) => {\n\t\tconst selectedKeys = selected ? rowKeys : [];\n\t\tsetSelectedRowKeys(selectedKeys);\n\t\tsetIndeterminateRowKeys([]);\n\t\tsetSelectAll(selected);\n\t\tselectedDispatchPath && props.setDataStore && props.setDataStore(selectedDispatchPath, selected ? rowObjects : []);\n\t\t// setSelectedRowObjects(rows);\n\t\t// console.log(\"_handleSelectAll\", selectedKeys);\n\t\tonSelectedRowsChange(selectedKeys, rowObjects);\n\t};\n\n\t/** TREE FUNCTIONS */\n\n\t/** Анализ дерева на пердмет квадратиков\n\t * Нужно для выделения по умолчанию свернутых элементов */\n\t// const _postLoadTreeAnalysis = () => {\n\t//     if (!!expandColumnKey && !expandLazyLoad) {\n\t//         let _indeterminateRowKeys = [];\n\t//         // console.log(\"mounted->selectedRowObjects: \", selectedRowObjects);\n\t//         selectedRowObjects.map((item) => {\n\t//             const [ss, ii] = parentAnalysis({\n\t//                 rowData: item,\n\t//                 rowKey,\n\t//                 parentKey: expandParentKey,\n\t//                 checked: true,\n\t//                 nodeAssociated,\n\t//                 treeData: _rows,\n\t//                 selectedRowKeys: _selectedRowKeys,\n\t//                 indeterminateRowKeys: _indeterminateRowKeys,\n\t//             });\n\t//             _indeterminateRowKeys.push(...ii);\n\t//         });\n\t//         setIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\n\t//     }\n\t// }\n\n\tconst _onExpandedRowsChange = (expandedRowKeys) => {\n\t\t// console.log(\"_onExpandedRowsChange\", expandedRowKeys);\n\t\tonExpandedRowsChange(expandedRowKeys);\n\t};\n\tconst _onRowExpand = ({expanded, rowData, rowIndex, rowKey}) => {\n\t\t// console.log(\"_onRowExpand\", rowData, expanded, rowIndex, rowKey);\n\t\tif (expanded) {\n\t\t\tsetExpandedRowKeys([..._expandedRowKeys, rowKey]);\n\n\t\t\tif (expandLazyLoad) {\n\t\t\t\tconst loadParams = {\n\t\t\t\t\tsortBy: _sortBy,\n\t\t\t\t\tfilter: {..._filter, [expandParentKey]: rowKey},\n\t\t\t\t\tsearchLine: _searchValue,\n\t\t\t\t\treload: false,\n\t\t\t\t\texpandRow: rowData,\n\t\t\t\t};\n\t\t\t\t// _callPropsOnLoad(loadParams);\n\t\t\t\t_dataProcessing(loadParams);\n\t\t\t}\n\t\t} else {\n\t\t\tlet expandedRowKeys = [..._expandedRowKeys];\n\t\t\tlet allChildKeys = flatten(\n\t\t\t\tgetTableRowKeys(rowData.children, props.rowKey)\n\t\t\t);\n\t\t\tallChildKeys.push(rowKey);\n\t\t\t// console.log('allChildKeys', allChildKeys);\n\t\t\tsetExpandedRowKeys(\n\t\t\t\texpandedRowKeys.filter((item) => !allChildKeys.includes(item))\n\t\t\t);\n\t\t}\n\t\tonRowExpand({expanded, rowData, rowIndex, rowKey});\n\t};\n\n\t/** COMMAND PANEL FUNCTIONS */\n\n\tconst _getDisabledElementsOfCommandPanel = () => {\n\t\t// console.log('commandPanelProps', commandPanelProps);\n\t\tlet _disabledElements = [...commandPanelProps.disabledElements];\n\t\tif (type === 'infinity') {\n\t\t\t_disabledElements.push('up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => infinity');\n        }\n\t\tif (selectable && _selectedRowKeys.length > 1) {\n\t\t\t_disabledElements.push('addAsCopy', 'edit', 'up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => selectable');\n        }\n\t\tif (_selectedRowKeys.length === 0) {\n\t\t\t_disabledElements.push('addAsCopy', 'edit', 'delete', 'up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => NO select');\n        }\n\t\t// if (expandColumnKey) {\n\t\t\t//|| !selectedRow) {\n\t\t\t// _disabledElements.push('up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => expandColumnKey');\n        // }\n        // console.log('_getDisabledElementsOfCommandPanel => ', _disabledElements, _selectedRowKeys);\n\n        return [...new Set(_disabledElements)];\n\t};\n\n\tconst _onClickAddAsCopy = (event) => {\n\t\t// console.log(\"_onClickAddAsCopy\", selectedRow);\n\t\tcommandPanelProps.onClickAddAsCopy(\n\t\t\tevent,\n\t\t\tfindNodeByRowKey(_rows, rowKey, _selectedRowKeys[0])\n\t\t);\n\t};\n\n\tconst _onClickEdit = (event) => {\n\t\t// console.log(\"_onClickEdit\", selectedRow);\n\t\tcommandPanelProps.onClickEdit(event, {\n\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t});\n\t\t// props.onClickEdit(event, selectedRow);\n\t};\n\n\tconst _onClickDelete = (event) => {\n\t\t// console.log(\"_onClickDelete\", autoDeleteRows, selectedRowKeys);\n\t\tif (autoDeleteRows) {\n\t\t\tif (type === 'localSide') {\n\t\t\t\tsetRowsHandler(\n\t\t\t\t\t_rows.filter(\n\t\t\t\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey])\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t_setRowsHandler(\n\t\t\t\t\t_rows.filter(\n\t\t\t\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey])\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tsetSelectedRowKeys([]);\n\t\t}\n\t\tcommandPanelProps.onClickDelete(event, _selectedRowKeys);\n\t};\n\n\tconst loop = (data, key, callback) => {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tif (data[i][rowKey] === key) {\n\t\t\t\t// console.log(`Selected => index: [${i}], path: [${data[i].path}]`, data);\n\t\t\t\treturn callback(data[i], i, data);\n\t\t\t} else {\n\t\t\t\t// console.log(`Other => index: [${i}], path: [${data[i].path}]`);\n\t\t\t}\n\t\t\tif (data[i].children) {\n\t\t\t\tloop(data[i].children, key, callback);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst _onClickUp = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index - 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data);\n\t\t\tcommandPanelProps.onClickUp(event, {\n\t\t\t\trowIndex: newRowIndex,\n\t\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t}, data);\n\t\t})\n\t};\n\n\tconst _onClickDown = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index + 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data);\n\t\t\tcommandPanelProps.onClickDown(event, {\n\t\t\t\trowIndex: newRowIndex,\n\t\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t}, data);\n\t\t})\n\t};\n\n\tconst _getNewIndexRow = (oldIndex, newIndex) =>\n\t\tnewIndex >= 0 && newIndex < _rows.length ? newIndex : oldIndex;\n\n\tconst _changeIndexRow = (oldIndex, newIndex, arr, data) => {\n\t\tif (newIndex >= 0 && newIndex < arr.length) {\n\t\t\t// let arr = [..._rows]; // Копируем массив\n\t\t\tconst item = arr.splice(oldIndex, 1); // Удаляем элемент со старого места\n\t\t\t// console.log('_changeIndexRow => ',item);\n\t\t\tarr.splice(newIndex > 0 ? newIndex : 0, 0, item[0]); // Ставим элемент на новое место\n\t\t\t// console.log(\"_changeIndexRow\", item[0]);\n\t\t\tif (type === 'localSide') {\n\t\t\t\tsetRowsHandler(data);\n\t\t\t} else {\n\t\t\t\t_setRowsHandler(data);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst _onSearch = (searchLine, e) => {\n        e.preventDefault();\n\t\t// console.log(\"_onSearch\", searchLine);\n        tableRef.current.scrollToRow(0, 'auto');\n\t\tsetSearchValue(searchLine);\n\t\tconst loadParams = {\n\t\t\tsortBy: _sortBy,\n\t\t\tfilter: _filter,\n\t\t\tsearchLine: searchLine,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t\tcommandPanelProps.onSearch(searchLine);\n\t};\n\n\t/** FILTER PANEL FUNCTIONS */\n\n\tconst _onChangeFilter = (filter) => {\n\t\t// console.log('_onChangeFilter', filter);\n\t\tsetHasMore(true);\n\t\tsetFilter(filter);\n\t\tfilterPanelProps.onChangeFilter(filter);\n\t};\n\tconst _onApplyFilter = (filter) => {\n\t\t// console.log('_onApplyFilter', filter);\n\t\tconst loadParams = {\n\t\t\tsortBy: _sortBy,\n\t\t\tfilter: filter,\n\t\t\tsearchLine: _searchValue,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t\tfilterPanelProps.onApplyFilter(filter);\n\t};\n\n\t/** SELECTED PANEL */\n\n\tconst _onClickDropSelectHandler = (dropObject) => {\n\t\tconst newSelectedKeys = _selectedRowKeys.filter(\n\t\t\t(item) => item !== dropObject[rowKey]\n\t\t);\n\t\tsetSelectedRowKeys(newSelectedKeys);\n\t\tonSelectedRowsChange(newSelectedKeys);\n\t};\n\n\t// const rowProps = {\n\t//     // tagName: 'button',\n\t//     // onClick: e => {\n\t//     //     e.preventDefault();\n\t//     //     e.stopPropagation();\n\t//     //     console.log(`You clicked row onClick`)\n\t//     // },\n\t//     onDoubleClick: e => {\n\t//         e.preventDefault();\n\t//         e.stopPropagation();\n\t//         console.log(`You clicked row onDoubleClick`)\n\t//     }\n\t// };\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`${rtPrefix}-table`}\n\t\t\tstyle={{width: '100%', height: '100%'}}\n\t\t>\n\t\t\t<div className={`${rtPrefix}-table-top-panel`}>\n\t\t\t\t<CommandPanel\n\t\t\t\t\t{...commandPanelProps}\n\t\t\t\t\tdefaultValueSearch={defaultSearchValue}\n\t\t\t\t\tdisabledElements={_getDisabledElementsOfCommandPanel()}\n\t\t\t\t\tonClickAddAsCopy={_onClickAddAsCopy}\n\t\t\t\t\tonClickDelete={_onClickDelete}\n\t\t\t\t\tonClickDown={_onClickDown}\n\t\t\t\t\tonClickEdit={_onClickEdit}\n\t\t\t\t\tonClickUp={_onClickUp}\n\t\t\t\t\tonSearch={_onSearch}\n\t\t\t\t/>\n\t\t\t\t{/*{!filter ? (*/}\n\t\t\t\t<FilterPanel\n\t\t\t\t\t{...filterPanelProps}\n\t\t\t\t\tdefaultFilter={defaultFilter}\n\t\t\t\t\tonChangeFilter={_onChangeFilter}\n\t\t\t\t\tonApplyFilter={_onApplyFilter}\n\t\t\t\t/>\n\t\t\t\t{/*) : null}*/}\n\t\t\t</div>\n\t\t\t<div className={`${rtPrefix}-baseTable`}>\n\t\t\t\t<AutoResizer>\n\t\t\t\t\t{({width, height}) => (\n\t\t\t\t\t\t<BaseTable\n\t\t\t\t\t\t\tref={tableRef}\n\t\t\t\t\t\t\t/** Required */\n\t\t\t\t\t\t\tcolumns={_getColumns()}\n\t\t\t\t\t\t\tdata={_rows}\n\t\t\t\t\t\t\t/** Control Props */\n\t\t\t\t\t\t\tsortBy={_sortBy}\n\t\t\t\t\t\t\t/** Base Props */\n\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\trowKey={rowKey}\n\t\t\t\t\t\t\t// rowProps={rowProps}\n\n\t\t\t\t\t\t\t/** View Props */\n\t\t\t\t\t\t\trowClassName={_rowClassName}\n\t\t\t\t\t\t\temptyRenderer={empty}\n\t\t\t\t\t\t\tfixed={fixWidthColumn}\n\t\t\t\t\t\t\tfooterHeight={_footerShow ? footerProps.height : 0}\n\t\t\t\t\t\t\theaderHeight={headerHeight}\n\t\t\t\t\t\t\trowHeight={rowHeight}\n\t\t\t\t\t\t\toverlayRenderer={loading ? overlay : null}\n\t\t\t\t\t\t\tfooterRenderer={_footer}\n\t\t\t\t\t\t\trowRenderer={rowRenderer}\n\t\t\t\t\t\t\testimatedRowHeight={estimatedRowHeight}\n\t\t\t\t\t\t\t/** Load Data Props */\n\t\t\t\t\t\t\tonEndReachedThreshold={loadThreshold}\n\t\t\t\t\t\t\tonEndReached={\n\t\t\t\t\t\t\t\ttype === 'infinity' ? onEndReached : undefined\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t/** Tree Props */\n\t\t\t\t\t\t\texpandColumnKey={expandColumnKey}\n\t\t\t\t\t\t\texpandedRowKeys={_expandedRowKeys}\n\t\t\t\t\t\t\t/** Events */\n\t\t\t\t\t\t\tonColumnSort={_onColumnSort}\n\t\t\t\t\t\t\trowEventHandlers={_rowEventHandlers}\n\t\t\t\t\t\t\tonExpandedRowsChange={_onExpandedRowsChange}\n\t\t\t\t\t\t\tonRowExpand={_onRowExpand}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</AutoResizer>\n\t\t\t</div>\n\t\t\t{showSelection && selectable && !expandColumnKey ? (\n\t\t\t\t<SelectionList\n\t\t\t\t\tonClickDropSelect={_onClickDropSelectHandler}\n\t\t\t\t\tselectedRowObjects={flatten(\n\t\t\t\t\t\tgetTableRowObjects(_rows, rowKey)\n\t\t\t\t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]))}\n\t\t\t\t\trowRender={rowRenderShowSelection}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</div>\n\t);\n});\n\nTable.propTypes = {\n\t/**\n\t * REQUIRED\n\t * */\n\n\t/** Столбцы таблицы */\n\tcolumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Тип таблицы\n\t * **infinity** - загрузка данных по скроллу. Фильтрация, сортировка и поиск через сервер.\n\t * **serverSide** - первичная загрузка таблицы с сервера. Фильтрация, сортировка и поиск через сервер. Lazy Load для дерева тоже тут.\n\t * **localSide** - полностью локальная таблица. Фильтрация, сортировка и поиск через локальный rows */\n\ttype: PropTypes.oneOf(['infinity', 'serverSide', 'localSide']).isRequired,\n\n\t/** Объект со свойствами Command Panel */\n\tcommandPanelProps: PropTypes.object,\n\n\t/** Объект со свойствами Filter Panel */\n\tfilterPanelProps: PropTypes.object,\n\n\t/**\n\t * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n\t * */\n\n\t/** Строки по умолчанию */\n\tdefaultRows: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Ключи выделенных по умолчанию строк */\n\tdefaultSelectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска по умолчанию строк */\n\tdefaultSearchValue: PropTypes.string,\n\n\t/** Объект фильтрации по умолчанию */\n\tdefaultFilter: PropTypes.object,\n\n\t/** Сортировка по умолчанию */\n\tdefaultSortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n\t * */\n\n\t/** Строки таблицы. Используется для контроля таблицы из вне. */\n\trows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Функция задания строк таблицы. */\n    setRows: PropTypes.func,\n\n\t/** Выделенные строки таблицы. */\n\tselectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Объект фильтрации */\n\tfilter: PropTypes.object,\n\n\t/** Объект сортировки */\n\tsortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * BASE PROPS\n\t * */\n\n\t/** Автоудаление строк из таблицы по кнопке в командной панели*/\n\tautoDeleteRows: PropTypes.bool,\n\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/**\n\t * VIEW PROPS\n\t * */\n\n\t/** Вывод когда нет данных */\n\tempty: PropTypes.element,\n\n\t/** Отображение загрузки данных */\n\toverlay: PropTypes.element,\n\n\t/** Фиксированная ширина столбцов. Появится боковой скрол */\n\tfixWidthColumn: PropTypes.bool,\n\n\t/** Высота подвала */\n\tfooterHeight: PropTypes.number,\n\n\t/** Отображать ли подвал */\n\tfooterShow: PropTypes.bool,\n\n    /** Заголовки футтера */\n    footerTitles: PropTypes.shape({\n\t\t/** Заголовок выделенных элементов */\n        selectedRows: PropTypes.string,\n\t\t/** Заголовок загруженных элементов */\n        loadedRows: PropTypes.string,\n\t\t/** Заголовок всего элементов */\n\t\ttotalRows: PropTypes.string,\n    }),\n\n\tfooterProps: PropTypes.shape({\n\n\t\t/** Высота подвала */\n\t\theight: PropTypes.number,\n\n\t\t/** Массив элементов футтера, которые надо отобразить\n\t\t * ['selected', 'loaded', 'total'] */\n\t\tshowElements: PropTypes.arrayOf(PropTypes.string),\n\n\t\t/** Заколовок для кол-ва выбранных объектов */\n\t\tselectedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва загруженны объектов */\n\t\tloadedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва всего объектов */\n\t\ttotalTitle: PropTypes.string,\n\n\t\t/** Левый кастомный элемент командной панели */\n\t\tleftCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/** Центральный кастомный элемент командной панели */\n\t\tcenterCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/** Правый кастомный элемент командной панели */\n\t\trightCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\t}),\n\n\t/** Высота заголовка таблицы */\n\theaderHeight: PropTypes.number,\n\n\t/** Высота строки таблицы */\n\trowHeight: PropTypes.number,\n\n\t/** Custom row renderer\n\t * Параметры - ({ isScrolling, cells, columns, rowData, rowIndex, depth }) */\n\trowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n\t/** Строки будут в зебро-стиле */\n\tzebraStyle: PropTypes.bool,\n\n\t/**\n\t * LOAD DATA PROPS\n\t * */\n\n\t/** Порог в пикселях для вызова _onLoad.\n\t * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n\tloadThreshold: PropTypes.number,\n\n\t/** Размер страницы */\n\tpageSize: PropTypes.number,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\t/**\n\t * SELECTABLE PROPS\n\t * */\n\n\t/** Таблица с возможностью выбора строки */\n\tselectable: PropTypes.bool,\n\n\t/**\n\t * TREE PROPS\n\t * */\n\n\t/** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\n\tnodeAssociated: PropTypes.bool,\n\n\t/** Ключ колонки по которой строить иерархию */\n\texpandColumnKey: PropTypes.string,\n\n\t/** Открыть по умолчанию вложенность до уровня N или 'All' */\n\texpandDefaultAll: PropTypes.bool,\n\n\t/** Загружать ноды иерархии по одной */\n\texpandLazyLoad: PropTypes.bool,\n\n\t/** Поле в котором хранится ссылка на родителя */\n\texpandParentKey: PropTypes.string,\n\n\t/**\n\t * EVENTS\n\t * */\n\n\t/** Событие при клике на строку (только при selectable = false)\n\t * Параметр - ({selected, rowData, rowIndex}) */\n\tonRowClick: PropTypes.func,\n\n\t/** Событие при двойном клике на строку.\n\t * Параметр - ({rowData, rowIndex, rowKey}) */\n\tonRowDoubleClick: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * Парметры - ({ expanded, rowData, rowIndex, rowKey }) */\n\tonRowExpand: PropTypes.func,\n\n\t/** Событие при выборе строки.\n\t * Параметр - массив выбранных строе (только rowKey) */\n\tonSelectedRowsChange: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * Парметры - (expandedRowKeys) - массив ключей открытых нод */\n\tonExpandedRowsChange: PropTypes.func,\n\n\t/** SELECTED PANEL */\n\n\t/** Отображать ли панель выбранных элементов */\n\tshowSelection: PropTypes.bool,\n\n\t/** Строка или функция для отображения элементов списка выбранных\n\t * Строка - имя поля\n\t * Функция - рендер строк.\n\t * `({ rowData, rowIndex }) => { return <Component> }` */\n\trowRenderShowSelection: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.string,\n\t]),\n\n\t/** Путь в сторе куда класть выбранную строку таблицы */\n\tdispatchPath: PropTypes.string,\n\n\t/** Объект для подписки на изменения в STORE */\n\tsubscribe: PropTypes.object,\n};\n\nTable.defaultProps = {\n\tdefaultRows: [],\n\tdefaultSelectedRowKeys: [],\n\tdefaultSearchValue: '',\n\tdefaultFilter: {},\n\tdefaultSortBy: {},\n\n\trows: [],\n\tselectedRowKeys: [],\n\tsearchValue: '',\n\tfilter: {},\n\tsortBy: {},\n\n\tautoDeleteRows: true,\n\trowKey: 'id',\n\n\tempty: empty,\n\toverlay: overlay,\n\tfixWidthColumn: false,\n\tfooterHeight: 30,\n\tfooterShow: false,\n    footerTitles: {\n        selectedRows: 'Выделено:',\n        loadedRows: 'Загружено записей:',\n        totalRows: 'Всего записей:',\n    },\n\tfooterProps: {\n\t\theight: 30,\n\t\tshowElements: [],\n\t\tselectedTitle: 'Выделено:',\n\t\tloadedTitle: 'Загружено записей:',\n\t\ttotalTitle: 'Всего записей:',\n\t\tleftCustomSideElement: null,\n\t\tcenterCustomSideElement: null,\n\t\trightCustomSideElement: null\n\t},\n\theaderHeight: 30,\n\trowHeight: 30,\n\tzebraStyle: false,\n\n\tloadThreshold: 300,\n\tpageSize: 50,\n\trequestLoadRows: noop,\n    requestLoadCount: noop,\n\tsearchParamName: 'searchLine',\n\n\tselectable: false,\n\n\tnodeAssociated: true,\n\texpandColumnKey: undefined,\n\texpandDefaultAll: true,\n\texpandLazyLoad: false,\n\texpandParentKey: 'parentId',\n\n\tonRowClick: noop,\n\tonRowDoubleClick: noop,\n\tonRowExpand: noop,\n\tonSelectedRowsChange: noop,\n\tonExpandedRowsChange: noop,\n\n\tshowSelection: false,\n\n\tsubscribe: {},\n};\n\nconst mapStateToProps = (store, ownProps) => {\n\tconst {subscribe} = ownProps;\n\tif(subscribe){\n\t\tconst {name, path} = subscribe;\n\t\tif(name && path)\n\t\t\treturn { [name]: objectPath.get(store, path) };\n\t}\n\n\treturn {};\n};\nconst mapDispatchToProps = (dispatch) =>\n\tbindActionCreators({ setDataStore: setDataStore}, dispatch);\n\n// const mapStateToProps = (store, ownProps) => {\n//     // console.log(\"mapStateToProps -> store\", store);\n//     // const {match , section} = ownProps;\n//     // const { path } = match;\n//     // const rows = store.table[path] && store.table[path][section] ? store.table[path][section].rows : [];\n//     // console.log(\"mapStateToProps -> rows\", rows);\n//     return { store: store };\n// };\n// const mapDispatchToProps = (dispatch, ownProps) => {\n//     // console.log(\"mapDispatchToProps -> ownProps\", ownProps);\n//     // const {match , section} = ownProps;\n//     // const { path } = match;\n//     // initTableStore(path, section);\n//     return bindActionCreators(\n//         {\n//             initTableStore,\n//             setRows,\n//         },\n//         dispatch\n//     );\n// };\n//\n// export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\n\n/**\n * @deprecated [#1] since version 0.0.54 [#2].\n * */\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\n","import React, {useEffect, useState, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { flatten, getTableRowKeys, noop, notificationError } from \"../../utils/baseUtils\";\nimport {rtPrefix} from '../../utils/variables';\nimport {Button, Typography} from 'antd';\nimport { DownOutlined, UpOutlined, CloseCircleFilled } from '@ant-design/icons'\nimport Table from '../Table/Table';\nimport { setDataStore } from \"../../../redux/rtd.actions\";\nconst {Paragraph} = Typography;\n\nconst Select = (props) => {\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n\tconst [_selectedRowData, _setSelectedRowData] = useState(null);\n\tconst [isSelectOpened, setIsSelectOpened] = useState(false);\n\tconst [isClickInSelect, setIsClickInSelect] = useState(false);\n\n\tconst {\n\t\tname,\n\t\trowRender,\n        className,\n\t\ttype,\n\t\ttitle,\n\t\tplaceholder,\n        selectedRowKeys,\n\t\t// searchable,\n        size,\n\t\twidthControl,\n\t\twidthPopup,\n\t\theightPopup,\n\n\t\tonChangeKeys,\n        defaultValue,\n        value,\n\n\t\t/** Table Props */\n\t\tdefaultSelectedRowKeys,\n\t\trowKey,\n\t\texpandColumnKey,\n\t\tshowSelection,\n\t\trequestLoadRows,\n\t\trequestLoadDefault,\n        commandPanelProps,\n\t\trows,\n\t\tdispatchPath,\n\t} = props;\n\n\tconst selectedDispatchPath = dispatchPath && `${dispatchPath}.selected`;\n\tconst searchable = commandPanelProps && commandPanelProps.showElements && commandPanelProps.showElements.includes('search');\n\tconst node = useRef(null);\n\n\tconst setSelectedRowData = (rowData) => {\n\t\tselectedDispatchPath && props.setDataStore && props.setDataStore(selectedDispatchPath, rowData);\n\t\t_setSelectedRowData(rowData);\n\t}\n\n\tconst loadSelectedObject = ({selectedRowKeys}) => {\n        if(selectedRowKeys) {\n            let _selectedRowKeys;\n\t\t\tif(Array.isArray(selectedRowKeys)) {\n\t\t\t\tsetSelectedRowKeys(selectedRowKeys);\n\t\t\t\t_selectedRowKeys = selectedRowKeys\n\t\t\t}\n            else {\n            \tsetSelectedRowKeys([selectedRowKeys]);\n\t\t\t\t_selectedRowKeys = [selectedRowKeys]\n\t\t\t}\n\n\t\t\t// console.log(\"setSelectedRowKeys[70] -> \", _selectedRowKeys);\n\n\t\t\tconst request = requestLoadDefault\n                ? requestLoadDefault\n                : requestLoadRows;\n\n            if (!!request && !rows && _selectedRowKeys.length > 0) {\n                // console.log('defaultSelectedRowKeys ', defaultSelectedRowKeys, defaultSelectedRowKeys.length);\n                request({\n                    data: {\n                        [rowKey]:  _selectedRowKeys, //defaultSelectedRowKeys,\n                    },\n                })\n                    .then((response) => {\n                        let result = response.data;\n\t\t\t\t\t\t// console.log(\"setSelectedRowData[84] => \", response.data);\n\t\t\t\t\t\tif (result.length > 0) setSelectedRowData(result[0]);\n                    })\n\t\t\t\t\t.catch(error => notificationError(error, 'Ошибка загрузки данных в Select') );\n\n            } else if (rows && _selectedRowKeys && type === 'SingleSelect') {\n            \tlet srk = _selectedRowKeys[0];\n\t\t\t\t// if(Array.isArray(selectedRowKeys) && selectedRowKeys.length > 0)\n\t\t\t\t// \tsrk = selectedRowKeys[0];\n            \t// else\n\t\t\t\t// \tsrk = selectedRowKeys;\n\n                const findRow = rows.find((row) => row[rowKey] === srk);\n                // console.log(\"setSelectedRowData[98] => \", findRow, rows, srk);\n                setSelectedRowData(findRow);\n            } else {\n                setSelectedRowData(null);\n            }\n        }\n\t};\n\n\tuseEffect(() => {\n        loadSelectedObject({selectedRowKeys: defaultSelectedRowKeys});\n\t\twindow.addEventListener('mousedown', handleMouseClick, false);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('mousedown', handleMouseClick, false);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// console.log(\"selectedRowKeys\", selectedRowKeys);\n        loadSelectedObject({selectedRowKeys: selectedRowKeys});\n    }, [selectedRowKeys]);\n\n\tuseEffect(() => {\n\t\tif(_selectedRowKeys !== undefined && _selectedRowData === undefined){\n\t\t\t// console.log(\"useEffect rows\", _selectedRowKeys, _selectedRowData, rows);\n\t\t\tloadSelectedObject({selectedRowKeys: _selectedRowKeys});\n\t\t}\n\t}, [rows])\n\n\tuseEffect(() => {\n\t\t// console.log(\"isClickInSelect \", isClickInSelect);\n\t\t// console.log(\"isSelectOpened \", isSelectOpened);\n\t\tif(!isClickInSelect && isSelectOpened)\n\t\t\tonClosePopup();\n\t}, [isClickInSelect]);\n\n\t// useEffect(() => {\n\t// \t// console.log(\"setSelectedRowData[117] => \", props.value, props.defaultValue);\n\t// }, [props])\n\n\tconst columns = [\n\t\t{\n\t\t\tkey: rowKey,\n\t\t\ttitle: title,\n\t\t\tdataKey: rowKey,\n\t\t\twidth: 500,\n\t\t\tcellRenderer:\n\t\t\t\ttypeof rowRender === 'function'\n\t\t\t\t\t? rowRender\n\t\t\t\t\t: ({rowData}) => <div className={'rt-table-cell'}>{rowData[rowRender]}</div>,\n\t\t},\n\t];\n\n\tconst _getHeadCls = () => {\n\t    let cls = [`${rtPrefix}-select-header`];\n\n\t    if(isSelectOpened)\n            cls.push('opened');\n\n\t    if(_selectedRowKeys && _selectedRowKeys.length > 0)\n\t        cls.push('selected');\n\n\t    switch (size) {\n            case 'small':\n                cls.push(`${rtPrefix}-select-header-sm`);\n                break;\n            case 'large':\n                cls.push(`${rtPrefix}-select-header-lg`);\n                break;\n            default: break;\n        }\n\n\t    return cls.join(' ');\n    };\n\n\tconst _getHeadText = () => {\n\t\tif (type === 'SingleSelect') {\n\t\t\t\tif(_selectedRowData)\n\t\t\t\t\tif(typeof rowRender === 'function')\n\t\t\t\t\t\treturn rowRender({rowData: _selectedRowData});\n\t\t\t\t\telse\n\t\t\t\t\t\treturn `${_selectedRowData[rowRender]}`;\n\t\t\t\telse\n\t\t\t\t\treturn `${placeholder}`;\n\t\t} else {\n\t\t\treturn _selectedRowKeys.length > 0\n\t\t\t\t? `Выбрано: ${_selectedRowKeys.length}`\n\t\t\t\t: `${placeholder}`;\n\t\t}\n\t};\n\n    const _getPopupCls = () => {\n    \t// console.log('_getPopupCls _selectedRowKeys => ', _selectedRowKeys);\n        let cls = [`${rtPrefix}-select-popup`];\n\n        if(title)\n            cls.push(`${rtPrefix}-select-popup-with-title`);\n\n        return cls.join(' ');\n    };\n\tconst _getPopupStyle = () => {\n\t\t// if (heightPopup)\n\t\t// \treturn {height: `${heightPopup}px`, width: `${widthPopup}px`};\n\n\t\tlet height = {};\n\t\tlet defRowsLen = 0;\n\n\t\tif (!requestLoadRows && rows)\n\t\t\tif (expandColumnKey)\n\t\t\t\tdefRowsLen = flatten(getTableRowKeys(rows, rowKey)).length;\n\t\t\telse defRowsLen = rows.length;\n\n\t\t// console.log('_getPopupStyle', defRowsLen);\n\t\tif (defRowsLen && defRowsLen > 0) {\n\t\t\theight =\n\t\t\t\tdefRowsLen * 30 + // Кол-во строк * высоту строки\n\t\t\t\t(searchable ? 46 : 0) + // Размер поисковой строки или 0\n\t\t\t\t(type === 'MultiSelect' ? 65 : 0) + // Размер футтера (30) + размер кнопки 35 или 0\n\t\t\t\t(showSelection ? 200 : 0) + // Размер панели выбранных элементов или 0\n\t\t\t\t22; // Паддинги и бордер\n\t\t\t// console.log('heightPopup', height);\n\t\t\tif (height > heightPopup) height = `${heightPopup}px`;\n\t\t\telse height = `${height}px`;\n\t\t} else {\n\t\t\t// console.log(\"heightPopup\", heightPopup);\n\t\t\theight = `${heightPopup}px`;\n\t\t}\n\n\t\t// console.log(\"heightPopup, widthPopup\", heightPopup, widthPopup);\n\t\treturn {height, width: `${widthPopup}px`};\n\t};\n\n\tconst getEvents = () => {\n\t\treturn (commandPanelProps && commandPanelProps.systemBtnProps && Object.keys(commandPanelProps.systemBtnProps)) || [];\n\t};\n\n\tconst _onChange = (selectedKeys) => {\n\t\t// console.log('_onChange [176]', selectedKeys);\n\t\tsetSelectedRowKeys(selectedKeys);\n\t\t// setSelectedRowData(selectedObjects);\n\t\tonChangeKeys(name, selectedKeys.length ? selectedKeys : null);\n\t\t// onChangeObjects(name, selectedObjects.length ? selectedObjects : null);\n\t\t// setCountSelect(selectedKeys.length);\n\t\tif (type === 'SingleSelect') {\n\t\t\tsetIsSelectOpened(false);\n\t\t}\n\t};\n\n\tconst _SingleSelectRow = ({selected, rowData, rowIndex}) => {\n\t\t// console.log(\"_SingleSelectRow => \", rowData);\n\t\tsetSelectedRowData(rowData);\n\t\t// selected ? setSingleSelectRowData(rowData) : setSingleSelectRowData({})\n\t};\n\n\tconst handleMouseClick = (e) => {\n\t\tnode && node.current && setIsClickInSelect(node.current.contains(e.target))\n\t};\n\n\tconst onClosePopup  = () => {\n\t\tsetIsSelectOpened(false);\n\t};\n\n\tconst onOpenPopup = () => {\n\t\tif(!isSelectOpened)\n\t\t\tsetIsSelectOpened(true);\n\t\telse\n\t\t\tsetIsSelectOpened(false);\n\t};\n\n\tconst onClickClear = () => {\n\t\t// console.log(\"delete Selected\");\n\t\tsetSelectedRowData(null);\n\t\t_onChange([]);\n\t};\n\n\treturn (\n\t\t<div\n            className={`${rtPrefix}-select ${className ? className : ''}`}\n\t\t\tref={node}\n\t\t>\n\t\t\t{title ? <div className={'title'}>{title}</div> : null}\n\t\t\t<div\n\t\t\t\tclassName={_getHeadCls()}\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: widthControl === 0 ? '100%' : `${widthControl}px`,\n\t\t\t\t}}\n\n\t\t\t>\n\t\t\t\t<div className={`${rtPrefix}-select-selector`}\n\t\t\t\t\t // onFocus={ () => {setIsSelectOpened(true)} }\n\t\t\t\t\t onClick={ onOpenPopup }\n\t\t\t\t>\n\t\t\t\t\t<Paragraph ellipsis> {_getHeadText()} </Paragraph>\n\t\t\t\t</div>\n                {isSelectOpened ? <UpOutlined onClick={ onOpenPopup } className={`${rtPrefix}-select-header-icon`} /> : <DownOutlined onClick={ onOpenPopup } className={`${rtPrefix}-select-header-icon`}/> }\n\t\t\t\t{/*<Button shape=\"circle\" icon={<CloseCircleFilled />} onClick={() => console.log(\"delete Selected\")} className={`${rtPrefix}-select-header-clear`} />*/}\n\t\t\t\t{_selectedRowKeys.length > 0 ? <CloseCircleFilled onClick={onClickClear} className={`${rtPrefix}-select-header-clear`}/> : null }\n\t\t\t</div>\n\n\t\t\t{isSelectOpened ? (\n\t\t\t\t<div className={_getPopupCls()} style={_getPopupStyle()}>\n\t\t\t\t\t<Table\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t\tcommandPanelProps={{\n\t\t\t\t\t\t\t...props.commandPanelProps,\n\t\t\t\t\t\t\tshowElements: getEvents(),// getShowElements(),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdefaultSelectedRowKeys={_selectedRowKeys}\n                        selectedRowKeys={_selectedRowKeys}\n\t\t\t\t\t\theaderHeight={0}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\ttype={!!requestLoadRows ? 'serverSide' : 'localSide'}\n\t\t\t\t\t\t// showElements={searchable ? ['search'] : undefined}\n\t\t\t\t\t\tselectable={type === 'MultiSelect'}\n\t\t\t\t\t\tfooterShow={type === 'MultiSelect'}\n\t\t\t\t\t\tshowSelection={showSelection}\n\t\t\t\t\t\trowRenderShowSelection={rowRender}\n\t\t\t\t\t\tonRowClick={_SingleSelectRow}\n\t\t\t\t\t\tonSelectedRowsChange={_onChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{type === 'MultiSelect' ? (\n\t\t\t\t\t\t<div className={'close-panel'}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={() => setIsSelectOpened(false)}\n\t\t\t\t\t\t\t\tsize={'small'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tOk\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\nSelect.propTypes = {\n\t/** Имя параметра селекта (вернется в onChangeKeys и onChangeObjects) */\n\tname: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.number,\n\t\tPropTypes.arrayOf(\n\t\t\tPropTypes.oneOfType(\n\t\t\t\t[PropTypes.string, PropTypes.number]\n\t\t\t)\n\t\t)]).isRequired,\n\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { rowData, rowIndex }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n\t\t.isRequired,\n\n\t/** Тип селекта (SingleSelect и MultiSelect) */\n\ttype: PropTypes.oneOf(['SingleSelect', 'MultiSelect']).isRequired,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Заголовок фильтра */\n\ttitle: PropTypes.string,\n\n\t/** Строка, когда ничего не выбрано */\n\tplaceholder: PropTypes.string,\n\n\t/** Запрос на загрузку дефолтных данных */\n\trequestLoadDefault: PropTypes.func,\n\n    /** Массив выбранных значений */\n    selectedRowKeys: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n\n    /** Размер селектора ['small', 'middle', 'large'] */\n    size: PropTypes.oneOf(['small', 'middle', 'large']),\n\n\t// /** Показывать ли поисковую строку */\n\t// searchable: PropTypes.bool,\n\n\t/** Ширина поля выбора в пикселях */\n\twidthControl: PropTypes.number,\n\n\t/** Ширина выпадающего меню */\n\twidthPopup: PropTypes.number,\n\n\t/** Высота выпадающего меню (по умолчанию считается сама) */\n\theightPopup: PropTypes.number,\n\n    /** Событие об изменении состояния селектора */\n\tonChangeKeys: PropTypes.func,\n\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/** Высота строки таблицы */\n\trowHeight: PropTypes.number,\n\n\t/** Строки будут в зебро-стиле */\n\tzebraStyle: PropTypes.bool,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadCount: PropTypes.func,\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\t/** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\n\tnodeAssociated: PropTypes.bool,\n\n\t/** Ключ колонки по которой строить иерархию */\n\texpandColumnKey: PropTypes.string,\n\n\t/** Открыть по умолчанию вложенность до уровня N или 'All' */\n\texpandDefaultAll: PropTypes.bool,\n\n\t/** Загружать ноды иерархии по одной */\n\texpandLazyLoad: PropTypes.bool,\n\n\t/** Поле в котором хранится ссылка на родителя */\n\texpandParentKey: PropTypes.string,\n};\n\nSelect.defaultProps = {\n\tonChangeKeys: noop,\n\t// onChangeObjects: noop,\n\tplaceholder: 'Выбрать',\n\t// searchable: false,\n    size: 'middle',\n\twidthControl: 110,\n\twidthPopup: 400,\n\theightPopup: 600,\n    rowKey: 'id',\n\trowHeight: 30,\n\tzebraStyle: false,\n\n\trequestLoadDefault: undefined,\n\trequestLoadRows: undefined,\n\trequestLoadCount: undefined,\n\tsearchValue: '',\n\tsearchParamName: 'searchLine',\n\n\tnodeAssociated: true,\n\texpandColumnKey: undefined,\n\texpandDefaultAll: true,\n\texpandLazyLoad: false,\n\texpandParentKey: 'parentId',\n};\nconst mapDispatchToProps = (dispatch) =>\n\tbindActionCreators({ setDataStore: setDataStore}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(Select);\n","import React, {forwardRef, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '../Table/Table';\nimport { notification, Typography } from \"antd\";\nimport { notificationError } from \"../../utils/baseUtils\";\n\nconst AdvancedTable = forwardRef((props, ref) => {\n\tconst [config, setConfig] = useState({});\n\n\tconst {\n\t\tconfigData,\n        customColumnProps,\n\t\tdefaultFilter,\n\t\texpandColumnKey,\n\t\texpandLazyLoad,\n\t\texpandParentKey,\n\t\tpageSize,\n\t\trowKey,\n\t\trequestLoadConfig,\n\t} = props;\n\n\tuseEffect(() => {\n        let cleanupFunction = false;\n        const loadData = async () => {\n            if (requestLoadConfig) {\n                // console.log('requestLoadConfig => ', typeof requestLoadConfig);\n                // console.log('requestLoadRows => ', typeof props.requestLoadRows);\n                requestLoadConfig()\n                    .then((response) => {\n                        // let result = response.data;\n                        // console.log('requestLoadConfig -> ', response.data);\n                        if(!cleanupFunction)\n                            setConfig(response.data);\n                    })\n                    .catch(error => notificationError(error, 'Ошибка получения конфигурации') );\n            } else {\n                if(!cleanupFunction)\n                    setConfig(configData);\n            }\n        };\n        loadData();\n        return () => cleanupFunction = true;\n\t}, []);\n\n\tconst columnsByConfig = () =>\n\t\tconfig &&\n\t\tconfig.fields &&\n\t\tconfig.fields.map((item) => {\n\n\t\t\tconst colProps =\n                customColumnProps &&\n                customColumnProps.find(\n                    (render) =>\n                        render.name === item.name || render.name === item.alias\n                );\n\t\t\treturn {\n\t\t\t\tkey: item.name,\n\t\t\t\ttitle: item.header ? item.header : item.name,\n\t\t\t\tdataKey: item.alias ? item.alias : item.name,\n\t\t\t\talign: item.align,\n\t\t\t\twidth: item.width,\n\t\t\t\tresizable: item.resizable,\n\t\t\t\tsortable: item.sortable,\n\t\t\t\thidden: !item.visible,\n\t\t\t\t// cellRenderer: cellR && cellR.cellRender,\n                ...colProps,\n                cellRenderer: (object) => {\n\t\t\t\t\tif (colProps && colProps.cellRenderer)\n\t\t\t\t\t\treturn <colProps.cellRenderer {...object}/>\n\t\t\t\t\t// return colProps.cellRenderer(object) ? colProps.cellRenderer(object) : '---';\n\t\t\t\t\telse\n\t\t\t\t\t\treturn object.cellData\n\t\t\t\t\t\t\t? <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>{object.cellData}</Typography.Text>\n\t\t\t\t\t\t\t: <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>---</Typography.Text> ;\n\t\t\t\t\t// return object.cellData ? object.cellData : '---';\n                },\n\t\t\t};\n\t\t});\n\n\tconst getDefaultFilter = () => {\n\t\tif (config && config.hierarchical && config.hierarchyLazyLoad) {\n\t\t\tconst parentKey = config.hierarchyField\n\t\t\t\t? config.hierarchyField.split('/')[1]\n\t\t\t\t: expandParentKey;\n\t\t\treturn {...defaultFilter, [parentKey]: null};\n\t\t} else return defaultFilter;\n\t};\n\n\tif (config && config.fields) {\n\t\t// console.log('AdvancedTable render table -> ', config);\n\t\treturn (\n\t\t\t<Table\n\t\t\t\t{...props}\n\t\t\t\tref={ref}\n\t\t\t\tcolumns={columnsByConfig()}\n\t\t\t\tdefaultFilter={getDefaultFilter()}\n\t\t\t\trowKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyField\n\t\t\t\t\t\t? config.hierarchyField.split('/')[0]\n\t\t\t\t\t\t: rowKey\n\t\t\t\t}\n\t\t\t\texpandParentKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyField\n\t\t\t\t\t\t? config.hierarchyField.split('/')[1]\n\t\t\t\t\t\t: expandParentKey\n\t\t\t\t}\n\t\t\t\texpandColumnKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyView\n\t\t\t\t\t\t? config.hierarchyView\n\t\t\t\t\t\t: expandColumnKey\n\t\t\t\t}\n\t\t\t\texpandLazyLoad={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyLazyLoad\n\t\t\t\t\t\t? config.hierarchyLazyLoad\n\t\t\t\t\t\t: expandLazyLoad\n\t\t\t\t}\n\t\t\t\tpageSize={config && config.hierarchical ? 1 : pageSize}\n\t\t\t/>\n\t\t);\n\t} else return null;\n});\n\nAdvancedTable.propTypes = {\n\t/** Функция запроса на получение конфига для таблицы */\n\trequestLoadConfig: PropTypes.func,\n\n\t/** Конфигурация внешнего вида таблицы */\n\tconfigData: PropTypes.shape({\n\t\thierarchical: PropTypes.bool,\n\t\thierarchyField: PropTypes.string,\n\t\thierarchyView: PropTypes.string,\n\t\thierarchyLazyLoad: PropTypes.bool,\n\t\tfields: PropTypes.arrayOf(\n\t\t\tPropTypes.shape({\n\t\t\t\tname: PropTypes.string,\n\t\t\t\talias: PropTypes.string,\n\t\t\t\theader: PropTypes.string,\n\t\t\t\tvisible: PropTypes.bool,\n\t\t\t\tresizable: PropTypes.bool,\n\t\t\t\tsortable: PropTypes.bool,\n\t\t\t\talign: PropTypes.oneOf(['left', 'center', 'right']),\n\t\t\t\twidth: PropTypes.number,\n\t\t\t})\n\t\t),\n\t}),\n\n\t/** Дополнительные пропсы для колонок */\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\n};\n\nAdvancedTable.defaultProps = {};\n\nexport default AdvancedTable;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormItems from \"./FormItems\";\nimport { Form as AntForm, notification } from \"antd\";\nimport { getObjectExcludedProps, noop, notificationError } from \"../../utils/baseUtils\";\nimport { rtPrefix } from \"../../utils/variables\";\n\nconst excludeProps = [\"noPadding\", \"scrollable\", \"header\", \"body\", \"footer\", \"loadInitData\", \"autoSaveForm\", \"requestSaveForm\", \"methodSaveForm\", \"processBeforeSaveForm\"];\n\n\nconst Form = (props) => {\n    const { loadInitData, header, body, footer,\n        autoSaveForm, requestSaveForm, methodSaveForm, processBeforeSaveForm } = props;\n\n    /** Состояние первоначалной настройки компонента*/\n    const [loaded, setLoaded] = useState(false);\n    const [antFormProps, setAntFormProps] = useState({});\n    const [initFormData, setInitFormData] = useState({});\n\n    useEffect(() => {\n        if (!loaded) {\n            if (loadInitData !== noop)\n                loadInitData(_setInitFormData);\n            else\n                setLoaded(true);\n        }\n    }, [loaded]);\n\n    useEffect(() => {\n        setAntFormProps(getObjectExcludedProps(props, excludeProps));\n        // console.log('antFormProps props => ', getObjectExcludedProps(props, excludeProps));\n    }, [props]);\n\n\n    const _setInitFormData = (data) => {\n        // console.log(\"Form loaded init data => \", data);\n        setInitFormData(data);\n        setLoaded(true);\n    };\n\n\n    let antForm;\n    if (props && props.form) {\n        antForm = props.form;\n    } else {\n        const [form] = AntForm.useForm();\n        antForm = form;\n    }\n\n    const getBodyCls = () => {\n        let cls = [`${rtPrefix}-form-body`];\n        props.noPadding && cls.push(`${rtPrefix}-form-body-no-padding`);\n        props.scrollable && cls.push(`${rtPrefix}-form-body-scrollable`);\n        return cls.join(\" \");\n    };\n\n    const onFinish = (rawValues) => {\n        const values = processBeforeSaveForm ? processBeforeSaveForm(rawValues) : rawValues;\n        console.log(`Success form [${props.name ? props.name : 'no name form'}]: `, values);\n        if (autoSaveForm && requestSaveForm) {\n            const saveObject = {\n                ...initFormData,\n                ...values,\n                // dateStart: getISO(values['dateStart'])\n            };\n            requestSaveForm({\n                method: methodSaveForm,\n                data: saveObject\n            })\n                .then(response => {\n                    notification.success({\n                        message: \"Сохранение прошло успешно\"\n                    });\n                    if (props.onFinish)\n                        props.onFinish(values);\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\n        } else if (props.onFinish)\n            props.onFinish(values);\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.error(\"Failed:\", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    return (\n        <React.Fragment>\n            {loaded ?\n                <AntForm\n                    form={antForm}\n                    {...antFormProps}\n                    className={`${antFormProps.className} ${rtPrefix}-form`}\n                    style={{ ...antFormProps.style, width: '100%', height: '100%' }}\n                    initialValues={{ ...antFormProps.initialValues, ...initFormData }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                >\n                    {header ? <div className={`${rtPrefix}-form-header`}><FormItems items={header}/></div> : null}\n                    <div className={getBodyCls()}><FormItems items={body}/></div>\n                    {footer ? <div className={`${rtPrefix}-form-footer`}><FormItems items={footer}/></div> : null}\n                </AntForm>\n                : null}\n        </React.Fragment>\n    );\n};\n\nForm.propTypes = {\n\n    /** Не делать отступы у формы от краев блока */\n    noPadding: PropTypes.bool,\n\n    /** scrollable\n     */\n    scrollable: PropTypes.bool,\n\n    /** Массив объектов для шапки формы. Как правило только заголовок. */\n    header: PropTypes.arrayOf(PropTypes.object),\n\n    /** Массив объектов для тела формы */\n    body: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n    /** Массив объектов для подвала формы. Как правило только кнопки \"Сохранить\" и \"Отмена\" */\n    footer: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ссылка на функцию загрузки значений по умолчанию\n     * (callBack) => callBack(initObject) */\n    loadInitData: PropTypes.func,\n\n    /** Производить ли автоматическое сохранение по параметрам requestSaveForm и methodSaveForm */\n    autoSaveForm: PropTypes.bool,\n\n    /** Запрос для автоматического сохранения формы */\n    requestSaveForm: PropTypes.func,\n\n    /** HTTP Метод, передаваемый в запрос сохранения */\n    methodSaveForm: PropTypes.string,\n\n    /** Функция обработки перед сохранением формы */\n    processBeforeSaveForm: PropTypes.func,\n};\n\nForm.defaultProps = {\n    noPadding: false,\n    scrollable: false,\n    loadInitData: noop,\n    autoSaveForm: true\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {getObjectExcludedProps} from '../../utils/baseUtils';\nimport Form from './Form';\nimport {Modal} from 'antd';\n\nconst excludeProps = ['type', 'initialValues', 'form'];\n\nconst FormModal = props => {\n\n    const {\n        modal,\n        selectedRow,\n        visible,\n        setVisible,\n        saveRow,\n    } = props;\n\n    const getDefaultFooterProps = () => {\n\n        let okText = '';\n        let cancelText = '';\n        let modalTitle = '';\n\n        switch (modal.type) {\n            case 'addOnServer':\n            case 'addGroupOnServer':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Сохранить на сервере';\n                break;\n            case 'addOnLocal':\n            case 'addGroupOnLocal':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Сохранить локально';\n                break;\n            case 'editOnServer':\n            case 'editGroupOnServer':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Измененить на сервере';\n                break;\n            case 'editOnLocal':\n            case 'editGroupOnLocal':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Изменение локально';\n                break;\n            case 'select':\n                okText = 'Добавить';\n                cancelText = 'Отмена';\n                modalTitle = 'Выбор';\n                break;\n            case 'viewGroup':\n            case 'viewObject':\n                okText = 'Закрыть';\n                modalTitle = 'Просмотр';\n                break;\n            default: break;\n        }\n\n        if(modal.okText)\n            okText = modal.okText;\n\n        if(modal.cancelText)\n            cancelText = modal.cancelText;\n\n        if(modal.title)\n            modalTitle = modal.title;\n\n        return {okText, cancelText, title: modalTitle, okType: 'primary'}\n    };\n\n    let modalProps = { ...getDefaultFooterProps(), ...getObjectExcludedProps(modal, excludeProps) };\n\n    const onFinish = values => {\n        // console.log('FormModal Success:', values, selectedRow);\n        let saveObj = {};\n        if(modal.type.startsWith('add'))\n            saveObj = {...values};\n        else\n            saveObj = {...selectedRow, ...values};\n\n        saveRow({type: modal.type, row: saveObj, requestSaveRow: modal.requestSaveRow});\n\n        if (modalProps.onOk) modalProps.onOk(values);\n        if (modalProps.onFinish) modalProps.onFinish(values);\n    };\n\n    const onFinishFailed = errorInfo => {\n        // console.log('FormModal Failed:', errorInfo);\n        console.error(\"FormModal fields failed: \", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    const _onCancelHandler = (e) => {\n        // setVisibleModals({ ...visibleModals, [modal.type]: false });\n        // form.resetFields();\n        setVisible(modal.type, false);\n        if (modalProps.onCancel) modalProps.onCancel(e)\n    };\n\n    const _onLoadInitData = (callBack) => {\n        // console.log(\"Modal => loadInitData\", selectedRow);\n        formConfig.loadInitData(callBack, selectedRow)\n    }\n\n    const defaultFooter = [\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.cancelText,\n                className: 'mr-8',\n                onClick: _onCancelHandler,\n                ...modalProps.cancelButtonProps\n            }\n        },\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.okText,\n                type: modalProps.okType,\n                htmlType: 'submit',\n                ...modalProps.okButtonProps\n            }\n        }\n    ];\n\n    const formConfig =  {\n        footer: defaultFooter,\n        ...modal.form\n    };\n    return (\n        <Modal\n            {...modalProps}\n            centered\n            destroyOnClose\n            visible={visible}\n            onCancel={_onCancelHandler}\n            bodyStyle={{padding: 0, ...modalProps.bodyStyle}}\n            footer={null}\n        >\n            <Form\n                {...formConfig}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                loadInitData={_onLoadInitData}\n            />\n        </Modal>\n    )\n};\n\nFormModal.propTypes = {\n    /** Объект модального окна */\n    modal: PropTypes.object,\n\n    /** Выделенная строка таблицы */\n    selectedRow: PropTypes.object,\n\n    /** Состояние видимости модалки */\n    visible: PropTypes.bool,\n\n    /** Задание состояния видимости модалки */\n    setVisible: PropTypes.func,\n\n    /** CallBack функция для сохранения данных */\n    saveRow: PropTypes.func,\n};\n\nexport default FormModal;\n","import React, {forwardRef, useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport SortOrder from 'react-base-table/lib/SortOrder';\nimport AdvancedTable from '../AdvancedTable/AdvancedTable';\nimport { generateUUID, getObjectExcludedProps, noop, notificationError } from \"../../utils/baseUtils\";\nimport FormModal from './FormModal';\nimport { notification as antNotification, notification } from \"antd\";\nimport { rtPrefix } from \"../../utils/variables\";\nimport { empty, overlay } from \"../Table/defaultSettings\";\n\n\nconst excludeProps = ['onChange', 'defaultValue', 'modals', 'events', 'history'];\n\nconst FormTable = forwardRef((props, ref) => {\n\n    /** Состояние первоначалной настройки компонента*/\n    const [loading, setLoading] = useState(false);\n\n    /** Состояние отображения модалок таблицы */\n    const [visibleModals, setVisibleModals] = useState({\n        addOnServer: false,\n        editOnServer: false,\n        addOnLocal: false,\n        editOnLocal: false,\n        addGroupOnServer: false,\n        editGroupOnServer: false,\n        addGroupOnLocal: false,\n        editGroupOnLocal: false,\n        select: false,\n        viewGroup: false,\n        viewObject: false});\n    const [tableRows, setTableRows] = useState([]);\n    const [tableSelectedRowKeys, setTableSelectedRowKeys] = useState([]);\n    const [tableSelectedRow, setTableSelectedRow] = useState({});\n\n    /** Ссылка на объект таблицы */\n    const [tableRef, setTableRef] = useState({});\n    const _setTableRef = (_ref) => {\n        setTableRef(_ref);\n        ref && ref(_ref)\n    };\n\n    const {\n        rowKey,\n        rowKeyType,\n        customFields,\n        modals,\n        isGroupKey,\n        history,\n\n        componentType,\n        name,\n\n        // Form.Item props\n        value,\n\n        // Requests\n        requestDeleteRow,\n\n        dataDeleteRow\n    } = props;\n    const cmdProps = props.commandPanelProps;\n\n    // let advancedTableProps = getObjectExcludedProps(props, excludeProps);\n\n    /** Аналог componentDidMounted */\n    useEffect(() => {\n        // Если таблица локальная, то пробуем загрузить исходные данные\n        if(!loading && props.type === 'localSide') {\n            let cleanupFunction = false;\n            setLoading(true);\n            const loadData = async () => {\n                if (!loading && props.requestLoadRows) {\n                    props.requestLoadRows({params: {page: 0, size: 1}, data: {}})\n                        .then((response) => {\n                            // console.log('FormTable -> requestLoadRows -> response', response);\n                            // console.log('FormTable -> requestLoadRows -> value', value);\n                            if (!cleanupFunction)\n                                _addRowsToLocalTable(response.data, value);\n                        })\n                        .catch(error => notificationError(error, 'Ошибка загрузки данных') );\n                }\n                // console.log('FormTable -> setMounted ', advancedTableProps.type);\n                setLoading(false);\n            };\n            loadData();\n            return () => cleanupFunction = true;\n        }\n    }, [props.type]);\n\n    useEffect(() => {\n        if(props.selectable) {\n            console.log(\"FormTable => useEffect => value: \", value);\n            if(value && value.length > 0)\n                setTableSelectedRowKeys(value.map(item => item[rowKey]));\n            else\n                setTableSelectedRowKeys([]);\n\n        }\n    }, [value]);\n\n    /** Получить список кнопок для Command Panel */\n    const getEvents = () => {\n        return (cmdProps && cmdProps.systemBtnProps && Object.keys(cmdProps.systemBtnProps)) || [];\n    };\n\n    /** Получить рендер модалок */\n    const getModals = () => {\n        return modals.map((modal, index) => {\n            return (\n                <FormModal\n                    key={index}\n                    modal={modal}\n                    selectedRow={tableSelectedRow}\n                    visible={visibleModals[modal.type]}\n                    setVisible={(type, value) => setVisibleModals({ ...visibleModals, [type]: value })}\n                    saveRow={_onSaveRow}\n                />\n            )\n\n        })\n    };\n\n    /** Проверка существования кнопки в Command Panel */\n    const isExistCmdBtn = (btnType) => (cmdProps && cmdProps.systemBtnProps && cmdProps.systemBtnProps[btnType]);\n\n    /** Проверка соответствия типа кнопки и события ? (params) === (props) */\n    const equalsActionTypeCmdBtn = (btnType, actionType) => {\n        if(isExistCmdBtn(btnType)) {\n            if(btnType === 'edit') {\n                const aTypes = actionType.split('/');\n                if(aTypes[0] === 'g') {\n                    return !!(cmdProps.systemBtnProps[btnType].actionType\n                        && cmdProps.systemBtnProps[btnType].actionType.length === 2\n                        && cmdProps.systemBtnProps[btnType].actionType[1] === aTypes[1]);\n                }\n                else if (aTypes[0] === 'i') {\n                    return !!(cmdProps.systemBtnProps[btnType].actionType\n                        && cmdProps.systemBtnProps[btnType].actionType.length === 2\n                        && cmdProps.systemBtnProps[btnType].actionType[0] === aTypes[1]);\n                }\n            } else {\n                return !!(cmdProps.systemBtnProps[btnType].actionType\n                    && cmdProps.systemBtnProps[btnType].actionType === actionType);\n            }\n        }\n        return false;\n    };\n\n    /** Command Panel Events */\n    /** Добавить */\n    const _onClickAddHandler = () => {\n        if(equalsActionTypeCmdBtn('add', 'modal')) {\n            // console.log(\"FormTable => _onClickAddHandler => modal\");\n            if (props.type !== 'localSide') {\n                setVisibleModals({...visibleModals, addOnServer: true});\n            } else {\n                if (modals && (modals.find(modal => modal.type === 'select') !== undefined)) {\n                    setVisibleModals({...visibleModals, select: true});\n                    // console.log(\"FormTable => _onClickAddHandler => select\", modals.find(modal => modal.type === 'select'));\n                } else {\n                    setVisibleModals({...visibleModals, addOnLocal: true});\n                    // console.log(\"FormTable => _onClickAddHandler => addOnLocal\"); location.pathname\n                }\n            }\n        } else if (equalsActionTypeCmdBtn('add', 'page')) {\n            history.push(`${history.location.pathname}/new`);\n        }\n    };\n\n    /** Добавить копированием */\n    const _onClickAddAsCopyHandler = (event, row) => {\n        _addRowToLocalTable(row);\n    };\n\n    /** Добавить группу */\n    const _onClickAddGroupHandler = () => {\n        if(equalsActionTypeCmdBtn('addGroup', 'modal')) {\n            // console.log(\"FormTable => _onClickAddGroupHandler => modal\");\n            if (props.type !== 'localSide')\n                setVisibleModals({...visibleModals, addGroupOnServer: true});\n            else\n                setVisibleModals({...visibleModals, addGroupOnLocal: true});\n        } else if (equalsActionTypeCmdBtn('addGroup', 'page')) {\n            // console.log(\"FormTable => _onClickAddGroupHandler => page\");\n            history.push(`${history.location.pathname}/newGroup`);\n        }\n    };\n\n    /** Изменить */\n    const _onClickEditHandler = (event, {rowData}) => {\n        // console.log(\"FormTable -> _onClickEditHandler -> row \", rowData, props.type);\n        if (rowData[isGroupKey]) {\n            if (equalsActionTypeCmdBtn('edit', 'g/modal')) {\n                // console.log(\"FormTable => _onClickEditHandler => g/modal\");\n                if (props.type !== 'localSide')\n                    setVisibleModals({...visibleModals, editGroupOnServer: true});\n                else\n                    setVisibleModals({...visibleModals, editGroupOnLocal: true});\n            } else if (equalsActionTypeCmdBtn('edit', 'g/page')) {\n                // console.log(\"FormTable => _onClickEditHandler => g/page\");\n                history.push(`${history.location.pathname}/${rowData[rowKey]}`);\n            }\n        } else {\n            if (equalsActionTypeCmdBtn('edit', 'i/modal')) {\n                // console.log(\"FormTable => _onClickEditHandler => i/modal\");\n                if (props.type !== 'localSide')\n                    setVisibleModals({...visibleModals, editOnServer: true});\n                else\n                    setVisibleModals({...visibleModals, editOnLocal: true});\n            } else if (equalsActionTypeCmdBtn('edit', 'i/page')) {\n                // console.log(\"FormTable => _onClickEditHandler => i/page\");\n                history.push(`${history.location.pathname}/${rowData[rowKey]}`);\n            }\n        }\n    };\n\n    /** Удалить */\n    const _onClickDelete = (event, _selectedRowKeys) => {\n        if(props.type === 'localSide') {\n            const _rows = tableRows.filter(\n                (item) => !_selectedRowKeys.includes(item[rowKey])\n            );\n            setTableRows(_rows);\n            _onChange(_rows);\n        } else {\n            if(_selectedRowKeys && _selectedRowKeys.length > 0 && requestDeleteRow){\n                const deleteData = _selectedRowKeys.map(item => { return {[rowKey]: item, ...dataDeleteRow} } );\n                requestDeleteRow({data: {deleteData: deleteData}})\n                    .then((response) => {\n                        antNotification.success({message: 'Успешное удаленение'});\n                        tableRef && tableRef.reloadData({});\n\n                    })\n                    .catch(error => {\n                        notificationError(error, 'Ошибка удаления записи');\n                        tableRef && tableRef.reloadData({});\n                    });\n            }\n        }\n        cmdProps.onClickDelete && cmdProps.onClickDelete(event, _selectedRowKeys);\n    };\n\n    /** Переместить вверх / вниз */\n    const _onClickUpHandler = (event, row, rows) => {\n        _onChange(rows);\n        cmdProps.onClickUp && cmdProps.onClickUp(event, row, rows);\n    };\n\n    const _onClickDownHandler = (event, row, rows) => {\n        _onChange(rows);\n        cmdProps.onClickDown && cmdProps.onClickDown(event, row, rows);\n    };\n\n    /** Modal Events */\n    const _onSaveRow = ({type, row, requestSaveRow}) => {\n        // console.log(\"FormTable -> _saveRow -> row \", row);\n        if(type === 'select') {\n            // Получить массив строк из таблицы в модальной форме\n            let selectRows = row[name];\n            // console.log(\"FormTable -> _onSaveRow -> row [0]\", row);\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [0]\", selectRows);\n\n            // Фильтрация выбранных строк, оставить только те которых еще нет в таблице\n            let saveRows = selectRows.filter((sRow) =>\n                tableRows.findIndex((tRow) => tRow[rowKey] === sRow[rowKey]) === -1\n            );\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [1]\", saveRows);\n            if (customFields)\n                // Фильтрация по пользовательским параметрам\n                saveRows = saveRows.filter((sRow) => {\n                    let isValid = [];\n                    customFields.forEach((field) => {\n                        // Валидация по пользовательской логике функции validate\n                        if(field.validate)\n                            isValid.push(field.validate(sRow, tableRows));\n\n                        // Создание или переобразование по пользовательской логике функции value\n                        if(field.value)\n                            sRow[field.name] = field.value(sRow, tableRows);\n                    });\n                    // console.log('_addRows isValid', isValid);\n                    if(!isValid.includes(false))\n                        return sRow;\n                });\n            setVisibleModals({ ...visibleModals, [type]: false });\n            notification.success({\n                message: `Добавлено ${saveRows.length} строк`\n            });\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [2]\", saveRows);\n            _addRowsToLocalTable([...tableRows, ...saveRows]);\n        }\n        else {\n            let saveRow = {...row};\n            if(type.indexOf('Group') !== -1)\n                saveRow[isGroupKey] = true;\n            else\n                saveRow[isGroupKey] = false;\n            if (customFields)\n                customFields.forEach((field) => saveRow[field.name] = field.value(saveRow, tableRows));\n            switch (type) {\n                case 'addOnServer':\n                case 'editOnServer':\n                case 'addGroupOnServer':\n                case 'editGroupOnServer':\n                    _addRowToServerTable({requestSaveRow, type, saveRow});\n                    break;\n                case 'addOnLocal':\n                case 'addGroupOnLocal':\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    _addRowToLocalTable(saveRow);\n                    break;\n                case 'editOnLocal':\n                case 'editGroupOnLocal':\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    _editRowToLocalTable(saveRow);\n                    break;\n\n                //            addGroupOnServer: false,\n                //         editGroupOnServer: false,\n                //         addGroupOnLocal: false,\n                //         editGroupOnLocal: false,\n                // case 'select':\n                case 'viewGroup':\n                case 'viewObject':\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    break;\n            }\n            // console.log(\"Modal Events => type: \", type, itemName, componentType, saveRow);\n        }\n\n    };\n\n    const _addRowToLocalTable = (row) => {\n        let saveObj = {...row};\n        if(rowKeyType === 'uuid')\n            saveObj[rowKey] = generateUUID();\n\n        // console.log('_addRowToLocalTable', tableRows);\n        _addRowsToLocalTable([...tableRows, saveObj]);\n    };\n\n    const _editRowToLocalTable = (row) => {\n        let arr = [...tableRows];\n        const rowIndex = arr.findIndex(item => item[rowKey] === row[rowKey]);\n        arr.splice(rowIndex, 1, row);\n        setTableRows(arr);\n        setTableSelectedRow(row);\n        _onChange(arr);\n    };\n\n    const _addRowsToLocalTable = (rows, keys) => {\n        // console.log('FormTable -> _addRowsToLocalTable -> rows', rows, keys);\n        setTableRows(rows);\n        if(props.selectable)\n            _onChange(keys);\n        else\n            _onChange(rows);\n    };\n\n    const _addRowToServerTable = ({requestSaveRow, type, saveRow}) => {\n        if (requestSaveRow\n            && ['addOnServer', 'editOnServer', 'addGroupOnServer', 'editGroupOnServer'].includes(type)\n        ) {\n            const method = (type === 'addOnServer' || type === 'addGroupOnServer') ? 'POST' : 'PUT';\n            // console.log(\"Modal Events => type: \", type, itemName, componentType, saveRow);\n            requestSaveRow({\n                method,\n                data: saveRow,\n            })\n                .then(response => {\n                    notification.success({\n                        message: 'Сохранение прошло успешно'\n                    });\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    tableRef && tableRef.reloadData({ filter: props.defaultFilter});\n                    // ref && ref.current && ref.current.reloadData({ filter: props.defaultFilter});\n                    // console.log('_addRowToServerTable tableRef =>', tableRef);\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\n        }\n    };\n\n    const _onRowClick = ({selected, rowData, rowIndex, rowKey}) => {\n        if(!props.selectable) {\n            setTableSelectedRow(rowData);\n            setTableSelectedRowKeys([rowKey]);\n            if(componentType === 'SelectTable')\n                _onChange([rowData]);\n        }\n        props.onRowClick && props.onRowClick({selected, rowData, rowIndex, rowKey});\n    };\n\n    const _onRowDoubleClick = ({rowData, rowIndex, rowKey}) => {\n        if (rowData[isGroupKey]) {\n            setVisibleModals({...visibleModals, viewGroup: true});\n        } else {\n            setVisibleModals({...visibleModals, viewObject: true});\n        }\n        props.onRowDoubleClick && props.onRowDoubleClick({rowData, rowIndex, rowKey});\n    };\n\n    const _onSelectedRowsChange = (keys, rows) => {\n        // console.log(\"_onSelectedRowsChange\", keys, rows);\n        if(props.selectable) {\n            setTableSelectedRow(rows[0]);\n            setTableSelectedRowKeys(keys);\n            _onChange(rows);\n        }\n    };\n\n    const _onChange = (rows) => {\n        if(rows !== undefined)\n            props.onChange(rows);\n        else\n            props.onChange(tableRows);\n    };\n\n    const getTableCls = () => {\n        let cls = [`${rtPrefix}-form-table`];\n        if (props.className)\n            cls.push(props.className);\n        return cls.join(' ');\n    };\n\n    return (\n        <div className={getTableCls()} style={props.style} >\n            <AdvancedTable\n                ref={_setTableRef}\n                {...getObjectExcludedProps(props, excludeProps)}\n                rows={tableRows}\n                setRows={setTableRows}\n                // selectedRowKeys={tableSelectedRow[rowKey] ? [tableSelectedRow[rowKey]] : []}\n                selectedRowKeys={tableSelectedRowKeys}\n                onRowClick={_onRowClick}\n                onRowDoubleClick={_onRowDoubleClick}\n                onSelectedRowsChange={_onSelectedRowsChange}\n                autoDeleteRows={false}\n                commandPanelProps={{\n                    ...props.commandPanelProps,\n                    showElements: getEvents(),// getShowElements(),\n                    onClickAdd: _onClickAddHandler,\n                    onClickAddAsCopy: _onClickAddAsCopyHandler,\n                    onClickAddGroup: _onClickAddGroupHandler,\n                    onClickEdit: _onClickEditHandler,\n                    onClickDelete: _onClickDelete,\n                    onClickDown: _onClickDownHandler,\n                    onClickUp: _onClickUpHandler,\n                }}\n                filterPanelProps={{\n                    ...props.filterPanelProps,\n                    // onApplyFilter: (filter) => console.log('filter', filter)\n                }}\n            />\n            {modals && getModals()}\n        </div>\n    );\n});\n\nFormTable.propTypes = {\n    /** Объект со свойствами Command Panel */\n    commandPanelProps: PropTypes.object,\n\n    /** Объект со свойствами Filter Panel */\n    filterPanelProps: PropTypes.object,\n\n    /**\n     * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n     * */\n\n    /** Строки по умолчанию */\n    defaultRows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ключи выделенных по умолчанию строк */\n    defaultSelectedRowKeys: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n\n    /** Значение строки поиска по умолчанию строк */\n    defaultSearchValue: PropTypes.string,\n\n    /** Объект фильтрации по умолчанию */\n    defaultFilter: PropTypes.object,\n\n    /** Сортировка по умолчанию */\n    defaultSortBy: PropTypes.shape({\n        key: PropTypes.string,\n        order: PropTypes.oneOf([SortOrder.ASC, SortOrder.DESC]),\n    }),\n\n    /**\n     * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n     * */\n\n    /** Значение строки поиска */\n    searchValue: PropTypes.string,\n\n    /** Фильтр */\n    filter: PropTypes.object,\n\n    /** Объект сортировки ({ key: 'string', order: 'asc' }).\n     * key - поле по которому сотрировать,\n     * order - направление сортировки (\"asc\", \"desc\")\n     * */\n    sortBy: PropTypes.shape({\n        key: PropTypes.string,\n        order: PropTypes.oneOf([SortOrder.ASC, SortOrder.DESC]),\n    }),\n\n    /**\n     * BASE PROPS\n     * */\n\n    /** Автоудаление строк из таблицы по кнопке в командной панели*/\n    autoDeleteRows: PropTypes.bool,\n\n    /** Поле для уникальной идентификации строки */\n    rowKey: PropTypes.string,\n\n    /** Тип поля для уникальной идентификации строки */\n    rowKeyType: PropTypes.oneOf(['uuid', 'number']),\n\n    /**\n     * VIEW PROPS\n     * */\n\n    /** Вывод когда нет данных. JSX для заглушки \"Нет данных\".  */\n    empty: PropTypes.element,\n\n    /** Отображение загрузки данных. JSX для загрузки данных. */\n    overlay: PropTypes.element,\n\n    /** Фиксированная ширина столбцов. Появится боковой скрол */\n    fixWidthColumn: PropTypes.bool,\n\n    /** Высота подвала */\n    footerHeight: PropTypes.number,\n\n    /** Отображать ли подвал */\n    footerShow: PropTypes.bool,\n\n    /** Названия футтера */\n    footerTitles: PropTypes.shape({\n        selectedRows: PropTypes.string,\n        loadedRows: PropTypes.string,\n        totalRows: PropTypes.string,\n    }),\n\n    /** Высота заголовка таблицы */\n    headerHeight: PropTypes.number,\n\n    /** Высота строки таблицы */\n    rowHeight: PropTypes.number,\n\n    /** Custom row renderer\n     * Параметры - ({ isScrolling, cells, columns, rowData, rowIndex, depth }) */\n    rowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n    /** Строки будут в зебро-стиле */\n    zebraStyle: PropTypes.bool,\n\n    /**\n     * LOAD DATA PROPS\n     * */\n\n    /** Порог в пикселях для вызова _onLoad.\n     * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n    loadThreshold: PropTypes.number,\n\n    /** Размер страницы */\n    pageSize: PropTypes.number,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n    /** Имя параметра для поиска */\n    searchParamName: PropTypes.string,\n\n    /**\n     * SELECTABLE PROPS\n     * */\n\n    /** Таблица с возможностью выбора строки */\n    selectable: PropTypes.bool,\n\n    /**\n     * TREE PROPS\n     * */\n\n    /** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\n    nodeAssociated: PropTypes.bool,\n\n    /** Ключ колонки по которой строить иерархию */\n    expandColumnKey: PropTypes.string,\n\n    /** Открыть по умолчанию вложенность до уровня N или 'All' */\n    expandDefaultAll: PropTypes.bool,\n\n    /** Загружать ноды иерархии по одной */\n    expandLazyLoad: PropTypes.bool,\n\n    /** Поле в котором хранится ссылка на родителя */\n    expandParentKey: PropTypes.string,\n\n    /**\n     * EVENTS\n     * */\n\n    /** Событие при клике на строку (только при selectable = false)\n     * Параметр - ({selected, rowData, rowIndex}) */\n    onRowClick: PropTypes.func,\n\n    /** Событие при двойном клике на строку.\n     * Параметр - ({rowData, rowIndex, rowKey}) */\n    onRowDoubleClick: PropTypes.func,\n\n    /** События при открытии / закрытии ноды\n     * Парметры - ({ expanded, rowData, rowIndex, rowKey }) */\n    onRowExpand: PropTypes.func,\n\n    /** Событие при выборе строки.\n     * Параметр - массив выбранных строе (только rowKey) */\n    onSelectedRowsChange: PropTypes.func,\n\n    /** События при открытии / закрытии ноды\n     * Парметры - (expandedRowKeys) - массив ключей открытых нод */\n    onExpandedRowsChange: PropTypes.func,\n\n    /** SELECTED PANEL */\n\n    /** Отображать ли панель выбранных элементов */\n    showSelection: PropTypes.bool,\n\n    /** Строка или функция для отображения элементов списка выбранных\n     * Строка - имя поля\n     * Функция - рендер строк.\n     * Параметры - ({ rowData, rowIndex }) */\n    rowRenderShowSelection: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.string,\n    ]),\n\n\n    /** Дополнительные пропсы для колонок */\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\n\n    /** Дополнительные поля и валидация в объекты таблицы */\n    customFields: PropTypes.arrayOf(PropTypes.object),\n\n    /** Модальные окна */\n    modals: PropTypes.arrayOf(PropTypes.object),\n\n    /** Событие об изменении объектов таблицы\n     * Параметр - (rows)*/\n    onChange: PropTypes.func,\n\n    /** implemented - только для (LocalTable + selectable) - Контроль значение из вне */\n    // value: PropTypes.arrayOf(PropTypes.object),\n\n    /** Not implemented - Задание значений по умолчанию */\n    defaultValue: PropTypes.arrayOf(PropTypes.object),\n\n    /** Классы стилей */\n    className: PropTypes.string,\n\n    /** Стили */\n    style: PropTypes.object,\n\n    /** Поле для идентификации группы */\n    isGroupKey: PropTypes.string,\n\n    /** Объект history для перемещения по путям */\n    history: PropTypes.object,\n\n    /** Функция запроса на получение конфига для таблицы */\n    requestLoadConfig: PropTypes.func,\n\n    /** Функция запроса на уделание данных */\n    requestDeleteRow: PropTypes.func,\n\n    /** Параметры объекта удаления */\n    dataDeleteRow: PropTypes.object,\n};\n\nFormTable.defaultProps = {\n    defaultRows: [],\n    defaultSelectedRowKeys: [],\n    defaultSearchValue: '',\n    defaultFilter: {},\n    defaultSortBy: {},\n\n    searchValue: '',\n    filter: {},\n    sortBy: {},\n\n    autoDeleteRows: true,\n    rowKey: 'id',\n\n    empty: empty,\n    overlay: overlay,\n    fixWidthColumn: false,\n    footerHeight: 30,\n    footerShow: false,\n    footerTitles: {\n        selectedRows: 'Выделено:',\n        loadedRows: 'Загружено записей:',\n        totalRows: 'Всего записей:',\n    },\n    headerHeight: 30,\n    rowHeight: 30,\n    zebraStyle: false,\n\n    loadThreshold: 300,\n    pageSize: 50,\n    requestLoadRows: noop,\n    requestLoadCount: noop,\n    searchParamName: 'searchLine',\n\n    selectable: false,\n\n    nodeAssociated: true,\n    expandColumnKey: undefined,\n    expandDefaultAll: true,\n    expandLazyLoad: false,\n    expandParentKey: 'parentId',\n\n    onRowClick: noop,\n    onRowDoubleClick: noop,\n    onRowExpand: noop,\n    onSelectedRowsChange: noop,\n    onExpandedRowsChange: noop,\n\n    showSelection: false,\n\n    rowKeyType: 'uuid',\n    onChange: noop,\n    isGroupKey: 'isGroup',\n};\n\nexport default FormTable;\n","import React, {useState, useEffect} from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport objectPath from \"object-path\";\nimport { setDataStore } from \"../../../redux/rtd.actions\";\nimport {getObjectExcludedProps} from '../../utils/baseUtils';\nimport moment from \"moment\";\nimport { Typography as AntTypography } from \"antd\";\nimport { getISO, toFormat } from \"../../utils/datesUtils\";\n\nexport const withStore = (Component, antFormItemProps) => {\n\n    const mapStateToProps = (store, ownProps) => {\n        const {subscribe} = ownProps;\n        if(subscribe){\n            const {name, path} = subscribe;\n            if(name && path)\n                return { [name]: objectPath.get(store, path) };\n        }\n\n        return {};\n    };\n    const mapDispatchToProps = (dispatch) =>\n        bindActionCreators({ setDataStore: setDataStore}, dispatch);\n\n    const defaultGetValueFromEvent = (valuePropName, event) => {\n        if (event && event.target && valuePropName in event.target) {\n            return event.target[valuePropName];\n        }\n        return event;\n    };\n\n    const defaultProps = {\n        trigger: 'onChange',\n        valuePropName: 'value',\n    };\n\n    const withStoreProps = { ...defaultProps, ...antFormItemProps };\n\n    return connect(mapStateToProps, mapDispatchToProps)( (props) => {\n\n        const {dispatchPath} = props;\n\n        const subscribe = props.subscribe ? props.subscribe : {};\n\n        const [subscribeProps, setSubscribeProps] = useState({});\n\n        const {trigger, getValueFromEvent, valuePropName} = withStoreProps;\n\n        const excludeProps = ['componentType', 'setDataStore', 'subscribe', subscribe.name, 'dispatchPath'];\n\n        const getValue = (...args) => {\n            let newValue;\n            if (getValueFromEvent) {\n                newValue = getValueFromEvent(...args);\n                // console.log(\"storeHOC => getValueFromEvent: \", newValue);\n            } else {\n                newValue = defaultGetValueFromEvent(valuePropName, ...args);\n                // console.log(\"storeHOC => defaultGetValueFromEvent: \", newValue);\n            }\n            return newValue;\n        };\n\n        /** Подписка на изменение props[subscribe.name] в сторе */\n        useEffect( () => {\n            if(subscribe.name) {\n                // console.log(\"storeHOC => subscribe: \", props[subscribe.name]);\n                subscribe.onChange && subscribe.onChange({value: props[subscribe.name], setSubscribeProps});\n            }\n            // console.log(\"Change Props[2]: \", props.subscribeЗф);\n        }, [props[subscribe.name]]);\n\n        useEffect(() => {\n            // dispatchPath && props.setDataStore && props.setDataStore(dispatchPath, props.value);\n            if(dispatchPath) {\n                const newValue = props[valuePropName];\n                // console.log(\"storeHOC => dispatch: \", newValue);\n                dispatchPath && props.setDataStore && props.setDataStore(dispatchPath, newValue);\n            }\n        }, [props]);\n\n        useEffect(() => {\n            if(subscribeProps.value) {\n                // console.log('subscribeProps.value => ', subscribeProps.value);\n                props[trigger] && props[trigger](subscribeProps.value);\n            }\n        }, [subscribeProps.value]);\n\n        const onChange = (...args) => {\n            // const newValue = getValue(...args);\n            // dispatchPath && props.setDataStore && props.setDataStore(dispatchPath, newValue);\n            props[trigger] && props[trigger](...args);\n        };\n\n        const childProps = getObjectExcludedProps(props, excludeProps);\n        return <Component {...childProps} {...subscribeProps} {...{[trigger]: onChange }}/>\n    })\n};\n\n\nexport const DatePickerHOC = (Component) => {\n    return props => {\n        // console.log(\"DatePickerHOC => \", props);\n        if(props.value){\n            if(typeof props.value === 'string'){\n                // console.log(\"DatePickerHOC => onChange => string\");\n                props.onChange(moment(props.value), props.value);\n            }\n            // else {\n            // \tconsole.log(\"DatePickerHOC => onChange => moment\");\n            // \tprops.onChange(props.value, props.format ? toFormat(props.value,props.format) : getISO(props.value));\n            // }\n        }\n        const value = props.value ? (typeof props.value === 'string' ? moment(props.value) : props.value) : null;\n        return <Component {...props} value={value} />\n    };\n};\n\nexport const TypographyTitle = (props) =>\n    <AntTypography.Title {...props}> {props.label || props.value} </AntTypography.Title>;\n\nexport const TypographyText = (props) =>\n    <AntTypography.Text {...props}> {props.label || props.value} </AntTypography.Text>;\n\nexport const TypographyDate = (props) => {\n    const {label, value, format } = props;\n    const _value = value ? (format ? toFormat(value, format) : getISO(value)) : null;\n    return <AntTypography.Text {...props}> {label || _value} </AntTypography.Text>;\n}\n","const getTitle = (type, element) => {\n    if(element === 'Group')\n        if(type === 'edit')\n            return 'Изменение папки';\n        else\n            return 'Создание папки';\n    else\n        return 'Изменение файла';\n};\n\nconst Modal = (type, element, requestSaveRow, processBeforeSaveForm, parentLoadHandler, requestLoadRows) => {\n    // console.log(\"FolderModal\", type, requestSaveRow, processBeforeSaveForm, parentLoadHandler, requestLoadRows);\n    let selectedRow;\n    return {\n        type: `${type}${element}OnServer`,\n        title: getTitle(type, element),\n        requestSaveRow: requestSaveRow,\n        width: 500,\n        // bodyStyle: {height: 650},\n        form: {\n            name: 'FileManagerModalModal',\n            labelCol: {span: 8},\n            wrapperCol: {span: 16},\n            processBeforeSaveForm: (rawValues) => processBeforeSaveForm(rawValues, type, element),\n            loadInitData: (callBack, row) => {\n                selectedRow = row;\n                callBack(type === 'edit' ? row : null);\n            },\n            body: [\n                {\n                    componentType: 'Item',\n                    label: 'Наименование',\n                    name: 'name',\n                    rules: [\n                        {\n                            message: `Заполните наименование`,\n                            required: true,\n                        },\n                    ],\n                    child: {componentType: 'Input'},\n                },\n                type === 'edit'\n                    ? {\n                        componentType: 'Item',\n                        label: 'Родитель',\n                        name: 'parentId',\n                        child: {\n                            componentType: 'SingleSelect',\n                            widthControl: 0,\n                            heightPopup: 300,\n                            expandColumnKey: 'id',\n                            rowRender: 'name',\n                            nodeAssociated: false,\n                            expandDefaultAll: true,\n                            // (info) аналогично ({params, data})\n                            // Но поскольку тут раскрывать объект не нужно, мы можем просто передать его дальше\n                            requestLoadRows: (info) => parentLoadHandler(type, selectedRow, info),\n                            requestLoadDefault: requestLoadRows,\n                        },\n                    }\n                    : {},\n            ],\n        },\n    };\n};\n\nexport const AddFolderModal = (...args) => Modal('add', 'Group', ...args);\nexport const EditFolderModal = (...args) => Modal('edit', 'Group', ...args);\nexport const EditFileModal = (...args) => Modal('edit', '', ...args);\n\n","import {notification} from 'antd';\n\nexport const copyTextToClipboard = text => {\n\tif (!navigator.clipboard) {\n\t\tfallbackCopyTextToClipboard(text);\n\t\treturn;\n\t}\n\tnavigator.clipboard.writeText(text).then(\n\t\tfunction() {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'success',\n\t\t\t\t'Успешно',\n\t\t\t\t`[${text}] успешно копирован в буфер обмена`\n\t\t\t);\n\t\t},\n\t\tfunction(err) {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'error',\n\t\t\t\t'Ошибка',\n\t\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\n\t\t\t);\n\t\t}\n\t);\n};\n\nconst fallbackCopyTextToClipboard = text => {\n\tlet textArea = document.createElement('textarea');\n\ttextArea.value = text;\n\n\t// Avoid scrolling to bottom\n\ttextArea.style.top = '0';\n\ttextArea.style.left = '0';\n\ttextArea.style.position = 'fixed';\n\n\tdocument.body.appendChild(textArea);\n\ttextArea.focus();\n\ttextArea.select();\n\n\ttry {\n\t\tlet successful = document.execCommand('copy');\n\t\tif (successful) {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'success',\n\t\t\t\t'Успешно',\n\t\t\t\t`[${text}] успешно копирован в буфер обмена`\n\t\t\t);\n\t\t} else {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'error',\n\t\t\t\t'Ошибка',\n\t\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\n\t\t\t);\n\t\t}\n\t} catch (err) {\n\t\topenNotificationWithIcon(\n\t\t\t'error',\n\t\t\t'Ошибка',\n\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\n\t\t);\n\t}\n\tdocument.body.removeChild(textArea);\n};\n\nconst openNotificationWithIcon = (type, title, msg) => {\n\tnotification[type]({\n\t\tmessage: title,\n\t\tdescription: msg\n\t});\n};\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormTable from \"../Form/FormTable\";\nimport {Button, Upload, notification as antNotification, Spin, Typography, Tooltip} from 'antd';\nimport {\n    HomeOutlined,\n    RollbackOutlined,\n    FolderFilled,\n    FileOutlined,\n    PlusOutlined,\n    LoadingOutlined,\n    FileWordOutlined,\n    FileExcelOutlined,\n    FileImageOutlined,\n    FileMarkdownOutlined,\n    FilePdfOutlined,\n    FilePptOutlined,\n    FileTextOutlined,\n    FileZipOutlined,\n    CopyOutlined\n} from '@ant-design/icons';\nimport { AddFolderModal, EditFileModal, EditFolderModal } from \"./AddFolderModal\";\nimport { rtPrefix } from \"../../utils/variables\";\nimport { toDDMMYYYYHHMMSS } from \"../../utils/datesUtils\";\nimport { copyTextToClipboard } from \"../../utils/clipboardUtils\";\nimport { notificationError } from \"../../utils/baseUtils\";\n\nconst FileManager = props => {\n\n    const {\n        rowKey,\n        isGroupKey,\n        expandParentKey\n    } = props;\n\n    const [tableRef, setTableRef] = useState({});\n    const _setTableRef = (ref) => setTableRef(ref);\n\n    // const tableRef = React.createRef();\n\n    const [breadcrumb, setBreadcrumb] = useState([{[rowKey]: null, name: <HomeOutlined />}]);\n    const [tableFilter, setTableFilter] = useState({deleted: false, [expandParentKey]: null});\n\n\n\n    /**\n     * TABLE EVENTS\n     */\n\n    // Down to folder OR download file\n    const _onRowDoubleClick = ({rowData, rowIndex, rowKey}) => {\n        if(rowData.isGroup) {\n            loadTable([...breadcrumb, rowData], { [expandParentKey]: rowKey });\n        } else {\n            props.requestDownloadFile(rowKey)\n        }\n        props.onRowDoubleClick && props.onRowDoubleClick({rowData, rowIndex, rowKey});\n    };\n\n    // Jump to folder\n    const _onClickBreadcrumb = (parentId, index) => {\n        loadTable(breadcrumb.slice(0, index), {[expandParentKey]: parentId})\n    };\n\n    // Up to folder\n    const _onClickBack = () => {\n        if(breadcrumb.length > 1) {\n            const newBreadcrumb = breadcrumb.slice(0, breadcrumb.length - 1);\n            // setBreadcrumb(newBreadcrumb);\n            // tableRef && tableRef.reloadData({ filter: { parentId: newBreadcrumb[newBreadcrumb.length - 1].id } });\n            loadTable(newBreadcrumb, { [expandParentKey]: newBreadcrumb[newBreadcrumb.length - 1][rowKey] })\n        }\n    };\n\n    // Delete folder OR file\n    const _onClickDelete = (event, _selectedRowKeys) => {\n        if(_selectedRowKeys && _selectedRowKeys.length > 0){\n            props.requestDeleteRow({data: {[rowKey]: _selectedRowKeys[0], deleted: true}})\n                .then((response) => {\n                    antNotification.success({message: 'Файл успешно удален'});\n                    tableRef && tableRef.reloadData({filter: tableFilter});\n                })\n                .catch(error => {\n                    notificationError(error, 'Ошибка удаления файла');\n                    tableRef && tableRef.reloadData({filter: tableFilter});\n                });\n        }\n    };\n\n    /**\n     * TABLE FUNCs\n     */\n    const loadTable = (breadcrumb, filter) => {\n        setBreadcrumb(breadcrumb);\n        const newFilter = {...tableFilter, ...filter};\n        setTableFilter(newFilter);\n        tableRef && tableRef.reloadData({filter: newFilter});\n    };\n\n\n    /**\n     * MODAL FUNCs\n     */\n    const processBeforeSaveModal = (rawValues, type, element) => {\n        let values = {...rawValues};\n        if(type === 'add')\n            values[expandParentKey] = breadcrumb[breadcrumb.length - 1][rowKey];\n\n        if(element === 'Group')\n            values.extension = 'dir';\n        // console.log(\"FileManager values =>\", values);\n        return values;\n    };\n\n    const parentLoadHandler = (type, selectedRow, {params, data}) => {\n        let newData = {...data, [isGroupKey]: true};\n        if (type === 'edit') newData.owner = selectedRow && selectedRow[rowKey];\n        return props.requestLoadParent({ params, data: newData, });\n    };\n\n    // const _onChangeViewDeleted = (checked) => {\n    //     const newFilter = {...tableFilter, deleted: checked };//? undefined : checked};\n    //     setTableFilter(newFilter);\n    //     tableRef && tableRef.reloadData({filter: newFilter});\n    // };\n\n    // console.log(\"EditFolderModal\", EditFolderModal(props.requestSaveRow, processBeforeSaveForm));\n\n\n    /**\n     * UPLOAD FUNCs\n     */\n\n    const _uploadFile = (file) => {\n        // console.log('beforeUpload fileList => ', fileList);\n        notification(file, 'loading');\n        if (props.requestUploadFile) {\n            props.requestUploadFile({ file: file, [expandParentKey]: breadcrumb[breadcrumb.length - 1][rowKey] })\n                .then((response) => {\n                    notification(file, 'success');\n                    tableRef && tableRef.reloadData({ filter: tableFilter });\n                })\n                .catch(() => {\n                    notification(file, 'error');\n                    tableRef && tableRef.reloadData({ filter: tableFilter });\n                });\n        }\n        return false;\n    };\n\n    const notification = (file, type) => {\n        const notifProps = {\n            key: file.uid,\n            duration: type === 'loading' ? 0 : 5,\n            icon: type === 'loading'\n                ? <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n                : null,\n            message: <span>Загрузка файла: <Typography.Text code>{file.name}</Typography.Text></span>\n        };\n        switch (type) {\n            case 'loading':\n                antNotification.info(notifProps);\n                break;\n            case 'success':\n                antNotification.success(notifProps);\n                break;\n            case 'error':\n                antNotification.error(notifProps);\n                break;\n            case 'close':\n                antNotification.close(file.uid);\n                break;\n            default:\n                break;\n        }\n    };\n\n    /**\n     * RENDER PARAMS\n     */\n    const customColumnProps = [\n        {\n            name: 'dateCreate',\n            cellRenderer: ({cellData}) => toDDMMYYYYHHMMSS(cellData),\n        },\n        {\n            name: 'dateUpdate',\n            cellRenderer: ({cellData}) => toDDMMYYYYHHMMSS(cellData),\n        },\n        {\n            name: 'path',\n            cellRenderer: ({rowData}) =>\n                rowData[isGroupKey] ? null\n                    :\n                <Tooltip title=\"Скопировать путь к файлу\">\n                    <CopyOutlined onClick={() => copyTextToClipboard(props.pathDownloadFile(rowData[rowKey]))}/>\n                </Tooltip>,\n        },\n        {\n            name: 'name',\n            cellRenderer: ({rowData}) => {\n                const styleDiv = {display: 'flex', alignItems: 'center'};\n                let Icon;\n                let styleIcon = {marginRight: '10px', fontSize: '16px'};\n                switch (rowData.extension) {\n                    case 'dir':\n                        Icon = FolderFilled;\n                        styleIcon.color = '#3a88c9';\n                        break;\n                    case 'doc':\n                    case 'docm':\n                    case 'docx':\n                    case 'dot':\n                    case 'dotx':\n                        Icon = FileWordOutlined;\n                        styleIcon.color = '#185abc';\n                        break;\n                    case 'xlm':\n                    case 'xls':\n                    case 'xlsm':\n                    case 'xlt':\n                    case 'xltm':\n                    case 'xltx':\n                    case 'xlsx':\n                        Icon = FileExcelOutlined;\n                        styleIcon.color = '#1f7244';\n                        break;\n                    case 'png':\n                    case 'jpg':\n                    case 'jpeg':\n                    case 'tiff':\n                    case 'bmp':\n                    case 'ico':\n                    case 'gif':\n                    case 'svg':\n                        Icon = FileImageOutlined;\n                        break;\n                    case 'markdown':\n                    case 'md':\n                        Icon = FileMarkdownOutlined;\n                        styleIcon.color = '#175987';\n                        break;\n                    case 'pdf':\n                        Icon = FilePdfOutlined;\n                        styleIcon.color = '#bd1f07';\n                        break;\n                    case 'ppt':\n                        Icon = FilePptOutlined;\n                        styleIcon.color = '#be5239';\n                        break;\n                    case 'txt':\n                        Icon = FileTextOutlined;\n                        break;\n                    case 'zip':\n                        Icon = FileZipOutlined;\n                        break;\n                    default:\n                        Icon = FileOutlined;\n                }\n\n\n                return (\n                    <div style={styleDiv}>\n                        {/*{rowData.isGroup*/}\n                        {/*    ? <FolderFilled style={{ marginRight: '10px', color: '#3a88c9'}}/>*/}\n                        {/*    : <FileOutlined style={{ marginRight: '10px' }}/>*/}\n                        {/*}*/}\n                        <Icon style={styleIcon}/>\n                        {rowData.name}\n                    </div>\n                );\n            },\n        }\n    ];\n\n    const uploadProps = {\n        multiple: true,\n        showUploadList: false,\n        beforeUpload: _uploadFile\n    };\n\n    const uploadRender = () => {\n        return (\n            <Upload {...uploadProps}>\n                <Button icon={<PlusOutlined />}/>\n            </Upload>\n        )\n    };\n\n    const breadcrumbRender = () => {\n        return (\n            <span className={`${rtPrefix}-file-manager-breadcrumb ml-8`}>\n                {breadcrumb.map((item, index) =>\n                    <span\n                        key={item[rowKey]}\n                        // type=\"text\"\n                        className={`${rtPrefix}-file-manager-breadcrumb-btn`}\n                        onClick={() => _onClickBreadcrumb(item[rowKey], index + 1)}\n                    >\n                        <span>/</span><span>{item.name}</span>\n                    </span>\n                )}\n            </span>\n        )\n    };\n\n    return (\n        <FormTable\n            {...props}\n            ref={_setTableRef}\n            type={'serverSide'}\n            componentType={'FilesTable'}\n            onRowDoubleClick={_onRowDoubleClick}\n            defaultFilter={tableFilter}\n            customColumnProps={customColumnProps}\n            commandPanelProps={{\n                ...props.commandPanelProps,\n                onClickDelete: _onClickDelete,\n                systemBtnProps: {\n                    add: {\n                        actionType: 'modal',\n                        tooltip: 'Загрузить файл(ы)',\n                        render: uploadRender\n                    },\n                    addGroup: {actionType: 'modal', tooltip: 'Создать папку'},\n                    edit: {actionType: ['modal', 'modal']},\n                    delete: {}\n                },\n                leftCustomSideElement: [\n                    {\n                        componentType: 'Item',\n                        child: {\n                            componentType: 'Button',\n                            icon: <RollbackOutlined />,\n                            label: 'Back',\n                            className: 'ml-4',\n                            disabled: (breadcrumb.length === 1),\n                            onClick: _onClickBack\n                        }\n                    },\n                    {\n                        componentType: 'Item',\n                        child: {\n                            componentType: 'Custom',\n                            render: breadcrumbRender\n                        }\n                    }\n                ],\n                // rightCustomSideElement: [\n                //     {\n                //         componentType: 'Item',\n                //         label: 'View deleted',\n                //         className: 'mb-0',\n                //         child: {\n                //             componentType: 'Switch',\n                //             checked: tableFilter.deleted,\n                //             onChange: _onChangeViewDeleted\n                //         }\n                //     },\n                // ]\n            }}\n            modals={[\n                AddFolderModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows),\n                EditFolderModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows),\n                EditFileModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows)\n            ]}\n        />\n    );\n};\n\nFileManager.propTypes = {\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция запроса на получение конфига для таблицы */\n    requestLoadConfig: PropTypes.func,\n};\n\nFileManager.defaultProps = {\n    rowKey: 'id',\n    isGroupKey: 'isGroup',\n    expandParentKey: 'parentId',\n};\n\nexport default FileManager;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport FormModal from \"../Form/FormModal\";\nimport { notification, Button} from \"antd\";\nimport { notificationError } from \"../../utils/baseUtils\";\nimport objectPath from \"object-path\";\nimport { setDataStore } from \"../../../redux/rtd.actions\";\n\nconst Modal = props => {\n\n    const {buttonProps, modalConfig, modalData, dispatchPath} = props;\n\n    const [visible, setVisible] = useState(false);\n    const [_modalData, _setModalData] = useState({});\n    const [_buttonProps, setButtonProps] = useState({});\n\n    const subscribe = props.subscribe ? props.subscribe : {};\n\n    const setModalData = (value) => {\n        // console.log(\"setModalData: \", value);\n        _setModalData && _setModalData(value);\n    }\n\n    useEffect(() => {\n        _setModalData(modalData);\n    }, []);\n\n    /** Подписка на изменение props[subscribe.name] в сторе */\n    useEffect( () => {\n        if(subscribe.name) {\n            // console.log(\"Modal => subscribe: \", props[subscribe.name]);\n            subscribe.onChange && subscribe.onChange({value: props[subscribe.name], setModalData, setButtonProps});\n        }\n        // console.log(\"Change Props[2]: \", props.subscribeЗф);\n    }, [props[subscribe.name]]);\n\n    const _onOpenModal = () => {\n        // console.log(\"Modal => _modalData: \", _modalData);\n        setVisible(true)\n    }\n\n    const _onCloseModal = () => {\n        setVisible(false)\n    }\n\n    const _onSaveRow = ({type, row, requestSaveRow}) => {\n        dispatchPath && props.setDataStore && props.setDataStore(dispatchPath, row);\n\n        if (requestSaveRow\n            && ['addOnServer', 'editOnServer', 'addGroupOnServer', 'editGroupOnServer'].includes(type)\n        ) {\n            const method = (type === 'addOnServer' || type === 'addGroupOnServer') ? 'POST' : 'PUT';\n            // console.log(\"Modal Events => type: \", type, method, row, _modalData);\n            requestSaveRow({\n                method,\n                data: row,\n            })\n                .then(response => {\n                    notification.success({\n                        message: 'Сохранение прошло успешно'\n                    });\n                    _onCloseModal();\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении'));\n        } else _onCloseModal();\n    };\n\n    return (\n        <React.Fragment>\n            <Button\n                type=\"primary\"\n                {...buttonProps}\n                {..._buttonProps}\n                onClick={_onOpenModal}\n            >{buttonProps && buttonProps.label}</Button>\n            <FormModal\n                modal={modalConfig}\n                selectedRow={_modalData}\n                visible={visible}\n                setVisible={_onCloseModal}\n                saveRow={_onSaveRow}\n            />\n        </React.Fragment>\n    )\n};\n\nModal.propTypes = {\n\n    /** Свойства [Button](https://ant.design/components/button/) из Ant Design\n     * Добавлено свойство `label` с типом `ReactNode` или `string` для формирования контента кнопки*/\n    buttonProps: PropTypes.object,\n\n    /** Объект модального окна. Стандартная конфигурация. */\n    modalConfig: PropTypes.object,\n\n    /** Данные для модального окна */\n    modalData: PropTypes.object,\n\n    /** Путь в сторе куда класть данных окна после закрытия */\n    dispatchPath: PropTypes.string,\n\n    /** Объект для подписки на изменения в STORE */\n    subscribe: PropTypes.object,\n};\n\nconst mapStateToProps = (store, ownProps) => {\n    const {subscribe} = ownProps;\n    if(subscribe){\n        const {name, path} = subscribe;\n        if(name && path)\n            return { [name]: objectPath.get(store, path) };\n    }\n    return {};\n};\nconst mapDispatchToProps = (dispatch) =>\n    bindActionCreators( { setDataStore: setDataStore, }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Select from '../Select/Select';\nimport {\n\tInput,\n\tInputNumber,\n\tForm as AntForm,\n\tButton,\n\tCheckbox,\n\tSwitch,\n\tDatePicker,\n\tRadio,\n    Divider,\n} from 'antd';\nimport { getObjectExcludedProps, getValueFromMultiSelect, getValueFromSingleSelect } from \"../../utils/baseUtils\";\nimport FormTable from './FormTable';\n// import Typography from './Typography';\nimport { withStore, DatePickerHOC, TypographyTitle, TypographyText, TypographyDate } from \"./HOCs\";\nimport FileManager from \"../FileManager/FileManager\";\nimport Modal from \"../Modal/Modal\";\n\nconst excludeProps = ['child', 'componentType', 'field'];\nconst noAntItemTypes = ['Title', 'Text', 'Divider', 'Button', 'LocalTable', 'ServerTable', 'InfinityTable'];\n\nconst FormItem = (props) => {\n\n\tconst {child, field} = props;\n\tlet antFormItemProps = getObjectExcludedProps(props, excludeProps);\n\n\t// Если тип элемента Select -> добавить доп свойства к Form.Item\n    if (child && child.componentType && (child.componentType === 'SingleSelect' || child.componentType === 'MultiSelect')) {\n        antFormItemProps.valuePropName = 'defaultSelectedRowKeys';\n        antFormItemProps.getValueFromEvent = child.componentType === 'SingleSelect' ? getValueFromSingleSelect : getValueFromMultiSelect;\n        antFormItemProps.trigger = 'onChangeKeys';\n    } else if (child && child.componentType && child.componentType === 'SelectTable') {\n        // antFormItemProps.getValueFromEvent = getValueFromSelectTable;\n        // antFormItemProps.trigger = 'onRowClick';\n    }\n\n\t// console.log('FormItem props => ', props);\n\n\tconst getItem = () => {\n\t\tif (child) {\n\t\t    // const childProps = getObjectExcludedProps(child, ['componentType']);\n\t\t\tconst childProps = {...child};\n            // console.log('FormItem childProps => ', childProps);\n\t\t\tlet Component;\n\t\t\tlet placeholder;\n            switch (child.componentType) {\n\t\t\t\tcase 'Button':\n\t\t\t\t\tComponent = withStore(Button, antFormItemProps);\n\t\t\t\t\t// console.log('Props field => ', field);\n\t\t\t\t\tconst onClick = (e) => childProps.onClick && childProps.onClick(e, field);\n\t\t\t\t\treturn (<Component {...childProps} onClick={onClick}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'Title':\n\t\t\t\t\tComponent = withStore(TypographyTitle, antFormItemProps);\n\t\t\t\t\treturn (<Component {...child} componentType={child.componentType}/>);\n\t\t\t\tcase 'Text':\n\t\t\t\t\tComponent = withStore(TypographyText, antFormItemProps);\n\t\t\t\t\treturn (<Component {...child} componentType/>);\n\t\t\t\tcase 'Divider':\n\t\t\t\t\tComponent = withStore(Divider, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'Checkbox':\n\t\t\t\t\tComponent = withStore(Checkbox, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'DatePicker':\n\t\t\t\t\tComponent = withStore(DatePickerHOC(DatePicker), antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Выберите дату';\n\t\t\t\t\tconst style = {width: '100%', ...(childProps && childProps.style)};\n\t\t\t\t\treturn (<Component{...childProps} style={style} placeholder={placeholder}/>);\n\t\t\t\tcase 'DateText':\n\t\t\t\t\tComponent = withStore(TypographyDate, antFormItemProps);\n\t\t\t\t\treturn (<Component {...child} />);\n\t\t\t\tcase 'Input':\n\t\t\t\t\tComponent = withStore(Input, antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите значение';\n\t\t\t\t\treturn (<Component {...childProps} placeholder={placeholder} />);\n\t\t\t\tcase 'TextArea':\n\t\t\t\t\tComponent = withStore(Input.TextArea, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps} />);\n\t\t\t\tcase 'Password':\n\t\t\t\t\tComponent = withStore(Input.Password, antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите пароль';\n\t\t\t\t\treturn (<Component {...childProps} placeholder={placeholder}/>);\n\t\t\t\tcase 'InputNumber':\n\t\t\t\t\tComponent = withStore(InputNumber, antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите значение';\n\t\t\t\t\treturn (<Component {...childProps} style={{width: '100%'}} placeholder={placeholder}/>);\n\t\t\t\tcase 'Radio':\n\t\t\t\t\tComponent = withStore(Radio, antFormItemProps);\n\t\t\t\t\treturn <Component {...childProps}>{childProps && childProps.label}</Component>;\n\t\t\t\tcase 'RadioButton':\n\t\t\t\t\tComponent = withStore(Radio.Button, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'Switch':\n\t\t\t\t\tComponent = withStore(Switch, antFormItemProps);\n\t\t\t\t\treturn <Component {...childProps} />;\n                case \"RadioGroup\":\n                    Component = withStore(Radio.Group, antFormItemProps);\n                    return (<Component {...childProps} />);\n\t\t\t\tcase 'SingleSelect':\n                case 'MultiSelect':\n\t\t\t\t\treturn <Select {...childProps} type={child.componentType} name={antFormItemProps.name}/>;\n\t\t\t\t\t//'infinity', 'serverSide', 'localSide'\n                case 'InfinityTable':\n                    childProps.type = 'infinity';\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\n                case 'ServerTable':\n                    childProps.type = 'serverSide';\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\n                case 'LocalTable':\n                    childProps.type = 'localSide';\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\n                case 'SelectTable':\n\t\t\t\t\tchildProps.type = 'localSide';\n\t\t\t\t\treturn <FormTable {...childProps} name={props.name} componentType={child.componentType} /> ;\n\t\t\t\tcase 'FileManager':\n\t\t\t\t\treturn <FileManager {...childProps} name={props.name} />;\n\t\t\t\tcase 'Modal':\n\t\t\t\t\treturn <Modal {...childProps} name={props.name} />;\n\t\t\t\tcase 'Custom':\n\t\t\t\t\tComponent = withStore(child.render, antFormItemProps);\n\t\t\t\t\treturn <Component {...childProps}/>;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t};\n\n    if(!antFormItemProps.label)\n        return <AntForm.Item {...antFormItemProps} noStyle>{getItem()}</AntForm.Item>;\n    else\n        return <AntForm.Item {...antFormItemProps}>{getItem()}</AntForm.Item>;\n};\n\nFormItem.propTypes = {\n\tchild: PropTypes.object.isRequired\n};\n\nexport default FormItem;\n","import React from 'react';\nimport {rtPrefix} from '../../utils/variables';\nimport PropTypes from \"prop-types\";\n\nconst Layout = props => {\n\n    let itemProps = {};\n    Object.keys(props).forEach((key) =>\n        key !== 'children' ? (itemProps[key] = props[key]) : null\n    );\n\n    const getCls = () => {\n        let cls = [`${rtPrefix}-layout`];\n        itemProps.className && cls.push(itemProps.className);\n        return cls.join(' ');\n    };\n\n    return (\n        <div {...itemProps} className={getCls()}>\n            {props.children}\n        </div>\n    );\n};\n\nLayout.propTypes = {\n    /** Строка класса */\n    className: PropTypes.string,\n\n    /** Объект стиля */\n    style: PropTypes.object,\n};\n\nexport default Layout;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormItem from \"./FormItem\";\nimport Layout from \"../Layout/Layout\";\nimport { Row, Col, Tabs, Radio, Form as AntForm, Input, Space } from \"antd\";\nimport { getObjectExcludedProps } from \"../../utils/baseUtils\";\n\nconst excludeProps = [\"children\", \"componentType\"];\n\nconst FormItems = (props) => {\n    const { items } = props;\n\n    // console.log('FormItems props => ', props);\n\n    const getItems = (data, antFormListParams) => {\n\n        return (data && data.map((item, index) => {\n            let itemProps = getObjectExcludedProps(item, excludeProps);\n            // console.log('FormItems index => ', index);\n\n            switch (item.componentType) {\n                case \"Row\":\n                    return (\n                        <Row key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Row>\n                    );\n                case \"Col\":\n                    return (\n                        <Col key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Col>\n                    );\n                case \"Layout\":\n                    return (\n                        <Layout key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Layout>\n                    );\n                case \"Tabs\":\n                    return (\n                        <Tabs key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Tabs>\n                    );\n                case \"TabPane\":\n                    return (\n                        <Tabs.TabPane key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Tabs.TabPane>\n                    );\n                case \"RadioGroup\":\n                    return (\n                        <Radio.Group key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Radio.Group>\n                    );\n                case \"Item\":\n                    let _item = { ...item };\n                    let _key = index;\n                    if (antFormListParams && antFormListParams.field) {\n                        if (_item.name) {\n                            if (Array.isArray(_item.name)) {\n                                _item.name = [antFormListParams.field.name, ..._item.name];\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\n                            } else {\n                                _item.name = [antFormListParams.field.name, _item.name];\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\n                            }\n                        }\n                    }\n                    // console.log('_item ', _item.name);\n                    return <FormItem key={`${_key}`} {..._item} field={{ ...antFormListParams }}/>;\n                case \"ListItems\":\n                    return (\n                        <AntForm.List key={index} {...itemProps}>\n                            {(fields, operation) => {\n                                const param = { fields: [...fields], operation: { ...operation } };\n                                return getItems(item.children, param);\n                            }}\n                        </AntForm.List>\n                    );\n                case \"ListItem\":\n                    // console.log('antFormListParams => ', antFormListParams);\n                    return (\n                        <div key={index}>\n                            {antFormListParams && antFormListParams.fields && antFormListParams.fields.map((field, fIndex) => {\n                                // console.log('index field.key', index, field);\n                                const param = { field: { ...field }, ...antFormListParams };\n                                return <div key={field.key}>{getItems(item.children, param)} </div>;\n                            })}\n                        </div>\n                    );\n\n\n                default:\n                    return null;\n            }\n        })) || null;\n    };\n\n    return getItems(items);\n};\n\nFormItems.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default FormItems;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {noop} from '../../utils/baseUtils';\nimport {rtPrefix} from '../../utils/variables';\nimport {Input, Tooltip, Popconfirm, Modal, Button} from 'antd';\nimport {\n\tPlusOutlined,\n\tCopyOutlined,\n\tFolderAddOutlined,\n\tDeleteOutlined,\n\tEditOutlined,\n\tArrowUpOutlined,\n\tArrowDownOutlined,\n\tSettingOutlined,\n\tFilterOutlined,\n\tExclamationCircleOutlined,\n} from '@ant-design/icons';\nimport FormItems from \"../Form/FormItems\";\nconst {confirm} = Modal;\n\nconst CommandPanel = (props) => {\n\tconst {\n\t\tborderStyle,\n\t\tdefaultValueSearch,\n\t\tdeleteConfirm,\n\t\tdeleteConfirmType,\n\t\tdeleteConfirmTitle,\n\t\tdeleteConfirmDescription,\n\t\tonClickAdd,\n\t\tonClickAddAsCopy,\n\t\tonClickAddGroup,\n\t\tonClickDelete,\n\t\tonClickEdit,\n\t\tonClickUp,\n\t\tonClickDown,\n\t\tonSearch,\n\t\tshowElements,\n        systemBtnProps,\n\t\tdisabledElements,\n\t\tleftCustomSideElement,\n\t\tcenterCustomSideElement,\n\t\trightCustomSideElement,\n\t} = props;\n\n    const defaultSystemBtnProps = {\n        add: {\n            tooltip: 'Добавить',\n            onClick: onClickAdd,\n            icon: <PlusOutlined />\n        },\n        addAsCopy: {\n            tooltip: 'Добавить копированием',\n            onClick: onClickAddAsCopy,\n            icon: <CopyOutlined />\n        },\n        addGroup: {\n            tooltip: 'Добавить группу',\n            onClick: onClickAddGroup,\n            icon: <FolderAddOutlined />\n        },\n        edit: {\n            tooltip: 'Изменить',\n            onClick: onClickEdit,\n            icon: <EditOutlined />\n        },\n        delete: {\n            tooltip: 'Удалить',\n            icon: <DeleteOutlined />\n        },\n        up: {\n            tooltip: 'Переместить вверх',\n            onClick: onClickUp,\n            icon: <ArrowUpOutlined />\n        },\n        down: {\n            tooltip: 'Переместить вниз',\n            onClick: onClickDown,\n            icon: <ArrowDownOutlined />\n        },\n\t\tsearch: {\n\t\t\tplaceholder: 'Поиск',\n\t\t\tonSearch: onSearch,\n\t\t},\n        settings: {\n            tooltip: 'Настройки таблицы',\n            tooltipPlacement: 'topRight',\n            onClick: () => {},\n            icon: <SettingOutlined />\n        },\n        filter: {\n            tooltip: 'Настройки фильтров',\n            tooltipPlacement: 'topRight',\n            onClick: () => {},\n            icon: <FilterOutlined />\n        }\n    };\n\n\tconst _onClickDelete = (event) => {\n\t\tif (deleteConfirmType === 'Modal') {\n\t\t\tdeleteButtonModalConfirm();\n\t\t} else {\n\t\t\tonClickDelete(event);\n\t\t}\n\t};\n\n\tconst deleteButtonPopupConfirm = () => {\n\t\treturn (\n\t\t\t<Popconfirm\n\t\t\t\tplacement='top'\n\t\t\t\ttitle={deleteConfirmDescription}\n\t\t\t\tonConfirm={onClickDelete}\n\t\t\t\tokText='Да'\n\t\t\t\tcancelText='Нет'\n\t\t\t>\n\t\t\t\t{renderDeleteBtn(false)}\n\t\t\t</Popconfirm>\n\t\t);\n\t};\n\n    const deleteButtonModalConfirm = () => {\n\t\tconfirm({\n\t\t\ttitle: deleteConfirmTitle,\n\t\t\ticon: <ExclamationCircleOutlined />,\n\t\t\tcontent: deleteConfirmDescription,\n\t\t\tcentered: true,\n\t\t\tokText: 'Ок',\n\t\t\tcancelText: 'Отмена',\n\t\t\tonOk() {\n\t\t\t\tonClickDelete();\n\t\t\t},\n\t\t});\n\t};\n\n    const renderDeleteBtn = (withOnClick) => {\n        const genProps = {...defaultSystemBtnProps['all'], ...systemBtnProps['all']};\n        const btnProps = {...defaultSystemBtnProps['delete'], ...systemBtnProps['delete']};\n\n        return (\n            <Tooltip title={btnProps.tooltip}>\n                <Button\n                    {...genProps}\n                    className={`${rtPrefix}-btn`}\n                    icon={btnProps.icon}\n                    onClick={withOnClick ? _onClickDelete : null}\n                    disabled={disabledElements.includes('delete')}\n                />\n            </Tooltip>\n        );\n    };\n\n    const renderBtn = (type) => {\n        const genProps = {...defaultSystemBtnProps['all'], ...systemBtnProps['all']};\n        const btnProps = {...defaultSystemBtnProps[type], ...systemBtnProps[type]};\n\n        if(showElements.includes(type)) {\n            if(btnProps.render)\n                return btnProps.render({\n                    disabled: disabledElements.includes(type),\n                    onClick: btnProps.onClick,\n\t\t\t\t\tonSearch: btnProps.onSearch\n\t\t\t\t});\n             else\n             \tif (type === 'search')\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Input.Search\n\t\t\t\t\t\t\tdisabled={disabledElements.includes(type)}\n\t\t\t\t\t\t\tdefaultValue={defaultValueSearch}\n\t\t\t\t\t\t\tplaceholder={btnProps.placeholder}\n\t\t\t\t\t\t\tonSearch={btnProps.onSearch}\n\t\t\t\t\t\t\tclassName={'search'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\telse\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Tooltip title={btnProps.tooltip} placement={btnProps.tooltipPlacement ? btnProps.tooltipPlacement : 'top'}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t{...genProps}\n\t\t\t\t\t\t\t\tclassName={`${rtPrefix}-btn`}\n\t\t\t\t\t\t\t\ticon={btnProps.icon}\n\t\t\t\t\t\t\t\tonClick={btnProps.onClick}\n\t\t\t\t\t\t\t\tdisabled={disabledElements.includes(type)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t)\n        }\n        else\n            return null\n    };\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{showElements.length ||\n\t\t\tleftCustomSideElement ||\n\t\t\tcenterCustomSideElement ||\n\t\t\trightCustomSideElement ? (\n\t\t\t\t<div\n\t\t\t\t\tclassName={`${rtPrefix}-command-panel border-${borderStyle}`}\n\t\t\t\t>\n\t\t\t\t\t<div className={'left-system-side'}>\n                        {renderBtn('add')}\n                        {renderBtn('addAsCopy')}\n                        {renderBtn('addGroup')}\n                        {renderBtn('edit')}\n\n\t\t\t\t\t\t{showElements.includes('delete')\n\t\t\t\t\t\t\t? deleteConfirm\n\t\t\t\t\t\t\t\t? deleteConfirmType === 'Popup'\n\t\t\t\t\t\t\t\t\t? deleteButtonPopupConfirm()\n\t\t\t\t\t\t\t\t\t: renderDeleteBtn(true)\n\t\t\t\t\t\t\t\t: renderDeleteBtn(true)\n\t\t\t\t\t\t\t: null}\n\n                        {renderBtn('up')}\n                        {renderBtn('down')}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'left-custom-side'}>\n\t\t\t\t\t\t{leftCustomSideElement ? <FormItems items={leftCustomSideElement} /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'center-custom-side'}>\n\t\t\t\t\t\t{centerCustomSideElement ? <FormItems items={centerCustomSideElement} /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'right-custom-side'}>\n\t\t\t\t\t\t{rightCustomSideElement ? <FormItems items={rightCustomSideElement} /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'right-system-side'}>\n\t\t\t\t\t\t{renderBtn('search')}\n                        {renderBtn('settings')}\n                        {renderBtn('filter')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n};\n\nCommandPanel.propTypes = {\n\t/** Центральный кастомный элемент командной панели */\n\tcenterCustomSideElement: PropTypes.arrayOf(PropTypes.object), // PropTypes.element,\n\n\t/** Тип бордера панели (по умолчанию 'bottom')\n\t * ['all', 'none', 'top', 'left', 'bottom', 'right', 'top-bottom', 'left-right'] */\n\tborderStyle: PropTypes.oneOf([\n\t\t'all',\n\t\t'none',\n\t\t'top',\n\t\t'left',\n\t\t'bottom',\n\t\t'right',\n\t\t'top-bottom',\n\t\t'left-right',\n\t]),\n\n\t/** Значение по умолчанию для строки поиска */\n\tdefaultValueSearch: PropTypes.string,\n\n\t/** Нужно ли делать подтверждение на кнопке удалить */\n\tdeleteConfirm: PropTypes.bool,\n\n\t/** Тип подтверждения удаления 'Popup' / 'Modal' */\n\tdeleteConfirmType: PropTypes.oneOf(['Popup', 'Modal']),\n\n\t/** Текст подтверждения на удаление элемента */\n\tdeleteConfirmTitle: PropTypes.string,\n\n\t/** Текст подтверждения на удаление элемента */\n\tdeleteConfirmDescription: PropTypes.string,\n\n\t/** Массив элементов командной панели для блокировки\n     ['add', 'addAsCopy', 'addGroup', 'delete', 'edit', 'up', 'down', 'search', 'settings', 'filter'] */\n\tdisabledElements: PropTypes.arrayOf(PropTypes.string),\n\n\t/** Левый кастомный элемент командной панели */\n\tleftCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Событие при нажатии на кнопку \"Добавить\" */\n\tonClickAdd: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Добавить копированием\" */\n\tonClickAddAsCopy: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Добавить группу\" */\n\tonClickAddGroup: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Удалить\" */\n\tonClickDelete: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Переместить вниз\" */\n\tonClickDown: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Изменить\" */\n\tonClickEdit: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Переместить вверх\" */\n\tonClickUp: PropTypes.func,\n\n\t/** Событие при поиске */\n\tonSearch: PropTypes.func,\n\n\t/** Правый кастомный элемент командной панели */\n\trightCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Массив элементов командной панели, которые надо отобразить\n     ['add', 'addAsCopy', 'addGroup', 'delete', 'edit', 'up', 'down', 'search', 'settings', 'filter'] */\n\tshowElements: PropTypes.arrayOf(PropTypes.string),\n\n    /** Объект кастомизации системных кнопок\n     { [btnType]: { tooltip: <String>, icon: <Icon />, render: ({disabled, onClick}) => <Component /> } } */\n    systemBtnProps: PropTypes.object\n};\n\nCommandPanel.defaultProps = {\n\tcenterCustomSideElement: null,\n\tborderStyle: 'bottom',\n\tdefaultValueSearch: undefined,\n\tdeleteConfirm: true,\n\tdeleteConfirmType: 'Modal',\n\tdeleteConfirmTitle: 'Подтвержение удаления',\n\tdeleteConfirmDescription: 'Вы действительно хотите удалить?',\n\tdisabledElements: [],\n\tleftCustomSideElement: null,\n\tonClickAdd: noop,\n\tonClickAddAsCopy: noop,\n\tonClickAddGroup: noop,\n\tonClickDelete: noop,\n\tonClickEdit: noop,\n\tonClickUp: noop,\n\tonClickDown: noop,\n\tonSearch: noop,\n\trightCustomSideElement: null,\n\tshowElements: [],\n    systemBtnProps: {},\n};\nexport default CommandPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '../Table/Table';\n\n/**\n * ### Список / Дерево.\n */\nconst List = (props) => {\n\tconst {rowKey, rowRender, title} = props;\n\n\tconst columns = [\n\t\t{\n\t\t\tkey: rowKey,\n\t\t\ttitle: title,\n\t\t\tdataKey: rowKey,\n\t\t\twidth: 500,\n\t\t\tcellRenderer:\n\t\t\t\ttypeof rowRender === 'function'\n\t\t\t\t\t? rowRender\n\t\t\t\t\t: ({rowData}) => <div>{rowData[rowRender]}</div>,\n\t\t},\n\t];\n\treturn <Table {...props} columns={columns} headerHeight={title ? 30 : 0} />;\n};\n\nList.propTypes = {\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { cellData, columns, column, columnIndex, rowData, rowIndex, container, isScrolling }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n\t/** Заголовок списка (по умолчанию скрыт)*/\n\ttitle: PropTypes.string,\n};\n\nList.defaultProps = {\n\trowKey: 'id',\n\trowRender: 'id',\n\ttitle: undefined,\n};\n\nexport default List;\n","/** deprecated */\nimport CommandPanel from './CommandPanel/CommandPanel';\nimport FilterPanel from './FilterPanel/FilterPanel';\nimport Table from './Table/Table';\nimport AdvancedTable from './AdvancedTable/AdvancedTable';\nimport List from './List/List';\nimport Select from './Select/Select';\nimport SingleDate from './SingleDate/SingleDate';\nimport DateRange from './DateRange/DateRange';\nimport Form from './Form/Form';\nimport FileManager from './FileManager/FileManager';\nimport Modal from './Modal/Modal';\n\n// export {default as CommandPanel} from './CommandPanel/CommandPanel';\n// export {default as FilterPanel} from './FilterPanel/FilterPanel';\n// export {default as Table} from './Table/Table';\n// export {default as AdvancedTable} from './AdvancedTable/AdvancedTable';\n// export {default as List} from './List/List';\n// export {default as Select} from './Select/Select';\n// export {default as SingleDate} from './SingleDate/SingleDate';\n// export {default as DateRange} from './DateRange/DateRange';\n//\n// // Компоненты формы\n// export {default as Form} from './Form/Form';\n// export {default as FileManager} from './FileManager/FileManager';\n// export {default as Modal} from './Modal/Modal';\n\n\nexport const deprecated = {\n    CommandPanel,\n    FilterPanel,\n    Table,\n    AdvancedTable,\n    List,\n    Select,\n    SingleDate,\n    DateRange,\n    Form,\n    FileManager,\n    Modal,\n}","import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport objectPath from \"object-path\";\nimport { dispatchToStore, getObjectExcludedProps, useMounted } from \"../utils/baseUtils\";\nimport { getExtraData, mapDispatchToProps, mapStateToProps } from \"../utils/storeUtils\";\n\nconst defaultProps = {\n    trigger: 'onChange',\n    valuePropName: 'value',\n};\n\nexport const withStore = (Component) => {\n\n    return connect(mapStateToProps, mapDispatchToProps)( (props) => {\n\n        const {componentType, setDataStore, dispatchExtraData} = props;\n\n        // Объект подписки на стор\n        const subscribe = props.subscribe ? props.subscribe : [];\n\n        // Объект публикации в стор\n        const dispatch = props.dispatch ? props.dispatch : {};\n\n        const [subscribeProps, setSubscribeProps] = useState({});\n\n        const {trigger, valuePropName} = { ...defaultProps, ...props.itemProps };\n\n        const excludeProps = ['itemProps', 'componentType', 'setDataStore', 'subscribe', ...subscribe.map(item => item.name), 'dispatch', 'dispatchExtraData']; // ...subscribe.map(item => item.name),\n\n        const isMounted = useMounted()\n\n        /** Подписка на изменение props[subscribe.name] в сторе */\n        subscribe.map(item => {\n            return useEffect( () => {\n                // console.log(\"withStore subscribe: \", item.name, item.withMount);\n                if((item.withMount || isMounted) && item.name) {\n                    // console.log(\"storeHOC => subscribe: \", props[subscribe.name]);\n                    item.onChange && item.onChange({\n                        value: props[item.name],\n                        extraData: getExtraData(item, props), //extraData,\n                        setSubscribeProps: setSubscribePropsHandler});\n                }\n                // console.log(\"Change Props[2]: \", props.subscribeЗф);\n            }, [props[item.name]]);\n        })\n\n        /** Подписка на изменение props и отправка данных в стор */\n        useEffect(() => {\n            let _value = props[valuePropName];\n            // console.log(`storeHOC => `, dispatch.path, _value, valuePropName);\n            // if (_value === null || _value === undefined || (typeof _value === 'string' && _value.trim() === ''))\n            //     _value = undefined;\n            if (componentType !== 'Button' && componentType !== 'Search')\n                dispatchToStore({ dispatch, setDataStore, value: _value });\n        }, [props[valuePropName]]);\n\n        /** Подписка на изменение subscribeProps.value и отправка данных в props[trigger] (как правило это onChange) */\n        // useEffect(() => {\n        //     if(isMounted) {\n        //         console.log('onChange subscribeProps.value => ', subscribeProps.value);\n        //         props[trigger] && props[trigger](subscribeProps.value);\n        //     }\n        // }, [subscribeProps.value]);\n\n        const setSubscribePropsHandler = (_subscribeProps) => {\n            // console.log('onChange setSubscribePropsHandler => ', dispatch.path, _subscribeProps);\n            setSubscribeProps((prevState) => ({ ...prevState, ..._subscribeProps }));\n            if(_subscribeProps && objectPath.has(_subscribeProps, valuePropName)) {\n                const value = _subscribeProps[valuePropName]\n                // console.log('setSubscribePropsHandler => ', componentType, value);\n                if(componentType === 'Search')\n                    _searchDispatchToStore(value)\n\n                props[trigger] && props[trigger](value);\n            }\n        }\n\n        const onChange = (...args) => {\n            // console.log('withStore [trigger] ', dispatch.path, props[trigger], args)\n            if(componentType === 'Button')\n                dispatchToStore({dispatch, setDataStore, value: args[0], extraData: dispatchExtraData});\n\n            if(subscribeProps && objectPath.has(subscribeProps, valuePropName)) {\n                const _subscribeProps = {...subscribeProps}\n                objectPath.del(_subscribeProps, valuePropName);\n                // console.log('onClear subscribeProps[valuePropName] => ', _subscribeProps);\n                setSubscribeProps(_subscribeProps)\n            }\n\n            props[trigger] && props[trigger](...args);\n        };\n\n        const _onSearch = (searchLine, e) => {\n            e.preventDefault();\n            // console.log(\"_onSearch\", searchLine);\n            _searchDispatchToStore(searchLine)\n        };\n        const _searchDispatchToStore = (searchLine) =>\n          dispatchToStore({dispatch, setDataStore, value: searchLine, extraData: dispatchExtraData});\n\n        const childProps = getObjectExcludedProps(props, excludeProps);\n        const onSearchProps = (componentType === 'Search') ? {onSearch: _onSearch} : {}\n        // console.log(`storeHOC Component => `, componentType, Component);\n        return (\n            <Component\n                {...childProps}\n                {...subscribeProps}\n                {...{[trigger]: onChange}}\n                {...onSearchProps}\n            >{props.children}</Component>\n        )\n    })\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getObjectExcludedProps } from \"../utils/baseUtils\";\nimport {renderClassicByName} from \"../core/renders\";\nconst excludeProps = ['child', 'componentType', 'field'];\nconst FormItem = (props) => {\n\n\tconst {child, field} = props;\n\tlet antFormItemProps = getObjectExcludedProps(props, excludeProps);\n\tif (child)\n\t\treturn renderClassicByName(child.componentType)\n\t\t\t({itemProps: {...antFormItemProps}, ...child, field})\n\telse\n\t\treturn null;\n};\n\nFormItem.propTypes = {\n\tchild: PropTypes.object.isRequired\n};\n\nexport default FormItem;\n","import React from \"react\";\nimport FormItem from \"./FormItem\";\nimport { Form as AntForm } from \"antd\";\nimport { renderDeclarativeByName } from \"../core/renders\";\n\nconst FormItems = (props) => {\n    const { items } = props;\n    // console.log('FormItems props => ', props);\n    const getItems = (data, formListProps) => {\n        return (data && data.map((item, index) => {\n            const {componentType, children, ...itemProps} = item;\n            // console.log('FormItems index => ', index);\n            switch (componentType) {\n                case \"Item\":\n                    let _item = { ...item };\n                    let _key = index;\n                    if (formListProps && formListProps.field) {\n                        if (_item.name) {\n                            if (Array.isArray(_item.name)) {\n                                _item.name = [formListProps.field.name, ..._item.name];\n                                _item.fieldKey = [formListProps.field.name, ..._item.name];\n                            } else {\n                                _item.name = [formListProps.field.name, _item.name];\n                                _item.fieldKey = [formListProps.field.name, ..._item.name];\n                            }\n                        }\n                    }\n                    // console.log('_item ', _item.name);\n                    return <FormItem key={`${_key}`} {..._item} field={{ ...formListProps }}/>;\n                case \"ListItems\":\n                    return (\n                        <AntForm.List key={index} {...itemProps}>\n                            {(fields, operation) => {\n                                const param = { fields: [...fields], operation: { ...operation } };\n                                return getItems(children, param);\n                            }}\n                        </AntForm.List>\n                    );\n                case \"ListItem\":\n                    // console.log('formListProps => ', formListProps);\n                    return (\n                        <div key={index}>\n                            {formListProps && formListProps.fields && formListProps.fields.map((field, fIndex) => {\n                                // console.log('index field.key', index, field);\n                                const param = { field: { ...field }, ...formListProps };\n                                return <div key={field.key}>{getItems(children, param)} </div>;\n                            })}\n                        </div>\n                    );\n                default:\n                    return renderDeclarativeByName(componentType)({ key: index, ...itemProps })(getItems(children, formListProps))\n            }\n        })) || null;\n    };\n\n    return getItems(items);\n};\n\nexport default FormItems;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport FormItems from \"./FormItems\";\nimport { Form as AntForm, notification } from \"antd\";\nimport { dispatchToStore, getObjectExcludedProps, noop, notificationError } from \"../utils/baseUtils\";\nimport { rtPrefix } from \"../utils/variables\";\nimport { setDataStore } from \"../../redux/rtd.actions\";\n\nconst excludeProps = [\n    \"dispatch\",\n    \"setDataStore\",\n    \"componentType\",\n    \"noPadding\",\n    \"scrollable\",\n    \"header\",\n    \"body\",\n    \"footer\",\n    \"loadInitData\",\n    \"requestSaveForm\",\n    \"methodSaveForm\",\n    \"processBeforeSaveForm\"\n];\n\n/** Компонент заголовка формы */\nexport const FormHeader = (props) =>\n    <div {...props} className={`${rtPrefix}-form-header ${props.className || ''}`}>{props.children}</div>\n\n/** Компонент тела формы */\nexport const FormBody = (props) => {\n    const {noPadding, scrollable, ...rest} = props;\n    let cls = [`${rtPrefix}-form-body`];\n    noPadding && cls.push(`${rtPrefix}-form-body-no-padding`);\n    scrollable && cls.push(`${rtPrefix}-form-body-scrollable`);\n    return <div {...rest} className={cls.join(\" \")}/>\n}\n\n/** Компонент подвала формы */\nexport const FormFooter = (props) =>\n    <div className={`${rtPrefix}-form-footer`}>{props.children}</div>\n\n\n/** Компонент формы */\nconst Form = (props) => {\n    const {\n        dispatch,\n        setDataStore,\n        loadInitData,\n        header,\n        body,\n        footer,\n        requestSaveForm,\n        methodSaveForm,\n        processBeforeSaveForm\n    } = props;\n\n    /** Состояние первоначалной настройки компонента*/\n    const [loaded, setLoaded] = useState(false);\n    const [antFormProps, setAntFormProps] = useState({});\n    const [initFormData, setInitFormData] = useState({});\n\n    useEffect(() => {\n        if (!loaded) {\n            if (loadInitData !== noop)\n                loadInitData(_setInitFormData);\n            else\n                setLoaded(true);\n        }\n    }, [loaded]);\n\n    useEffect(() => {\n        setAntFormProps(getObjectExcludedProps(props, excludeProps));\n        // console.log('antFormProps props => ', getObjectExcludedProps(props, excludeProps));\n    }, [props]);\n\n\n    const _setInitFormData = (data) => {\n        // console.log(\"Form loaded init data => \", data);\n        setInitFormData(data);\n        setLoaded(true);\n    };\n\n\n    let antForm;\n    if (props && props.form) {\n        antForm = props.form;\n    } else {\n        const [form] = AntForm.useForm();\n        antForm = form;\n    }\n\n    const getBodyCls = () => {\n        let cls = [`${rtPrefix}-form-body`];\n        props.noPadding && cls.push(`${rtPrefix}-form-body-no-padding`);\n        props.scrollable && cls.push(`${rtPrefix}-form-body-scrollable`);\n        return cls.join(\" \");\n    };\n\n    const onFinish = (rawValues) => {\n        const values = processBeforeSaveForm ? processBeforeSaveForm(rawValues) : rawValues;\n        // console.log(`Success form [${props.name ? props.name : 'no name form'}]: `, values);\n        const saveObject = {\n            ...initFormData,\n            ...values,\n        };\n        console.log(`Success form [${props.name ? props.name : 'no name form'}]: `, saveObject);\n        if (requestSaveForm && methodSaveForm) {\n            requestSaveForm({\n                method: methodSaveForm,\n                data: saveObject\n            })\n                .then(response => {\n                    notification.success({\n                        message: \"Сохранение прошло успешно\"\n                    });\n                    props.onFinish && props.onFinish(saveObject, response.data);\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\n        } else if (props.onFinish)\n            props.onFinish(saveObject);\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.error(\"Failed:\", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    const Header = (header) => <div className={`${rtPrefix}-form-header`}><FormItems items={header}/></div>\n    const Footer = (footer) => <div className={`${rtPrefix}-form-footer`}><FormItems items={footer}/></div>\n\n    return (\n        <React.Fragment>\n            {loaded\n                ? <AntForm\n                    form={antForm}\n                    {...antFormProps}\n                    className={`${antFormProps.className} ${rtPrefix}-form`}\n                    style={{ ...antFormProps.style, width: '100%', height: '100%' }}\n                    initialValues={{ ...antFormProps.initialValues, ...initFormData }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    onFieldsChange={(changedFields, allFields) => {\n                        const values = {\n                            ...initFormData,\n                            ...antForm.getFieldsValue(),\n                        };\n                        // console.log('dispatchToStore => ', dispatch, values);\n                        dispatch && dispatchToStore({ dispatch, setDataStore, value: values })}\n                    }\n                >\n                    <React.Fragment>\n                        {header ? Header(header) : null}\n                        {body ? <div className={getBodyCls()}><FormItems items={body}/></div> : null}\n                        {props.children}\n                        {footer ? Footer(footer) : null}\n                    </React.Fragment>\n                </AntForm>\n                : null}\n        </React.Fragment>\n    );\n};\n\nForm.propTypes = {\n\n    /** Не делать отступы у формы от краев блока. **Only config Form** */\n    noPadding: PropTypes.bool,\n\n    /** Разрешит скролл внтри формы. **Only config Form** */\n    scrollable: PropTypes.bool,\n\n    /** Массив объектов для шапки формы. Как правило только заголовок. */\n    header: PropTypes.arrayOf(PropTypes.object),\n\n    /** Массив объектов для тела формы */\n    body: PropTypes.arrayOf(PropTypes.object),\n\n    /** Массив объектов для подвала формы. Как правило только кнопки \"Сохранить\" и \"Отмена\" */\n    footer: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ссылка на функцию загрузки значений по умолчанию\n     * `(callBack) => callBack(initObject)` */\n    loadInitData: PropTypes.func,\n\n    /** Запрос для автоматического сохранения формы */\n    requestSaveForm: PropTypes.func,\n\n    /** HTTP Метод, передаваемый в запрос сохранения */\n    methodSaveForm: PropTypes.string,\n\n    /** Функция обработки перед сохранением формы */\n    processBeforeSaveForm: PropTypes.func\n};\n\nForm.defaultProps = {\n    noPadding: false,\n    scrollable: false,\n    loadInitData: noop,\n    methodSaveForm: 'POST'\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators({ setDataStore: setDataStore}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { notification, Select as AntSelect } from \"antd\";\nimport {\n\tgenerateUUID,\n\tgetObjectExcludedProps,\n\tnotificationError, useMounted\n} from \"../utils/baseUtils\";\n\nimport { CheckOutlined } from '@ant-design/icons';\n\nconst excludeProps = [\n\t'componentType',\n\t'defaultSortBy',\n\t'defaultFilter',\n\t'defaultSearchValue',\n\t'sortBy',\n\t'filter',\n\t'searchValue',\n\t'searchParamName',\n    'lostParamName',\n\t'infinityMode',\n\t'requestLoadRows',\n\t'optionConverter',\n\t'options',\n\t'widthControl',\n\t'pageSize'\n];\n\n/** Компонент выбора элемента(ов) из списка */\nconst Select = props => {\n\n\tconst {\n\t\t// Rt Props\n\t\tdefaultSortBy,\n\t\tdefaultFilter,\n\t\tdefaultSearchValue,\n\t\tsortBy,\n\t\tfilter,\n\t\tsearchValue,\n\t\tsearchParamName,\n\t\tlostParamName,\n\t\tinfinityMode,\n\t\trequestLoadRows,\n\t\toptionConverter,\n\t\toptions,\n\t\twidthControl,\n\t\tpageSize,\n\n\t\t// Ant Props\n\t\tmode,\n\t\tonChange,\n\t\tvalue,\n\t} = props;\n\n\t/** Наличие на сервере еще данных */\n\tconst [_hasMore, _setHasMore] = useState(true);\n\t/** Индикатор загрузки данных */\n\tconst [_loading, _setLoading] = useState(false);\n\t/** Опции селекта */\n\tconst [_options, _setOptions] = useState(options);\n\tconst [tmpOption, setTmpOption] = useState(undefined);\n\n\t/** Индикатор достижения низа окна */\n\tconst [isEndReached, setIsEndReached] = useState(false);\n\n\t/** Объект сортировки */\n\tconst [_sortBy, _setSortBy] = useState(undefined);\n\t/** Объект фильтрации */\n\tconst [_filter, _setFilter] = useState({});\n\t/** Строка поиска */\n\tconst [_searchValue, _setSearchValue] = useState(undefined);\n\n\t/** Состояние параметра выбрать все */\n\tconst [_isSelectAll, _setIsSelectAll] = useState(false);\n\n\tconst isMounted = useMounted()\n\n\tuseEffect(() => {\n\t\t_setSearchValue(defaultSearchValue);\n\t\t_loadOptions({\n\t\t\tsortBy: defaultSortBy,\n\t\t\tfilter: defaultFilter,\n\t\t\tsearchValue: defaultSearchValue,\n\t\t\treload: true,\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif(isMounted) {\n\t\t\t_setRowsHandler(options);\n\t\t}\n\t}, [options]);\n\n\tuseEffect(() => {\n\t\t// console.log(\"Change sortBy, filter, searchValue\", sortBy, filter, searchValue);\n\t\tif(isMounted) {\n\t\t\tconst __sortBy = sortBy ? sortBy : _sortBy;\n\t\t\tconst __filter = filter ? filter : _filter;\n\t\t\tconst __searchValue = searchValue ? searchValue : _searchValue;\n\t\t\t_setSortBy(__sortBy);\n\t\t\t_setFilter(__filter);\n\t\t\t_setSearchValue(__searchValue);\n\t\t\t_loadOptions({\n\t\t\t\tsortBy: __sortBy,\n\t\t\t\tfilter: __filter,\n\t\t\t\tsearchLine: __searchValue,\n\t\t\t\treload: true,\n\t\t\t});\n\t\t}\n\t}, [sortBy, filter, searchValue]);\n\n\tconst _setRowsHandler = (options) => {\n\t\t_setOptions(options);\n\t\t// console.log('Select _setRowsHandler value => ', options)\n\t\tif(mode === 'multiple') {\n\t\t\tif(Array.isArray(value))\n\t\t\t\tif(options.reduce((preValue, item) => value.includes(item.value) ? preValue + 1 : preValue, 0) === options.length)\n\t\t\t\t\t_setIsSelectAll(true);\n\t\t\t\telse\n\t\t\t\t\t_setIsSelectAll(false);\n\t\t\tonChange(value);\n\t\t} else {\n\t\t\tif(value && options && options.findIndex(option => option.value === value) === -1){\n\t\t\t\t// console.log('Load tmpOption');\n\t\t\t\t_loadTmpOption();\n\t\t\t} else {\n\t\t\t\t// console.log('Clear tmpOption');\n\t\t\t\tsetTmpOption(undefined)\n\t\t\t}\n\t\t}\n\t\t// setRows(rows);\n\t\t// rowsDispatch(rows);\n\t};\n\n\tconst getPageNum = (reload) =>\n\t\treload ? 0 : Math.floor(_options.length / pageSize);\n\n\tconst getSort = (sortBy) =>\n\t\tsortBy && sortBy.key ? sortBy.key + ',' + sortBy.order : null;\n\n\tconst getSearchValue = (searchValue) =>\n\t\tsearchValue ? {[searchParamName]: searchValue} : null\n\n\tconst _loadOptions = (params) => {\n\t\t// console.log('_dataProcessing', params);\n\t\tconst {sortBy, filter, searchValue, reload} = params;\n\t\tif ((_hasMore || reload) && !_loading && requestLoadRows) {\n\t\t\t_setLoading(true);\n\n\t\t\tconst requestOptions = {\n\t\t\t\tparams: {\n\t\t\t\t\tpage: getPageNum(reload),\n\t\t\t\t\tsize: pageSize,\n\t\t\t\t\tsort: getSort(sortBy)\n\t\t\t\t},\n\t\t\t\tdata: {\n\t\t\t\t\t...filter,\n\t\t\t\t\t...getSearchValue(searchValue)\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log('dataQuery', dataQuery);\n\n\t\t\trequestLoadRows(requestOptions)\n\t\t\t\t.then((response) => {\n\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\tconst result = response.data;\n\n\t\t\t\t\tif (result && result.length < pageSize) {\n\t\t\t\t\t\t_setHasMore(false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_setHasMore(true);\n\t\t\t\t\t\tsetIsEndReached(false);\n\t\t\t\t\t}\n\t\t\t\t\treload\n\t\t\t\t\t\t? _setRowsHandler(result.map(option => optionConverter(option))) // _setRows\n\t\t\t\t\t\t: _setRowsHandler(_options.concat(result.map(option => optionConverter(option)))); // _setRows\n\n\t\t\t\t\t// console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\n\n\t\t\t\t\t_setLoading(false);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t\t\t_setRowsHandler(_options); // _setRows\n\t\t\t\t\t// setHasMore(false);\n\t\t\t\t\t_setLoading(false);\n\t\t\t\t});\n\t\t}\n\t};\n\n\tconst _loadTmpOption = () => {\n\t\tif(requestLoadRows){\n\t\t\trequestLoadRows({params: {}, data: {[lostParamName]: value}})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tif(response.data){\n\t\t\t\t\t\tif(response.data.length === 1){\n\t\t\t\t\t\t\tsetTmpOption(optionConverter(response.data[0]))\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnotification.error({ message: `Ошибка загрузки потерянного элемента` });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t\t\tsetTmpOption(undefined)\n\t\t\t\t});\n\t\t}\n\t}\n\n\tconst onScroll = (event) => {\n\t\t// let scrollTopMax = event.nativeEvent.target.scrollTopMax\n\t\tlet scrollTopMax = event.nativeEvent.target.scrollHeight;\n\t\tlet scrollTop = event.nativeEvent.target.scrollTop;//.body.scrollTop\n\n\t\tconst onEndReached = scrollTopMax - scrollTop;\n\n\t\tif(onEndReached < 300 && !isEndReached) {\n\t\t\t// console.log('Load Data');\n\t\t\tsetIsEndReached(true);\n\t\t\t_setSearchValue(defaultSearchValue);\n\t\t\tif(infinityMode){\n\t\t\t\t_loadOptions({\n\t\t\t\t\tsortBy: defaultSortBy,\n\t\t\t\t\tfilter: defaultFilter,\n\t\t\t\t\tsearchValue: defaultSearchValue,\n\t\t\t\t\treload: false,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// console.log(\"scrollTopMax / scrollTop\", scrollTopMax, scrollTop, onEndReached);\n\t\t// const lastScrollTop = this._scroll.scrxollTop;\n\t\t// if (args.scrollTop > lastScrollTop) this._maybeCallOnEndReached();\n\t}\n\n\tconst onSearch = (value) => {\n\t\t_setSearchValue(value);\n\t\t_loadOptions({\n\t\t\tsortBy: defaultSortBy,\n\t\t\tfilter: defaultFilter,\n\t\t\tsearchValue: value,\n\t\t\treload: true,\n\t\t});\n\t}\n\n\tconst _onChangeSelectAll = () => {\n\t\t// console.log(`_onChangeSelectAll`, _isSelectAll);\n\t\tif(mode === 'multiple') {\n\t\t\tif (_isSelectAll) {\n\t\t\t\tconst optionsValues = _options.map(item => item.value);\n\t\t\t\tonChange(value.filter(item => !optionsValues.includes(item)));\n\t\t\t\t_setIsSelectAll(false);\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(value) && value.length > 0)\n\t\t\t\t\tonChange([...new Set([...value, ..._options.map(item => item.value)])]);\n\t\t\t\telse\n\t\t\t\t\tonChange([...new Set([..._options.map(item => item.value)])]);\n\t\t\t\t_setIsSelectAll(true);\n\t\t\t}\n\t\t} else\n\t\t\tonChange(undefined);\n\t}\n    const _onChange = (value) => {\n        // console.log(`_onChange selected`, value);\n        if(Array.isArray(value))\n        \tif(_options.reduce((preValue, item) => value.includes(item.value) ? preValue + 1 : preValue, 0) === _options.length)\n        \t\t_setIsSelectAll(true);\n        \telse\n\t\t\t\t_setIsSelectAll(false);\n\n\t\tonChange(value);\n    }\n\n    const getSelectAllCls = () => {\n\t\tlet cls = ['ant-select-item', 'ant-select-item-option', 'ant-select-item-option-select-all'];\n\t\tif(_isSelectAll)\n\t\t\tcls.push('ant-select-item-option-selected');\n\t\treturn cls.join(' ');\n\t}\n\n\tconst childProps = getObjectExcludedProps(props, excludeProps);\n    return (\n\t\t<AntSelect\n\t\t\tshowArrow={true}\n\t\t\tshowSearch={true}\n\t\t\tallowClear={true}\n\t\t\tfilterOption={false}\n\t\t\tautoClearSearchValue={true}\n\n\t\t\t{...childProps}\n\n\t\t\tsearchValue={_searchValue}\n\t\t\tstyle={{ width: widthControl }}\n\t\t\t// listHeight={heightPopup}\n\t\t\t// defaultValue={['a10', 'c12']}\n\t\t\tonChange={_onChange}\n\t\t\tmaxTagCount={0}\n\t\t\tmaxTagPlaceholder={(omittedValues) => `Выбрано: ${omittedValues.length}`}\n\t\t\t// dropdownMatchSelectWidth={200}\n\t\t\t// listItemHeight={10} listHeight={250}\n\t\t\tonPopupScroll={onScroll}\n\t\t\tonSearch={onSearch}\n\t\t\tdropdownRender={menu => (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t{mode === 'multiple' ?\n\t\t\t\t\t\t<div className={getSelectAllCls()} onClick={_onChangeSelectAll}>\n\t\t\t\t\t\t\t<div className=\"ant-select-item-option-content\">\n\t\t\t\t\t\t\t\t<span>Выбрать все</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{_isSelectAll ?\n\t\t\t\t\t\t\t\t<span className=\"ant-select-item-option-state\"><CheckOutlined/></span> : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t\t{menu}\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t>\n    \t\t{_options && _options.map(({ label, value, className, disabled }, i) =>\n\t\t\t\t<AntSelect.Option key={i.toString(36) + i} value={value} className={className} disabled={disabled}>{label}</AntSelect.Option>)}\n\t\t\t{tmpOption &&\n\t\t\t\t<AntSelect.Option key={generateUUID()} value={tmpOption.value} className={tmpOption.className} disabled={tmpOption.disabled}>{tmpOption.label}</AntSelect.Option>}\n    \t</AntSelect>\n    );\n};\n\nSelect.propTypes = {\n\t/** Сортировка по умолчанию */\n\tdefaultSortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/** Объект фильтрации по умолчанию */\n\tdefaultFilter: PropTypes.object,\n\n\t/** Значение строки поиска по умолчанию строк */\n\tdefaultSearchValue: PropTypes.string,\n\n\t/** Сортировка */\n\tsortBy: PropTypes.object,\n\n\t/** Фильтр */\n\tfilter: PropTypes.object,\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\tlostParamName: PropTypes.string,\n\n\t/** Режим загружки по скроллу */\n\tinfinityMode: PropTypes.bool,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n\t/** Функция преобразования загруженных объектов в объекты для селекта.\n\t * Сигнатура `(option) => ({})`\n\t * Требоваеть вернуть объект с параметрам\n\t * `{ label: ReactNode, value: any, className: string, disabled: bool }`\n\t * ##### Example:\n\t * ``` JS\n\t * (option) => ({\n\t * \tlabel: (<span><MehOutlined />{option.name}</span>),\n\t * \tvalue: option.id,\n\t * \tclassName: 'some-class',\n\t * \tdisabled: false,\n\t * })\n\t * ```\n\t */\n\toptionConverter: PropTypes.func,\n\n\t/** Select options `[{ label, value, className, disabled }]` */\n\toptions: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Ширина поля выбора в пикселях */\n\twidthControl: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n\t/** Размер страницы */\n\tpageSize: PropTypes.number,\n};\n\nSelect.defaultProps = {\n\t// Rt Props\n\tdefaultSortBy: undefined,\n\tdefaultFilter: {},\n\tdefaultSearchValue: undefined,\n\tinfinityMode: false,\n\trequestLoadRows: undefined,\n\toptions: [],\n\twidthControl: '100%',\n\tpageSize: 50,\n\tsearchParamName: 'name',\n\tlostParamName: 'id',\n\toptionConverter: (option) => ({ label: option.name, value: option.id })\n}\n\nexport default Select;\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TreeSelect as AntTreeSelect } from \"antd\";\nimport { getObjectExcludedProps, notificationError, useMounted } from \"../utils/baseUtils\";\n\nconst excludeProps = [\n    'componentType',\n    'defaultSortBy',\n    'defaultFilter',\n    'defaultSearchValue',\n    'sortBy',\n    'filter',\n    'searchValue',\n    'searchParamName',\n    'requestLoadRows',\n    'optionConverter',\n    'treeData'\n];\n\n/** Компонент выбора элемента(ов) из древовидного списка */\nconst TreeSelect = props => {\n\n    const {\n        // Rt Props\n        defaultSortBy,\n        defaultFilter,\n        defaultSearchValue,\n        sortBy,\n        filter,\n        searchValue,\n        searchParamName,\n        requestLoadRows,\n        optionConverter,\n        treeData,\n    } = props;\n    /** Индикатор загрузки данных */\n    const [_loading, _setLoading] = useState(false);\n    /** Опции селекта */\n    const [_treeData, _setTreeData] = useState(treeData);\n    /** Строка поиска */\n    const [_searchValue, _setSearchValue] = useState(undefined);\n\n    const isMounted = useMounted()\n\n    useEffect(() => {\n        _setSearchValue(defaultSearchValue);\n        _loadOptions({\n            sortBy: defaultSortBy,\n            filter: defaultFilter,\n            searchValue: defaultSearchValue,\n            reload: true,\n        });\n    }, []);\n\n    useEffect(() => {\n        // console.log(\"Change sortBy, filter, searchValue\", sortBy, filter, searchValue);\n        if(isMounted) {\n            _setSearchValue(searchValue);\n            _loadOptions({\n                sortBy: sortBy,\n                filter: filter,\n                searchLine: searchValue,\n                reload: true,\n            });\n        }\n    }, [sortBy, filter, searchValue]);\n\n    const onSearch = (value) => {\n        // console.log('TreeSelect onSearch => ', value);\n        _setSearchValue(value);\n        _loadOptions({\n            sortBy: defaultSortBy,\n            filter: defaultFilter,\n            searchValue: value,\n            reload: true,\n        });\n    }\n\n    const getSort = (sortBy) =>\n        sortBy && sortBy.key ? sortBy.key + ',' + sortBy.order : null;\n\n    const getSearchValue = (searchValue) =>\n        searchValue ? {[searchParamName]: searchValue} : null\n\n    const _optionConverter = (options) => {\n        if(Array.isArray(options))\n            return options.map(option => {\n                if(option.children && Array.isArray(option.children))\n                    option.children = _optionConverter(option.children)\n                return optionConverter(option)\n            })\n    }\n\n    const _loadOptions = (params) => {\n        const {sortBy, filter, searchValue} = params;\n        if (!_loading && requestLoadRows) {\n            _setLoading(true);\n            const requestOptions = {\n                params: {\n                    page: 0,\n                    size: 1,\n                    sort: getSort(sortBy)\n                },\n                data: {\n                    ...filter,\n                    ...getSearchValue(searchValue)\n                }\n            }\n            requestLoadRows(requestOptions)\n                .then((response) => {\n                    // console.log(\"infinity then response\", response);\n                    const result = response.data;\n                    _setTreeData(_optionConverter(result))\n                    _setLoading(false);\n                })\n                .catch((error) => {\n                    notificationError(error, 'Ошибка загрузки данных')\n                    // _setRowsHandler(_options); // _setRows\n                    // setHasMore(false);\n                    _setLoading(false);\n                });\n        }\n    }\n\n    const childProps = getObjectExcludedProps(props, excludeProps);\n    return (\n        <AntTreeSelect\n            showArrow={true}\n            showSearch={true}\n            allowClear={true}\n            filterTreeNode={false}\n            autoClearSearchValue={true}\n            treeDefaultExpandAll={true}\n\n            {...childProps}\n\n            searchValue={_searchValue}\n            onSearch={onSearch}\n            maxTagCount={0}\n            maxTagPlaceholder={(omittedValues) => `Выбрано: ${omittedValues.length}`}\n            treeData={_treeData}\n            // loadData={onLoadData}\n        />\n    );\n};\n\nTreeSelect.propTypes = {\n    /** Сортировка по умолчанию */\n    defaultSortBy: PropTypes.shape({\n        /** Ключ поля для сортировки */\n        key: PropTypes.string,\n        /** Направление сортировки */\n        order: PropTypes.oneOf(['asc', 'desc']),\n    }),\n\n    /** Объект фильтрации по умолчанию */\n    defaultFilter: PropTypes.object,\n\n    /** Значение строки поиска по умолчанию строк */\n    defaultSearchValue: PropTypes.string,\n\n    /** Сортировка */\n    sortBy: PropTypes.object,\n\n    /** Фильтр */\n    filter: PropTypes.object,\n\n    /** Значение строки поиска */\n    searchValue: PropTypes.string,\n\n    /** Имя параметра для поиска */\n    searchParamName: PropTypes.string,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция преобразования загруженных объектов в объекты для селекта.\n     * Сигнатура `(option) => ({})`\n     * Требоваеть вернуть объект с параметрам\n     * `{ label: ReactNode, value: any, children: any, checkable: bool, selectable: bool }`\n     * ##### Example:\n     * ``` JS\n     * (option) => ({\n     * \tlabel: (<span><MehOutlined />{option.name}</span>),\n     * \tvalue: option.id,\n     * \tchildren: option.children,\n     * \tcheckable: !option.isGroup,\n     * \tselectable: !option.isGroup,\n     * })\n     * ```*/\n    optionConverter: PropTypes.func.isRequired,\n\n    /** Select options `[{ label, value, children, checkable, selectable }]` */\n    options: PropTypes.arrayOf(PropTypes.object),\n};\n\nTreeSelect.defaultProps = {\n    // Rt Props\n    defaultSortBy: undefined,\n    defaultFilter: {},\n    defaultSearchValue: undefined,\n    requestLoadRows: undefined,\n    searchParamName: 'name',\n    optionConverter: (option) => ({ label: option.name, value: option.id, children: option.children })\n};\n\nexport default TreeSelect;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, notification as antNotification, Spin, Tooltip, Typography, Upload } from \"antd\";\nimport { LoadingOutlined, CloudUploadOutlined } from \"@ant-design/icons\";\nimport { noop } from \"../utils/baseUtils\";\n\n\nconst defaultProps = {\n    requestUploadFile: noop,\n    dataObject: undefined,\n    onCompletedUpload: noop,\n    onFailedUpload: noop,\n    uploadProps: {},\n    toolTipProps: {},\n    buttonProps: {}\n}\n\n/** Компонент загрузки файлов */\nconst UploadFile = props => {\n\n    const {\n        value,\n        requestUploadFile,\n        dataObject,\n        onCompletedUpload,\n        onFailedUpload,\n        uploadProps,\n        toolTipProps,\n        buttonProps,\n    } = props\n\n    const _uploadFile = (file) => {\n        // console.log('beforeUpload dataObject => ', dataObject, value, dataObject || value.dataObject);\n        notification(file, 'loading');\n        if (requestUploadFile) {\n            const _dataObject = dataObject || value.dataObject\n            requestUploadFile({ file: file, dataObject: _dataObject })\n                .then((response) => {\n                    notification(file, 'success');\n                })\n                .catch(() => {\n                    notification(file, 'error');\n                });\n        }\n        return false;\n    };\n    const notification = (file, type) => {\n        const notifProps = {\n            key: file.uid,\n            duration: type === 'loading' ? 0 : 5,\n            icon: type === 'loading'\n                ? <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n                : null,\n            message: <span>Загрузка файла: <Typography.Text code>{file.name}</Typography.Text></span>\n        };\n        switch (type) {\n            case 'loading':\n                antNotification.info(notifProps);\n                break;\n            case 'success':\n                antNotification.success(notifProps);\n                onCompletedUpload(file);\n                props.onChange({...value, file});\n                break;\n            case 'error':\n                antNotification.error(notifProps);\n                onFailedUpload(file);\n                break;\n            case 'close':\n                antNotification.close(file.uid);\n                break;\n            default:\n                break;\n        }\n    };\n    const defaultUploadProps = {\n        multiple: true,\n        showUploadList: false,\n        beforeUpload: _uploadFile\n    };\n\n    return (\n        <Upload {...defaultUploadProps} {...uploadProps}>\n            <Tooltip {...toolTipProps}>\n                <Button\n                    icon={<CloudUploadOutlined />}\n                    {...buttonProps}\n                >{buttonProps && buttonProps.label}</Button>\n            </Tooltip>\n        </Upload>\n    );\n};\n\nUploadFile.propTypes = {\n    /** Функция запроса для отправки файла с данным на сервер */\n    requestUploadFile: PropTypes.func.isRequired,\n\n    /** Данные, прикрепляемые к файлу */\n    dataObject: PropTypes.object,\n\n    /** Функция, вызываемая при удачной загрузке файла */\n    onCompletedUpload: PropTypes.func,\n\n    /** Функция, вызываемая при НЕ удачной загрузке файла */\n    onFailedUpload: PropTypes.func,\n\n    /** Ant Props для [Upload](https://ant.design/components/upload/) компонента */\n    uploadProps: PropTypes.object,\n\n    /** Ant Props для [Tooltip](https://ant.design/components/tooltip/) компонента */\n    toolTipProps: PropTypes.object,\n\n    /** Ant Props для [Button](https://ant.design/components/button/) компонента */\n    buttonProps: PropTypes.object,\n};\n\nUploadFile.defaultProps = defaultProps\n\nexport default UploadFile;\n","import {Spin} from 'antd';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport React from 'react';\n\nexport const empty = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<span>Нет данных</span>{' '}\n\t</div>\n);\n\nexport const overlay = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<Spin\n\t\t\ttip='Загрузка...'\n\t\t\tindicator={<LoadingOutlined style={{fontSize: 24}} spin />}\n\t\t/>{' '}\n\t</div>\n);\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport { flatten, getTableRowKeys, getTableRowObjects } from \"../../../utils/baseUtils\";\n\nconst SelectionHead = (props) => {\n\tconst {column, container} = props;\n\tconst {rowKey, onSelectAll, selectedRowKeys, selectAll} = column;\n\n\tconst _handleChange = (e) => {\n\t\tconst rowKeys = flatten(getTableRowKeys(container.props.data, column.rowKey));\n\t\tconst rowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => rowKeys.includes(item[rowKey]));\n\t\tconst totalLength = rowKeys.length;\n\t\tconst selectLength = selectedRowKeys.length;\n\t\tconst checked = !(totalLength === selectLength);\n\n\t\t// const newRowKeys = container.props.data.map((item) => { return item[column.rowKey] });\n\t\tonSelectAll({selected: checked, rowKeys: rowKeys, rowObjects: rowObjects});\n\t};\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={selectAll === null}\n\t\t\tonChange={_handleChange}\n\t\t\tchecked={selectAll}\n\t\t/>\n\t);\n};\n\nexport default SelectionHead;\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport {\n\tflatten,\n\tgetTableRowKeys,\n\tfindNodeByRowKey, getTableRowObjects\n} from \"../../../utils/baseUtils\";\n\nconst getRowChildren = (data, rowKey) =>\n\tdata.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item[rowKey], getRowChildren(item.children, rowKey)];\n\t\t}\n\t\treturn item[rowKey];\n\t});\n\nconst findBrothers = (data, selfItem, rowKey, parentKey, rowKeys = null) => {\n\tlet arr = [];\n\tdata.forEach((item) => {\n\t\tif (\n\t\t\titem[parentKey] &&\n\t\t\titem[parentKey] === selfItem[parentKey] &&\n\t\t\titem[rowKey] !== selfItem[rowKey]\n\t\t) {\n\t\t\tif (rowKeys !== null) {\n\t\t\t\tif (rowKeys.includes(item[rowKey])) {\n\t\t\t\t\tarr.push(item[rowKey]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tarr.push(item[rowKey]);\n\t\t\t}\n\t\t} else if (item.children && item.children.length) {\n\t\t\tarr.push(\n\t\t\t\tfindBrothers(\n\t\t\t\t\titem.children,\n\t\t\t\t\tselfItem,\n\t\t\t\t\trowKey,\n\t\t\t\t\tparentKey,\n\t\t\t\t\trowKeys\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\treturn arr;\n};\n\nexport const parentAnalysis = ({\n\trowData,\n\trowKey,\n\tparentKey,\n\tchecked,\n\tnodeAssociated,\n\ttreeData,\n\tselectedRowKeys,\n\tindeterminateRowKeys,\n}) => {\n\tlet _selectedRowKeys = [...selectedRowKeys];\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\tlet currentRowData = rowData;\n\tlet parentExist = !!currentRowData[parentKey];\n\tlet lastTypeSelect = checked ? 'checked' : 'square';\n\tlet typeSelect = '';\n\tlet nextSquare = false;\n\n\t/** Пока есть родитель */\n\twhile (parentExist && nodeAssociated) {\n\t\tconst indeterminateBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_indeterminateRowKeys\n\t\t\t)\n\t\t);\n\t\tconst selectedBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_selectedRowKeys\n\t\t\t)\n\t\t);\n\t\tconst allBrothers = flatten(\n\t\t\tfindBrothers(treeData, currentRowData, rowKey, parentKey)\n\t\t);\n\n\t\tif (checked) {\n\t\t\tif (\n\t\t\t\tlastTypeSelect === 'checked' &&\n\t\t\t\tselectedBrothers.length === allBrothers.length\n\t\t\t)\n\t\t\t\ttypeSelect = 'checked';\n\t\t\telse typeSelect = 'square';\n\t\t} else {\n\t\t\tif (\n\t\t\t\t!checked &&\n\t\t\t\t!nextSquare &&\n\t\t\t\t(selectedBrothers.length || indeterminateBrothers.length)\n\t\t\t)\n\t\t\t\tnextSquare = true;\n\t\t\tif (nextSquare) typeSelect = 'square';\n\t\t\telse typeSelect = 'none';\n\t\t}\n\n\t\t// console.log(\"allBrothers \", allBrothers);\n\t\t// console.log(\"findParentById \", treeData,\n\t\t//     rowKey,\n\t\t//     parentKey,\n\t\t//     currentRowData[parentKey]);\n\t\t//\n\t\t// console.log(\"findNodeByRowKey \", findNodeByRowKey(treeData, rowKey, currentRowData[parentKey]));\n\n\t\t// Найти родителя\n\t\tcurrentRowData = findNodeByRowKey(\n\t\t\ttreeData,\n\t\t\trowKey,\n\t\t\tcurrentRowData[parentKey]\n\t\t);\n\n\t\tif (typeSelect === 'checked') {\n\t\t\t// Выделить галкой\n\t\t\t// console.log(\"checked\");\n\t\t\tlastTypeSelect = 'checked';\n\t\t\tif (!_selectedRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_selectedRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _indeterminateRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _indeterminateRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'square') {\n\t\t\t// Выдлеить квадратом\n\t\t\t// console.log(\"square: \");\n\t\t\tlastTypeSelect = 'square';\n\t\t\tif (!_indeterminateRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_indeterminateRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _selectedRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'none') {\n\t\t\t// Снять выделение\n\t\t\t// console.log(\"none: \");\n\t\t\tlastTypeSelect = 'none';\n\t\t\tconst indexS = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (indexS > -1) _selectedRowKeys.splice(indexS, 1);\n\t\t\tconst indexI = _indeterminateRowKeys.indexOf(\n\t\t\t\tcurrentRowData[rowKey]\n\t\t\t);\n\t\t\tif (indexI > -1) _indeterminateRowKeys.splice(indexI, 1);\n\t\t}\n\n\t\tparentExist = !!currentRowData[parentKey];\n\t\t// parentExist = проверка наличия след родителя\n\t}\n\n\treturn [_selectedRowKeys, _indeterminateRowKeys];\n};\n\nexport const onChangeSelectionCell = (props) => {\n\tconst {rowData, rowIndex, column, rows, checked} = props;\n\tconst {\n\t\trowKey,\n\t\tparentKey,\n\t\tnodeAssociated,\n\t\tselectedRowKeys,\n\t\tindeterminateRowKeys,\n\t\tonChange\n\t} = column;\n\n\t// const rowKeys = flatten(getTableRowKeys([rowData], column.rowKey));\n\t// const totalLength = container.props.data.length;\n\t// const checked = e.target.checked;\n\t// const currentRowKey = {[rowKey]: rowData[rowKey], checked};\n\t// console.log(\"_handleChange: \", container);\n\n\tlet _selectedRowKeys = [...selectedRowKeys];\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\t/** Обработка себя, поиск детей, выделение / снятие их */\n\tlet rowChildren = [];\n\tif (checked) {\n\t\tif (rowData.children && nodeAssociated)\n\t\t\trowChildren = flatten(getRowChildren(rowData.children, rowKey));\n\n\t\t_selectedRowKeys = _selectedRowKeys\n\t\t\t.concat([rowData[rowKey]])\n\t\t\t.concat(rowChildren);\n\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t(element) =>\n\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t!rowChildren.includes(element)\n\t\t);\n\t} else {\n\t\tif (rowData.children && nodeAssociated)\n\t\t\trowChildren = flatten(\n\t\t\t\tgetRowChildren(rowData.children, rowKey, false)\n\t\t\t);\n\n\t\t_selectedRowKeys = _selectedRowKeys.filter(\n\t\t\t(element) =>\n\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t!rowChildren.includes(element)\n\t\t);\n\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t(element) =>\n\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t!rowChildren.includes(element)\n\t\t);\n\t}\n\n\t[_selectedRowKeys, _indeterminateRowKeys] = parentAnalysis({\n\t\trowData,\n\t\trowKey,\n\t\tparentKey,\n\t\tchecked,\n\t\tnodeAssociated,\n\t\ttreeData: rows,\n\t\tselectedRowKeys: _selectedRowKeys,\n\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t});\n\n\tconst keys = [...new Set(_selectedRowKeys)];\n\tconst _selectedRowObjects = flatten(getTableRowObjects(rows, rowKey)).filter((item) => keys.includes(item[rowKey]));\n\t//return [...new Set(_disabledElements)]\n\t// onChange({ selected: checked, totalLength, rowData, rowIndex });\n\n\t/** Выясняем новое состояние галочки \"Выделить все\" */\n\tlet selectAll;\n\tconst selectLength = keys.length;\n\tconst totalLength = flatten(\n\t\tgetTableRowKeys(rows, column.rowKey)\n\t).length;\n\n\tif (selectLength === 0) selectAll = false;\n\telse if (totalLength === selectLength) selectAll = true;\n\telse if (totalLength !== selectLength) selectAll = null;\n\n\n\n\tonChange({\n\t\tselected: checked,\n\t\t_selectedRow: {\n\t\t\trowData: {...rowData},\n\t\t\trowIndex: rowIndex,\n\t\t\trowKey: rowKey,\n\t\t},\n\t\t_selectAll: selectAll,\n\t\t_selectedRowKeys: keys, //[...new Set(_selectedRowKeys)],\n\t\t_selectedRowObjects: _selectedRowObjects,\n\t\t_indeterminateRowKeys: [...new Set(_indeterminateRowKeys)],\n\t});\n\n\t// let uniqIds = {};\n\t// onChange({selected: checked, rowKeys: rowKeys.filter(obj => !uniqIds[obj[rowKey]] && (uniqIds[obj[rowKey]] = true)) });\n};\n\nconst SelectionCell = (props) => {\n\n\tconst {rowData, column} = props;\n\tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\n\tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\n\tconst checked = selectedRowKeys.includes(rowData[rowKey]);\n\n\t// React.useEffect(() => {\n\t// \tconsole.log(\"selectionCell\", props);\n\t// }, [props]);\n\n\tconst _onChangeHandler = (checked) => {\n\t\tconst {rowData, rowIndex, column, container} = props;\n\t\tonChangeSelectionCell({\n\t\t\trowData, rowIndex, column, rows: container.props.data, checked\n\t\t})\n\t}\n\n\treturn (\n\t\t\t<Checkbox\n\t\t\t\tindeterminate={det}\n\t\t\t\t// onChange={(e) => _onChangeHandler(e.target.checked)}\n\t\t\t\tchecked={checked}\n\t\t\t/>\n\t);\n};\n\nexport default SelectionCell;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {CloseCircleOutlined} from '@ant-design/icons';\nimport {rtPrefix} from '../../../utils/variables';\n\nconst SelectionList = (props) => {\n\tconst {selectedRowObjects, rowRender, onClickDropSelect} = props;\n\n\t// console.log(\"SelectionList typeof -> \", typeof(rowRender));\n\treturn (\n\t\t<div className={`${rtPrefix}-table-selected-rows`}>\n\t\t\t{selectedRowObjects && selectedRowObjects.length > 0 ? (\n\t\t\t\t<ul>\n\t\t\t\t\t{selectedRowObjects.map((item, index) => (\n\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t{/*{(typeof(rowRender) === 'string') ? <div>{item[rowRender]}</div> : rowRender }*/}\n\t\t\t\t\t\t\t{typeof rowRender === 'function' ? (\n\t\t\t\t\t\t\t\trowRender({rowData: item, rowIndex: index})\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>{item[rowRender]}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<div onClick={() => onClickDropSelect(item)}>\n\t\t\t\t\t\t\t\t<CloseCircleOutlined />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t) : (\n\t\t\t\t<div>Нет выбранных записей</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nSelectionList.propTypes = {\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { rowData, rowIndex }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n\t/** Список выделенных объектов */\n\tselectedRowObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Событие удаления элемента */\n\tonClickDropSelect: PropTypes.func.isRequired,\n};\n\nSelectionList.defaultProps = {};\n\nexport default SelectionList;\n","import React, {useRef, forwardRef, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport BaseTable, {AutoResizer} from 'react-base-table';\nimport {empty, overlay} from './defaultSettings';\nimport SelectionHead from './Selectable/SelectionHead';\nimport SelectionCell, {parentAnalysis, onChangeSelectionCell} from './Selectable/SelectionCell';\nimport SelectionList from './SelectionList/SelectionList';\nimport {rtPrefix} from '../../utils/variables';\nimport {\n\tflatten,\n\tgenerateUUID,\n\tgetTableRowKeys,\n\tfindNodeByRowKey,\n\tnoop,\n\tgetTableRowObjects, notificationError, useMounted\n} from \"../../utils/baseUtils\";\nimport FormItems from \"../../Form/FormItems\";\nimport moment from \"moment\";\nimport { getExtraData, mapDispatchToProps, mapStateToProps } from \"../../utils/storeUtils\";\n\n/** Компонент таблицы */\nconst Table = forwardRef((props, ref) => {\n\n\t/** LOADING AND INFINITY MODE STATES */\n\t/** Наличие на сервере еще данных */\n\tconst [hasMore, setHasMore] = useState(true);\n\t/** Индикатор загрузки данных */\n\tconst [loading, setLoading] = useState(false);\n\n\t/** TABLE STATES */\n\t/** Колонки таблицы */\n\t// const [_columns, _setColumns] = useState([]);\n\t/** Строки таблицы */\n\tconst [_rows, _setRows] = useState([]);\n\t/** Ключи выделенных строк */\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n\t/** Значение строки поиска */\n\tconst [_searchValue, setSearchValue] = useState('');\n\t/** Объект фильтра */\n\tconst [_filter, setFilter] = useState({});\n\t/** Объект соритировки */\n\tconst [_sortBy, setSortBy] = useState({});\n\t/** Состояние selectAll галочки */\n\tconst [selectAll, setSelectAll] = useState(false);\n\n\t/** TREE STATES */\n\t/** Ключи строк с кубиками при selectable = true */\n\tconst [_indeterminateRowKeys, setIndeterminateRowKeys] = useState([]);\n\t/** Ключи раскрытых строк при selectable = true */\n\tconst [_expandedRowKeys, setExpandedRowKeys] = useState([]);\n\n\t/** FOOTER STATES */\n\t/** Отображать ли footer */\n\tconst [_footerShow, _setFooterShow] = useState(false);\n\t/** Всего строк по фильтру в таблице */\n    const [_totalCountRows, setTotalCountRows] = useState(0);\n\n\n\tconst [subscribeProps, setSubscribeProps] = useState({});\n\n\tconst tableRef = useRef();\n\n\tconst isMounted = useMounted()\n\n\tconst {\n\t\t/** Required */\n\t\tcolumns,\n\t\t// type,\n\t\tinfinityMode,\n\t\teditMode, // need Props.types\n\n\t\t/** Def values */\n\t\tdefaultRows,\n\t\tdefaultSelectedRowKeys,\n\t\tdefaultSearchValue,\n\t\tdefaultFilter,\n\t\tdefaultSortBy,\n\n\t\t/** Outdoor control */\n\t\trows,\n\t\tsetRows, // ???\n\t\tselectedRowKeys,\n\t\tsearchValue,\n\t\tfilter,\n\t\tsortBy,\n\n\t\t/** Base Props */\n\t\trowKey,\n\t\tcustomFields,\n\n\t\t/** View Props */\n\t\tempty,\n\t\toverlay,\n\t\tfixWidthColumn,\n\t\t// footerProps,\n\t\theaderHeight,\n\t\trowHeight,\n\t\trowRenderer,\n\t\tzebraStyle,\n\t\testimatedRowHeight,\n\t\t// cellBordered, // need Props.types\n\t\trowBordered,  // need Props.types\n\t\tclassName,\n\t\tstyle,\n\n\t\t/** Load Data Props */\n\t\tloadThreshold,\n\t\tpageSize,\n\t\trequestLoadRows,\n\t\trequestLoadCount,\n\t\tsearchParamName,\n\n\t\t/** Selectable Props */\n\t\tselectable,\n\n\t\t/** Tree Props */\n\t\tnodeAssociated,\n\t\texpandColumnKey,\n\t\texpandDefaultAll,\n\t\texpandLazyLoad,\n\t\texpandParentKey,\n\n\t\t/** Events */\n\t\tonRowClick,\n\t\tonRowDoubleClick,\n\t\tonRowExpand,\n\t\tonSelectedRowsChange,\n\t\tonExpandedRowsChange,\n\n\t\t/** SELECTED PANEL */\n\t\tshowSelection,\n\t\trowRenderShowSelection,\n\n\t\t/** REDUX PROPS */\n\t\tdispatchPath,\n\t\tdispatch,\n\t\tsubscribe,\n\n\t\tvalue,\n\t\tonChange,\n\t} = {...props, ...subscribeProps};\n\n\tconst footerProps = {\n\t\t...Table.defaultProps.footerProps,\n\t\t...props.footerProps,\n\t};\n\n\tconst selectedDispatchPath = dispatch && dispatch.path\n\t\t? `${dispatch.path}.selected`\n\t\t: dispatchPath && `${dispatchPath}.selected`;\n\tconst rowsDispatchPath = dispatch && dispatch.path\n\t\t? `${dispatch.path}.rows`\n\t\t: dispatchPath && `${dispatchPath}.rows`;\n\n\tuseEffect(() => {\n        // console.log(\"Инициализация дефолтных значений \", selectColumn, columns);\n        // console.log(\"Инициализация дефолтных значений defaultSelectedRowKeys > \", defaultSelectedRowKeys);\n\n\t\t// Инициализация дефолтных значений\n\t\t// _setRows(defaultRows);\n\t\tif(defaultRows.length > 0) _setRowsHandler(defaultRows);\n\t\telse if(rows.length > 0) _setRowsHandler(rows);\n\t\t// setSelectedRowKeys(defaultSelectedRowKeys);\n\t\t// _setSelectedRowsHandler(defaultSelectedRowKeys, undefined, defaultRows)\n\t\tif (selectable && props.value && props.value.length > 0)\n\t\t\t_setSelectedRowsHandler(props.value.map(item => item[rowKey]), props.value);\n\t\telse\n\t\t\t_setSelectedRowsHandler(defaultSelectedRowKeys, undefined, defaultRows);\n\t\tsetSearchValue(defaultSearchValue);\n\t\tsetFilterHandler(defaultFilter);\n\t\tsetSortBy(defaultSortBy);\n\t\tsetSelectAll(\n\t\t\tdefaultRows.length > 0 &&\n\t\t\t\tdefaultRows.length === defaultSelectedRowKeys.length\n\t\t);\n\t\t// Определение нужно ли отображать подвал\n\t\t_setFooterShow(\n\t\t\t(footerProps.showElements.length ||\n\t\t\tfooterProps.leftCustomSideElement ||\n\t\t\tfooterProps.centerCustomSideElement ||\n\t\t\tfooterProps.rightCustomSideElement));\n\n\t\t// Only tree table\n\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t// Открытие всех нод\n\t\t\tif (expandDefaultAll)\n\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\tflatten(getTableRowKeys(defaultRows, rowKey))\n\t\t\t\t);\n\t\t\t// Установка квадратиков на нужных нодах\n\t\t\tif (defaultSelectedRowKeys && defaultSelectedRowKeys.length > 0) {\n\t\t\t\tlet flatRows = flatten(getTableRowKeys(defaultRows, rowKey));\n\t\t\t\tlet selectedRow = flatRows.filter((item) =>\n\t\t\t\t\tdefaultSelectedRowKeys.includes(item[rowKey])\n\t\t\t\t);\n\t\t\t\tlet _indeterminateRowKeys = [];\n\t\t\t\tselectedRow.forEach((item) => {\n\t\t\t\t\tconst [ss, ii] = parentAnalysis({\n\t\t\t\t\t\trowData: item,\n\t\t\t\t\t\trowKey,\n\t\t\t\t\t\tparentKey: expandParentKey,\n\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t\tnodeAssociated,\n\t\t\t\t\t\ttreeData: defaultRows,\n\t\t\t\t\t\tselectedRowKeys: defaultSelectedRowKeys,\n\t\t\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t\t\t\t});\n\t\t\t\t\t_indeterminateRowKeys.push(...ii);\n\t\t\t\t});\n\t\t\t\tsetIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\n\t\t\t}\n\t\t}\n\n\t\t// if (type !== 'localSide') {\n\t\t_dataProcessing({\n\t\t\tsortBy: defaultSortBy,\n\t\t\tfilter: defaultFilter,\n\t\t\tsearchLine: defaultSearchValue,\n\t\t\treload: true,\n\t\t});\n\t\t// }\n\t\t// console.log(\"Table => useEffect start \");\n\t\t// setMounted(true);\n\t\tif (ref && typeof ref === 'function') ref({reloadData});\n\t\telse if (ref && typeof ref === 'object') ref.current = {reloadData};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif(isMounted) {\n\t\t\t// console.log('useEffect rows');\n\t\t\t_setRowsHandler(rows);\n\t\t\t// setSelectedRowKeys(selectedRowKeys);\n\t\t\t_setSelectedRowsHandler(selectedRowKeys, undefined, rows);\n\t\t\tsetSearchValue(searchValue);\n\t\t\tsetFilterHandler(filter);\n\t\t\tsetSortBy(sortBy);\n\t\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t\t// Открытие всех нод\n\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\tsetExpandedRowKeys(flatten(getTableRowKeys(rows, rowKey)));\n\t\t\t}\n\t\t}\n    }, [rows, selectedRowKeys, searchValue, filter, sortBy]);\n\n\tuseEffect(() => {\n\t\t// console.log('useEffect editMode');\n\t\t_setSelectedRowsHandler([], [])\n\t}, [editMode])\n\n\tuseEffect(() => {\n\t\t// console.log('useEffect value');\n\t\tif(value && Array.isArray(value) && !requestLoadRows)\n\t\t\t_setRowsHandler(value)\n\t}, [value])\n\n\t/** Подписка на изменение props[subscribe.name] в сторе */\n\tsubscribe.map(item => {\n\t\treturn useEffect( () => {\n\t\t\tif((item.withMount || isMounted) && item.name) {\n\t\t\t\t// console.log(\"Table => useEffect => [%s] \", item.name, props[item.name]);\n\t\t\t\tconst onChangeObject = {\n\t\t\t\t\tvalue: props[item.name],\n\t\t\t\t\textraData: getExtraData(item, props), //extraData, //props[`${item.name}ExtraData`],\n\t\t\t\t\treloadTable: reloadData,\n\t\t\t\t\taddRows: _addRows,\n\t\t\t\t\taddRow: _addRow,\n\t\t\t\t\taddRowAsCopy: _addRowAsCopy,\n\t\t\t\t\teditRow: _editRow,\n\t\t\t\t\tremoveRow: _removeRow,\n\t\t\t\t\tmoveUpRow: _moveUpRow,\n\t\t\t\t\tmoveDownRow: _moveDownRow,\n\t\t\t\t\tsetSubscribeProps: _setSubscribeProps,\n\t\t\t\t}\n\t\t\t\titem.onChange && item.onChange(onChangeObject);\n\t\t\t}\n\t\t}, [props[item.name]]);\n\t})\n\n\t/** BASE FUNCTIONS */\n\n\tconst _setSubscribeProps = (props) => {\n\t\t// setTimeout(() => {\n\t\t// \tconsole.log('_setSubscribeProps');\n\t\tsetSubscribeProps({...subscribeProps, ...props});\n\t\t// }, 2000)\n\t}\n\n\tconst _setLoadedRowsHandler = (rows) => {\n\t\t_setRowsHandler(rows)\n\t\t// !selectable && onChange && onChange(rows)\n\t};\n\tconst _setRowsHandler = (rows) => {\n\t\t// console.log('_setRowsHandler onChange');\n\t\t_setRows(rows);\n\t\tsetRows(rows);\n\t\trowsDispatch(rows);\n\t};\n\n\tconst _setSelectedRowsHandler = (selectedKeys = [], selectedObjects = undefined, rows = []) => {\n\t\t// console.log('_setSelectedRowsHandler => ', selectedKeys)\n\t\tsetSelectedRowKeys(selectedKeys);\n\t\tif(selectedKeys.length === 0)\n\t\t\tif (selectable)\n\t\t\t\tselectedDispatch([]);\n\t\t\telse\n\t\t\t\tselectedDispatch(undefined);\n\t\telse if(selectedKeys.length > 0 && !selectedObjects)\n\t\t\tif (selectable)\n\t\t\t\tselectedDispatch (flatten( getTableRowObjects(rows, rowKey) ).filter((item) => selectedKeys.includes(item[rowKey])))\n\t\t\telse\n\t\t\t\tselectedDispatch (findNodeByRowKey(rows, rowKey, selectedKeys[0]))\n\t\telse\n\t\t\tselectedDispatch(selectedObjects);\n\t}\n\n\tconst rowsDispatch = (rows) => {\n\t\t// console.log('rowsDispatch ', rowsDispatchPath);\n\t\trowsDispatchPath && props.setDataStore && props.setDataStore(rowsDispatchPath, rows);\n\t\t!selectable && onChange && onChange(rows);\n\t};\n\n\tconst selectedDispatch = (data) => {\n\t\tselectedDispatchPath && props.setDataStore && props.setDataStore(selectedDispatchPath, data);\n\t\tselectable && onChange && onChange(data);\n\t}\n\n\tconst onTableEventsDispatch = (nameEvent, value) => {\n\t\tconst dp = dispatch && dispatch.path\n\t\t\t? `${dispatch.path}.events.${nameEvent}`\n\t\t\t: dispatchPath && `${dispatchPath}.events.${nameEvent}`;\n\n\t\tdp && props.setDataStore && props.setDataStore(dp, {\n\t\t\ttimestamp: moment(),\n\t\t\tvalue: value\n\t\t});\n\t\t// console.log('onTableEventsDispatch onChange');\n\t\tArray.isArray(value) && onChange && onChange(value)\n\t}\n\n\tconst setFilterHandler = (filter) => {\n\t\t// console.log('setFilterHandler => ', filter);\n\t\tsetFilter(filter);\n\t}\n\n\tconst reloadData = ({sortBy, filter, searchValue}, appendParams) => {\n\t\t// console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\n\t\ttableRef.current && tableRef.current.scrollToRow(0, 'auto');\n\t\tif(props.value && props.value.length > 0)\n\t\t\t_setSelectedRowsHandler(props.value.map(item => item[rowKey]), props.value);\n\t\telse\n\t\t\t_setSelectedRowsHandler()\n\n\t\tconst __sortBy = appendParams ? (sortBy ? sortBy : _sortBy) : sortBy;\n\t\tconst __filter = appendParams ? {..._filter, ...filter} : filter;\n\t\tconst __searchValue = appendParams ? (searchValue ? searchValue : _searchValue) : searchValue;\n\t\tsetSortBy(__sortBy);\n\t\tsetFilterHandler(__filter);\n\t\tsetSearchValue(__searchValue);\n\t\t_dataProcessing({\n\t\t\tsortBy: __sortBy,\n\t\t\tfilter: __filter,\n\t\t\tsearchLine: __searchValue,\n\t\t\treload: true,\n\t\t});\n        // console.log(\"reloadData loading \", loading);\n    };\n\n\tconst _dataProcessing = (params) => {\n\t\t// console.log('_dataProcessing', params);\n\t\tconst {sortBy, filter, searchLine, expandRow, reload} = params;\n\t\tif ((hasMore || reload) && !loading) {\n\t\t\tsetLoading(true);\n\t\t\tconst pageNum = reload\n\t\t\t\t? 0\n\t\t\t\t: Math.floor(_rows.length / pageSize);\n\t\t\tconst params = {\n\t\t\t\tpage: pageNum,\n\t\t\t\tsize: pageSize,\n\t\t\t\tsort:\n\t\t\t\t\tsortBy && sortBy.key\n\t\t\t\t\t\t? sortBy.key + ',' + sortBy.order\n\t\t\t\t\t\t: null,\n\t\t\t};\n\t\t\tconst dataQuery = {\n\t\t\t\t...filter,\n\t\t\t\t...(searchLine\n\t\t\t\t\t? {[searchParamName]: searchLine}\n\t\t\t\t\t: null),\n\t\t\t};\n\t\t\t// console.log('dataQuery', dataQuery);\n\n\t\t\tif(infinityMode && reload && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad) {\n\t\t\t\trequestLoadCount({\n\t\t\t\t\tparams,\n\t\t\t\t\tdata: dataQuery,\n\t\t\t\t})\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\t\t// const result = response.data;\n\t\t\t\t\t\tsetTotalCountRows(response.data);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error =>\n\t\t\t\t\t\tnotificationError(error, 'Ошибка получения количества записей по фильтру') );\n\t\t\t}\n\n\t\t\t// console.log('requestLoadRows => ', typeof requestLoadRows);\n\t\t\t// if(typeof requestLoadRows !== 'function'){\n\t\t\t//     setLoading(false);\n\t\t\t// }\n\t\t\tif(requestLoadRows) {\n\t\t\t\trequestLoadRows({\n\t\t\t\t\tparams,\n\t\t\t\t\tdata: dataQuery,\n\t\t\t\t})\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\t\tconst result = response.data;\n\t\t\t\t\t\t// Если иерархия и ленивая, то ищим кому добавть полученные записи\n\t\t\t\t\t\tif (!!expandColumnKey && expandLazyLoad) {\n\t\t\t\t\t\t\t// lastExpandRow//, setLastExpandRow\n\t\t\t\t\t\t\t// console.log('!!expandColumnKey && expandLazyLoad', result);\n\t\t\t\t\t\t\tif (pageNum === 0) {\n\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t{ [rowKey]: generateUUID() },\n\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t// _setRows(result);\n\t\t\t\t\t\t\t\t_setLoadedRowsHandler(result);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlet newRows = [..._rows];\n\t\t\t\t\t\t\t\t// (data, rowKey, rowValue)\n\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t{ [rowKey]: generateUUID() },\n\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tlet node = findNodeByRowKey(\n\t\t\t\t\t\t\t\t\tnewRows,\n\t\t\t\t\t\t\t\t\trowKey,\n\t\t\t\t\t\t\t\t\texpandRow[rowKey]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tnode.children = result;\n\t\t\t\t\t\t\t\t// console.log('newRows -> ', newRows);\n\t\t\t\t\t\t\t\t// _setRows(newRows);\n\t\t\t\t\t\t\t\t_setLoadedRowsHandler(newRows);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (result && result.length < pageSize) {\n\t\t\t\t\t\t\t\tsetHasMore(false);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetHasMore(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpageNum === 0\n\t\t\t\t\t\t\t\t? _setLoadedRowsHandler(result) // _setRows\n\t\t\t\t\t\t\t\t: _setLoadedRowsHandler(_rows.concat(result)); // _setRows\n\n\t\t\t\t\t\t\t// console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\n\t\t\t\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\t\t\t\t\tflatten(getTableRowKeys(result, rowKey))\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t\t\t\t_setLoadedRowsHandler(_rows); // _setRows\n\t\t\t\t\t\t// setHasMore(false);\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t});\n\t\t\t} else setLoading(false);\n\t\t}\n\t};\n\n\t/** Событие выделение одной строки в режиме без галочек */\n\tconst useSimpleAndDoubleClick = (actionSimpleClick, actionDoubleClick, delay = 200) => {\n\t\tconst [click, setClick] = useState(0);\n\t\tconst [data, setData] = useState(undefined);\n\t\tuseEffect(() => {\n\t\t\tconst timer = setTimeout(() => {\n\t\t\t\t// simple click\n\t\t\t\tif (click === 1) actionSimpleClick(data);\n\t\t\t\tsetClick(0);\n\t\t\t}, delay);\n\t\t\tif (click === 2) actionDoubleClick(data);\n\t\t\treturn () => clearTimeout(timer);\n\t\t}, [click]);\n\t\treturn (_data) => {setClick(prev => prev + 1); setData(() => _data);}\n\t}\n\n\tlet timer;\n\tconst simpleAndDoubleClick = (actionSimpleClick, actionDoubleClick, data) => (event) => {\n\t\tclearTimeout(timer);\n\t\tif (event.detail === 1) {\n\t\t\t// console.log('actionSimpleClick', data)\n\t\t\ttimer = setTimeout(() => actionSimpleClick(data), 200)\n\t\t} else if (event.detail === 2) {\n\t\t\t// console.log('actionDoubleClick', data)\n\t\t\tactionDoubleClick(data)\n\t\t}\n\t}\n\n\tconst _onRowClick = ({rowData, rowIndex, rowKey}) => {\n\t\t// console.log('actionSimpleClick')\n\t\tonTableEventsDispatch('onRowClick', rowData)\n\t\t_rowSelectAfterClick({rowData, rowIndex, rowKey, onClick: onRowClick})\n\t}\n\tconst _onRowDoubleClick = ({rowData, rowIndex, rowKey}) => {\n\t\t// console.log('onDoubleClick', rowData, rowIndex, rowKey);\n\t\t// console.log('actionDoubleClick')\n\t\t// rowDoubleClickDispatch(rowData);\n\t\tonTableEventsDispatch('onRowDoubleClick', rowData)\n\t\t_rowSelectAfterClick({rowData, rowIndex, rowKey, onClick: onRowDoubleClick})\n\t}\n\n\tconst _rowSelectAfterClick = ({rowData, rowIndex, rowKey, onClick}) => {\n\t\tconst checked = !_selectedRowKeys.includes(rowKey);\n\t\tconst newRowObject = {\n\t\t\trowData: {...rowData},\n\t\t\trowIndex: rowIndex,\n\t\t\trowKey: rowKey,\n\t\t};\n\t\tif (!selectable) {\n\t\t\t// console.log('_rowEventHandlers -> onClick', rowKey, rowIndex);\n\t\t\t// console.log('q onRowClick => ', rowData)\n\t\t\t// if(_selectedRowKeys)\n\t\t\tif(checked && !editMode)\n\t\t\t\t_setSelectedRowsHandler([rowKey], rowData);\n\t\t\tonSelectedRowsChange([rowKey], [rowData]);\n\t\t} else {\n\t\t\tonChangeSelectionCell({\n\t\t\t\t...newRowObject,\n\t\t\t\tcolumn: _getSelectionColumnProps(),\n\t\t\t\trows: _rows,\n\t\t\t\tchecked: checked,\n\t\t\t})\n\t\t}\n\t\tonClick && onClick({ selected: checked, ...newRowObject });\n\t}\n\n\tconst _rowEventHandlers = {\n\t\tonClick: _onRowClick,\n\t\tonDoubleClick: _onRowDoubleClick,\n\n\t\t// onClick: useSimpleAndDoubleClick(_onRowClick, _onRowDoubleClick),\n\t\t// onClick: simpleAndDoubleClick(_onRowClick, _onRowDoubleClick),\n\n\t\t// onDoubleClick: console.log('onDoubleClick'),\n\t\t// onContextMenu: console.log('context menu'),\n\t\t// onMouseEnter: console.log('mouse enter'),\n\t\t// onMouseLeave: console.log('mouse leave'),\n\t};\n\n\n\t/** Событие при сортировке */\n\tconst _onColumnSort = (sortBy) => {\n\t\t// console.log(\"sortBy\", sortBy);\n\t\ttableRef.current.scrollToRow(0, 'auto');\n\t\tlet localSortBy = _sortBy.order === 'desc' ? {} : sortBy;\n\t\tsetSortBy(localSortBy);\n\n\t\t// Для серверной сортировки - сбросить выделение\n\t\t// if (type !== 'localSide') {\n\t\t// setSelectedRowKeys([]);\n\t\t_setSelectedRowsHandler();\n\t\t// }\n\t\tconst loadParams = {\n\t\t\tsortBy: localSortBy,\n\t\t\tfilter: _filter,\n\t\t\tsearchLine: _searchValue,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t};\n\n\t/** VIEW FUNCTIONS */\n\n\n\tconst _footer = (\n\t\t<React.Fragment>\n\t\t\t{_footerShow ? (\n\t\t\t\t\t<React.Fragment>\n                        {/*className={'BaseTable__footer__counter'}>*/}\n\t\t\t\t\t\t<div key={'footer-left-custom-side'} className={'left-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.leftCustomSideElement\n\t\t\t\t\t\t\t\t? Array.isArray(footerProps.leftCustomSideElement)\n\t\t\t\t\t\t\t\t\t? <FormItems items={footerProps.leftCustomSideElement} />\n\t\t\t\t\t\t\t\t\t: <footerProps.leftCustomSideElement/>\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-center-custom-side'} className={'center-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.centerCustomSideElement\n\t\t\t\t\t\t\t\t? Array.isArray(footerProps.centerCustomSideElement)\n\t\t\t\t\t\t\t\t\t? <FormItems items={footerProps.centerCustomSideElement} />\n\t\t\t\t\t\t\t\t\t: <footerProps.centerCustomSideElement/>\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-right-custom-side'} className={'right-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.rightCustomSideElement\n\t\t\t\t\t\t\t\t? Array.isArray(footerProps.rightCustomSideElement)\n\t\t\t\t\t\t\t\t\t? <FormItems items={footerProps.rightCustomSideElement} />\n\t\t\t\t\t\t\t\t\t: <footerProps.rightCustomSideElement/>\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{selectable ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('selected')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.selectedTitle} {_selectedRowKeys.length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('loaded')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.loadedTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{footerProps.showElements.includes('total')\n\t\t\t\t\t\t\t? infinityMode && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad\n\t\t\t\t\t\t\t\t? <span>{footerProps.totalTitle} {_totalCountRows}</span>\n\t\t\t\t\t\t\t\t: <span>{footerProps.totalTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t: null}\n\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n\n\t/** Событие при рендере для стилизации */\n\tconst _rowClassName = ({rowData, rowIndex}) => {\n\t\tconst {rowClassName} = props;\n\t\treturn [\n\t\t\trowClassName,\n\t\t\t_selectedRowKeys.includes(rowData[rowKey]) && 'row-selected',\n\t\t\tzebraStyle ? (rowIndex % 2 === 0 ? 'even' : 'odd') : '',\n\t\t\trowBordered ? 'bordered' : ''\n\t\t].join(' ')\n\t};\n\n\t// const _cellProps = () => ({ className: [cellBordered ? 'cellBordered' : ''].join(' ')})\n\n\tconst _rowRenderer = (props) => {\n\t\tconst { cells, rowData, rowIndex } = props;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\theight: '100%'\n\t\t\t\t}}\n\t\t\t\tonClick={(e) =>\n\t\t\t\tsimpleAndDoubleClick(_onRowClick, _onRowDoubleClick, {rowData, rowIndex, rowKey: rowData[rowKey]})(e)}\n\t\t\t>\n\t\t\t\t{cells}\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst _rowProps = ({ columns, rowData, rowIndex }) => ({\n\t\tonClick: (e) =>\n\t\tsimpleAndDoubleClick(_onRowClick, _onRowDoubleClick, {rowData, rowIndex, rowKey: rowData[rowKey]})(e)\n\n})\n\n\t/** LOAD DATA FUNCTIONS */\n\tconst onEndReached = () => {\n\t\tlet selectAll;\n\t\tconst selectLength = _selectedRowKeys.length;\n\t\tif (selectLength === 0) selectAll = false;\n\t\telse if (selectLength > 0) selectAll = null;\n\n\t\tsetSelectAll(selectAll);\n\t\t// console.log('_filter', _filter);\n\n\t\tif (infinityMode) {\n\t\t\tconst loadParams = {\n\t\t\t\tsortBy: _sortBy,\n\t\t\t\tfilter: _filter,\n\t\t\t\tsearchLine: _searchValue,\n\t\t\t\treload: false,\n\t\t\t};\n\t\t\t_dataProcessing(loadParams);\n\t\t}\n\t};\n\n\t/** SELECTABLE FUNCTIONS */\n\n\t/** Событие при изменении галочки одной строки */\n\tconst _onChangeSelectHandler = ({\n\t\tselected,\n\t\t_selectedRow,\n\t\t_selectAll,\n\t\t_selectedRowKeys,\n\t\t_selectedRowObjects,\n\t\t_indeterminateRowKeys,\n\t}) => {\n\t\t// console.group(\"_onChangeSelectHandler\", _selectedRowKeys);\n\t\t// console.log(\"_selectedRowKeys\", _selectedRowKeys);\n\t\t// console.log(\"_indeterminateRowKeys\", _indeterminateRowKeys);\n\t\t// console.log(\"_selectAll\", _selectAll);\n\t\t// console.groupEnd();\n\n\t\t// setSelectedRowKeys(_selectedRowKeys);\n\t\t// selectedDispatch(_selectedRowObjects);\n\t\t_setSelectedRowsHandler(_selectedRowKeys, _selectedRowObjects)\n\t\tsetIndeterminateRowKeys(_indeterminateRowKeys);\n\t\tsetSelectAll(_selectAll);\n\t\tonSelectedRowsChange(_selectedRowKeys, _selectedRowObjects);\n\t};\n\n\t/** Событие при изменении галочки \"Выделить все\" */\n\tconst _onSelectAllHandler = ({selected, rowKeys, rowObjects}) => {\n\t\tconst selectedKeys = selected ? rowKeys : [];\n\t\t// setSelectedRowKeys(selectedKeys);\n\t\t// selectedDispatch(selected ? rowObjects : []);\n\t\t_setSelectedRowsHandler(selectedKeys, selected ? rowObjects : [])\n\t\tsetIndeterminateRowKeys([]);\n\t\tsetSelectAll(selected);\n\t\t// setSelectedRowObjects(rows);\n\t\t// console.log(\"_handleSelectAll\", selectedKeys);\n\t\tonSelectedRowsChange(selectedKeys, rowObjects);\n\t};\n\t//\n\t// const SelectionCell = (props) => {\n\t// \tconst {rowData, column} = props;\n\t// \tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\n\t// \tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\n\t// \tconst checked = selectedRowKeys.includes(rowData[rowKey]);\n\t// \tReact.useEffect(() => {\n\t// \t\tconsole.log(\"selectionCell\", props);\n\t// \t}, []);\n\t//\n\t// \tconst _handleChange = (checked) => {\n\t// \t\tconsole.log(\"_handleChange\", checked);\n\t// \t}\n\t//\n\t// \treturn (\n\t// \t\t<Checkbox\n\t// \t\t\tindeterminate={det}\n\t// \t\t\tonChange={(e) => _handleChange(e.target.checked)}\n\t// \t\t\tchecked={checked}\n\t// \t\t/>\n\t// \t);\n\t// };\n\n\tconst _getSelectionColumnProps = () => ({\n\t\trowKey: rowKey,\n\t\tparentKey: expandParentKey,\n\t\tnodeAssociated: nodeAssociated,\n\t\tselectedRowKeys: _selectedRowKeys,\n\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\tonChange: _onChangeSelectHandler,\n\t})\n\n\tconst _getColumns = () => {\n\t\tconst selectColumn = {\n\t\t\tkey: '__selection__',\n\t\t\theaderRenderer: SelectionHead,\n\t\t\tcellRenderer: <SelectionCell/>,\n\t\t\twidth: 40,\n\t\t\tflexShrink: 0,\n\t\t\tresizable: false,\n\t\t\tfrozen: 'left',\n\t\t\tselectAll: selectAll,\n\t\t\tonSelectAll: _onSelectAllHandler,\n\t\t\t..._getSelectionColumnProps()\n\t\t};\n\t\treturn selectable ? [selectColumn, ...columns] : [...columns];\n\t}\n\n\n\n\t/** TREE FUNCTIONS */\n\n\tconst _onExpandedRowsChange = (expandedRowKeys) => {\n\t\t// console.log(\"_onExpandedRowsChange\", expandedRowKeys);\n\t\tonExpandedRowsChange(expandedRowKeys);\n\t};\n\tconst _onRowExpand = ({expanded, rowData, rowIndex, rowKey}) => {\n\t\t// console.log(\"_onRowExpand\", rowData, expanded, rowIndex, rowKey);\n\t\tif (expanded) {\n\t\t\tsetExpandedRowKeys([..._expandedRowKeys, rowKey]);\n\n\t\t\tif (expandLazyLoad) {\n\t\t\t\tconst loadParams = {\n\t\t\t\t\tsortBy: _sortBy,\n\t\t\t\t\tfilter: {..._filter, [expandParentKey]: rowKey},\n\t\t\t\t\tsearchLine: _searchValue,\n\t\t\t\t\treload: false,\n\t\t\t\t\texpandRow: rowData,\n\t\t\t\t};\n\t\t\t\t// _callPropsOnLoad(loadParams);\n\t\t\t\t_dataProcessing(loadParams);\n\t\t\t}\n\t\t} else {\n\t\t\tlet expandedRowKeys = [..._expandedRowKeys];\n\t\t\tlet allChildKeys = flatten(\n\t\t\t\tgetTableRowKeys(rowData.children, props.rowKey)\n\t\t\t);\n\t\t\tallChildKeys.push(rowKey);\n\t\t\t// console.log('allChildKeys', allChildKeys);\n\t\t\tsetExpandedRowKeys(\n\t\t\t\texpandedRowKeys.filter((item) => !allChildKeys.includes(item))\n\t\t\t);\n\t\t}\n\t\tonRowExpand({expanded, rowData, rowIndex, rowKey});\n\t};\n\n\n\t/** ROW CHANGE FUNCTIONS */\n\n\t/**\n\t * Find row by key\n\t * @param data - table rows\n\t * @param key - key row for find\n\t * @param callback - function for return result\n\t */\n\tconst loop = (data, key, callback) => {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tif (data[i][rowKey] === key) {\n\t\t\t\t// console.log(`Selected => index: [${i}], path: [${data[i].path}]`, data);\n\t\t\t\treturn callback(data[i], i, data);\n\t\t\t} else {\n\t\t\t\t// console.log(`Other => index: [${i}], path: [${data[i].path}]`);\n\t\t\t}\n\t\t\tif (data[i].children) {\n\t\t\t\tloop(data[i].children, key, callback);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst _addRows = (rows) => {\n\t\tlet saveRows = [...rows];\n\t\tif (customFields)\n\t\t\t// Фильтрация по пользовательским параметрам\n\t\t\tsaveRows = saveRows.filter((sRow) => {\n\t\t\t\tlet isValid = [];\n\t\t\t\tcustomFields.forEach((field) => {\n\t\t\t\t\t// Валидация по пользовательской логике функции validate\n\t\t\t\t\tif(field.validate)\n\t\t\t\t\t\tisValid.push(field.validate(sRow, _rows));\n\n\t\t\t\t\t// Создание или переобразование по пользовательской логике функции value\n\t\t\t\t\tif(field.value)\n\t\t\t\t\t\tsRow[field.name] = field.value(sRow, _rows);\n\t\t\t\t});\n\t\t\t\t// console.log('_addRows isValid', isValid);\n\t\t\t\tif(!isValid.includes(false))\n\t\t\t\t\treturn sRow;\n\t\t\t});\n\t\tconst _localRows = [..._rows, ...saveRows]\n\t\t_setRowsHandler(_localRows);\n\t\tonTableEventsDispatch('onAddRows', _localRows);\n\t}\n\n\tconst _addRow = (row) => {\n\t\tlet _row = {...row}\n\t\tlet isValid = true;\n\t\tif (customFields) {\n\t\t\tlet validations = [];\n\t\t\tcustomFields.forEach((field) => {\n\t\t\t\tif(field.validate)\n\t\t\t\t\tvalidations.push(field.validate(_row, _rows));\n\n\t\t\t\tif(field.value)\n\t\t\t\t\t_row[field.name] = field.value(_row, _rows)\n\t\t\t});\n\t\t\tisValid = !validations.includes(false)\n\t\t}\n\t\tif(isValid) {\n\t\t\tconst _localRows = [..._rows, _row]\n\t\t\t_setRowsHandler(_localRows);\n\t\t\tonTableEventsDispatch('onAddRow', _localRows);\n\t\t}\n\n\t}\n\n\tconst _addRowAsCopy = () => {\n\t\t// console.log(\"_onClickAddAsCopy\", selectedRow);\n\t\tconst _localRows = [..._rows, findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0])]\n\t\t_setRowsHandler(_localRows);\n\t\tonTableEventsDispatch('onAddRowAsCopy', _localRows);\n\n\t};\n\n\tconst _editRow = (row) => {\n\t\t// console.log(\"_onClickEdit\", selectedRow);\n\t\tconst data = [..._rows];\n\t\tconst key = row[rowKey];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tdata[index] = row;\n\t\t\t_setRowsHandler(data);\n\t\t\t// selectedDispatch(row)\n\t\t\t_setSelectedRowsHandler(_selectedRowKeys, undefined, data);\n\t\t\tonTableEventsDispatch('onEditRow', data);\n\n\t\t\t// setSelectedRowKeys([]);\n\t\t})\n\t\t// props.onClickEdit(event, selectedRow);\n\t};\n\n\tconst _removeRow = (event) => {\n\t\t// console.log(\"_onClickDelete\", autoDeleteRows, selectedRowKeys);\n\t\tconst _localRows = _rows.filter(\n\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey]) )\n\t\t_setRowsHandler(_localRows);\n\t\t_setSelectedRowsHandler();\n\t\tonTableEventsDispatch('onRemoveRow', _localRows);\n\n\t\t// setSelectedRowKeys([]);\n\t\t// if (selectable)\n\t\t// \tselectedDispatch([]);\n\t\t// else\n\t\t// \tselectedDispatch(undefined);\n\t\t// commandPanelProps.onClickDelete(event, _selectedRowKeys);\n\t};\n\n\t// const _moveUpRow\n\n\tconst _moveUpRow = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index - 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data, 'onMoveUpRow');\n\t\t\t// commandPanelProps.onClickUp(event, {\n\t\t\t// \trowIndex: newRowIndex,\n\t\t\t// \trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t// }, data);\n\t\t})\n\t};\n\n\tconst _moveDownRow = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index + 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data, 'onMoveDownRow');\n\t\t\t// commandPanelProps.onClickDown(event, {\n\t\t\t// \trowIndex: newRowIndex,\n\t\t\t// \trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t// }, data);\n\t\t})\n\t};\n\n\tconst _getNewIndexRow = (oldIndex, newIndex) =>\n\t\tnewIndex >= 0 && newIndex < _rows.length ? newIndex : oldIndex;\n\n\tconst _changeIndexRow = (oldIndex, newIndex, arr, data, nameEvent) => {\n\t\tif (newIndex >= 0 && newIndex < arr.length) {\n\t\t\t// let arr = [..._rows]; // Копируем массив\n\t\t\tconst item = arr.splice(oldIndex, 1); // Удаляем элемент со старого места\n\t\t\t// console.log('_changeIndexRow => ',item);\n\t\t\tarr.splice(newIndex > 0 ? newIndex : 0, 0, item[0]); // Ставим элемент на новое место\n\t\t\t// console.log(\"_changeIndexRow\", item[0]);\n\t\t\t_setRowsHandler(data);\n\t\t\tonTableEventsDispatch(nameEvent, data);\n\n\t\t}\n\t};\n\n\t// const _onSearch = (searchLine, e) => {\n\t// \te.preventDefault();\n\t// \t// console.log(\"_onSearch\", searchLine);\n\t// \ttableRef.current.scrollToRow(0, 'auto');\n\t// \tsetSearchValue(searchLine);\n\t// \tconst loadParams = {\n\t// \t\tsortBy: _sortBy,\n\t// \t\tfilter: _filter,\n\t// \t\tsearchLine: searchLine,\n\t// \t\treload: true,\n\t// \t};\n\t// \t_dataProcessing(loadParams);\n\t// \tcommandPanelProps.onSearch(searchLine);\n\t// };\n\n\t/** SELECTED PANEL */\n\tconst _onClickDropSelectHandler = (dropObject) => {\n\t\tconst newSelectedKeys = _selectedRowKeys.filter(\n\t\t\t(item) => item !== dropObject[rowKey]\n\t\t);\n\t\t// setSelectedRowKeys(newSelectedKeys);\n\t\t_setSelectedRowsHandler(newSelectedKeys, undefined, _rows);\n\t\tsetSelectAll((newSelectedKeys.length === 0 ? false : null));\n\t\tonSelectedRowsChange(newSelectedKeys);\n\t};\n\n\treturn (\n\t\t<div className={`${rtPrefix}-table ${className}`} style={style}>\n\t\t\t<div className={`${rtPrefix}-baseTable`}>\n\t\t\t\t<AutoResizer>\n\t\t\t\t\t{({width, height}) => (\n\t\t\t\t\t\t<BaseTable\n\t\t\t\t\t\t\tref={tableRef}\n\t\t\t\t\t\t\t/** Required */\n\t\t\t\t\t\t\tcolumns={_getColumns()}\n\t\t\t\t\t\t\tdata={_rows}\n\t\t\t\t\t\t\t/** Control Props */\n\t\t\t\t\t\t\tsortBy={_sortBy}\n\t\t\t\t\t\t\t/** Base Props */\n\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\trowKey={rowKey}\n\t\t\t\t\t\t\t// rowProps={rowProps}\n\n\t\t\t\t\t\t\t/** View Props */\n\t\t\t\t\t\t\trowClassName={_rowClassName}\n\t\t\t\t\t\t\temptyRenderer={empty}\n\t\t\t\t\t\t\tfixed={fixWidthColumn}\n\t\t\t\t\t\t\tfooterHeight={_footerShow ? footerProps.height : 0}\n\t\t\t\t\t\t\theaderHeight={headerHeight}\n\t\t\t\t\t\t\trowHeight={rowHeight}\n\t\t\t\t\t\t\toverlayRenderer={loading ? overlay : null}\n\t\t\t\t\t\t\tfooterRenderer={_footer}\n\t\t\t\t\t\t\trowRenderer={rowRenderer}\n\t\t\t\t\t\t\t// rowProps={_rowProps}\n\t\t\t\t\t\t\t// cellProps={_cellProps}\n\t\t\t\t\t\t\testimatedRowHeight={estimatedRowHeight}\n\t\t\t\t\t\t\t/** Load Data Props */\n\t\t\t\t\t\t\tonEndReachedThreshold={loadThreshold}\n\t\t\t\t\t\t\tonEndReached={infinityMode ? onEndReached : undefined}\n\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t/** Tree Props */\n\t\t\t\t\t\t\texpandColumnKey={expandColumnKey}\n\t\t\t\t\t\t\texpandedRowKeys={_expandedRowKeys}\n\t\t\t\t\t\t\t/** Events */\n\t\t\t\t\t\t\tonColumnSort={_onColumnSort}\n\t\t\t\t\t\t\trowEventHandlers={_rowEventHandlers}\n\t\t\t\t\t\t\tonExpandedRowsChange={_onExpandedRowsChange}\n\t\t\t\t\t\t\tonRowExpand={_onRowExpand}\n\t\t\t\t\t\t\teditMode={editMode}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</AutoResizer>\n\t\t\t</div>\n\t\t\t{showSelection && selectable && !expandColumnKey ? (\n\t\t\t\t<SelectionList\n\t\t\t\t\tonClickDropSelect={_onClickDropSelectHandler}\n\t\t\t\t\tselectedRowObjects={flatten(\n\t\t\t\t\t\tgetTableRowObjects(_rows, rowKey)\n\t\t\t\t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]))}\n\t\t\t\t\trowRender={rowRenderShowSelection}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</div>\n\t);\n});\n\nTable.propTypes = {\n\t/**\n\t * REQUIRED\n\t * */\n\n\t/** Столбцы таблицы */\n\tcolumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Режим загрузки данных по скроллу */\n\tinfinityMode: PropTypes.bool,\n\n\t/**\n\t * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n\t * */\n\n\t/** Строки по умолчанию */\n\tdefaultRows: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Ключи выделенных по умолчанию строк */\n\tdefaultSelectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска по умолчанию строк */\n\tdefaultSearchValue: PropTypes.string,\n\n\t/** Объект фильтрации по умолчанию */\n\tdefaultFilter: PropTypes.object,\n\n\t/** Сортировка по умолчанию */\n\tdefaultSortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n\t * */\n\n\t/** Строки таблицы. Используется для контроля таблицы из вне. */\n\trows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Функция задания строк таблицы. */\n    setRows: PropTypes.func,\n\n\t/** Выделенные строки таблицы. */\n\tselectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Объект фильтрации */\n\tfilter: PropTypes.object,\n\n\t/** Объект сортировки */\n\tsortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * BASE PROPS\n\t * */\n\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\n\t/** Дополнительные поля и валидация в объекты таблицы\n\t * Данный параметр (props) осуществляет дополнительную обработку объекта таблицы после закрытия модалки, но перед добавлением в таблицу.\n\t * Можно как изменить существующие поля объекта, так и добавить новые поля объекта.\n\t * `customFields` - массив объектов для дополнения или изменения полей объектов таблицы\n\t * ```json\n\t * [\n\t * \t{\n\t * \t\tname: <String>,\n\t * \t\tvalue: <func>,\n\t * \t\tvalidate: <func>\n\t * \t}\n\t * ]\n\t * ```\n\t * `name` – Имя параметра в объекте\n\t * `value` – Функция формирования значения - `(row, rows) => { return {} }`\n\t * `validate` – Функция проверки значения - `(row, rows) => { return <Bool> }`\n\t * Параметра **validate** работает **только** для модельного окна тип `select`.\n\t * Validate можно наложить на любое кол-во полей объекта и если хотя бы один `validate` === `false`, то исключает строку из добавления.\n\t */\n\tcustomFields: PropTypes.arrayOf(PropTypes.object),\n\n\t/**\n\t * Данный параметр (props) позволяет добавить или переопределить пропсы для колонок, которые заданы конфигурацией на сервере\n\t * `customColumnProps` - массив объектов `props` к `columns`. Один объект описывает доп. параметры для одной колонки\n\t * ```json\n\t * [\n\t * \t{\n\t * \t\tname: <String>,\n\t * \t\tcellRenderer: <func>,\n\t * \t\t...advancedColProps\n\t * \t}\n\t * ]\n\t * ```\n\t * `name` – key колонки к которой надо применить дополнительные пропсы\n\t * `cellRenderer` – `({ cellData, columns, column, columnIndex, rowData, rowIndex, container, isScrolling }) => return <ReactNode>`\n\t * `advancedColProps` – подолнительные свойства колонок тут -> [Column](https://autodesk.github.io/react-base-table/api/column)\n\t */\n\tcustomColumnProps: PropTypes.arrayOf(PropTypes.object),\n\n\t/**\n\t * VIEW PROPS\n\t * */\n\n\t/** Вывод когда нет данных */\n\tempty: PropTypes.element,\n\n\t/** Отображение загрузки данных */\n\toverlay: PropTypes.element,\n\n\t/** Фиксированная ширина столбцов. Появится боковой скрол */\n\tfixWidthColumn: PropTypes.bool,\n\n\tfooterProps: PropTypes.shape({\n\n\t\t/** Высота подвала */\n\t\theight: PropTypes.number,\n\n\t\t/** Массив элементов футтера, которые надо отобразить\n\t\t * ['selected', 'loaded', 'total'] */\n\t\tshowElements: PropTypes.arrayOf(PropTypes.string),\n\n\t\t/** Заколовок для кол-ва выбранных объектов */\n\t\tselectedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва загруженны объектов */\n\t\tloadedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва всего объектов */\n\t\ttotalTitle: PropTypes.string,\n\n\t\t/** Левый кастомный элемент командной панели */\n\t\tleftCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\n\t\t/** Центральный кастомный элемент командной панели */\n\t\tcenterCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\n\t\t/** Правый кастомный элемент командной панели */\n\t\trightCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\t}),\n\n\t/** Высота заголовка таблицы */\n\theaderHeight: PropTypes.number,\n\n\t/** Высота строки таблицы */\n\trowHeight: PropTypes.number,\n\n\t/** Custom row renderer\n\t * Параметры - `({ isScrolling, cells, columns, rowData, rowIndex, depth })` */\n\trowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n\t/** Строки будут в зебро-стиле */\n\tzebraStyle: PropTypes.bool,\n\n\t/** Высота расширения */\n\testimatedRowHeight: PropTypes.number,\n\n\t/** Отображать ли разделители ячеек в строке */\n\tcellBordered: PropTypes.bool,\n\n\t/** Отобрадать ли разделители строк */\n\trowBordered: PropTypes.bool,\n\n\tclassName: PropTypes.string,\n\n\tstyle: PropTypes.object,\n\n\t/**\n\t * LOAD DATA PROPS\n\t * */\n\n\t/** Порог в пикселях для вызова _onLoad.\n\t * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n\tloadThreshold: PropTypes.number,\n\n\t/** Размер страницы */\n\tpageSize: PropTypes.number,\n\n\t/** Функция запроса для конфигурации */\n\trequestLoadConfig: PropTypes.func,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\t/**\n\t * SELECTABLE PROPS\n\t * */\n\n\t/** Таблица с возможностью выбора строки */\n\tselectable: PropTypes.bool,\n\n\t/**\n\t * TREE PROPS\n\t * */\n\n\t/** Родительский узел и дочерние узлы связаны (Работает только при `selectable`) */\n\tnodeAssociated: PropTypes.bool,\n\n\t/** Ключ колонки по которой строить иерархию */\n\texpandColumnKey: PropTypes.string,\n\n\t/** Открыть по умолчанию вложенность до уровня N или 'All' */\n\texpandDefaultAll: PropTypes.bool,\n\n\t/** Загружать ноды иерархии по одной */\n\texpandLazyLoad: PropTypes.bool,\n\n\t/** Поле в котором хранится ссылка на родителя */\n\texpandParentKey: PropTypes.string,\n\n\t/**\n\t * EVENTS\n\t * */\n\n\t/** Событие при клике на строку (только при `selectable` = `false`)\n\t * `({selected, rowData, rowIndex}) => {}` */\n\tonRowClick: PropTypes.func,\n\n\t/** Событие при двойном клике на строку.\n\t * `({rowData, rowIndex, rowKey}) => {}` */\n\tonRowDoubleClick: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * `({ expanded, rowData, rowIndex, rowKey }) => {}` */\n\tonRowExpand: PropTypes.func,\n\n\t/** Событие при выборе строки.\n\t * `([rowKeys], [rowDatas]) => {}` */\n\tonSelectedRowsChange: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * `(expandedRowKeys) => {}` - массив ключей открытых нод */\n\tonExpandedRowsChange: PropTypes.func,\n\n\t/** SELECTED PANEL */\n\n\t/** Отображать ли панель выбранных элементов */\n\tshowSelection: PropTypes.bool,\n\n\t/** Строка или функция для отображения элементов списка выбранных\n\t * Строка - имя поля\n\t * Функция - рендер строк.\n\t * `({ rowData, rowIndex }) => { return <Component> }` */\n\trowRenderShowSelection: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.string,\n\t]),\n\n\t/** Путь в сторе куда класть выбранную строку таблицы */\n\tdispatchPath: PropTypes.string,\n\n\t/** Объект для подписки на изменения в STORE */\n\tsubscribe: PropTypes.arrayOf(PropTypes.object),\n};\n\nTable.defaultProps = {\n\tinfinityMode: false,\n\teditMode: false,\n\tdefaultRows: [],\n\tdefaultSelectedRowKeys: [],\n\tdefaultSearchValue: '',\n\tdefaultFilter: {},\n\tdefaultSortBy: {},\n\n\trows: [],\n\tsetRows: noop,\n\tselectedRowKeys: [],\n\tsearchValue: '',\n\tfilter: {},\n\tsortBy: {},\n\n\trowKey: 'id',\n\n\tempty: empty,\n\toverlay: overlay,\n\tfixWidthColumn: false,\n\tfooterProps: {\n\t\theight: 30,\n\t\tshowElements: [],\n\t\tselectedTitle: 'Выделено:',\n\t\tloadedTitle: 'Загружено записей:',\n\t\ttotalTitle: 'Всего записей:',\n\t\tleftCustomSideElement: null,\n\t\tcenterCustomSideElement: null,\n\t\trightCustomSideElement: null\n\t},\n\theaderHeight: 36,\n\trowHeight: 36,\n\tzebraStyle: false,\n\testimatedRowHeight: undefined,\n\tcellBordered: false,\n\trowBordered: true,\n\tclassName: \"\",\n\tstyle: {},\n\n\tloadThreshold: 300,\n\tpageSize: 50,\n\trequestLoadRows: undefined,\n    requestLoadCount: noop,\n\tsearchParamName: 'searchLine',\n\n\tselectable: false,\n\n\tnodeAssociated: true,\n\texpandColumnKey: undefined,\n\texpandDefaultAll: true,\n\texpandLazyLoad: false,\n\texpandParentKey: 'parentId',\n\n\tonRowClick: noop,\n\tonRowDoubleClick: noop,\n\tonRowExpand: noop,\n\tonSelectedRowsChange: noop,\n\tonExpandedRowsChange: noop,\n\n\tshowSelection: false,\n\n\tdispatchPath: undefined,\n\tsubscribe: [],\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);","import React, {useEffect, useState} from \"react\";\nimport { getSortBy, noop, notificationError } from \"../../utils/baseUtils\";\nimport Table from \"./Table\";\nimport { Typography } from \"antd\";\n\nconst defaultProps = {\n    defaultFilter: {},\n    rowKey: 'id',\n    pageSize: 50,\n    requestLoadConfig: noop,\n    expandColumnKey: undefined,\n    expandLazyLoad: false,\n    expandParentKey: 'parentId',\n    customColumnProps: [],\n};\n\nconst ConfigLoader = props => {\n\n    /** Конфигурация таблицы */\n    const [tableConfig, setTableConfig] = useState(undefined);\n\n    const {\n        defaultSortBy,\n        defaultFilter,\n        rowKey,\n        pageSize,\n        requestLoadConfig,\n        expandColumnKey,\n        expandLazyLoad,\n        expandParentKey,\n        customColumnProps,\n        cellBordered,\n    } = {...defaultProps, ...props};\n\n    useEffect(() => {\n        let cleanupFunction = false;\n        const loadData = async () => {\n            if (requestLoadConfig) {\n                // console.log('requestLoadConfig => ', typeof requestLoadConfig);\n                // console.log('requestLoadRows => ', typeof props.requestLoadRows);\n                requestLoadConfig()\n                    .then((response) => {\n                        // let result = response.data;\n                        // console.log('requestLoadConfig -> ', response.data);\n                        if(!cleanupFunction) {\n                            // setTableConfig(response.data);\n                            configParser(response.data);\n                        }\n                    })\n                    .catch(error => notificationError(error, 'Ошибка получения конфигурации') );\n            }\n        };\n        loadData().then(r => r);\n        return () => cleanupFunction = true;\n    }, []);\n\n    const configParser = (config) => {\n        // Массив колонок\n        let _columns = [];\n        // Сортировка по умолчанию\n        let _defaultSorter = [];\n\n        config && config.fields && config.fields.forEach((item) => {\n            const colProps = customColumnProps &&\n                customColumnProps.find((render) =>\n                    render.name === item.name || render.name === item.alias);\n\n            // Индекс или имя поля в данных\n            const dataIndex = (item.alias ? item.alias : item.name);\n\n            if (_defaultSorter.length === 0 || _defaultSorter[1] === undefined)\n                _defaultSorter = getSortBy(defaultSortBy, item.defaultSort, dataIndex);\n\n            _columns.push({\n                key: dataIndex,\n                title: item.header ? item.header : item.name,\n                dataKey: dataIndex,\n                align: item.align,\n                width: item.width,\n                resizable: item.resizable,\n                sortable: item.sortable,\n                hidden: !item.visible,\n                className: [cellBordered ? 'bordered' : ''].join(' '),\n                headerClassName: [cellBordered ? 'bordered' : ''].join(' '),\n                // cellRenderer: cellR && cellR.cellRender,\n                ...colProps,\n                cellRenderer: (object) => {\n                    if (colProps && colProps.cellRenderer)\n                        return <colProps.cellRenderer {...object}/>\n                        // return colProps.cellRenderer(object) ? colProps.cellRenderer(object) : '---';\n                    else\n                        return object.cellData\n                            ? <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>{object.cellData}</Typography.Text>\n                            : <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>---</Typography.Text> ;\n                        // return object.cellData ? object.cellData : '---';\n                },\n            });\n        });\n\n        let _defaultFilter;\n        if (config && config.hierarchical && config.hierarchyLazyLoad) {\n            const parentKey = config.hierarchyField\n                ? config.hierarchyField.split('/')[1]\n                : expandParentKey;\n            _defaultFilter =  {...defaultFilter, [parentKey]: null};\n        } else _defaultFilter = defaultFilter;\n\n\n        setTableConfig({\n            columns: _columns,\n            defaultSortBy: _defaultSorter[0],\n            defaultFilter: _defaultFilter,\n            rowKey:\n                config && config.hierarchical && config.hierarchyField\n                    ? config.hierarchyField.split('/')[0]\n                    : rowKey,\n            expandParentKey:\n                config && config.hierarchical && config.hierarchyField\n                    ? config.hierarchyField.split('/')[1]\n                    : expandParentKey,\n            expandColumnKey:\n                config && config.hierarchical && config.hierarchyView\n                    ? config.hierarchyView\n                    : expandColumnKey,\n            expandLazyLoad:\n                config && config.hierarchical && config.hierarchyLazyLoad\n                    ? config.hierarchyLazyLoad\n                    : expandLazyLoad,\n            pageSize: config && config.hierarchical ? 1 : pageSize,\n        });\n    }\n\n    if(tableConfig)\n        return ( <Table {...props} {...tableConfig} /> );\n    else\n        return null\n};\n\nexport default ConfigLoader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ColumnResizer from \"react-base-table/lib/ColumnResizer\";\nimport { rtPrefix } from \"../../utils/variables\";\n\nconst HeaderCell = (props) => {\n    // console.log('HeaderCell => ', props);\n\n    const { column, onResize, ...restProps } = props;\n\n    if (!column)\n        return <th {...restProps} />;\n\n    const { width, resizable, headerRenderer } = column;\n\n    if (!width)\n        return <th {...restProps} />;\n\n    // if (headerRenderer) {\n    //     let childNode\n    //     if( typeof headerRenderer === 'function') {\n    //         childNode = headerRenderer()\n    //     }\n    //     else {\n    //         childNode = headerRenderer\n    //     }\n    //\n    //     return (\n    //         <th {...restProps}>\n    //             {childNode}\n    //             {resizable &&\n    //             <ColumnResizer\n    //                 className={`${rtPrefix}-column-resizer`}\n    //                 column={{ width: width, maxWidth: 1000 }}\n    //                 onResize={onResize}\n    //             />}\n    //         </th>\n    //     );\n    // } else {\n        return (\n            <th {...restProps}>\n                {restProps.children}\n                {resizable &&\n                <ColumnResizer\n                    className={`${rtPrefix}-column-resizer`}\n                    column={{ width: width, maxWidth: 1000 }}\n                    onResize={onResize}\n                />}\n            </th>\n        );\n    // }\n};\n\nHeaderCell.propTypes = {\n    onResize: PropTypes.func,\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    resizable: PropTypes.bool\n};\n\nexport default HeaderCell;\n","import React, {useRef, useEffect} from 'react';\nimport PropTypes from 'prop-types';\n\nconst HeaderRow =  props => {\n    const headerRowRef = useRef();\n    const {headerHeight, setHeaderHeight, ...restProps} = props;\n    useEffect(() => {\n\n        const newHeight = headerRowRef && headerRowRef.current && headerRowRef.current.clientHeight;\n        if(headerHeight !== newHeight) {\n            // console.log('Row height', newHeight) //clientHeight\n            setHeaderHeight(newHeight)\n        }\n    })\n    return (\n        <tr {...restProps} ref={headerRowRef}/>\n    );\n};\n\nHeaderRow.propTypes = {\n    headerHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    setHeaderHeight: PropTypes.func,\n}\n\nexport default HeaderRow;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst BodyCell = props => {\n\n  const {column, rowData, rowIndex, ...restProps} = props;\n\n  if(column && column.cellComponent) {\n    // console.log('BodyCell => ', restProps);\n    return (\n      <td {...restProps} style={{...restProps.style, padding: 0}}>\n        <column.cellComponent\n          column={column}\n          cellData={restProps.title}\n          rowData={rowData}\n          rowIndex={rowIndex}\n        />\n      </td>\n    )\n  } else {\n    return <td {...restProps}/>;\n  }\n\n};\n\nBodyCell.propTypes = {\n\n};\n\nexport default BodyCell;\n","import React, { useState, useEffect } from \"react\";\nimport { rtPrefix } from \"../../utils/variables\";\nimport { connect } from \"react-redux\";\nimport { AutoResizer } from \"react-base-table\";\nimport {\n    findNodeByRowKey,\n    flatten,\n    getObjectExcludedProps, getTableRowKeys, getTableRowObjects, noop,\n    notificationError,\n    useMounted\n} from \"../../utils/baseUtils\";\nimport { Space, Table as AntTable } from \"antd\";\nimport { CaretDownOutlined, CaretRightOutlined, CaretUpOutlined } from \"@ant-design/icons\";\nimport { empty, overlay } from \"../ReactBaseTable/defaultSettings\";\nimport HeaderCell from \"./HeaderCell\";\nimport HeaderRow from \"./HeaderRow\";\nimport PropTypes from \"prop-types\";\nimport FormItems from \"../../Form/FormItems\";\nimport moment from \"moment\";\nimport BodyCell from \"./BodyCell\";\nimport { getExtraData, mapDispatchToProps, mapStateToProps } from \"../../utils/storeUtils\";\n\nconst excludeProps = [\n    \"defaultRows\",\n    \"defaultSelectedRowKeys\",\n    \"defaultSearchValue\",\n    \"defaultFilter\",\n    \"defaultSortBy\",\n    \"rows\",\n    \"requestLoadRows\",\n    \"pageSize\",\n    \"searchParamName\",\n    \"onRowClick\",\n    \"onRowDoubleClick\",\n];\n\nconst Table = props => {\n    /** Индикатор загрузки данных */\n    const [loading, setLoading] = useState(false);\n\n    /** TABLE STATES */\n    /** Столбцы таблицы */\n    const [_columns, _setColumns] = useState([]);\n    /** Строки таблицы */\n    const [_rows, _setRows] = useState([]);\n    /** Ключи выделенных строк */\n    const [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n    /** Значение строки поиска */\n    const [_searchValue, setSearchValue] = useState(\"\");\n    /** Объект фильтра */\n    const [_filter, setFilter] = useState({});\n    /** Объект соритировки */\n    const [_sortBy, setSortBy] = useState({});\n\n    /** TREE STATES */\n    /** Ключи строк с кубиками при selectable = true */\n    // const [_indeterminateRowKeys, setIndeterminateRowKeys] = useState([]);\n    /** Ключи раскрытых строк при selectable = true */\n    const [_expandedRowKeys, setExpandedRowKeys] = useState([]);\n\n    /** FOOTER STATES */\n    /** Отображать ли footer */\n    const [_footerShow, _setFooterShow] = useState(false);\n    /** Всего строк по фильтру в таблице */\n    const [_totalCountRows, setTotalCountRows] = useState(0);\n\n    const [subscribeProps, setSubscribeProps] = useState({});\n\n    const [headerHeight, setHeaderHeight] = useState(0);\n\n    const isMounted = useMounted();\n\n    const {\n        /** Required */\n        columns,\n        // type,\n        // infinityMode, // no use\n        editMode, // need Props.types\n\n        /** Def values */\n        defaultRows,\n        defaultSelectedRowKeys,\n        defaultSearchValue,\n        defaultFilter,\n        defaultSortBy,\n\n        /** Outdoor control */\n        rows,\n        // setRows, // ???\n        // selectedRowKeys,\n        // searchValue,\n        // filter,\n        // sortBy,\n\n        /** Base Props */\n        rowKey,\n        customFields,\n\n        /** View Props */\n        // empty,\n        // overlay,\n        // fixWidthColumn,\n        // footerProps,\n        // headerHeight,\n        // rowHeight,\n        // rowRenderer,\n        zebraStyle,\n        // estimatedRowHeight,\n        className,\n        style,\n        // cellBordered, // need Props.types\n        // rowBordered,  // need Props.types\n\n        /** Load Data Props */\n        pageSize,\n        requestLoadRows,\n        requestLoadCount,\n        searchParamName,\n\n        /** Selectable Props */\n        rowSelection,\n        selectable,\n\n        /** Tree Props */\n        expandable,\n        nodeAssociated,\n        expandColumnKey,\n        expandDefaultAll,\n        // expandLazyLoad, // no use\n        // expandParentKey, // no use\n\n        /** Events */\n        onRowClick,\n        onRowDoubleClick,\n        // onRowExpand,\n        // onSelectedRowsChange,\n        onExpandedRowsChange,\n\n        /** SELECTED PANEL */\n        // showSelection,\n        // rowRenderShowSelection,\n\n        /** REDUX PROPS */\n        dispatchPath,\n        dispatch,\n        subscribe,\n\n        value,\n        onChange\n    } = { ...props, ...subscribeProps };\n\n    const footerProps = {\n        ...Table.defaultProps.footerProps,\n        ...props.footerProps\n    };\n\n    const selectedDispatchPath = dispatch && dispatch.path\n        ? `${dispatch.path}.selected`\n        : dispatchPath && `${dispatchPath}.selected`;\n    const rowsDispatchPath = dispatch && dispatch.path\n        ? `${dispatch.path}.rows`\n        : dispatchPath && `${dispatchPath}.rows`;\n\n    useEffect(() => {\n        // console.log(\"Инициализация дефолтных значений \", selectColumn, columns);\n        // console.log(\"Инициализация дефолтных значений defaultSelectedRowKeys > \", defaultSelectedRowKeys);\n\n        // Инициализация дефолтных значений\n        // _setRows(defaultRows);\n        if (defaultRows.length > 0) _setRowsHandler(defaultRows);\n        else if (rows.length > 0) _setRowsHandler(rows);\n        if (selectable && props.value && props.value.length > 0)\n            _setSelectedRowsHandler(props.value.map(item => item[rowKey]), props.value);\n        else\n            _setSelectedRowsHandler(defaultSelectedRowKeys, undefined, defaultRows);\n        setSearchValue(defaultSearchValue);\n        setFilter(defaultFilter);\n        setSortBy(defaultSortBy);\n\n        // Определение нужно ли отображать подвал\n        _setFooterShow(\n            (footerProps.showElements.length ||\n                footerProps.leftCustomSideElement ||\n                footerProps.centerCustomSideElement ||\n                footerProps.rightCustomSideElement));\n\n        _loadRows({\n            sortBy: defaultSortBy,\n            filter: defaultFilter,\n            searchLine: defaultSearchValue,\n            reload: true\n        });\n        // console.log(\"tableRef\", tableRef);\n    }, []);\n\n    useEffect(() => {\n        _setColumns(columns);\n    }, [columns]);\n\n    useEffect(() => {\n        if(value && Array.isArray(value) && !requestLoadRows)\n            _setRowsHandler(value)\n    }, [value])\n\n    /** Подписка на изменение props[subscribe.name] в сторе */\n    subscribe.map(item => {\n        return useEffect(() => {\n            if ((item.withMount || isMounted) && item.name) {\n                // console.log(\"Table => useEffect => \", props); //item.name, props[item.name]\n                const onChangeObject = {\n                    value: props[item.name],\n                    extraData: getExtraData(item, props), //props[`${item.name}ExtraData`],\n                    reloadTable: reloadData,\n                    addRows: _addRows,\n                    addRow: _addRow,\n                    addRowAsCopy: _addRowAsCopy,\n                    editRow: _editRow,\n                    removeRow: _removeRow,\n                    moveUpRow: _moveUpSelectedRow,\n                    moveUpRowByKey: _moveUpRowByKey,\n                    moveDownRow: _moveDownSelectedRow,\n                    moveDownRowByKey: _moveDownRowByKey,\n                    setSubscribeProps: _setSubscribeProps\n                };\n                item.onChange && item.onChange(onChangeObject);\n            }\n        }, [props[item.name]]);\n    });\n\n    /** BASE FUNCTIONS */\n    const _setSubscribeProps = (props) => {\n        setSubscribeProps({ ...subscribeProps, ...props });\n    };\n\n    const _setLoadedRowsHandler = (rows) => {\n        _setRowsHandler(rows);\n        // !selectable && onChange && onChange(rows);\n    };\n    const _setRowsHandler = (rows) => {\n        // console.log('_setRowsHandler onChange');\n        _setRows(rows);\n        // setRows(rows);\n        rowsDispatch(rows);\n    };\n\n    const _setSelectedRowsHandler = (selectedKeys = [], selectedObjects = undefined, rows = []) => {\n        // console.log('_setSelectedRowsHandler => ', selectedKeys)\n        if(!editMode) {\n            setSelectedRowKeys(selectedKeys);\n            if (selectedKeys.length === 0)\n                if (selectable)\n                    selectedDispatch([]);\n                else\n                    selectedDispatch(undefined);\n            else if (selectedKeys.length > 0 && !selectedObjects)\n                if (selectable)\n                    selectedDispatch(flatten(getTableRowObjects(rows, rowKey)).filter((item) => selectedKeys.includes(item[rowKey])));\n                else\n                    selectedDispatch(findNodeByRowKey(rows, rowKey, selectedKeys[0]));\n            else\n                selectedDispatch(selectedObjects);\n        }\n    };\n\n    const rowsDispatch = (rows) => {\n        // console.log('rowsDispatch ', rowsDispatchPath);\n        rowsDispatchPath && props.setDataStore && props.setDataStore(rowsDispatchPath, rows);\n        !selectable && onChange && onChange(rows);\n    };\n\n    const selectedDispatch = (data) => {\n        selectedDispatchPath && props.setDataStore && props.setDataStore(selectedDispatchPath, data);\n        selectable && onChange && onChange(data);\n    };\n\n    const onTableEventsDispatch = (nameEvent, value) => {\n        const dp = dispatch && dispatch.path\n            ? `${dispatch.path}.events.${nameEvent}`\n            : dispatchPath && `${dispatchPath}.events.${nameEvent}`;\n\n        dp && props.setDataStore && props.setDataStore(dp, {\n            timestamp: moment(),\n            value: value\n        });\n        // console.log('onTableEventsDispatch onChange');\n        Array.isArray(value) && onChange && onChange(value);\n    };\n\n    const reloadData = ({ sortBy, filter, searchValue }, appendParams) => {\n        // console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\n        if (selectable && props.value && props.value.length > 0)\n            _setSelectedRowsHandler(props.value.map(item => item[rowKey]), props.value);\n        else\n            _setSelectedRowsHandler();\n\n        const __sortBy = appendParams ? (sortBy ? sortBy : _sortBy) : sortBy;\n        const __filter = appendParams ? { ..._filter, ...filter } : filter;\n        const __searchValue = appendParams ? (searchValue ? searchValue : _searchValue) : searchValue;\n        setSortBy(__sortBy);\n        setFilter(__filter);\n        setSearchValue(__searchValue);\n        // console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\n        _loadRows({\n            sortBy: __sortBy,\n            filter: __filter,\n            searchLine: __searchValue,\n            reload: true\n        });\n    };\n\n    const _loadRows = (params) => {\n        const { sortBy, filter, searchLine, expandRow, reload } = params;\n        if (!loading && requestLoadRows) {\n            setLoading(true);\n            const pageNum = 0;\n            const params = {\n                page: 0,\n                size: pageSize,\n                sort:\n                    sortBy && sortBy.key\n                        ? sortBy.key + \",\" + sortBy.order\n                        : null\n            };\n            const dataQuery = {\n                ...filter,\n                ...(searchLine\n                    ? { [searchParamName]: searchLine }\n                    : null)\n            };\n            if(reload && requestLoadCount !== noop && !expandColumnKey) {\n                requestLoadCount({ params, data: dataQuery, })\n                    .then((response) => {\n                        // console.log(\"infinity then response\", response);\n                        setTotalCountRows(response.data);\n                    })\n                    .catch(error =>\n                        notificationError(error, 'Ошибка получения количества записей по фильтру') );\n            }\n            requestLoadRows({ params, data: dataQuery })\n                .then((response) => {\n                    // console.log(\"infinity then response\", response);\n                    const result = response.data;\n                    _setLoadedRowsHandler(result); // _setRows\n\n                    if (expandColumnKey) {\n                        expandDefaultAll &&\n                        setExpandedRowKeys(flatten(getTableRowKeys(result, rowKey)));\n                    }\n\n                    setLoading(false);\n                })\n                .catch((error) => {\n                    notificationError(error, \"Ошибка загрузки данных\");\n                    _setLoadedRowsHandler(_rows); // _setRows\n                    // setHasMore(false);\n                    setLoading(false);\n                });\n        }\n    };\n\n    const onChangeTable = (pagination, filters, sorter, extra) => {\n        // console.log('Table onChange', pagination, filters, sorter, extra)\n        switch (extra.action) {\n            case \"paginate\":\n                break;\n            case \"sort\":\n                onSort(sorter);\n                break;\n            case \"filter\":\n                break;\n            default:\n                break;\n        }\n    };\n\n    const onSort = (sorter) => {\n        // console.log(\"Table onSort from RT\", sorter);\n        const sortBy = sorter.order\n            ? { key: sorter.field, order: sorter.order === \"ascend\" ? \"asc\" : \"desc\" }\n            : {};\n        setSortBy(sortBy);\n        _loadRows({\n            sortBy: sortBy,\n            filter: _filter,\n            searchLine: _searchValue,\n            reload: true\n        });\n    };\n\n    const _onRowClick = ({ rowData, rowIndex, rowKey }) => {\n        // console.log('onClick', onRowClick, rowData, rowIndex, rowKey)\n        // console.log('onClick', _selectedRowKeys)\n        onTableEventsDispatch(\"onRowClick\", rowData);\n        _rowSelectAfterClick({ rowData, rowIndex, rowKey, onClick: onRowClick });\n    };\n    const _onRowDoubleClick = ({ rowData, rowIndex, rowKey }) => {\n        // console.log('onDoubleClick', onRowDoubleClick, rowData, rowIndex, rowKey);\n        // console.log('actionDoubleClick')\n        onTableEventsDispatch(\"onRowDoubleClick\", rowData);\n        _rowSelectAfterClick({ rowData, rowIndex, rowKey, onClick: onRowDoubleClick });\n    };\n\n    const _rowSelectAfterClick = ({ rowData, rowIndex, rowKey, onClick }) => {\n        const checked = !_selectedRowKeys.includes(rowKey);\n        const newRowObject = {\n            rowData: { ...rowData },\n            rowIndex: rowIndex,\n            rowKey: rowKey\n        };\n        // _setSelectedRowsHandler([rowKey], rowData);\n        // if (!expandColumnKey) {\n        // setSelectedRowKeys([rowKey]);\n        if (selectable) {\n            // console.log('_rowSelectAfterClick ', checked);\n            if (checked && !expandColumnKey)\n                _setSelectedRowsHandler([..._selectedRowKeys, rowKey], undefined, _rows);\n            else {\n                // console.log('_rowSelectAfterClick', _selectedRowKeys.filter(row => row !== rowKey), rowKey);\n                _setSelectedRowsHandler(_selectedRowKeys.filter(row => row !== rowKey), undefined, _rows);\n            }\n\n        } else {\n            if(checked)\n                _setSelectedRowsHandler([rowKey], rowData);\n        }\n        // onSelectedRowsChange([rowKey], [rowData]);\n        // console.log('onRowDoubleClick = ', onClick);\n        onClick && onClick({ selected: checked, ...newRowObject });\n    };\n\n    const onHeaderRowProps = () => ({ headerHeight, setHeaderHeight })\n\n    const onRowEvents = (rowData, rowIndex) => {\n        return {\n            onClick: event => _onRowClick({ rowData, rowIndex, rowKey: rowData[rowKey] }), // click row\n            onDoubleClick: event => _onRowDoubleClick({ rowData, rowIndex, rowKey: rowData[rowKey] }), // double click row\n            // onScroll: console.log\n            // onContextMenu: event => {}, // right button click row\n            // onMouseEnter: event => {}, // mouse enter row\n            // onMouseLeave: event => {}, // mouse leave row\n        };\n    };\n\n\n    const onResizeHandler = (index) => ({ key }, width) => {\n        // console.log('handleResize index ', index, width)\n        _setColumns((columns) => {\n            const nextColumns = [...columns];\n            nextColumns[index] = {\n                ...nextColumns[index],\n                width: width\n            };\n            return nextColumns;\n        });\n    };\n\n    /** Utile function\n     * Find row by key\n     * @param data - table rows\n     * @param key - key row for find\n     * @param callback - function for return result\n     */\n    const loop = (data, key, callback) => {\n        for (let i = 0; i < data.length; i++) {\n            if (data[i][rowKey] === key) {\n                // console.log(`Selected => index: [${i}], path: [${data[i].path}]`, data);\n                return callback(data[i], i, data);\n            } else {\n                // console.log(`Other => index: [${i}], path: [${data[i].path}]`);\n            }\n            if (data[i].children) {\n                loop(data[i].children, key, callback);\n            }\n        }\n    };\n\n    /** ROW CHANGE FUNCTIONS */\n    const _addRows = (rows) => {\n        let saveRows = [...rows];\n        if(!expandColumnKey)\n            saveRows = saveRows.map(row => { row.children = undefined; return row; });\n        if (customFields) {\n            // Фильтрация по пользовательским параметрам\n            saveRows = saveRows.filter((sRow) => {\n                let isValid = [];\n                customFields.forEach((field) => {\n                    // Валидация по пользовательской логике функции validate\n                    if (field.validate)\n                        isValid.push(field.validate(sRow, _rows));\n\n                    // Создание или переобразование по пользовательской логике функции value\n                    if (field.value)\n                        sRow[field.name] = field.value(sRow, _rows);\n                });\n                // console.log(\"_addRows isValid\", isValid);\n                if (!isValid.includes(false))\n                    return sRow;\n            });\n        }\n        const _localRows = [..._rows, ...saveRows];\n        _setRowsHandler(_localRows);\n        onTableEventsDispatch(\"onAddRows\", _localRows);\n    };\n\n    const _addRow = (row) => {\n        let _row = { ...row };\n        if(!expandColumnKey)\n            _row.children = undefined;\n        let isValid = true;\n        if (customFields) {\n            let validations = [];\n            customFields.forEach((field) => {\n                if (field.validate)\n                    validations.push(field.validate(_row, _rows));\n\n                if (field.value)\n                    _row[field.name] = field.value(_row, _rows);\n            });\n            isValid = !validations.includes(false);\n        }\n        if (isValid) {\n            const _localRows = [..._rows, _row];\n            _setRowsHandler(_localRows);\n            onTableEventsDispatch(\"onAddRow\", _localRows);\n        }\n    };\n\n    const _addRowAsCopy = () => {\n        // console.log(\"_onClickAddAsCopy\", selectedRow);\n        const _localRows = [..._rows, findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0])];\n        _setRowsHandler(_localRows);\n        onTableEventsDispatch(\"onAddRowAsCopy\", _localRows);\n\n    };\n\n    const _editRow = (row) => {\n        // console.log(\"_onClickEdit\", selectedRow);\n        const data = [..._rows];\n        const key = row[rowKey];\n        loop(data, key, (item, index, arr) => {\n            data[index] = row;\n            _setRowsHandler(data);\n            _setSelectedRowsHandler(_selectedRowKeys, undefined, data);\n            onTableEventsDispatch(\"onEditRow\", data);\n        });\n    };\n\n    const _removeRow = (event) => {\n        // console.log(\"_onClickDelete\", autoDeleteRows, selectedRowKeys);\n        const _localRows = _rows.filter(\n            (item) => !_selectedRowKeys.includes(item[rowKey]));\n        _setRowsHandler(_localRows);\n        _setSelectedRowsHandler();\n        onTableEventsDispatch(\"onRemoveRow\", _localRows);\n    };\n\n    const _moveUpSelectedRow = () => {\n        _moveUpRowByKey(_selectedRowKeys[0])\n    }\n\n    const _moveUpRowByKey = (rowKey) => {\n        const data = [..._rows];\n        loop(data, rowKey, (item, index, arr) => {\n            const newRowIndex = _getNewIndexRow(index, index - 1);\n            _changeIndexRow(index, newRowIndex, arr, data, \"onMoveUpRow\");\n        });\n    };\n\n    const _moveDownSelectedRow = () => {\n        _moveDownRowByKey(_selectedRowKeys[0])\n    }\n\n    const _moveDownRowByKey = (rowKey) => {\n        const data = [..._rows];\n        loop(data, rowKey, (item, index, arr) => {\n            const newRowIndex = _getNewIndexRow(index, index + 1);\n            _changeIndexRow(index, newRowIndex, arr, data, \"onMoveDownRow\");\n        });\n    };\n\n    const _getNewIndexRow = (oldIndex, newIndex) =>\n        newIndex >= 0 && newIndex < _rows.length ? newIndex : oldIndex;\n\n    const _changeIndexRow = (oldIndex, newIndex, arr, data, nameEvent) => {\n        if (newIndex >= 0 && newIndex < arr.length) {\n            // let arr = [..._rows]; // Копируем массив\n            const item = arr.splice(oldIndex, 1); // Удаляем элемент со старого места\n            // console.log('_changeIndexRow => ',item);\n            arr.splice(newIndex > 0 ? newIndex : 0, 0, item[0]); // Ставим элемент на новое место\n            // console.log(\"_changeIndexRow\", item[0]);\n            _setRowsHandler(data);\n            onTableEventsDispatch(nameEvent, data);\n        }\n    };\n\n    /** TREE FUNCTIONS */\n    const _onExpandedRowsChange = (expandedRowKeys) => {\n        setExpandedRowKeys(expandedRowKeys);\n        onExpandedRowsChange(expandedRowKeys);\n    };\n\n    /** SELECTABLE FUNCTIONS */\n    const onChangeSelectedHandler = (selectedRowKeys, selectedRows) => {\n        // console.log(\"onChangeSelectedHandler\");\n        _setSelectedRowsHandler(selectedRowKeys, selectedRows);\n    };\n\n    const onSelectAllHandler = (selected, selectedRows, changeRows) => {\n        // console.log(\"onSelectAllHandler\");\n        const selectedKeys = selected ? selectedRows.map(row => row[rowKey]) : [];\n        _setSelectedRowsHandler(selectedKeys, selectedRows);\n    };\n\n    /** VIEW FUNCTIONS */\n    const _rowClassName = (rowData, rowIndex) => {\n        // const {rowClassName} = props;\n        return [\n            // rowClassName,\n            _selectedRowKeys.includes(rowData[rowKey]) && \"ant-table-row-selected\", //\n            zebraStyle ? (rowIndex % 2 === 0 ? \"even\" : \"odd\") : \"\"\n            // rowBordered ? 'bordered' : ''\n        ].join(\" \");\n    };\n\n    const ExpandIcon = ({ Icon, ...restProps }) =>\n        <span {...restProps} className={`${rtPrefix}-table-expand-icon`}><Icon /></span>;\n\n    const expandIconRender = ({ expanded, onExpand, record }) =>\n        record.children && record.children.length === 0\n            ? <ExpandIcon Icon={CaretUpOutlined} style={{ visibility: \"hidden\" }} />\n            : expanded\n            ? <ExpandIcon Icon={CaretDownOutlined} onClick={e => onExpand(record, e)} />\n            : <ExpandIcon Icon={CaretRightOutlined} onClick={e => onExpand(record, e)} />;\n\n    const _footer = (currentPageData) => {\n        // console.log('_footer => ', currentPageData);\n        return (\n            _footerShow ? (\n                <div style={{display: 'flex', flex: 'auto', height: `${footerProps.height}px`}}>\n                    {/*className={'BaseTable__footer__counter'}>*/}\n                    <div key={\"footer-left-custom-side\"} className={`${rtPrefix}-footer-left-custom-side`}>\n                        {footerProps.leftCustomSideElement\n                            ? Array.isArray(footerProps.leftCustomSideElement)\n                                ? <FormItems items={footerProps.leftCustomSideElement} />\n                                : <footerProps.leftCustomSideElement />\n                            : null}\n                    </div>\n                    <div key={\"footer-center-custom-side\"} className={`${rtPrefix}-footer-center-custom-side`}>\n                        {footerProps.centerCustomSideElement\n                            ? Array.isArray(footerProps.centerCustomSideElement)\n                                ? <FormItems items={footerProps.centerCustomSideElement} />\n                                : <footerProps.centerCustomSideElement />\n                            : null}\n                    </div>\n                    <div key={\"footer-right-custom-side\"} className={`${rtPrefix}-footer-right-custom-side`}>\n                        {footerProps.rightCustomSideElement\n                            ? Array.isArray(footerProps.rightCustomSideElement)\n                                ? <FormItems items={footerProps.rightCustomSideElement} />\n                                : <footerProps.rightCustomSideElement />\n                            : null}\n                    </div>\n                    <div className={`${rtPrefix}-footer-right-system-side`}>\n                        <Space>\n                            {selectable ? (\n                                <React.Fragment>\n                                    {footerProps.showElements.includes(\"selected\")\n                                        ? <span>{footerProps.selectedTitle} {_selectedRowKeys.length}</span>\n                                        : null}\n                                    {footerProps.showElements.includes(\"loaded\")\n                                        ? <span>{footerProps.loadedTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n                                        : null}\n                                </React.Fragment>\n                            ) : null}\n\n                            {footerProps.showElements.includes(\"total\")\n                                ? requestLoadCount !== noop && !expandColumnKey\n                                    ? <span>{footerProps.totalTitle} {_totalCountRows}</span>\n                                    : <span>{footerProps.totalTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n                                : null}\n                        </Space>\n                    </div>\n                </div>\n            ) : undefined\n        );\n    };\n\n    const getColumns = () => {\n        return _columns.map((col, index) => ({\n            ...col,\n            onHeaderCell: (column) =>\n                ({\n                    column,\n                    // resizable: column.resizable,\n                    // width: column.width,\n                    onResize: onResizeHandler(index)\n                })\n        }));\n    };\n\n    const restProps = getObjectExcludedProps(props, excludeProps);\n    const expandableProps = expandColumnKey\n        ? {\n            defaultExpandAllRows: expandDefaultAll,\n            expandIcon: expandIconRender,\n            ...expandable,\n            expandedRowKeys: _expandedRowKeys,\n            onExpandedRowsChange: _onExpandedRowsChange\n        } : {};\n\n    const rowSelectionProps = selectable\n        ? {\n            type: \"checkbox\",\n            fixed: true,\n            checkStrictly: !nodeAssociated,\n            selectedRowKeys: _selectedRowKeys,\n            onChange: onChangeSelectedHandler,\n            onSelectAll: onSelectAllHandler,\n            ...rowSelection\n        } : undefined;\n\n    return (\n        <div className={`${rtPrefix}-table ${className}`} style={style}>\n            <div className={`${rtPrefix}-baseTable`}>\n                <AutoResizer\n                    // onResize={({ height, width }) => {setHeight(height); setWidth(width)} }\n                >\n                    {({ height, width }) => (\n                        <div style={{ width: width, height: height }}>\n                            <AntTable\n                                {...restProps}\n\n                                /** Required */\n                                columns={getColumns()}\n                                dataSource={_rows}\n                                // scroll={{ x: width, y: height - headerHeight }} // 16 (paddings) + 2 + 2 borders\n                                scroll={{ y: height - headerHeight - (_footerShow ? (footerProps.height + 20) : 0) }}\n                                pagination={{ position: [\"none\", \"none\"], ...restProps.pagination, pageSize: _rows.length }}\n\n                                /** Base Props */\n                                loading={loading}\n\n                                /** Tree Props */\n                                expandable={{ ...expandableProps }}\n                                /** Selection Props */\n                                rowSelection={rowSelectionProps}\n\n                                /** View Props */\n                                rowClassName={_rowClassName}\n                                footer={_footerShow ? _footer : undefined}\n                                components={{\n                                    header: {\n                                        row: HeaderRow,\n                                        cell: HeaderCell\n                                    },\n                                    body: {\n                                        cell: BodyCell,\n                                    }\n                                }}\n\n                                /** Events */\n                                onChange={onChangeTable}\n                                onHeaderRow={onHeaderRowProps}\n                                onRow={onRowEvents}\n                            />\n                        </div>\n                    )}\n                </AutoResizer>\n            </div>\n        </div>\n    );\n};\n\nTable.propTypes = {\n    /**\n     * REQUIRED\n     * */\n\n    /** Столбцы таблицы */\n    columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n    /** Режим загрузки данных по скроллу */\n    infinityMode: PropTypes.bool,\n\n    /**\n     * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n     * */\n\n    /** Строки по умолчанию */\n    defaultRows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ключи выделенных по умолчанию строк */\n    defaultSelectedRowKeys: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n\n    /** Значение строки поиска по умолчанию строк */\n    defaultSearchValue: PropTypes.string,\n\n    /** Объект фильтрации по умолчанию */\n    defaultFilter: PropTypes.object,\n\n    /** Сортировка по умолчанию */\n    defaultSortBy: PropTypes.shape({\n        /** Ключ поля для сортировки */\n        key: PropTypes.string,\n        /** Направление сортировки */\n        order: PropTypes.oneOf([\"asc\", \"desc\"])\n    }),\n\n    /**\n     * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n     * */\n\n    /** Строки таблицы. Используется для контроля таблицы из вне. */\n    rows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Функция задания строк таблицы. */\n    setRows: PropTypes.func,\n\n    /** Выделенные строки таблицы. */\n    selectedRowKeys: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n\n    /** Значение строки поиска */\n    searchValue: PropTypes.string,\n\n    /** Объект фильтрации */\n    filter: PropTypes.object,\n\n    /** Объект сортировки */\n    sortBy: PropTypes.shape({\n        /** Ключ поля для сортировки */\n        key: PropTypes.string,\n        /** Направление сортировки */\n        order: PropTypes.oneOf([\"asc\", \"desc\"])\n    }),\n\n    /**\n     * BASE PROPS\n     * */\n\n    /** Поле для уникальной идентификации строки */\n    rowKey: PropTypes.string,\n\n\n    /** Дополнительные поля и валидация в объекты таблицы\n     * Данный параметр (props) осуществляет дополнительную обработку объекта таблицы после закрытия модалки, но перед добавлением в таблицу.\n     * Можно как изменить существующие поля объекта, так и добавить новые поля объекта.\n     * `customFields` - массив объектов для дополнения или изменения полей объектов таблицы\n     * ```json\n     * [\n     *  {\n     * \t\tname: <String>,\n     * \t\tvalue: <func>,\n     * \t\tvalidate: <func>\n     * \t}\n     * ]\n     * ```\n     * `name` – Имя параметра в объекте\n     * `value` – Функция формирования значения - `(row, rows) => { return {} }`\n     * `validate` – Функция проверки значения - `(row, rows) => { return <Bool> }`\n     * Параметра **validate** работает **только** для модельного окна тип `select`.\n     * Validate можно наложить на любое кол-во полей объекта и если хотя бы один `validate` === `false`, то исключает строку из добавления.\n     */\n    customFields: PropTypes.arrayOf(PropTypes.object),\n\n    /**\n     * Данный параметр (props) позволяет добавить или переопределить пропсы для колонок, которые заданы конфигурацией на сервере\n     * `customColumnProps` - массив объектов `props` к `columns`. Один объект описывает доп. параметры для одной колонки\n     * ```json\n     * [\n     *  {\n     * \t\tname: <String>,\n     * \t\tcellRenderer: <func>,\n     * \t\t...advancedColProps\n     * \t}\n     * ]\n     * ```\n     * `name` – key колонки к которой надо применить дополнительные пропсы\n     * `cellRenderer` – `({ cellData, columns, column, columnIndex, rowData, rowIndex, container, isScrolling }) => return <ReactNode>`\n     * `advancedColProps` – подолнительные свойства колонок тут -> [Column](https://autodesk.github.io/react-base-table/api/column)\n     */\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\n\n    /**\n     * VIEW PROPS\n     * */\n\n    /** Вывод когда нет данных */\n    empty: PropTypes.element,\n\n    /** Отображение загрузки данных */\n    overlay: PropTypes.element,\n\n    /** Фиксированная ширина столбцов. Появится боковой скрол */\n    fixWidthColumn: PropTypes.bool,\n\n    footerProps: PropTypes.shape({\n\n        /** Высота подвала */\n        height: PropTypes.number,\n\n        /** Массив элементов футтера, которые надо отобразить\n         * ['selected', 'loaded', 'total'] */\n        showElements: PropTypes.arrayOf(PropTypes.string),\n\n        /** Заколовок для кол-ва выбранных объектов */\n        selectedTitle: PropTypes.string,\n\n        /** Заколовок для кол-ва загруженны объектов */\n        loadedTitle: PropTypes.string,\n\n        /** Заколовок для кол-ва всего объектов */\n        totalTitle: PropTypes.string,\n\n        /** Левый кастомный элемент командной панели */\n        leftCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\n        /** Центральный кастомный элемент командной панели */\n        centerCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\n        /** Правый кастомный элемент командной панели */\n        rightCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)])\n    }),\n\n    /** Высота заголовка таблицы */\n    headerHeight: PropTypes.number,\n\n    /** Высота строки таблицы */\n    rowHeight: PropTypes.number,\n\n    /** Custom row renderer\n     * Параметры - `({ isScrolling, cells, columns, rowData, rowIndex, depth })` */\n    rowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n    /** Строки будут в зебро-стиле */\n    zebraStyle: PropTypes.bool,\n\n    /** Высота расширения */\n    estimatedRowHeight: PropTypes.number,\n\n    /** Отображать ли разделители ячеек в строке */\n    cellBordered: PropTypes.bool,\n\n    /** Отобрадать ли разделители строк */\n    rowBordered: PropTypes.bool,\n\n    className: PropTypes.string,\n\n    style: PropTypes.object,\n\n    /**\n     * LOAD DATA PROPS\n     * */\n\n    /** Порог в пикселях для вызова _onLoad.\n     * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n    loadThreshold: PropTypes.number,\n\n    /** Размер страницы */\n    pageSize: PropTypes.number,\n\n    /** Функция запроса для конфигурации */\n    requestLoadConfig: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n    /** Имя параметра для поиска */\n    searchParamName: PropTypes.string,\n\n    /**\n     * SELECTABLE PROPS\n     * */\n\n    /** Таблица с возможностью выбора строки */\n    selectable: PropTypes.bool,\n\n    /**\n     * TREE PROPS\n     * */\n\n    /** Родительский узел и дочерние узлы связаны (Работает только при `selectable`) */\n    nodeAssociated: PropTypes.bool,\n\n    /** Ключ колонки по которой строить иерархию */\n    expandColumnKey: PropTypes.string,\n\n    /** Открыть по умолчанию вложенность до уровня N или 'All' */\n    expandDefaultAll: PropTypes.bool,\n\n    /** Загружать ноды иерархии по одной */\n    expandLazyLoad: PropTypes.bool,\n\n    /** Поле в котором хранится ссылка на родителя */\n    expandParentKey: PropTypes.string,\n\n    /**\n     * EVENTS\n     * */\n\n    /** Событие при клике на строку (только при `selectable` = `false`)\n     * `({selected, rowData, rowIndex}) => {}` */\n    onRowClick: PropTypes.func,\n\n    /** Событие при двойном клике на строку.\n     * `({rowData, rowIndex, rowKey}) => {}` */\n    onRowDoubleClick: PropTypes.func,\n\n    /** События при открытии / закрытии ноды\n     * `({ expanded, rowData, rowIndex, rowKey }) => {}` */\n    onRowExpand: PropTypes.func,\n\n    /** Событие при выборе строки.\n     * `([rowKeys], [rowDatas]) => {}` */\n    onSelectedRowsChange: PropTypes.func,\n\n    /** События при открытии / закрытии ноды\n     * `(expandedRowKeys) => {}` - массив ключей открытых нод */\n    onExpandedRowsChange: PropTypes.func,\n\n    /** SELECTED PANEL */\n\n    /** Отображать ли панель выбранных элементов */\n    showSelection: PropTypes.bool,\n\n    /** Строка или функция для отображения элементов списка выбранных\n     * Строка - имя поля\n     * Функция - рендер строк.\n     * `({ rowData, rowIndex }) => { return <Component> }` */\n    rowRenderShowSelection: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.string\n    ]),\n\n    /** Путь в сторе куда класть выбранную строку таблицы */\n    dispatchPath: PropTypes.string,\n\n    /** Объект для подписки на изменения в STORE */\n    subscribe: PropTypes.arrayOf(PropTypes.object)\n};\n\n\nTable.defaultProps = {\n    size: \"small\",\n    bordered: true,\n    infinityMode: false,\n    editMode: false,\n    defaultRows: [],\n    defaultSelectedRowKeys: [],\n    defaultSearchValue: \"\",\n    defaultFilter: {},\n    defaultSortBy: {},\n\n    rows: [],\n    setRows: noop,\n    selectedRowKeys: [],\n    searchValue: \"\",\n    filter: {},\n    sortBy: {},\n\n    rowKey: \"id\",\n\n    empty: empty,\n    overlay: overlay,\n    fixWidthColumn: false,\n    footerProps: {\n        height: 30,\n        showElements: [],\n        selectedTitle: \"Выделено:\",\n        loadedTitle: \"Загружено записей:\",\n        totalTitle: \"Всего записей:\",\n        leftCustomSideElement: null,\n        centerCustomSideElement: null,\n        rightCustomSideElement: null\n    },\n    headerHeight: 30,\n    rowHeight: 30,\n    zebraStyle: false,\n    estimatedRowHeight: undefined,\n    cellBordered: false,\n    rowBordered: true,\n    className: \"\",\n    style: {},\n\n    loadThreshold: 300,\n    pageSize: 50,\n    requestLoadRows: undefined,\n    requestLoadCount: noop,\n    searchParamName: \"searchLine\",\n\n    selectable: false,\n\n    nodeAssociated: true,\n    expandColumnKey: undefined,\n    expandDefaultAll: true,\n    expandLazyLoad: false,\n    expandParentKey: \"parentId\",\n\n    onRowClick: noop,\n    onRowDoubleClick: noop,\n    onRowExpand: noop,\n    onSelectedRowsChange: noop,\n    onExpandedRowsChange: noop,\n\n    showSelection: false,\n\n    dispatchPath: undefined,\n    subscribe: []\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\n\n","import React, { useEffect, useState } from \"react\";\nimport { getSortBy, noop, notificationError } from \"../../utils/baseUtils\";\nimport Table from \"./Table\";\n\nconst defaultProps = {\n    defaultFilter: {},\n    rowKey: \"id\",\n    pageSize: 50,\n    requestLoadConfig: noop,\n    expandColumnKey: undefined,\n    expandLazyLoad: false,\n    expandParentKey: \"parentId\",\n    customColumnProps: []\n};\n\nconst ConfigLoader = props => {\n\n    /** Конфигурация таблицы */\n    const [tableConfig, setTableConfig] = useState(undefined);\n\n    const {\n        defaultFilter,\n        defaultSortBy,\n        rowKey,\n        pageSize,\n        requestLoadConfig,\n        expandColumnKey,\n        // expandLazyLoad,\n        expandParentKey,\n        customColumnProps,\n        // cellBordered,\n        fixWidthColumn,\n        selectable\n    } = { ...defaultProps, ...props };\n\n    useEffect(() => {\n        let cleanupFunction = false;\n        const loadData = async () => {\n            if (requestLoadConfig) {\n                // console.log(\"requestLoadConfig => \", typeof requestLoadConfig);\n                // console.log(\"requestLoadRows => \", typeof props.requestLoadRows);\n                requestLoadConfig()\n                    .then((response) => {\n                        // let result = response.data;\n                        // console.log('requestLoadConfig -> ', response.data);\n                        if (!cleanupFunction) {\n                            // setTableConfig(response.data);\n                            configParser(response.data);\n                        }\n                    })\n                    .catch(error => notificationError(error, \"Ошибка получения конфигурации\"));\n            }\n        };\n        loadData().then(r => r);\n        return () => cleanupFunction = true;\n    }, []);\n\n    const configParser = (config) => {\n\n        // Массив колонок\n        let _columns = [];\n        // Сортировка по умолчанию\n        let _defaultSorter = [];\n        // Счетчик видимых полей\n        let visibleIndex = 0;\n        // Индекс колонки около которой ставить иконку дерева\n        let expandIconColumnIndex = -1;\n        // Ключ иерархии\n        let _expandColumnKey = config && config.hierarchical && config.hierarchyView\n            ? config.hierarchyView\n            : expandColumnKey;\n\n        config && config.fields && config.fields.forEach((item, index) => {\n            // console.log('configParser item => ', item);\n\n            // Дополнительные props колонок\n            const colProps = customColumnProps &&\n                customColumnProps.find((render) =>\n                    render.name === item.name || render.name === item.alias);\n\n            // Если поле не надо показывать, то след цикл\n            if (!item.visible || (colProps && colProps.hidden))\n                return;\n\n            // Индекс или имя поля в данных\n            const dataIndex = (item.alias ? item.alias : item.name);\n            // Сортировка по умолчанию\n            if (_defaultSorter.length === 0 || _defaultSorter[1] === undefined)\n                _defaultSorter = getSortBy(defaultSortBy, item.defaultSort, dataIndex);\n\n            // Ширина колонок\n            const widthCol = fixWidthColumn ? { width: item.width, maxWidth: 1000 } : {};\n            // Увеличить счетчик видимых полей\n            visibleIndex++;\n            // Проверка у этого ли поля ставить иконку дерева\n            if (_expandColumnKey === dataIndex)\n                expandIconColumnIndex = visibleIndex + (selectable ? 1 : -1);\n            // Формирование title колонки\n            let titleNode = colProps && colProps.headerRenderer\n                ? (typeof colProps.headerRenderer === \"function\" ? colProps.headerRenderer() : colProps.headerRenderer)\n                : (item.header ? item.header : item.name);\n\n            const column = {\n                key: dataIndex,\n                title: titleNode,\n                dataIndex: dataIndex,\n                align: item.align,\n                resizable: item.resizable,\n                sorter: item.sortable ? item.sortable : undefined,\n                ellipsis: true,\n                defaultSortOrder: _defaultSorter[1],\n                ...widthCol,\n                ...colProps\n            };\n            // Дополнительные props для компонента ячейки\n            column.onCell = (rowData, rowIndex) => ({ column, rowData, rowIndex });\n            // Рендер ячейки\n            column.render = (cellData, rowData, rowIndex) => {\n                if (colProps && colProps.cellRenderer)\n                    return <colProps.cellRenderer\n                        column={column}\n                        cellData={cellData}\n                        rowData={rowData}\n                        rowIndex={rowIndex} />;\n                else\n                    return item.typeData === \"json\" ? JSON.stringify(cellData) : cellData ? cellData : \"---\";\n            };\n            _columns.push(column);\n        });\n\n        let _defaultFilter;\n        if (config && config.hierarchical && config.hierarchyLazyLoad) {\n            const parentKey = config.hierarchyField\n                ? config.hierarchyField.split(\"/\")[1]\n                : expandParentKey;\n            _defaultFilter = { ...defaultFilter, [parentKey]: null };\n        } else _defaultFilter = defaultFilter;\n\n        // console.log('expandIconColumnIndex => ', _expandColumnKey, expandIconColumnIndex);\n        setTableConfig({\n            columns: _columns,\n            defaultSortBy: _defaultSorter[0],\n            defaultFilter: _defaultFilter,\n            rowKey:\n                config && config.hierarchical && config.hierarchyField\n                    ? config.hierarchyField.split(\"/\")[0]\n                    : rowKey,\n            // expandParentKey:\n            //     config && config.hierarchical && config.hierarchyField\n            //         ? config.hierarchyField.split('/')[1]\n            //         : expandParentKey,\n            expandColumnKey: _expandColumnKey,\n            expandable: { expandIconColumnIndex },\n            // expandLazyLoad:\n            //     config && config.hierarchical && config.hierarchyLazyLoad\n            //         ? config.hierarchyLazyLoad\n            //         : expandLazyLoad,\n            pageSize: config && config.hierarchical ? 1 : pageSize,\n        });\n    };\n\n    if (tableConfig)\n        return (<Table {...props} {...tableConfig} />);\n    else\n        return null;\n};\n\nexport default ConfigLoader;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { notification, Button, Tooltip, Modal as AntModal} from \"antd\";\nimport { notificationError, dispatchToStore, useMounted, getObjectExcludedProps } from \"../utils/baseUtils\";\nimport Form from \"../Form/Form\";\nimport { getExtraData, mapDispatchToProps, mapStateToProps } from \"../utils/storeUtils\";\n\nconst excludeProps = [\"buttonProps\", \"toolTipProps\", \"modalConfig\", \"modalData\", \"subscribe\", \"dispatch\"];\nconst modalTypes = ['save', 'select', 'view']\n\nconst defaultProps = {\n    subscribe: [],\n    dispatch: {},\n    methodSaveForm: 'POST'\n}\n\nconst getDefaultFooterProps = (modal) => {\n\n    let okText = '';\n    let cancelText = '';\n    let modalTitle = '';\n\n    switch (modal.type) {\n        case 'save':\n            okText = 'Сохранить';\n            cancelText = 'Отмена';\n            break;\n        case 'select':\n            okText = 'Добавить';\n            cancelText = 'Отмена';\n            break;\n        case 'view':\n            okText = 'Закрыть';\n            break;\n        default: break;\n    }\n\n    if(modal.okText)\n        okText = modal.okText;\n\n    if(modal.cancelText)\n        cancelText = modal.cancelText;\n\n    if(modal.title)\n        modalTitle = modal.title;\n\n    return {okText, cancelText, title: modalTitle, okType: 'primary'}\n};\n\n/**\n * Компонент модального окна\n */\nconst Modal = props => {\n\n    const {buttonProps, toolTipProps, modalConfig, modalData, subscribe, dispatch} = props;\n    const modalProps = { ...getDefaultFooterProps(modalConfig), ...getObjectExcludedProps(modalConfig, excludeProps) };\n\n    const [visible, setVisible] = useState(false);\n    const [_modalData, _setModalData] = useState({});\n    const [_buttonProps, setButtonProps] = useState({});\n\n    const isMounted = useMounted()\n\n    useEffect(() => {\n        _setModalData(modalData);\n    }, []);\n\n    /** Подписка на изменение props[subscribe.name] в сторе */\n    subscribe.map(item => {\n        return useEffect( () => {\n            // if(!isMounted && !item.name)\n            //     return;\n            if((item.withMount || isMounted) && item.name) {\n            // console.log(\"storeHOC => subscribe: \", props[subscribe.name]);\n                item.onChange && item.onChange({\n                    value: props[item.name],\n                    extraData: getExtraData(item, props), //extraData,\n                    setModalData,\n                    setButtonProps,\n                    openModal: _onOpenModal,\n                    closeModal: _onCloseModal\n                });\n            }\n            // console.log(\"Change Props[2]: \", props.subscribeЗф);\n        }, [props[item.name]]);\n    })\n\n    const setModalData = (value) => _setModalData && _setModalData(value);\n    const _onOpenModal = () => setVisible(true)\n    const _onCloseModal = () => setVisible(false)\n\n    const onFinishHandler = (values) => { //} {type, row, requestSaveRow}) => {\n        // console.log(\"Modal Events => before dispatchToStore: \", dispatch);\n        const saveObj = {..._modalData, ...values};\n\n        if (modalProps.requestSaveForm && modalProps.methodSaveForm) {\n            // console.log(\"Modal Events => type: \", type, method, row, _modalData);\n            modalProps.requestSaveForm({\n                method: modalProps.methodSaveForm,\n                data: saveObj,\n            })\n                .then(response => {\n                    notification.success({\n                        message: 'Сохранение прошло успешно'\n                    });\n                    modalProps.onOk && modalProps.onOk(saveObj, response.data);\n                    modalProps.onFinish && modalProps.onFinish(saveObj, response.data);\n                    dispatchToStore({dispatch, setDataStore: props.setDataStore, value: saveObj});\n                    _onCloseModal();\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении'));\n        } else {\n            modalProps.onOk && modalProps.onOk(saveObj);\n            modalProps.onFinish && modalProps.onFinish(saveObj);\n            dispatchToStore({dispatch, setDataStore: props.setDataStore, value: saveObj});\n            _onCloseModal();\n        }\n    };\n\n    const onFinishFailedHandler = (errorInfo) => {\n        // console.log('FormModal Failed:', errorInfo);\n        console.error(\"FormModal fields failed: \", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    const loadInitDataHandler = (callBack) =>\n        formConfig.loadInitData(callBack, _modalData)\n\n\n    const _onCancelHandler = (e) => {\n        // setVisibleModals({ ...visibleModals, [modal.type]: false });\n        // form.resetFields();\n        _onCloseModal()\n        if (modalProps.onCancel) modalProps.onCancel(e)\n    };\n\n    const defaultFooter = [\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.cancelText,\n                className: 'mr-8',\n                onClick: _onCancelHandler,\n                ...modalProps.cancelButtonProps\n            }\n        },\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.okText,\n                type: modalProps.okType,\n                htmlType: 'submit',\n                ...modalProps.okButtonProps\n            }\n        }\n    ];\n\n    const formConfig =  {\n        footer: defaultFooter,\n        loadInitData: (callBack, row) => callBack(row),\n        ...modalProps.form\n    };\n\n    return (\n        <React.Fragment>\n            <Tooltip {...toolTipProps}>\n                <Button\n                    type=\"primary\"\n                    {...buttonProps}\n                    {..._buttonProps}\n                    onClick={_onOpenModal}\n                >{buttonProps && buttonProps.label}</Button>\n            </Tooltip>\n            <AntModal\n                {...modalProps}\n                centered\n                destroyOnClose\n                visible={visible}\n                onCancel={_onCancelHandler}\n                bodyStyle={{padding: 0, ...modalProps.bodyStyle}}\n                footer={null}\n            >\n                <Form\n                    {...formConfig}\n                    onFinish={onFinishHandler}\n                    onFinishFailed={onFinishFailedHandler}\n                    loadInitData={loadInitDataHandler}\n                >{props.children}</Form>\n            </AntModal>\n        </React.Fragment>\n    )\n};\n\nModal.propTypes = {\n\n    /** Свойства [Button](https://ant.design/components/button/) из Ant Design\n     * Добавлено свойство `label` с типом `ReactNode` или `string` для формирования контента кнопки*/\n    buttonProps: PropTypes.object,\n\n    /** Объект модального окна. Стандартная конфигурация. */\n    modalConfig: PropTypes.shape({\n        /** Тип модального окна */\n        type: PropTypes.oneOf(modalTypes),\n\n        /** Запрос для автоматического сохранения формы */\n        requestSaveForm: PropTypes.func,\n\n        /** HTTP Метод, передаваемый в запрос сохранения */\n        methodSaveForm: PropTypes.string,\n\n        /** Пропсы формы.\n         * Если верстка через конфиги, то пропс body обязателен */\n        form: PropTypes.object\n    }),\n\n    /** Данные для модального окна */\n    modalData: PropTypes.object,\n\n    /** Путь в сторе куда класть данных окна после закрытия */\n    dispatch: PropTypes.object,\n\n    /** Объект для подписки на изменения в STORE.\n     * Параметры в `onChange`:\n     * * `value`: значение за которым ведется наблюдение,\n     * * `extraData`: дополнительные данные, передаваемые при срабатывании события\n     * * `setModalData`: функция задания объекта формы\n     * * `setButtonProps`: функция задания пропсов кнопке\n     * * `openModal`: функция открытия модального окна\n     * * `closeModal`: функция закрытия модального окна */\n    subscribe: PropTypes.arrayOf(PropTypes.object),\n};\n\nModal.defaultProps = defaultProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React, {useState} from 'react';\nimport {w3cwebsocket as W3CWebSocket} from 'websocket';\nimport { Button, Cascader, Checkbox, Input } from \"antd\";\nimport {\n\tCaretRightOutlined,\n\tStopOutlined,\n} from '@ant-design/icons';\nimport moment from 'moment';\n\nconst styles = {\n\trow: {\n\t\tdisplay: 'flex',\n\t\tborderBottom: '1px solid #d9d9d9',\n\t},\n\tinputUrl: {\n\t\tflexBasis: '200px',\n\t\tborderRight: '1px solid #d9d9d9',\n\t},\n\tinputQuery: {\n\t\tflex: '1',\n\t\tborderRight: '1px solid #d9d9d9',\n\t},\n\tautoScroll: {\n\t\tpadding: '0 8px',\n\t\tdisplay: 'flex',\n\t\tborderRight: '1px solid #d9d9d9',\n\t},\n\tbuttonStart: {color: 'green'},\n\tbuttonStop: {color: 'red'},\n\tpre: {\n\t\t// height: '100%',\n\t\toverflow: 'auto',\n\t\tmarginBottom: 0,\n\t},\n};\n\nconst scrollToBottom = (block) => {\n\tconst scrollHeight = block.scrollHeight;\n\tconst height = block.clientHeight;\n\tconst maxScrollTop = scrollHeight - height;\n\tblock.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n};\n\nconst Logs = (props) => {\n\tconst [ws, setWs] = useState(null);\n\tconst [Logs, setLogs] = useState([]);\n\tconst [logsRef, setLogsRef] = useState(null);\n\tconst [wsParams, setWsParams] = useState({url: props.loki.url, query: props.loki.query});\n\tconst [autoScroll, setAutoScroll] = useState(true);\n\n\tconst onOpen = () => {\n\t\t// setWs(new W3CWebSocket(\"ws://10.5.121.117:3100/loki/api/v1/tail?query={dynamicdq=\\\"oauth.dias-dev.ru\\\"}\", 'echo-protocol'));\n\t\tsetWs(\n\t\t\tnew W3CWebSocket(\n\t\t\t\t`ws://${wsParams.url}/loki/api/v1/tail?query=${wsParams.query}`,\n\t\t\t\t'echo-protocol'\n\t\t\t)\n\t\t);\n\t\tsetLogs([]);\n\t\tconsole.log('onCreate ws => ', ws);\n\t};\n\tconst onClose = () => {\n\t\tconsole.log('onClose ws => ', ws);\n\t\tws && ws.close();\n\t\tsetWs(undefined);\n\t};\n\n\tif (ws != null) {\n\t\tws.onmessage = (msg) => {\n\t\t\tconst streams = JSON.parse(msg.data).streams;\n\t\t\tconst data = streams.map((streamItem) => {\n\t\t\t\treturn streamItem.values.map((valueItem) => {\n\t\t\t\t\t// console.log('valueItem[0].substr(0, 13) => ', moment(valueItem[0].substr(0, 13),\"x\").format(\"YYYY-MM-DD hh:mm:ss\") ); //\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={valueItem[0]}>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{moment(valueItem[0].substr(0, 13), 'x').format(\n\t\t\t\t\t\t\t\t\t'YYYY-MM-DD hh:mm:ss'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span>{valueItem[1]}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\t\t\tsetLogs((state) => [...state, data]);\n\t\t\tif (logsRef && autoScroll) scrollToBottom(logsRef);\n\t\t\t// console.log('Logs => ', streams)\n\t\t};\n\t}\n\n\tconst onChangeApp = (value) => {\n\t\t// console.log(value);\n\t\tonClose();\n\t\tsetWsParams({...wsParams, query: `{server=\"${value[0]}\", app=\"${value[1]}\"}`})\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div style={styles.row}>\n\t\t\t\t{/*<div style={styles.inputUrl}>*/}\n\t\t\t\t{/*\t<Input value={wsParams.url} bordered={false} />*/}\n\t\t\t\t{/*</div>*/}\n\t\t\t\t<div style={styles.inputUrl}>\n\t\t\t\t\t<Cascader options={props.servers} onChange={onChangeApp} placeholder=\"Выберите приложение\"  bordered={false} />\n\t\t\t\t</div>\n\t\t\t\t<div style={styles.inputQuery}>\n\t\t\t\t\t<Input value={wsParams.query} bordered={false} disabled={true} />\n\t\t\t\t</div>\n\t\t\t\t<div style={styles.autoScroll}>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tstyle={{margin: 'auto'}}\n\t\t\t\t\t\tchecked={autoScroll}\n\t\t\t\t\t\tonChange={(e) => setAutoScroll(e.target.checked)}\n\t\t\t\t\t>\n\t\t\t\t\t\tAuto scroll\n\t\t\t\t\t</Checkbox>\n\t\t\t\t</div>\n\t\t\t\t{ws != null ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={onClose}\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\ticon={<StopOutlined />}\n\t\t\t\t\t\t\tstyle={styles.buttonStop}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={onOpen}\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\ticon={<CaretRightOutlined />}\n\t\t\t\t\t\t\tstyle={styles.buttonStart}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{/*<div><Button type=\"text\" icon={<StopOutlined />} style={styles.buttonStop}/></div>*/}\n\t\t\t\t{/*<Col span={3}><Button>Close connect</Button></Col>*/}\n\t\t\t</div>\n\t\t\t<pre style={styles.pre} ref={(ref) => setLogsRef(ref)}>\n\t\t\t\t{Logs}\n\t\t\t</pre>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Logs;\n","import React, {useEffect, useState} from 'react';\nimport {\n\tLineChart as LC,\n\tLine,\n\tXAxis,\n\tYAxis,\n\tCartesianGrid,\n\tTooltip,\n\tLegend,\n} from 'recharts';\nimport { notificationError } from \"../../utils/baseUtils\";\n\n// interface LineChartProps {\n//     size: {width: number; height: number}\n//     configName?: string;\n//     grid?: CartesianGridProps | undefined;\n//     tooltip?: object;\n//     legend?: LegendProps;\n//     xAxis?: XAxisProps;\n//     yAxes?: YAxisProps[];\n//     lines?: LineProps[];\n// }\n\nconst LineChart = (props) => {\n\tconst {size, configName, requestLoadRows, grid, tooltip, legend, xAxis, yAxes, lines} =\n\t\tprops;\n\tconst [data, setData] = useState([]);\n\n\tuseEffect(() => {\n\t\trequestLoadRows(configName)({\n\t\t\tdata: {\n\t\t\t\tfrom: '2021-09-29T16:00:00.000Z',\n\t\t\t\tto: '2021-09-30T20:00:00.000Z',\n\t\t\t},\n\t\t\tparams: {},\n\t\t})\n\t\t\t.then((res) => setData(res.data))\n\t\t\t.catch((error) =>\n\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t);\n\t}, []);\n\n\tif (data.length > 0) {\n\t\t// console.log(\"data.length / 105 => \", Math.floor(data.length / 105))\n\t\treturn (\n\t\t\t<LC width={size.width} height={size.height - 32} data={data}>\n\t\t\t\t{grid ? <CartesianGrid {...grid} /> : null}\n\t\t\t\t{tooltip ? <Tooltip {...tooltip} /> : null}\n\t\t\t\t{legend ? <Legend {...legend} /> : null}\n\t\t\t\t{xAxis ? (\n\t\t\t\t\t<XAxis\n\t\t\t\t\t\t{...xAxis}\n\t\t\t\t\t\tinterval={Math.floor(data.length / xAxis.interval)}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t{yAxes &&\n\t\t\t\t\tArray.isArray(yAxes) &&\n\t\t\t\t\tyAxes.map((yAxis) => <YAxis {...yAxis} />)}\n\t\t\t\t{lines &&\n\t\t\t\t\tArray.isArray(lines) &&\n\t\t\t\t\tlines.map((line) => <Line {...line} />)}\n\t\t\t</LC>\n\t\t);\n\t} else return null;\n};\n\nexport default LineChart;\n","import React, {useEffect, useState} from 'react';\nimport RGL, {WidthProvider} from 'react-grid-layout';\nimport sizeMe from 'react-sizeme';\nimport Logs from './Panels/Logs';\nimport LineChart from './Panels/LineChart';\nimport { notificationError } from \"../utils/baseUtils\";\n\nconst ReactGridLayout = WidthProvider(RGL);\nconst startGridWidth = 1200;\n\nconst contents = {\n\tlogs: Logs,\n\tlineChart: LineChart,\n};\n\nconst DashboardPanel = sizeMe.withSize({monitorHeight: true})(\n\t({size, title, type, params}) => {\n\t\t// console.log('DashboardPanel', size)\n\t\tconst Content = contents[type];\n\t\treturn (\n\t\t\t<div className={'dashboard-panel'}>\n\t\t\t\t<div className={'dashboard-panel-header'}>{title}</div>\n\t\t\t\t<div className={'dashboard-panel-content'}>\n\t\t\t\t\t<Content size={size} {...params} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n);\n\nconst DashboardGrid = sizeMe.withSize()(({size, panels}) => {\n\tconst width = size.width > 0 ? size.width : startGridWidth;\n\t// console.log('Grid dashboard', size)\n\tconst renderPanels =\n\t\tpanels &&\n\t\tpanels.map(({gridPos, ...panel}, index) => (\n\t\t\t<div key={index} data-grid={gridPos}>\n\t\t\t\t<DashboardPanel {...panel} />\n\t\t\t</div>\n\t\t));\n\treturn (\n\t\t<ReactGridLayout\n\t\t\tclassName='layout'\n\t\t\trowHeight={30}\n\t\t\tcols={12}\n\t\t\twidth={width}\n\t\t\tdraggableHandle={'.dashboard-panel-header'}\n\t\t>\n\t\t\t{renderPanels}\n\t\t</ReactGridLayout>\n\t);\n});\n\nconst Dashboard = (props) => {\n\tconst {id, requestLoadConfig} = props\n\tconst [dashboard, setDashboard] = useState(props.dashboard);\n\n\tuseEffect(() => {\n\t\trequestLoadConfig && requestLoadConfig({\n\t\t\tdata: {id: id},\n\t\t\tparams: {},\n\t\t})\n\t\t\t.then(res => res.data && res.data.dashboard && setDashboard(JSON.parse(res.data.dashboard)))\n\t\t\t.catch(err => notificationError(\"Ошибка загрузки dashboard\", err));\n\t}, [id]);\n\n\tconsole.log('dashboard => ', dashboard);\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: '#f0f2f5',\n\t\t\t\twidth: '100%',\n\t\t\t\theight: '100%',\n\t\t\t\toverflow: 'auto',\n\t\t\t}}\n\t\t>\n\t\t\t<DashboardGrid panels={dashboard.panels} />\n\t\t</div>\n\t);\n};\n\nexport default Dashboard;\n","import objectPath from 'object-path';\nimport {actionTypes} from './rtd.action.types';\n\nconst rtdReducer = (state = {}, action) => {\n    switch (action.type) {\n        case actionTypes.INIT_STORE: {\n            const {path} = action.payload;\n            // console.log(\"INIT_TABLE_STORE: \", path);\n            let newState = {...state};\n            objectPath.set(newState, path, {});\n            return newState;\n        }\n        case actionTypes.SET_DATA_STORE: {\n            const {path, row} = action.payload;\n\n            let newState = {...state};\n            if(row === undefined)\n                objectPath.del(newState, path); // newState[path] is now undefined\n            else\n                objectPath.set(newState, path, row); // newState[path] is now row\n\n            console.debug(\"Store change: \", path, row);\n            // console.group(\"Store\");\n            // console.log(\"Store: \", newState);\n            // console.log(\"New Data: \", path, row);\n            // console.groupEnd();\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\nexport default rtdReducer;\n","import { notification } from \"antd\";\nimport { notificationError } from \"./baseUtils\";\n\nexport const executeRequest = (request) => (options) => request(options)\n    .then(response => {\n        notification.success({\n            message: \"Сохранение прошло успешно\"\n        });\n    })\n    .catch(error => notificationError(error, 'Ошибка при сохранении') );"],"names":["types","INIT_STORE","SET_DATA_STORE","setDataStore","path","row","type","actionTypes","payload","noop","flatten","arrayOfArrays","reduce","flattened","item","concat","Array","isArray","getTableRowObjects","data","rowKeys","map","children","length","getTableRowKeys","rowKey","findNodeByRowKey","rowValue","node","i","_findNodeByRowKey","currentNode","value","currentChild","result","generateUUID","replace","c","crypto","getRandomValues","Uint8Array","toString","getValueFromSingleSelect","name","keys","getValueFromMultiSelect","getObjectExcludedProps","object","exclude","returnObject","Object","forEach","key","includes","undefined","notificationError","error","message","response","console","status","errorDescription","description","dispatchToStore","dispatch","extraData","timestamp","moment","useMounted","React","useState","isMounted","setIsMounted","useEffect","getSortBy","clientSortBy","serverSortBy","dataIndex","order","rtPrefix","empty","overlay","fontSize","SelectionHead","props","column","container","onSelectAll","selectedRowKeys","selectAll","_handleChange","e","rowObjects","filter","totalLength","selectLength","checked","selected","getRowChildren","findBrothers","selfItem","parentKey","arr","push","parentAnalysis","rowData","nodeAssociated","treeData","indeterminateRowKeys","_selectedRowKeys","_indeterminateRowKeys","currentRowData","parentExist","lastTypeSelect","typeSelect","nextSquare","indeterminateBrothers","selectedBrothers","allBrothers","index","indexOf","splice","indexS","indexI","SelectionCell","rowIndex","onChange","rowChildren","element","Set","_selectedRowObjects","_selectedRow","_selectAll","det","target","APP_TIME_OFFSET","getMomentFromStringByFormat","date","format","utcOffset","getMomentWithOffset","getMomentWithOffsetTruncateDay","startOf","toFormat","dateString","mom","isValid","toDDMMYYYYHHMMSS","getISO","toISOString","DateRange","mounted","setMounted","startValue","setStartValue","endValue","setEndValue","className","nameStart","nameEnd","dateFormat","size","title","valueStart","valueEnd","showTime","defaultValueStart","_onChange","defaultValueEnd","disabledStartDate","valueOf","disabledEndDate","onStartChange","onEndChange","locale","width","propTypes","PropTypes","string","func","oneOf","defaultProps","SingleDate","_value","setValue","defaultValue","_onChangePicker","FilterPanel","defaultFilter","setFilter","applyFilterTooltip","applyFilterSize","applyFilterRender","borderStyle","onChangeFilter","onApplyFilter","configFilter","resetFilterRender","resetFilterTooltip","resetFilterSize","_onChangeData","_filter","_applyFilter","_resetFilter","getPanelCls","cls","findIndex","join","componentType","Select","render","marginLeft","oneOfType","arrayOf","SelectionList","selectedRowObjects","rowRender","onClickDropSelect","isRequired","Table","forwardRef","ref","hasMore","setHasMore","loading","setLoading","_rows","_setRows","setSelectedRowKeys","_searchValue","setSearchValue","_sortBy","setSortBy","setSelectAll","setIndeterminateRowKeys","_expandedRowKeys","setExpandedRowKeys","_totalCountRows","setTotalCountRows","_footerShow","_setFooterShow","tableRef","useRef","defaultRows","defaultSelectedRowKeys","defaultSearchValue","defaultSortBy","rows","setRows","searchValue","sortBy","columns","autoDeleteRows","fixWidthColumn","footerHeight","footerShow","footerTitles","headerHeight","rowHeight","zebraStyle","rowRenderer","estimatedRowHeight","loadThreshold","pageSize","requestLoadRows","requestLoadCount","searchParamName","selectable","expandColumnKey","expandParentKey","expandLazyLoad","expandDefaultAll","onRowClick","onRowDoubleClick","onRowExpand","onSelectedRowsChange","onExpandedRowsChange","showSelection","rowRenderShowSelection","dispatchPath","subscribe","commandPanelProps","CommandPanel","filterPanelProps","footerProps","selectedDispatchPath","rowsDispatchPath","_setRowsHandler","showElements","leftCustomSideElement","centerCustomSideElement","rightCustomSideElement","flatRows","selectedRow","ii","_dataProcessing","searchLine","reload","reloadData","current","setReloadTable","rowsDispatch","setRowsHandler","params","expandRow","pageNum","Math","floor","page","sort","dataQuery","then","catch","child","newRows","_rowEventHandlers","onClick","event","newRowObject","onDoubleClick","_onColumnSort","scrollToRow","loadParams","_getColumns","_columns","selectColumn","headerRenderer","cellRenderer","flexShrink","resizable","frozen","_onChangeSelectHandler","_onSelectAllHandler","unshift","_footer","FormItems","selectedTitle","loadedTitle","totalTitle","_rowClassName","rowClassName","onEndReached","selectedKeys","_onExpandedRowsChange","expandedRowKeys","_onRowExpand","expanded","allChildKeys","_getDisabledElementsOfCommandPanel","_disabledElements","disabledElements","_onClickAddAsCopy","onClickAddAsCopy","_onClickEdit","onClickEdit","_onClickDelete","onClickDelete","loop","callback","_onClickUp","newRowIndex","_getNewIndexRow","_changeIndexRow","onClickUp","_onClickDown","onClickDown","oldIndex","newIndex","_onSearch","preventDefault","onSearch","_onChangeFilter","_onApplyFilter","_onClickDropSelectHandler","dropObject","newSelectedKeys","height","number","shape","bool","selectedRows","loadedRows","totalRows","mapStateToProps","store","ownProps","objectPath","get","mapDispatchToProps","bindActionCreators","connect","Paragraph","_selectedRowData","_setSelectedRowData","isSelectOpened","setIsSelectOpened","isClickInSelect","setIsClickInSelect","placeholder","widthControl","widthPopup","heightPopup","onChangeKeys","requestLoadDefault","searchable","setSelectedRowData","loadSelectedObject","request","srk","findRow","find","window","addEventListener","handleMouseClick","removeEventListener","onClosePopup","dataKey","_getHeadCls","_getHeadText","_getPopupCls","_getPopupStyle","defRowsLen","getEvents","systemBtnProps","_SingleSelectRow","contains","onOpenPopup","onClickClear","AdvancedTable","config","setConfig","configData","customColumnProps","requestLoadConfig","cleanupFunction","loadData","columnsByConfig","fields","colProps","alias","header","align","sortable","hidden","visible","cellData","getDefaultFilter","hierarchical","hierarchyLazyLoad","hierarchyField","split","hierarchyView","excludeProps","Form","loadInitData","body","footer","autoSaveForm","requestSaveForm","methodSaveForm","processBeforeSaveForm","loaded","setLoaded","antFormProps","setAntFormProps","initFormData","setInitFormData","_setInitFormData","antForm","form","useForm","getBodyCls","noPadding","scrollable","onFinish","rawValues","values","log","saveObject","method","success","onFinishFailed","errorInfo","style","initialValues","FormModal","modal","setVisible","saveRow","getDefaultFooterProps","okText","cancelText","modalTitle","okType","modalProps","saveObj","startsWith","requestSaveRow","onOk","_onCancelHandler","onCancel","_onLoadInitData","callBack","formConfig","defaultFooter","label","cancelButtonProps","htmlType","okButtonProps","padding","bodyStyle","FormTable","addOnServer","editOnServer","addOnLocal","editOnLocal","addGroupOnServer","editGroupOnServer","addGroupOnLocal","editGroupOnLocal","select","viewGroup","viewObject","visibleModals","setVisibleModals","tableRows","setTableRows","tableSelectedRowKeys","setTableSelectedRowKeys","tableSelectedRow","setTableSelectedRow","setTableRef","_setTableRef","_ref","rowKeyType","customFields","modals","isGroupKey","history","requestDeleteRow","dataDeleteRow","cmdProps","_addRowsToLocalTable","getModals","_onSaveRow","isExistCmdBtn","btnType","equalsActionTypeCmdBtn","actionType","aTypes","_onClickAddHandler","location","pathname","_onClickAddAsCopyHandler","_addRowToLocalTable","_onClickAddGroupHandler","_onClickEditHandler","deleteData","_onClickUpHandler","_onClickDownHandler","selectRows","saveRows","sRow","tRow","field","validate","_addRowToServerTable","_editRowToLocalTable","_onRowClick","_onRowDoubleClick","_onSelectedRowsChange","getTableCls","onClickAdd","onClickAddGroup","SortOrder","ASC","DESC","withStore","Component","antFormItemProps","trigger","valuePropName","withStoreProps","subscribeProps","setSubscribeProps","getValueFromEvent","newValue","childProps","DatePickerHOC","TypographyTitle","TypographyText","TypographyDate","getTitle","Modal","parentLoadHandler","labelCol","span","wrapperCol","rules","required","info","AddFolderModal","args","EditFolderModal","EditFileModal","copyTextToClipboard","navigator","clipboard","fallbackCopyTextToClipboard","text","writeText","openNotificationWithIcon","err","textArea","document","createElement","top","left","position","appendChild","focus","successful","execCommand","removeChild","msg","FileManager","breadcrumb","setBreadcrumb","deleted","tableFilter","setTableFilter","isGroup","loadTable","requestDownloadFile","_onClickBreadcrumb","parentId","slice","_onClickBack","newBreadcrumb","newFilter","processBeforeSaveModal","extension","newData","owner","requestLoadParent","_uploadFile","file","notification","requestUploadFile","notifProps","uid","duration","icon","close","pathDownloadFile","styleDiv","display","alignItems","Icon","styleIcon","marginRight","FolderFilled","color","FileWordOutlined","FileExcelOutlined","FileImageOutlined","FileMarkdownOutlined","FilePdfOutlined","FilePptOutlined","FileTextOutlined","FileZipOutlined","FileOutlined","uploadProps","multiple","showUploadList","beforeUpload","uploadRender","breadcrumbRender","add","tooltip","addGroup","edit","delete","disabled","buttonProps","modalConfig","modalData","_modalData","_setModalData","_buttonProps","setButtonProps","setModalData","_onOpenModal","_onCloseModal","FormItem","getItem","TextArea","Password","Button","Group","Layout","itemProps","getCls","items","getItems","antFormListParams","_item","_key","fieldKey","operation","param","fIndex","confirm","defaultValueSearch","deleteConfirm","deleteConfirmType","deleteConfirmTitle","deleteConfirmDescription","defaultSystemBtnProps","addAsCopy","up","down","search","settings","tooltipPlacement","deleteButtonModalConfirm","deleteButtonPopupConfirm","renderDeleteBtn","content","centered","withOnClick","genProps","btnProps","renderBtn","List","deprecated","dispatchExtraData","withMount","getExtraData","setSubscribePropsHandler","_subscribeProps","prevState","has","_searchDispatchToStore","del","onSearchProps","renderClassicByName","formListProps","renderDeclarativeByName","FormHeader","FormBody","rest","FormFooter","Header","Footer","changedFields","allFields","getFieldsValue","lostParamName","infinityMode","optionConverter","options","mode","_hasMore","_setHasMore","_loading","_setLoading","_options","_setOptions","tmpOption","setTmpOption","isEndReached","setIsEndReached","_setSortBy","_setFilter","_setSearchValue","_isSelectAll","_setIsSelectAll","_loadOptions","__sortBy","__filter","__searchValue","preValue","option","_loadTmpOption","getPageNum","getSort","getSearchValue","requestOptions","onScroll","scrollTopMax","nativeEvent","scrollHeight","scrollTop","_onChangeSelectAll","optionsValues","getSelectAllCls","omittedValues","menu","id","TreeSelect","_treeData","_setTreeData","_optionConverter","dataObject","onCompletedUpload","onFailedUpload","toolTipProps","UploadFile","_dataObject","defaultUploadProps","onChangeSelectionCell","editMode","rowBordered","_setSelectedRowsHandler","setFilterHandler","onChangeObject","reloadTable","addRows","_addRows","addRow","_addRow","addRowAsCopy","_addRowAsCopy","editRow","_editRow","removeRow","_removeRow","moveUpRow","_moveUpRow","moveDownRow","_moveDownRow","_setSubscribeProps","_setLoadedRowsHandler","selectedObjects","selectedDispatch","onTableEventsDispatch","nameEvent","dp","appendParams","_rowSelectAfterClick","_getSelectionColumnProps","localSortBy","_localRows","_row","validations","cellBordered","ConfigLoader","tableConfig","setTableConfig","configParser","r","_defaultSorter","defaultSort","headerClassName","_defaultFilter","HeaderCell","onResize","restProps","maxWidth","HeaderRow","headerRowRef","setHeaderHeight","newHeight","clientHeight","BodyCell","cellComponent","_setColumns","rowSelection","expandable","_loadRows","_moveUpSelectedRow","moveUpRowByKey","_moveUpRowByKey","_moveDownSelectedRow","moveDownRowByKey","_moveDownRowByKey","onChangeTable","pagination","filters","sorter","extra","action","onSort","onHeaderRowProps","onRowEvents","onResizeHandler","nextColumns","onChangeSelectedHandler","onSelectAllHandler","changeRows","ExpandIcon","expandIconRender","onExpand","record","CaretUpOutlined","visibility","CaretDownOutlined","CaretRightOutlined","currentPageData","flex","getColumns","col","onHeaderCell","expandableProps","defaultExpandAllRows","expandIcon","rowSelectionProps","fixed","checkStrictly","y","cell","bordered","visibleIndex","expandIconColumnIndex","_expandColumnKey","widthCol","titleNode","ellipsis","defaultSortOrder","onCell","typeData","JSON","stringify","modalTypes","openModal","closeModal","onFinishHandler","onFinishFailedHandler","loadInitDataHandler","styles","borderBottom","inputUrl","flexBasis","borderRight","inputQuery","autoScroll","buttonStart","buttonStop","pre","overflow","marginBottom","scrollToBottom","block","maxScrollTop","Logs","ws","setWs","setLogs","logsRef","setLogsRef","url","loki","query","wsParams","setWsParams","setAutoScroll","onOpen","W3CWebSocket","onClose","onmessage","streams","parse","streamItem","valueItem","substr","state","onChangeApp","servers","margin","LineChart","configName","grid","legend","xAxis","yAxes","lines","setData","from","to","res","Tooltip","interval","yAxis","line","ReactGridLayout","WidthProvider","RGL","startGridWidth","contents","logs","lineChart","DashboardPanel","sizeMe","withSize","monitorHeight","Content","DashboardGrid","panels","renderPanels","gridPos","panel","Dashboard","dashboard","setDashboard","backgroundColor","rtdReducer","newState","set","debug","executeRequest"],"mappings":"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"}