{"version":3,"file":"index.es.js","sources":["../src/components/utils/baseUtils.js","../src/components/utils/variables.js","../src/components/Table/defaultSettings.js","../src/components/Table/Selectable/SelectionHead.js","../src/components/Table/Selectable/SelectionCell.js","../src/components/utils/datesUtils.js","../src/components/DateRange/DateRange.js","../src/components/SingleDate/SingleDate.js","../src/components/FilterPanel/FilterPanel.js","../src/components/Table/SelectionList/SelectionList.js","../src/redux/rtd.action.types.js","../src/redux/rtd.actions.js","../src/components/Table/Table.js","../src/components/Select/Select.js","../src/components/AdvancedTable/AdvancedTable.js","../src/components/Form/Form.js","../src/components/Form/FormModal.js","../src/components/Form/FormTable.js","../src/components/Form/HOCs.js","../src/components/FileManager/AddFolderModal.js","../src/components/utils/clipboardUtils.js","../src/components/FileManager/FileManager.js","../src/components/Modal/Modal.js","../src/components/Form/FormItem.js","../src/components/Layout/Layout.js","../src/components/Form/FormItems.js","../src/components/CommandPanel/CommandPanel.js","../src/components/List/List.js","../src/redux/rtd.reducer.js"],"sourcesContent":["import {notification} from 'antd';\n\nexport const noop = () => {};\n\nexport const flatten = (arrayOfArrays) =>\n\tarrayOfArrays.reduce(\n\t\t(flattened, item) =>\n\t\t\tflattened.concat(Array.isArray(item) ? flatten(item) : [item]),\n\t\t[]\n\t);\n\nexport const getTableRowObjects = (data) => {\n\tconst rowKeys = data.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item, getTableRowObjects(item.children)];\n\t\t}\n\t\treturn item;\n\t});\n\treturn rowKeys;\n};\n\nexport const getTableRowKeys = (data, rowKey) => {\n\tconst rowKeys = data.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item[rowKey], getTableRowKeys(item.children, rowKey)];\n\t\t}\n\t\treturn item[rowKey];\n\t});\n\treturn rowKeys;\n};\n\nexport const findNodeByRowKey = (data, rowKey, rowValue) => {\n\tlet node = {};\n\tlet item = {};\n\tfor (let i = 0; i < data.length; i++) {\n\t\titem = _findNodeByRowKey(data[i], rowKey, rowValue);\n\t\tif (item !== false) return item;\n\t}\n\treturn node;\n};\n\nconst _findNodeByRowKey = (currentNode, rowKey, value) => {\n\tlet i, currentChild, result;\n\n\tif (value === currentNode[rowKey]) {\n\t\treturn currentNode;\n\t} else {\n\t\tif (currentNode.children) {\n\t\t\tfor (i = 0; i < currentNode.children.length; i += 1) {\n\t\t\t\tcurrentChild = currentNode.children[i];\n\t\t\t\tresult = _findNodeByRowKey(currentChild, rowKey, value);\n\t\t\t\tif (result !== false) return result;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n};\n\nexport const generateUUID = () => {\n\treturn ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n\t\t(\n\t\t\tc ^\n\t\t\t(crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n\t\t).toString(16)\n\t);\n};\n\n\nexport const getValueFromSingleSelect = (name, keys) => (keys && keys.length > 0) ? keys[0] : null;\n\nexport const getValueFromMultiSelect = (name, keys) => (keys && keys.length > 0) ? keys : null;\n\nexport const getValueFromSelectTable = (rows) => {\n    if (rows && rows.length > 0) return rows[0];\n    else return null;\n};\n\nexport const getObjectExcludedProps = (object, exclude) => {\n    let returnObject = {};\n    Object.keys(object).forEach((key) =>\n        !exclude.includes(key) ? (returnObject[key] = object[key]) : null\n    );\n    return returnObject;\n};\n\nexport const notificationError = (error, message) => {\n\tif (error.response) {\n\t\tconsole.error(error.response.status, error.response.data);\n\t\tconst errorDescription = (error.response.data && error.response.data.error)\n\t\t\t? error.response.data.error\n\t\t\t: \"Нет описания ошибки\";\n\t\tnotification.error({\n\t\t\tmessage: `[${error.response.status}] ${message}`,\n\t\t\tdescription: errorDescription,\n\t\t});\n\t} else {\n\t\tconsole.error(error);\n\t\tnotification.error({\n\t\t\tmessage: 'Не удалось детектировать ошибку. См. console.error',\n\t\t});\n\t}\n};\n","export const rtPrefix = 'rt';\n","import {Spin} from 'antd';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport React from 'react';\n\nexport const empty = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<span>Нет данных</span>{' '}\n\t</div>\n);\n\nexport const overlay = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<Spin\n\t\t\ttip='Загрузка...'\n\t\t\tindicator={<LoadingOutlined style={{fontSize: 24}} spin />}\n\t\t/>{' '}\n\t</div>\n);\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport { flatten, getTableRowKeys, getTableRowObjects } from \"../../utils/baseUtils\";\n\nconst SelectionHead = (props) => {\n\tconst {column, container} = props;\n\tconst {rowKey, onSelectAll, selectedRowKeys, selectAll} = column;\n\n\tconst _handleChange = (e) => {\n\t\tconst rowKeys = flatten(getTableRowKeys(container.props.data, column.rowKey));\n\t\tconst rowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => rowKeys.includes(item[rowKey]));\n\t\tconst totalLength = rowKeys.length;\n\t\tconst selectLength = selectedRowKeys.length;\n\t\tconst checked = !(totalLength === selectLength);\n\n\t\t// const newRowKeys = container.props.data.map((item) => { return item[column.rowKey] });\n\t\tonSelectAll({selected: checked, rowKeys: rowKeys, rowObjects: rowObjects});\n\t};\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={selectAll === null}\n\t\t\tonChange={_handleChange}\n\t\t\tchecked={selectAll}\n\t\t/>\n\t);\n};\n\nexport default SelectionHead;\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport {\n\tflatten,\n\tgetTableRowKeys,\n\tfindNodeByRowKey, getTableRowObjects\n} from \"../../utils/baseUtils\";\n\nconst getRowChildren = (data, rowKey) =>\n\tdata.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item[rowKey], getRowChildren(item.children, rowKey)];\n\t\t}\n\t\treturn item[rowKey];\n\t});\n\nconst findBrothers = (data, selfItem, rowKey, parentKey, rowKeys = null) => {\n\tlet arr = [];\n\tdata.forEach((item) => {\n\t\tif (\n\t\t\titem[parentKey] &&\n\t\t\titem[parentKey] === selfItem[parentKey] &&\n\t\t\titem[rowKey] !== selfItem[rowKey]\n\t\t) {\n\t\t\tif (rowKeys !== null) {\n\t\t\t\tif (rowKeys.includes(item[rowKey])) {\n\t\t\t\t\tarr.push(item[rowKey]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tarr.push(item[rowKey]);\n\t\t\t}\n\t\t} else if (item.children && item.children.length) {\n\t\t\tarr.push(\n\t\t\t\tfindBrothers(\n\t\t\t\t\titem.children,\n\t\t\t\t\tselfItem,\n\t\t\t\t\trowKey,\n\t\t\t\t\tparentKey,\n\t\t\t\t\trowKeys\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\treturn arr;\n};\n\nexport const parentAnalysis = ({\n\trowData,\n\trowKey,\n\tparentKey,\n\tchecked,\n\tnodeAssociated,\n\ttreeData,\n\tselectedRowKeys,\n\tindeterminateRowKeys,\n}) => {\n\tlet _selectedRowKeys = [...selectedRowKeys];\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\tlet currentRowData = rowData;\n\tlet parentExist = !!currentRowData[parentKey];\n\tlet lastTypeSelect = checked ? 'checked' : 'square';\n\tlet typeSelect = '';\n\tlet nextSquare = false;\n\n\t/** Пока есть родитель */\n\twhile (parentExist && nodeAssociated) {\n\t\tconst indeterminateBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_indeterminateRowKeys\n\t\t\t)\n\t\t);\n\t\tconst selectedBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_selectedRowKeys\n\t\t\t)\n\t\t);\n\t\tconst allBrothers = flatten(\n\t\t\tfindBrothers(treeData, currentRowData, rowKey, parentKey)\n\t\t);\n\n\t\tif (checked) {\n\t\t\tif (\n\t\t\t\tlastTypeSelect === 'checked' &&\n\t\t\t\tselectedBrothers.length === allBrothers.length\n\t\t\t)\n\t\t\t\ttypeSelect = 'checked';\n\t\t\telse typeSelect = 'square';\n\t\t} else {\n\t\t\tif (\n\t\t\t\t!checked &&\n\t\t\t\t!nextSquare &&\n\t\t\t\t(selectedBrothers.length || indeterminateBrothers.length)\n\t\t\t)\n\t\t\t\tnextSquare = true;\n\t\t\tif (nextSquare) typeSelect = 'square';\n\t\t\telse typeSelect = 'none';\n\t\t}\n\n\t\t// console.log(\"allBrothers \", allBrothers);\n\t\t// console.log(\"findParentById \", treeData,\n\t\t//     rowKey,\n\t\t//     parentKey,\n\t\t//     currentRowData[parentKey]);\n\t\t//\n\t\t// console.log(\"findNodeByRowKey \", findNodeByRowKey(treeData, rowKey, currentRowData[parentKey]));\n\n\t\t// Найти родителя\n\t\tcurrentRowData = findNodeByRowKey(\n\t\t\ttreeData,\n\t\t\trowKey,\n\t\t\tcurrentRowData[parentKey]\n\t\t);\n\n\t\tif (typeSelect === 'checked') {\n\t\t\t// Выделить галкой\n\t\t\t// console.log(\"checked\");\n\t\t\tlastTypeSelect = 'checked';\n\t\t\tif (!_selectedRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_selectedRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _indeterminateRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _indeterminateRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'square') {\n\t\t\t// Выдлеить квадратом\n\t\t\t// console.log(\"square: \");\n\t\t\tlastTypeSelect = 'square';\n\t\t\tif (!_indeterminateRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_indeterminateRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _selectedRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'none') {\n\t\t\t// Снять выделение\n\t\t\t// console.log(\"none: \");\n\t\t\tlastTypeSelect = 'none';\n\t\t\tconst indexS = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (indexS > -1) _selectedRowKeys.splice(indexS, 1);\n\t\t\tconst indexI = _indeterminateRowKeys.indexOf(\n\t\t\t\tcurrentRowData[rowKey]\n\t\t\t);\n\t\t\tif (indexI > -1) _indeterminateRowKeys.splice(indexI, 1);\n\t\t}\n\n\t\tparentExist = !!currentRowData[parentKey];\n\t\t// parentExist = проверка наличия след родителя\n\t}\n\n\treturn [_selectedRowKeys, _indeterminateRowKeys];\n};\n\nconst SelectionCell = (props) => {\n\tconst _handleChange = (checked) => {\n\t\tconst {rowData, rowIndex, column, container} = props;\n\t\tconst {\n\t\t\tonChange,\n\t\t\tselectedRowKeys,\n\t\t\tindeterminateRowKeys,\n\t\t\trowKey,\n\t\t\tparentKey,\n\t\t\tnodeAssociated,\n\t\t} = column;\n\n\t\t// const rowKeys = flatten(getTableRowKeys([rowData], column.rowKey));\n\t\t// const totalLength = container.props.data.length;\n\t\t// const checked = e.target.checked;\n\t\t// const currentRowKey = {[rowKey]: rowData[rowKey], checked};\n\t\t// console.log(\"_handleChange: \", selectedRowKeys);\n\n\t\tlet _selectedRowKeys = [...selectedRowKeys];\n\t\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\t\t/** Обработка себя, поиск детей, выделение / снятие их */\n\t\tlet rowChildren = [];\n\t\tif (checked) {\n\t\t\tif (rowData.children && nodeAssociated)\n\t\t\t\trowChildren = flatten(getRowChildren(rowData.children, rowKey));\n\n\t\t\t_selectedRowKeys = _selectedRowKeys\n\t\t\t\t.concat([rowData[rowKey]])\n\t\t\t\t.concat(rowChildren);\n\t\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t} else {\n\t\t\tif (rowData.children && nodeAssociated)\n\t\t\t\trowChildren = flatten(\n\t\t\t\t\tgetRowChildren(rowData.children, rowKey, false)\n\t\t\t\t);\n\n\t\t\t_selectedRowKeys = _selectedRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t}\n\n\t\t[_selectedRowKeys, _indeterminateRowKeys] = parentAnalysis({\n\t\t\trowData,\n\t\t\trowKey,\n\t\t\tparentKey,\n\t\t\tchecked,\n\t\t\tnodeAssociated,\n\t\t\ttreeData: container.props.data,\n\t\t\tselectedRowKeys: _selectedRowKeys,\n\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t});\n\n\t\tconst keys = [...new Set(_selectedRowKeys)];\n\t\tconst _selectedRowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => keys.includes(item[rowKey]));\n\t\t//return [...new Set(_disabledElements)]\n\t\t// onChange({ selected: checked, totalLength, rowData, rowIndex });\n\n\t\t/** Выясняем новое состояние галочки \"Выделить все\" */\n\t\tlet selectAll;\n\t\tconst selectLength = _selectedRowKeys.length;\n\t\tconst totalLength = flatten(\n\t\t\tgetTableRowKeys(container.props.data, column.rowKey)\n\t\t).length;\n\n\t\tif (selectLength === 0) selectAll = false;\n\t\telse if (totalLength === selectLength) selectAll = true;\n\t\telse if (totalLength !== selectLength) selectAll = null;\n\n\n\n\t\tonChange({\n\t\t\tselected: checked,\n\t\t\t_selectedRow: {\n\t\t\t\trowData: {...rowData},\n\t\t\t\trowIndex: rowIndex,\n\t\t\t\trowKey: rowKey,\n\t\t\t},\n\t\t\t_selectAll: selectAll,\n\t\t\t_selectedRowKeys: keys, //[...new Set(_selectedRowKeys)],\n\t\t\t_selectedRowObjects: _selectedRowObjects,\n\t\t\t_indeterminateRowKeys: [...new Set(_indeterminateRowKeys)],\n\t\t});\n\n\t\t// let uniqIds = {};\n\t\t// onChange({selected: checked, rowKeys: rowKeys.filter(obj => !uniqIds[obj[rowKey]] && (uniqIds[obj[rowKey]] = true)) });\n\t};\n\n\tconst {rowData, column} = props;\n\tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\n\tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\n\tconst checked = selectedRowKeys.includes(rowData[rowKey]);\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={det}\n\t\t\tonChange={(e) => _handleChange(e.target.checked)}\n\t\t\tchecked={checked}\n\t\t/>\n\t);\n};\n\nexport default SelectionCell;\n","import moment from 'moment';\n\nexport const APP_TIME_OFFSET = 3;\n\nexport const getMomentFromStringByFormat = (date, format) =>\n\tdate ? moment(date, format).utcOffset(APP_TIME_OFFSET) : null;\n\n// export const getMomentWithOffset = (date) =>\n// \tmoment(date).utcOffset(APP_TIME_OFFSET);\nexport const getMomentWithOffset = (date) => moment(date).format();\n\nexport const getMomentWithOffsetTruncateDay = (date) =>\n\tgetMomentWithOffset(date)\n\t\t.hours(0)\n\t\t.minutes(0)\n\t\t.seconds(0)\n\t\t.milliseconds(0)\n\t\t.format();\n\n\nexport const toFormat = (dateString, format) => {\n\tif (!dateString) {\n\t\treturn '';\n\t}\n\tconst mom = moment(dateString);\n\treturn mom.isValid() ? mom.format(format) : dateString;\n};\n\nexport const toDDMMYYYYdot = (dateString) => toFormat(dateString, 'DD.MM.YYYY');\n\nexport const toDDMMYYYYdotAltDashDash = (dateString) =>\n\ttoDDMMYYYYdot(dateString) || '--';\n\nexport const toDDMMYYYYHHMMSS = (dateString) =>\n\ttoFormat(dateString, 'DD.MM.YYYY HH:mm:ss') || '--';\n\nexport const toDDMMYYYYdash = (dateString) =>\n\ttoFormat(dateString, 'DD-MM-YYYY');\n\nexport const getISO = (date) =>\n\tmoment(date).utcOffset(APP_TIME_OFFSET).toISOString();\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport {DatePicker} from 'antd';\nimport locale from 'antd/es/date-picker/locale/ru_RU';\nimport {noop} from '../utils/baseUtils';\nimport {rtPrefix} from '../utils/variables';\nimport {\n\tgetMomentWithOffset,\n\tgetMomentWithOffsetTruncateDay,\n\tgetMomentFromStringByFormat,\n} from '../utils/datesUtils';\n\nconst DateRange = (props) => {\n\t/** Состояние первоначалной настройки компонента */\n\tconst [mounted, setMounted] = useState(false);\n\tconst [startValue, setStartValue] = useState(undefined);\n\tconst [endValue, setEndValue] = useState(undefined);\n\n\tconst {\n        className,\n\t\tnameStart,\n\t\tnameEnd,\n\t\tdateFormat,\n\t\tonChange,\n        size,\n\t\ttitle,\n\t\tvalueStart,\n\t\tvalueEnd,\n\t\tshowTime,\n\t} = props;\n\n\tuseEffect(() => {\n\t\tif (!mounted) {\n\t\t\tif (props.defaultValueStart) {\n                // console.log(\"DateRange mounted :\", nameStart, props.defaultValueStart);\n                _onChange(\n\t\t\t\t\tnameStart,\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueStart,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tsetStartValue(\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueStart,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (props.defaultValueEnd) {\n\t\t\t\t_onChange(\n\t\t\t\t\tnameEnd,\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueEnd,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tsetEndValue(\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueEnd,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tsetMounted(true);\n\t\t}\n\t}, [mounted]);\n\n\tuseEffect(() => {\n\t\tif (valueStart) {\n\t\t\tsetStartValue(moment(valueStart));\n\t\t\t// console.log('useEffect -> valueStart', valueStart);\n\t\t} else if (!props.defaultValueStart) setStartValue(null);\n\t}, [valueStart]);\n\tuseEffect(() => {\n\t\tif (valueEnd) {\n\t\t\tsetEndValue(moment(valueEnd));\n\t\t\t// console.log('useEffect -> valueEnd', valueEnd);\n\t\t} else if (!props.defaultValueEnd) setEndValue(null);\n\t}, [valueEnd]);\n\n\tconst disabledStartDate = (startValue) => {\n\t\tif (!startValue || !endValue) {\n\t\t\treturn false;\n\t\t}\n\t\treturn startValue.valueOf() > endValue.valueOf();\n\t};\n\n\tconst disabledEndDate = (endValue) => {\n\t\tif (!endValue || !startValue) {\n\t\t\treturn false;\n\t\t}\n\t\treturn endValue.valueOf() <= startValue.valueOf();\n\t};\n\n\tconst onStartChange = (date) => {\n\t\tsetStartValue(date);\n\t\t_onChange(nameStart, date);\n\t};\n\n\tconst onEndChange = (date) => {\n\t\tsetEndValue(date);\n\t\t_onChange(nameEnd, date);\n\t};\n\n\tconst _onChange = (name, value) => {\n\t\tif (value)\n\t\t\tif(showTime)\n\t\t\t\tonChange(name, getMomentWithOffset(value));\n\t\t\telse\n\t\t\t\tonChange(name, getMomentWithOffsetTruncateDay(value));\n\n\t\telse onChange(name, value);\n\t};\n\n\treturn (\n\t\t<div className={`${className} ${rtPrefix}-date-range`}>\n\t\t\t<div>\n                {title ? <div className={'title'}>{title}</div> : null}\n\t\t\t\t<span className={'subtitleStart'}>c</span>\n\t\t\t\t<DatePicker\n\t\t\t\t\tlocale={locale}\n\t\t\t\t\t// defaultValue={ checkDefValue(props.defaultValueStart) }\n\t\t\t\t\tsize={size}\n\t\t\t\t\tstyle={{width: !!showTime ? '160px' : '135px'}}\n\t\t\t\t\tdisabledDate={disabledStartDate}\n\t\t\t\t\tonChange={onStartChange}\n\t\t\t\t\tformat={dateFormat}\n\t\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\t\tvalue={startValue}\n\t\t\t\t\tshowTime={showTime}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span className={'subtitleEnd'}>по</span>\n\t\t\t\t<DatePicker\n\t\t\t\t\tlocale={locale}\n\t\t\t\t\t// defaultValue={ checkDefValue(props.defaultValueEnd) }\n\t\t\t\t\tsize={size}\n\t\t\t\t\tstyle={{width: showTime ? '160px' : '135px'}}\n\t\t\t\t\tdisabledDate={disabledEndDate}\n\t\t\t\t\tonChange={onEndChange}\n\t\t\t\t\tformat={dateFormat}\n\t\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\t\tvalue={endValue}\n\t\t\t\t\tshowTime={showTime}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nDateRange.propTypes = {\n\t/** Формат отображения даты (не влияет на формат в onChange) */\n\tdateFormat: PropTypes.string,\n\n\t/** Значение по умолчанию для первого пикера */\n\t// defaultValueStart: PropTypes.string,\n\n\t/** Значение по умолчанию для второго пикера */\n\t// defaultValueEnd: PropTypes.string,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Наименование параметра для первого пикера */\n\tnameStart: PropTypes.string,\n\n\t/** Наименование параметра для второго пикера */\n\tnameEnd: PropTypes.string,\n\n\t/** Событие при изменении любого из пикеров */\n\tonChange: PropTypes.func,\n\n    /** Размер пикера ['small', 'middle', 'large'] */\n    size: PropTypes.oneOf(['small', 'middle', 'large']),\n\n\t/** Заголовок */\n\ttitle: PropTypes.string,\n\n\t/** Значение даты первого пикера (используется для управления датой из родительного компонента) */\n\t// valueStart: PropTypes.string,\n\n\t/** Значение даты второго пикера (используется для управления датой из родительного компонента) */\n\t// valueEnd: PropTypes.string,\n};\n\nDateRange.defaultProps = {\n    className: '',\n\tnameStart: 'dateStart',\n\tnameEnd: 'dateEnd',\n\tdateFormat: 'DD.MM.YYYY',\n\tonChange: noop,\n    size: 'middle',\n    // title: 'Период',\n};\n\nexport default DateRange;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {DatePicker} from 'antd';\nimport moment from 'moment';\nimport {noop} from '../utils/baseUtils';\nimport {\n\tgetMomentFromStringByFormat,\n\tgetMomentWithOffsetTruncateDay,\n} from '../utils/datesUtils';\n\nconst SingleDate = (props) => {\n\t/** Состояние первоначалной настройки компонента */\n\tconst [mounted, setMounted] = useState(false);\n\tconst [_value, setValue] = useState(null);\n\n\tconst {dateFormat, defaultValue, name, onChange, title, value, className} = props;\n\n\tuseEffect(() => {\n\t\tif (!mounted) {\n\t\t\t// console.log(\"DateRange mounted :\", nameFrom, props.defaultValueFrom);\n\t\t\tif (defaultValue) {\n\t\t\t\t_onChange(\n\t\t\t\t\tname,\n\t\t\t\t\tgetMomentFromStringByFormat(defaultValue, dateFormat)\n\t\t\t\t);\n\t\t\t\tsetValue(getMomentFromStringByFormat(defaultValue, dateFormat));\n\t\t\t}\n\t\t\tsetMounted(true);\n\t\t}\n\t}, [mounted]);\n\n\tuseEffect(() => {\n\t\tif (value) {\n\t\t\tsetValue(moment(value));\n\t\t} else if (!defaultValue) setValue(null);\n\t}, [value]);\n\n\tconst _onChangePicker = (date) => {\n\t\tsetValue(date);\n\t\t_onChange(name, date);\n\t};\n\n\tconst _onChange = (name, value) => {\n\t\tif (value) onChange(name, getMomentWithOffsetTruncateDay(value));\n\t\telse onChange(name, value);\n\t};\n\n\treturn (\n\t\t<div className={`single-date-container ${className}`}>\n\t\t\t<div className={'title'}>{title}</div>\n\t\t\t<DatePicker\n\t\t\t\tsize={'small'}\n\t\t\t\tstyle={{width: '135px'}}\n\t\t\t\tonChange={_onChangePicker}\n\t\t\t\tformat={dateFormat}\n\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\tvalue={_value}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nSingleDate.propTypes = {\n\t/** Формат отображения даты (не влияет на формат в onChange) */\n\tdateFormat: PropTypes.string,\n\n\t/** Значение по умолчанию */\n\tdefaultValue: PropTypes.string,\n\n\t/** Наименование параметра */\n\tname: PropTypes.string,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Событие при изменении пикера */\n\tonChange: PropTypes.func,\n\n\t/** Заголовок */\n\ttitle: PropTypes.string,\n\n\t/** Значение даты */\n\tvalue: PropTypes.string,\n};\n\nSingleDate.defaultProps = {\n\tname: 'date',\n\tdateFormat: 'DD.MM.YYYY',\n\tonChange: noop,\n\ttitle: 'Дата',\n};\n\nexport default SingleDate;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Tooltip } from \"antd\";\nimport { noop } from \"../utils/baseUtils\";\nimport DateRange from \"../DateRange/DateRange\";\nimport SingleDate from \"../SingleDate/SingleDate\";\nimport Select from \"../Select/Select\";\nimport { rtPrefix } from \"../utils/variables\";\n\nconst FilterPanel = (props) => {\n  /**\n   * Период с, по (день / месяц / год)\n   * Множественный выбор (дерево с галочками с поиском) (ajax / const)\n   * Множественный выбор (список с поиском) (ajax / const)\n   * Единственный выбор (список с поиском) (ajax / const)\n   */\n\n  const [filter, setFilter] = useState(props.defaultFilter);\n  // const [multiSelectObjects, setMultiSelectObjects] = useState([]);\n\n  const {\n    applyFilterTooltip,\n    applyFilterSize,\n    applyFilterRender,\n    borderStyle,\n    onChangeFilter,\n    onApplyFilter,\n    configFilter,\n    resetFilterRender,\n    resetFilterTooltip,\n    resetFilterSize\n  } = props;\n\n  useEffect(() => {\n    setFilter(props.defaultFilter);\n  }, []);\n\n  const _onChangeData = (name, value) => {\n    // console.log(\"FilterPanel -> onChangeData\", name, value);\n    let _filter = { ...filter };\n    if (value === null) {\n      delete _filter[name];\n    } else {\n      _filter = { ..._filter, ...{ [name]: value } };\n    }\n    // console.log(\"onChangeData:\", _filter);\n    setFilter(_filter);\n    onChangeFilter(_filter);\n  };\n\n  const _applyFilter = () => {\n    // console.log(\"_applyFilter:\", filter);\n    onApplyFilter(filter);\n  };\n  const _resetFilter = () => {\n    // console.log(\"_resetFilter:\", props.defaultFilter);\n    setFilter(props.defaultFilter);\n    onChangeFilter(props.defaultFilter);\n    onApplyFilter(props.defaultFilter);\n    // setMultiSelectObjects([]);\n  };\n\n  // const _onChangeObjects = (name, value) => {\n  // \tlet _multiSelectObjects = {...multiSelectObjects};\n  // \tif (value === null) {\n  // \t\tdelete _multiSelectObjects[name];\n  // \t} else {\n  // \t\t_multiSelectObjects = {..._multiSelectObjects, ...{[name]: value}};\n  // \t}\n  // \t// console.log(\"onChangeData:\", _filter);\n  // \tsetMultiSelectObjects(_multiSelectObjects);\n  // };\n  const getPanelCls = () => {\n    let cls = [`${rtPrefix}-filter-panel`];\n    cls.push(`border-${borderStyle}`);\n    if (configFilter.findIndex((item) => !!item.title) === -1)\n      cls.push(`${rtPrefix}-filter-panel-no-title`);\n    return cls.join(\" \");\n  };\n\n  return (\n    <React.Fragment>\n      {configFilter && configFilter.length ? (\n        <div className={getPanelCls()}>\n          {configFilter.map((item, index) => {\n            // console.log(\"item.defaultRows\", item.defaultRows);\n            let cls = [`${rtPrefix}-filter-panel-item`];\n            item.className && cls.push(item.className);\n            switch (item.componentType) {\n              case \"DateRange\":\n                return (\n                  <DateRange\n                    key={index}\n                    {...item}\n                    className={cls.join(\" \")}\n                    defaultValueStart={\n                      filter[item.nameStart]\n                        ? filter[item.nameStart]\n                        : null\n                    }\n                    defaultValueEnd={\n                      filter[item.nameEnd]\n                        ? filter[item.nameEnd]\n                        : null\n                    }\n                    onChange={_onChangeData}\n                    valueStart={filter[item.nameStart]}\n                    valueEnd={filter[item.nameEnd]}\n                  />\n                );\n              case \"SingleDate\":\n                return (\n                  <SingleDate\n                    key={index}\n                    {...item}\n                    className={cls.join(\" \")}\n                    dateFormat={\n                      item.dateFormat\n                        ? item.dateFormat\n                        : undefined\n                    }\n                    defaultValue={\n                      filter[item.name]\n                        ? filter[item.name]\n                        : null\n                    }\n                    onChange={_onChangeData}\n                    value={filter[item.name]}\n                  />\n                );\n              case \"MultiSelect\":\n              case \"SingleSelect\":\n                return (\n                  <Select\n                    key={index}\n                    {...item}\n                    type={item.componentType}\n                    defaultSelectedRowKeys={\n                      filter[item.name]\n                        ? filter[item.name]\n                        : null\n                    }\n                    selectedRowKeys={filter[item.name] ? filter[item.name] : []}\n                    className={cls.join(\" \")}\n                    onChangeKeys={_onChangeData}\n                    defaultValue={\n                      filter[item.name]\n                        ? filter[item.name]\n                        : null\n                    }\n                    value={filter[item.name]}\n                  />\n                );\n              case \"Custom\":\n                return (\n                  <React.Fragment key={index}>\n                    {\n                      item.render({\n                        onChange: _onChangeData,\n                        defaultValue: filter[item.name]\n                          ? filter[item.name]\n                          : null,\n                        value: filter[item.name]\n                      })\n                    }\n                  </React.Fragment>);\n              default:\n                return null;\n            }\n          })}\n          <Tooltip title={applyFilterTooltip}>\n            <Button\n              type='primary'\n              size={applyFilterSize}\n              style={{ marginLeft: \"auto\" }}\n              onClick={_applyFilter}\n            >\n              {applyFilterRender}\n            </Button>\n          </Tooltip>\n          <Tooltip title={resetFilterTooltip}>\n            <Button\n              size={resetFilterSize}\n              style={{ marginLeft: \"10px\" }}\n              onClick={_resetFilter}\n            >\n              {resetFilterRender}\n            </Button>\n          </Tooltip>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\nFilterPanel.propTypes = {\n\n  /** Тест Tooltip для кнопки \"Применить фильтр\" */\n  applyFilterTooltip: PropTypes.string,\n\n  /** Размер кнопки \"Применить фильтр\" ['small', 'middle', 'large'] */\n  applyFilterSize: PropTypes.oneOf([\"small\", \"middle\", \"large\"]),\n\n  /** Строка / функция / элемент для отображения в кнопке \"Применить фильтр\" */\n  applyFilterRender: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.string\n  ]),\n\n  /** Тип бордера панели (по умолчанию 'none')\n   * ['all', 'none', 'top', 'left', 'bottom', 'right', 'top-bottom', 'left-right'] */\n  borderStyle: PropTypes.oneOf([\n    \"all\",\n    \"none\",\n    \"top\",\n    \"left\",\n    \"bottom\",\n    \"right\",\n    \"top-bottom\",\n    \"left-right\"\n  ]),\n\n  /** Объект фильтра по умолчанию */\n  defaultFilter: PropTypes.object,\n\n  /** Конфигурация панели фильтров */\n  configFilter: PropTypes.arrayOf(PropTypes.object),\n\n  /** Событие по кнопке выполнить фильтр */\n  onApplyFilter: PropTypes.func,\n\n  /** Событие по изменение объекта фильтра */\n  onChangeFilter: PropTypes.func,\n\n  /** Тест Tooltip для кнопки \"Сбросить фильтр\" */\n  resetFilterTooltip: PropTypes.string,\n\n  /** Размер кнопки \"Сбросить фильтр\" ['small', 'middle', 'large'] */\n  resetFilterSize: PropTypes.oneOf([\"small\", \"middle\", \"large\"]),\n\n  /** Строка / функция / элемент для отображения в кнопке \"Сбросить фильтр\" */\n  resetFilterRender: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.string\n  ])\n};\n\nFilterPanel.defaultProps = {\n  applyFilterTooltip: \"Применить фильтр\",\n  applyFilterSize: \"middle\",\n  applyFilterRender: \"Применить\",\n  borderStyle: \"none\",\n  defaultFilter: {},\n  configFilter: [],\n  onApplyFilter: noop,\n  onChangeFilter: noop,\n  resetFilterTooltip: \"Сбросить фильтр\",\n  resetFilterSize: \"middle\",\n  resetFilterRender: \"Сбросить\"\n};\n\nexport default FilterPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {CloseCircleOutlined} from '@ant-design/icons';\nimport {rtPrefix} from '../../utils/variables';\n\nconst SelectionList = (props) => {\n\tconst {selectedRowObjects, rowRender, onClickDropSelect} = props;\n\n\t// console.log(\"SelectionList typeof -> \", typeof(rowRender));\n\treturn (\n\t\t<div className={`${rtPrefix}-table-selected-rows`}>\n\t\t\t{selectedRowObjects && selectedRowObjects.length > 0 ? (\n\t\t\t\t<ul>\n\t\t\t\t\t{selectedRowObjects.map((item, index) => (\n\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t{/*{(typeof(rowRender) === 'string') ? <div>{item[rowRender]}</div> : rowRender }*/}\n\t\t\t\t\t\t\t{typeof rowRender === 'function' ? (\n\t\t\t\t\t\t\t\trowRender({rowData: item, rowIndex: index})\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>{item[rowRender]}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<div onClick={() => onClickDropSelect(item)}>\n\t\t\t\t\t\t\t\t<CloseCircleOutlined />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t) : (\n\t\t\t\t<div>Нет выбранных записей</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nSelectionList.propTypes = {\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { rowData, rowIndex }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n\t/** Список выделенных объектов */\n\tselectedRowObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Событие удаления элемента */\n\tonClickDropSelect: PropTypes.func.isRequired,\n};\n\nSelectionList.defaultProps = {};\n\nexport default SelectionList;\n","const types =\n{\n    INIT_STORE: 'INIT_STORE',\n    SET_DATA_STORE: 'SET_DATA_STORE',\n};\n\nexport {types as actionTypes};\n","import {actionTypes} from './rtd.action.types';\n\nexport const initStore = (path) => ({\n    type: actionTypes.INIT_STORE,\n    payload: {path}\n});\n\nexport const setDateStore = (path, row) => ({\n    type: actionTypes.SET_DATA_STORE,\n    payload: {path, row}\n});\n","import React, {useRef, forwardRef, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {notification} from 'antd';\nimport SortOrder from 'react-base-table/lib/SortOrder';\nimport BaseTable, {AutoResizer, callOrReturn, Column} from 'react-base-table';\nimport {empty, overlay} from './defaultSettings';\nimport SelectionHead from '../Table/Selectable/SelectionHead';\nimport SelectionCell, {parentAnalysis} from '../Table/Selectable/SelectionCell';\nimport CommandPanel from '../CommandPanel/CommandPanel';\nimport FilterPanel from '../FilterPanel/FilterPanel';\nimport SelectionList from '../Table/SelectionList/SelectionList';\nimport {rtPrefix} from '../utils/variables';\nimport {\n\tflatten,\n\tgenerateUUID,\n\tgetTableRowKeys,\n\tfindNodeByRowKey,\n\tnoop,\n\tgetTableRowObjects, notificationError\n} from \"../utils/baseUtils\";\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../redux/rtd.actions\";\nimport FormItems from \"../Form/FormItems\";\n\n\n\nconst Table = forwardRef((props, ref) => {\n\t/** Состояние первоначалной настройки компонента*/\n\tconst [mounted, setMounted] = useState(false);\n\t/** Наличие на сервере еще данных */\n\tconst [hasMore, setHasMore] = useState(true);\n\t/** Индикатор загрузки данных */\n\tconst [loading, setLoading] = useState(false);\n\n\t/** Indoor control */\n\tconst [_rows, _setRows] = useState([]);\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n\tconst [_searchValue, setSearchValue] = useState({});\n\tconst [_filter, setFilter] = useState(false);\n\tconst [_sortBy, setSortBy] = useState(false);\n\n\t/** Selectable States */\n\tconst [selectAll, setSelectAll] = useState(false);\n\n\t/** Tree States */\n\tconst [_indeterminateRowKeys, setIndeterminateRowKeys] = useState([]);\n    const [_expandedRowKeys, setExpandedRowKeys] = useState([]);\n\n    const [_totalCountRows, setTotalCountRows] = useState(0);\n\n    const [_footerShow, _setFooterShow] = useState(false);\n\n    const tableRef = useRef();\n\n\tconst {\n\t\t/** Def values */\n\t\tdefaultRows,\n\t\tdefaultSelectedRowKeys,\n\t\tdefaultSearchValue,\n\t\tdefaultFilter,\n\t\tdefaultSortBy,\n\n\t\t/** Outdoor control */\n\t\trows,\n\t\tsetRows,\n\t\tselectedRowKeys,\n\t\tsearchValue,\n\t\tfilter,\n\t\tsortBy,\n\n\t\t/** Required */\n\t\tcolumns,\n\t\ttype,\n\n\t\t/** Base Props */\n\t\tautoDeleteRows,\n\t\trowKey,\n\n\t\t/** View Props */\n\t\tempty,\n\t\tfixWidthColumn,\n\t\tfooterHeight,\n\t\tfooterShow,\n        footerTitles,\n\t\t// footerProps,\n\t\theaderHeight,\n\t\trowHeight,\n\t\tzebraStyle,\n\t\trowRenderer,\n\t\testimatedRowHeight,\n\n\t\t/** Load Data Props */\n\t\tloadThreshold,\n\t\tpageSize,\n\t\trequestLoadRows,\n        requestLoadCount,\n\t\tsearchParamName,\n\n\t\t/** Selectable Props */\n\t\tselectable,\n\n\t\t/** Tree Props */\n\t\tnodeAssociated,\n\t\texpandColumnKey,\n\t\texpandParentKey,\n\t\texpandLazyLoad,\n\t\texpandDefaultAll,\n\n\t\t/** Events */\n\t\tonRowClick,\n\t\tonRowDoubleClick,\n\t\tonRowExpand,\n\t\tonSelectedRowsChange,\n\t\tonExpandedRowsChange,\n\n\t\t/** SELECTED PANEL */\n\t\tshowSelection,\n\t\trowRenderShowSelection,\n\n\t\t/** REDUX PROPS */\n\t\tdispatchPath,\n\t\tsubscribe,\n\t} = props;\n\n\t// console.log('props.commandPanelProps => ', props.commandPanelProps);\n\tconst commandPanelProps = {\n\t\t...CommandPanel.defaultProps,\n\t\t...props.commandPanelProps,\n\t};\n\tconst filterPanelProps = {\n\t\t...FilterPanel.defaultProps,\n\t\t...props.filterPanelProps,\n\t};\n\n\tconst footerProps = {\n\t\t...Table.defaultProps.footerProps,\n\t\t...props.footerProps,\n\t};\n\n\tconst selectedDispatchPath = dispatchPath && `${dispatchPath}.selected`;\n\tconst rowsDispatchPath = dispatchPath && `${dispatchPath}.rows`;\n\n\n\tuseEffect(() => {\n        // console.log(\"Инициализация дефолтных значений \");\n        // console.log(\"Инициализация дефолтных значений defaultSelectedRowKeys > \", defaultSelectedRowKeys);\n\n\t\t// Инициализация дефолтных значений\n\t\t// _setRows(defaultRows);\n\t\t_setRowsHandler(defaultRows);\n\t\tsetSelectedRowKeys(defaultSelectedRowKeys);\n\t\tsetSearchValue(defaultSearchValue);\n\t\tsetFilter(defaultFilter);\n\t\tsetSortBy(defaultSortBy);\n\t\tsetSelectAll(\n\t\t\tdefaultRows.length > 0 &&\n\t\t\t\tdefaultRows.length === defaultSelectedRowKeys.length\n\t\t);\n\t\t// Определение нужно ли отображать подвал\n\t\t_setFooterShow(\n\t\t\t(footerProps.showElements.length ||\n\t\t\tfooterProps.leftCustomSideElement ||\n\t\t\tfooterProps.centerCustomSideElement ||\n\t\t\tfooterProps.rightCustomSideElement));\n\n\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t// Открытие всех нод\n\t\t\tif (expandDefaultAll)\n\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\tflatten(getTableRowKeys(defaultRows, rowKey))\n\t\t\t\t);\n\t\t\t// Установка квадратиков на нужных нодах\n\t\t\tif (defaultSelectedRowKeys && defaultSelectedRowKeys.length > 0) {\n\t\t\t\tlet flatRows = flatten(getTableRowKeys(defaultRows, rowKey));\n\t\t\t\tlet selectedRow = flatRows.filter((item) =>\n\t\t\t\t\tdefaultSelectedRowKeys.includes(item[rowKey])\n\t\t\t\t);\n\t\t\t\tlet _indeterminateRowKeys = [];\n\t\t\t\tselectedRow.forEach((item) => {\n\t\t\t\t\tconst [ss, ii] = parentAnalysis({\n\t\t\t\t\t\trowData: item,\n\t\t\t\t\t\trowKey,\n\t\t\t\t\t\tparentKey: expandParentKey,\n\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t\tnodeAssociated,\n\t\t\t\t\t\ttreeData: defaultRows,\n\t\t\t\t\t\tselectedRowKeys: defaultSelectedRowKeys,\n\t\t\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t\t\t\t});\n\t\t\t\t\t_indeterminateRowKeys.push(...ii);\n\t\t\t\t});\n\t\t\t\tsetIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\n\t\t\t}\n\t\t}\n\n\t\tif (type !== 'localSide') {\n\t\t\t_dataProcessing({\n\t\t\t\tsortBy: defaultSortBy,\n\t\t\t\tfilter: defaultFilter,\n\t\t\t\tsearchLine: defaultSearchValue,\n\t\t\t\treload: true,\n\t\t\t});\n\t\t}\n\t\t// console.log(\"Table => props \", props);\n\t\tsetMounted(true);\n\t\tif (ref && typeof ref === 'function') ref({reloadData});\n\t\telse if (ref && typeof ref === 'object') ref.current = {reloadData};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (type === 'localSide') {\n\t\t\t// console.log(\"Control useEffect => \", rows, selectedRowKeys, searchValue, filter, sortBy);\n\t\t\t// _setRows(rows);\n\t\t\t_setRowsHandler(rows);\n\t\t\tsetSelectedRowKeys(selectedRowKeys);\n\t\t\tsetSearchValue(searchValue);\n\t\t\tsetFilter(filter);\n\t\t\tsetSortBy(sortBy);\n\t\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t\t// Открытие всех нод\n\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\tsetExpandedRowKeys(flatten(getTableRowKeys(rows, rowKey)));\n\t\t\t}\n\t\t}\n    }, [rows, selectedRowKeys, searchValue, filter, sortBy]);\n\n\t/** Подписка на изменение props[subscribe.name] в сторе */\n\tuseEffect( () => {\n\t\tif(subscribe.name) {\n\t\t\t// console.log(\"Table => useEffect => subscribe.value \", props[subscribe.name]);\n\t\t\tsubscribe.onChange && subscribe.onChange({value: props[subscribe.name], setReloadTable: reloadData});\n\t\t}\n\t}, [props[subscribe.name]]);\n\n\n\t/** BASE FUNCTIONS */\n\tconst _setRowsHandler = (rows) => {\n\t\t_setRows(rows);\n\t\trowsDispatch(rows);\n\t};\n\tconst setRowsHandler = (rows) => {\n\t\tsetRows(rows);\n\t\trowsDispatch(rows);\n\t};\n\tconst rowsDispatch = (rows) => {\n\t\trowsDispatchPath && props.setDateStore && props.setDateStore(rowsDispatchPath, rows);\n\t};\n\n\tconst reloadData = ({sortBy, filter, searchValue}) => {\n\t\t// console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\n        if(props.value && props.value.length > 0)\n            setSelectedRowKeys(props.value.map(item => item[rowKey]));\n        else\n            setSelectedRowKeys([]);\n\t\t// setSelectedRowKeys([]);\n\t\tif(sortBy) setSortBy(sortBy);\n\t\tif(filter) setFilter(filter);\n\t\tif(searchValue) setSearchValue(searchValue);\n\t\t_dataProcessing({\n\t\t\tsortBy: sortBy ? sortBy : _sortBy,\n\t\t\tfilter: filter ? filter : _filter,\n\t\t\tsearchLine: searchValue ? searchValue : _searchValue,\n\t\t\treload: true,\n\t\t});\n        // console.log(\"reloadData loading \", loading);\n    };\n\n\tconst _dataProcessing = (params) => {\n\t\t// console.log('_dataProcessing', params);\n\t\tconst {sortBy, filter, searchLine, expandRow, reload} = params;\n\t\tswitch (type) {\n\t\t\tcase 'infinity':\n\t\t\tcase 'serverSide':\n\t\t\t\tif ((hasMore || reload) && !loading) {\n\t\t\t\t\tsetLoading(true);\n\t\t\t\t\tconst pageNum = reload\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: Math.floor(_rows.length / pageSize);\n\t\t\t\t\tconst params = {\n\t\t\t\t\t\tpage: pageNum,\n\t\t\t\t\t\tsize: pageSize,\n\t\t\t\t\t\tsort:\n\t\t\t\t\t\t\tsortBy && sortBy.key\n\t\t\t\t\t\t\t\t? sortBy.key + ',' + sortBy.order\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t};\n\t\t\t\t\tconst dataQuery = {\n                        ...filter,\n                        ...(searchLine\n                            ? {[searchParamName]: searchLine}\n                            : null),\n                    };\n\t\t\t\t\t// console.log('dataQuery', dataQuery);\n\n                    if(type === 'infinity' && reload && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad) {\n                        requestLoadCount({\n                            params,\n                            data: dataQuery,\n                        })\n                            .then((response) => {\n                                // console.log(\"infinity then response\", response);\n                                // const result = response.data;\n                                setTotalCountRows(response.data);\n                            })\n\t\t\t\t\t\t\t.catch(error =>\n\t\t\t\t\t\t\t\tnotificationError(error, 'Ошибка получения количества записей по фильтру') );\n                    }\n\n                    // console.log('requestLoadRows => ', typeof requestLoadRows);\n                    // if(typeof requestLoadRows !== 'function'){\n                    //     setLoading(false);\n                    // }\n                    requestLoadRows({\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tdata: dataQuery,\n\t\t\t\t\t})\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\t\t\tconst result = response.data;\n\t\t\t\t\t\t\t// Если иерархия и ленивая, то ищим кому добавть полученные записи\n\t\t\t\t\t\t\tif (!!expandColumnKey && expandLazyLoad) {\n\t\t\t\t\t\t\t\t// lastExpandRow//, setLastExpandRow\n\t\t\t\t\t\t\t\t// console.log('!!expandColumnKey && expandLazyLoad', result);\n\t\t\t\t\t\t\t\tif (pageNum === 0) {\n\t\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t\t{[rowKey]: generateUUID()},\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t// _setRows(result);\n\t\t\t\t\t\t\t\t\t_setRowsHandler(result);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlet newRows = [..._rows];\n\t\t\t\t\t\t\t\t\t// (data, rowKey, rowValue)\n\t\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t\t{[rowKey]: generateUUID()},\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tlet node = findNodeByRowKey(\n\t\t\t\t\t\t\t\t\t\tnewRows,\n\t\t\t\t\t\t\t\t\t\trowKey,\n\t\t\t\t\t\t\t\t\t\texpandRow[rowKey]\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tnode.children = result;\n\t\t\t\t\t\t\t\t\t// console.log('newRows -> ', newRows);\n\t\t\t\t\t\t\t\t\t// _setRows(newRows);\n\t\t\t\t\t\t\t\t\t_setRowsHandler(newRows);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (result && result.length < pageSize) {\n\t\t\t\t\t\t\t\t\tsetHasMore(false);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetHasMore(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpageNum === 0\n\t\t\t\t\t\t\t\t\t? _setRowsHandler(result) // _setRows\n\t\t\t\t\t\t\t\t\t: _setRowsHandler(_rows.concat(result)); // _setRows\n\n\t\t\t\t\t\t\t\t// console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\n\t\t\t\t\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\t\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\t\t\t\t\t\tflatten(getTableRowKeys(result, rowKey))\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t\t\t\t\t_setRowsHandler(_rows); // _setRows\n\t\t\t\t\t\t\t// setHasMore(false);\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t// case 'serverSide':\n\t\t\t// \tsetLoading(true);\n\t\t\t// \tbreak;\n\t\t\tcase 'localSide':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t/** Событие выделение одной строки в режиме без галочек */\n\tconst _rowEventHandlers = {\n\t\tonClick: ({rowData, rowIndex, rowKey, event}) => {\n\t\t\tif (!selectable) {\n\t\t\t\t// if (_selectedRowKeys.includes(rowKey)) {\n\t\t\t\t//     setSelectedRowKeys([]);\n\t\t\t\t//     // setSelectedRow([]);\n\t\t\t\t//     // setSelectedRowObjects([]);\n\t\t\t\t//     onRowClick({\n\t\t\t\t//         selected: false,\n\t\t\t\t//         rowData,\n\t\t\t\t//         rowIndex,\n\t\t\t\t//         rowKey,\n\t\t\t\t//     });\n\t\t\t\t//     onSelectedRowsChange([]);\n\t\t\t\t// } else {\n\t\t\t\t// console.log('_rowEventHandlers -> onClick', rowKey, rowIndex);\n\t\t\t\tconst newRowObject = {\n\t\t\t\t\trowData: {...rowData},\n\t\t\t\t\trowIndex: rowIndex,\n\t\t\t\t\trowKey: rowKey,\n\t\t\t\t};\n\t\t\t\t// if(type !== 'localSide')\n\t\t\t\tsetSelectedRowKeys([rowKey]);\n\t\t\t\t// setSelectedRow(newRowObject);\n\t\t\t\t// setSelectedRowObjects([newRowObject]);\n\t\t\t\tselectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, rowData);\n\t\t\t\tonRowClick({\n\t\t\t\t\tselected: true,\n\t\t\t\t\t...newRowObject,\n\t\t\t\t});\n\t\t\t\tonSelectedRowsChange([rowKey], [rowData]);\n\t\t\t\t// }\n\t\t\t}\n\t\t},\n\t\tonDoubleClick: ({rowData, rowIndex, rowKey}) => {\n\t\t\t// console.log('onDoubleClick', rowData, rowIndex, rowKey);\n\t\t\tonRowDoubleClick({rowData, rowIndex, rowKey});\n\t\t},\n\t\t// onContextMenu: console.log('context menu'),\n\t\t// onMouseEnter: console.log('mouse enter'),\n\t\t// onMouseLeave: console.log('mouse leave'),\n\t};\n\n\t/** Событие при сортировке */\n\tconst _onColumnSort = (sortBy) => {\n\t\t// console.log(\"sortBy\", sortBy);\n\t\ttableRef.current.scrollToRow(0, 'auto');\n\t\tsetSortBy(sortBy);\n\n\t\t// Для серверной сортировки - сбросить выделение\n\t\tif (type !== 'localSide') {\n\t\t\tsetSelectedRowKeys([]);\n\t\t}\n\t\tconst loadParams = {\n\t\t\tsortBy: sortBy,\n\t\t\tfilter: _filter,\n\t\t\tsearchLine: _searchValue,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t};\n\n\t/** Получение колонок таблицы */\n\tconst _getColumns = () => {\n\t\tlet _columns = [...columns];\n\n\t\t/** Создаем колонку с галочками (если надо) */\n\t\tif (selectable) {\n\t\t\tconst selectColumn = {\n\t\t\t\tkey: '__selection__',\n\t\t\t\theaderRenderer: SelectionHead,\n\t\t\t\tcellRenderer: SelectionCell,\n\t\t\t\twidth: 40,\n\t\t\t\tflexShrink: 0,\n\t\t\t\tresizable: false,\n\t\t\t\tfrozen: Column.FrozenDirection.LEFT,\n\t\t\t\trowKey: rowKey,\n\t\t\t\tparentKey: expandParentKey,\n\t\t\t\tselectedRowKeys: _selectedRowKeys,\n\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t\t\tnodeAssociated: nodeAssociated,\n\t\t\t\tonChange: _onChangeSelectHandler,\n\t\t\t\tselectAll: selectAll,\n\t\t\t\tonSelectAll: _onSelectAllHandler,\n\t\t\t};\n\t\t\t_columns.unshift(selectColumn);\n\t\t}\n\t\treturn _columns;\n\t};\n\n\t/** VIEW FUNCTIONS */\n\n\tconst _footer = (\n\t\t<React.Fragment>\n\t\t\t{_footerShow ? (\n\t\t\t\t\t<React.Fragment>\n                        {/*className={'BaseTable__footer__counter'}>*/}\n\t\t\t\t\t\t<div key={'footer-left-custom-side'} className={'left-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.leftCustomSideElement ? <FormItems items={footerProps.leftCustomSideElement} /> : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-center-custom-side'} className={'center-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.centerCustomSideElement ? <FormItems items={footerProps.centerCustomSideElement} /> : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-right-custom-side'} className={'right-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.rightCustomSideElement ? <FormItems items={footerProps.rightCustomSideElement} /> : null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{selectable ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('selected')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.selectedTitle} {_selectedRowKeys.length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('loaded')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.loadedTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{footerProps.showElements.includes('total')\n\t\t\t\t\t\t\t? type === 'infinity' && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad\n\t\t\t\t\t\t\t\t? <span>{footerProps.totalTitle} {_totalCountRows}</span>\n\t\t\t\t\t\t\t\t: <span>{footerProps.totalTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t: null}\n\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n\n\t/** Событие при рендере для стилизации */\n\tconst _rowClassName = ({rowData, rowIndex}) => {\n\t\tconst {rowClassName} = props;\n\t\tconst rowClass = rowClassName\n\t\t\t? callOrReturn(rowClassName, {rowData, rowIndex})\n\t\t\t: '';\n\t\t// const key = {[rowKey]: rowData[rowKey], checked: true};\n\t\t// selectedRowKeys.some((item) => (item[rowKey] === rowData[rowKey] && item.checked))\n\t\treturn [\n\t\t\trowClass,\n\t\t\t_selectedRowKeys.includes(rowData[rowKey]) && 'row-selected',\n\t\t]\n\t\t\t.filter(Boolean)\n\t\t\t.concat(zebraStyle ? (rowIndex % 2 === 0 ? 'even' : 'odd') : '')\n\t\t\t.concat(' ');\n\t};\n\n\t/** LOAD DATA FUNCTIONS */\n\tconst onEndReached = () => {\n\t\tlet selectAll;\n\t\tconst selectLength = _selectedRowKeys.length;\n\t\tif (selectLength === 0) selectAll = false;\n\t\telse if (selectLength > 0) selectAll = null;\n\n\t\tsetSelectAll(selectAll);\n\n\t\tif (type === 'infinity') {\n\t\t\tconst loadParams = {\n\t\t\t\tsortBy: _sortBy,\n\t\t\t\tfilter: _filter,\n\t\t\t\tsearchLine: _searchValue,\n\t\t\t\treload: false,\n\t\t\t};\n\t\t\t_dataProcessing(loadParams);\n\t\t}\n\t};\n\n\t/** SELECTABLE FUNCTIONS */\n\n\t/** Событие при изменении галочки одной строки */\n\tconst _onChangeSelectHandler = ({\n\t\tselected,\n\t\t_selectedRow,\n\t\t_selectAll,\n\t\t_selectedRowKeys,\n\t\t_selectedRowObjects,\n\t\t_indeterminateRowKeys,\n\t}) => {\n\t\tsetSelectedRowKeys(_selectedRowKeys);\n\t\tsetIndeterminateRowKeys(_indeterminateRowKeys);\n\t\tsetSelectAll(_selectAll);\n\t\t// setSelectedRow(_selectedRow);\n\n\t\t// let newSelectedObjects = [];\n\t\t// if (selected) {\n\t\t// \tif (!!expandColumnKey)\n\t\t// \t\tnewSelectedObjects = flatten(\n\t\t// \t\t\tgetTableRowObjects(rows, rowKey)\n\t\t// \t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]));\n\t\t// \telse\n\t\t// \t\tnewSelectedObjects = selectedRowObjects.concat([\n\t\t// \t\t\t_selectedRow.rowData,\n\t\t// \t\t]);\n\t\t// \t// setSelectedRowObjects(newSelectedObjects);\n\t\t// } else {\n\t\t// \tnewSelectedObjects = selectedRowObjects.filter(\n\t\t// \t\t(item) => item[rowKey] !== _selectedRow.rowData[rowKey]\n\t\t// \t);\n\t\t// \t// setSelectedRowObjects(newSelectedObjects);\n\t\t// }\n\t\t// console.log(\"_handleSelectChange\", props);\n\t\t// dispatchPath && props.setTableSelectedRow && props.setTableSelectedRow(dispatchPath, _selectedRow.rowData);\n\t\tselectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, _selectedRowObjects);\n\t\tonRowClick({\n\t\t\tselected,\n\t\t\trowData: _selectedRow.rowData,\n\t\t\trowIndex: _selectedRow.rowIndex,\n\t\t\trowKey,\n\t\t});\n\t\tonSelectedRowsChange(_selectedRowKeys, _selectedRowObjects);\n\t};\n\n\t/** Событие при изменении галочки \"Выделить все\" */\n\tconst _onSelectAllHandler = ({selected, rowKeys, rowObjects}) => {\n\t\tconst selectedKeys = selected ? rowKeys : [];\n\t\tsetSelectedRowKeys(selectedKeys);\n\t\tsetIndeterminateRowKeys([]);\n\t\tsetSelectAll(selected);\n\t\tselectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, selected ? rowObjects : []);\n\t\t// setSelectedRowObjects(rows);\n\t\t// console.log(\"_handleSelectAll\", selectedKeys);\n\t\tonSelectedRowsChange(selectedKeys, rowObjects);\n\t};\n\n\t/** TREE FUNCTIONS */\n\n\t/** Анализ дерева на пердмет квадратиков\n\t * Нужно для выделения по умолчанию свернутых элементов */\n\t// const _postLoadTreeAnalysis = () => {\n\t//     if (!!expandColumnKey && !expandLazyLoad) {\n\t//         let _indeterminateRowKeys = [];\n\t//         // console.log(\"mounted->selectedRowObjects: \", selectedRowObjects);\n\t//         selectedRowObjects.map((item) => {\n\t//             const [ss, ii] = parentAnalysis({\n\t//                 rowData: item,\n\t//                 rowKey,\n\t//                 parentKey: expandParentKey,\n\t//                 checked: true,\n\t//                 nodeAssociated,\n\t//                 treeData: _rows,\n\t//                 selectedRowKeys: _selectedRowKeys,\n\t//                 indeterminateRowKeys: _indeterminateRowKeys,\n\t//             });\n\t//             _indeterminateRowKeys.push(...ii);\n\t//         });\n\t//         setIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\n\t//     }\n\t// }\n\n\tconst _onExpandedRowsChange = (expandedRowKeys) => {\n\t\t// console.log(\"_onExpandedRowsChange\", expandedRowKeys);\n\t\tonExpandedRowsChange(expandedRowKeys);\n\t};\n\tconst _onRowExpand = ({expanded, rowData, rowIndex, rowKey}) => {\n\t\t// console.log(\"_onRowExpand\", rowData, expanded, rowIndex, rowKey);\n\t\tif (expanded) {\n\t\t\tsetExpandedRowKeys([..._expandedRowKeys, rowKey]);\n\n\t\t\tif (expandLazyLoad) {\n\t\t\t\tconst loadParams = {\n\t\t\t\t\tsortBy: _sortBy,\n\t\t\t\t\tfilter: {..._filter, [expandParentKey]: rowKey},\n\t\t\t\t\tsearchLine: _searchValue,\n\t\t\t\t\treload: false,\n\t\t\t\t\texpandRow: rowData,\n\t\t\t\t};\n\t\t\t\t// _callPropsOnLoad(loadParams);\n\t\t\t\t_dataProcessing(loadParams);\n\t\t\t}\n\t\t} else {\n\t\t\tlet expandedRowKeys = [..._expandedRowKeys];\n\t\t\tlet allChildKeys = flatten(\n\t\t\t\tgetTableRowKeys(rowData.children, props.rowKey)\n\t\t\t);\n\t\t\tallChildKeys.push(rowKey);\n\t\t\t// console.log('allChildKeys', allChildKeys);\n\t\t\tsetExpandedRowKeys(\n\t\t\t\texpandedRowKeys.filter((item) => !allChildKeys.includes(item))\n\t\t\t);\n\t\t}\n\t\tonRowExpand({expanded, rowData, rowIndex, rowKey});\n\t};\n\n\t/** COMMAND PANEL FUNCTIONS */\n\n\tconst _getDisabledElementsOfCommandPanel = () => {\n\t\t// console.log('commandPanelProps', commandPanelProps);\n\t\tlet _disabledElements = [...commandPanelProps.disabledElements];\n\t\tif (type === 'infinity') {\n\t\t\t_disabledElements.push('up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => infinity');\n        }\n\t\tif (selectable && _selectedRowKeys.length > 1) {\n\t\t\t_disabledElements.push('addAsCopy', 'edit', 'up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => selectable');\n        }\n\t\tif (_selectedRowKeys.length === 0) {\n\t\t\t_disabledElements.push('addAsCopy', 'edit', 'delete', 'up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => NO select');\n        }\n\t\t// if (expandColumnKey) {\n\t\t\t//|| !selectedRow) {\n\t\t\t// _disabledElements.push('up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => expandColumnKey');\n        // }\n        // console.log('_getDisabledElementsOfCommandPanel => ', _disabledElements, _selectedRowKeys);\n\n        return [...new Set(_disabledElements)];\n\t};\n\n\tconst _onClickAddAsCopy = (event) => {\n\t\t// console.log(\"_onClickAddAsCopy\", selectedRow);\n\t\tcommandPanelProps.onClickAddAsCopy(\n\t\t\tevent,\n\t\t\tfindNodeByRowKey(_rows, rowKey, _selectedRowKeys[0])\n\t\t);\n\t};\n\n\tconst _onClickEdit = (event) => {\n\t\t// console.log(\"_onClickEdit\", selectedRow);\n\t\tcommandPanelProps.onClickEdit(event, {\n\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t});\n\t\t// props.onClickEdit(event, selectedRow);\n\t};\n\n\tconst _onClickDelete = (event) => {\n\t\t// console.log(\"_onClickDelete\", autoDeleteRows, selectedRowKeys);\n\t\tif (autoDeleteRows) {\n\t\t\tif (type === 'localSide') {\n\t\t\t\tsetRowsHandler(\n\t\t\t\t\t_rows.filter(\n\t\t\t\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey])\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t_setRowsHandler(\n\t\t\t\t\t_rows.filter(\n\t\t\t\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey])\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tsetSelectedRowKeys([]);\n\t\t}\n\t\tcommandPanelProps.onClickDelete(event, _selectedRowKeys);\n\t};\n\n\tconst loop = (data, key, callback) => {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tif (data[i][rowKey] === key) {\n\t\t\t\t// console.log(`Selected => index: [${i}], path: [${data[i].path}]`, data);\n\t\t\t\treturn callback(data[i], i, data);\n\t\t\t} else {\n\t\t\t\t// console.log(`Other => index: [${i}], path: [${data[i].path}]`);\n\t\t\t}\n\t\t\tif (data[i].children) {\n\t\t\t\tloop(data[i].children, key, callback);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst _onClickUp = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index - 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data);\n\t\t\tcommandPanelProps.onClickUp(event, {\n\t\t\t\trowIndex: newRowIndex,\n\t\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t}, data);\n\t\t})\n\t};\n\n\tconst _onClickDown = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index + 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data);\n\t\t\tcommandPanelProps.onClickDown(event, {\n\t\t\t\trowIndex: newRowIndex,\n\t\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t}, data);\n\t\t})\n\t};\n\n\tconst _getNewIndexRow = (oldIndex, newIndex) =>\n\t\tnewIndex >= 0 && newIndex < _rows.length ? newIndex : oldIndex;\n\n\tconst _changeIndexRow = (oldIndex, newIndex, arr, data) => {\n\t\tif (newIndex >= 0 && newIndex < arr.length) {\n\t\t\t// let arr = [..._rows]; // Копируем массив\n\t\t\tconst item = arr.splice(oldIndex, 1); // Удаляем элемент со старого места\n\t\t\t// console.log('_changeIndexRow => ',item);\n\t\t\tarr.splice(newIndex > 0 ? newIndex : 0, 0, item[0]); // Ставим элемент на новое место\n\t\t\t// console.log(\"_changeIndexRow\", item[0]);\n\t\t\tif (type === 'localSide') {\n\t\t\t\tsetRowsHandler(data);\n\t\t\t} else {\n\t\t\t\t_setRowsHandler(data);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst _onSearch = (searchLine, e) => {\n        e.preventDefault();\n\t\t// console.log(\"_onSearch\", searchLine);\n        tableRef.current.scrollToRow(0, 'auto');\n\t\tsetSearchValue(searchLine);\n\t\tconst loadParams = {\n\t\t\tsortBy: _sortBy,\n\t\t\tfilter: _filter,\n\t\t\tsearchLine: searchLine,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t\tcommandPanelProps.onSearch(searchLine);\n\t};\n\n\t/** FILTER PANEL FUNCTIONS */\n\n\tconst _onChangeFilter = (filter) => {\n\t\t// console.log('_onChangeFilter', filter);\n\t\tsetHasMore(true);\n\t\tsetFilter(filter);\n\t\tfilterPanelProps.onChangeFilter(filter);\n\t};\n\tconst _onApplyFilter = (filter) => {\n\t\t// console.log('_onApplyFilter', filter);\n\t\tconst loadParams = {\n\t\t\tsortBy: _sortBy,\n\t\t\tfilter: filter,\n\t\t\tsearchLine: _searchValue,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t\tfilterPanelProps.onApplyFilter(filter);\n\t};\n\n\t/** SELECTED PANEL */\n\n\tconst _onClickDropSelectHandler = (dropObject) => {\n\t\tconst newSelectedKeys = _selectedRowKeys.filter(\n\t\t\t(item) => item !== dropObject[rowKey]\n\t\t);\n\t\tsetSelectedRowKeys(newSelectedKeys);\n\t\tonSelectedRowsChange(newSelectedKeys);\n\t};\n\n\t// const rowProps = {\n\t//     // tagName: 'button',\n\t//     // onClick: e => {\n\t//     //     e.preventDefault();\n\t//     //     e.stopPropagation();\n\t//     //     console.log(`You clicked row onClick`)\n\t//     // },\n\t//     onDoubleClick: e => {\n\t//         e.preventDefault();\n\t//         e.stopPropagation();\n\t//         console.log(`You clicked row onDoubleClick`)\n\t//     }\n\t// };\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`${rtPrefix}-table`}\n\t\t\tstyle={{width: '100%', height: '100%'}}\n\t\t>\n\t\t\t<div className={`${rtPrefix}-table-top-panel`}>\n\t\t\t\t<CommandPanel\n\t\t\t\t\t{...commandPanelProps}\n\t\t\t\t\tdefaultValueSearch={defaultSearchValue}\n\t\t\t\t\tdisabledElements={_getDisabledElementsOfCommandPanel()}\n\t\t\t\t\tonClickAddAsCopy={_onClickAddAsCopy}\n\t\t\t\t\tonClickDelete={_onClickDelete}\n\t\t\t\t\tonClickDown={_onClickDown}\n\t\t\t\t\tonClickEdit={_onClickEdit}\n\t\t\t\t\tonClickUp={_onClickUp}\n\t\t\t\t\tonSearch={_onSearch}\n\t\t\t\t/>\n\t\t\t\t{/*{!filter ? (*/}\n\t\t\t\t<FilterPanel\n\t\t\t\t\t{...filterPanelProps}\n\t\t\t\t\tdefaultFilter={defaultFilter}\n\t\t\t\t\tonChangeFilter={_onChangeFilter}\n\t\t\t\t\tonApplyFilter={_onApplyFilter}\n\t\t\t\t/>\n\t\t\t\t{/*) : null}*/}\n\t\t\t</div>\n\t\t\t<div className={`${rtPrefix}-baseTable`}>\n\t\t\t\t<AutoResizer>\n\t\t\t\t\t{({width, height}) => (\n\t\t\t\t\t\t<BaseTable\n\t\t\t\t\t\t\tref={tableRef}\n\t\t\t\t\t\t\t/** Required */\n\t\t\t\t\t\t\tcolumns={_getColumns()}\n\t\t\t\t\t\t\tdata={_rows}\n\t\t\t\t\t\t\t/** Control Props */\n\t\t\t\t\t\t\tsortBy={_sortBy}\n\t\t\t\t\t\t\t/** Base Props */\n\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\trowKey={rowKey}\n\t\t\t\t\t\t\t// rowProps={rowProps}\n\n\t\t\t\t\t\t\t/** View Props */\n\t\t\t\t\t\t\trowClassName={_rowClassName}\n\t\t\t\t\t\t\temptyRenderer={empty}\n\t\t\t\t\t\t\tfixed={fixWidthColumn}\n\t\t\t\t\t\t\tfooterHeight={_footerShow ? footerProps.height : 0}\n\t\t\t\t\t\t\theaderHeight={headerHeight}\n\t\t\t\t\t\t\trowHeight={rowHeight}\n\t\t\t\t\t\t\toverlayRenderer={loading ? overlay : null}\n\t\t\t\t\t\t\tfooterRenderer={_footer}\n\t\t\t\t\t\t\trowRenderer={rowRenderer}\n\t\t\t\t\t\t\testimatedRowHeight={estimatedRowHeight}\n\t\t\t\t\t\t\t/** Load Data Props */\n\t\t\t\t\t\t\tonEndReachedThreshold={loadThreshold}\n\t\t\t\t\t\t\tonEndReached={\n\t\t\t\t\t\t\t\ttype === 'infinity' ? onEndReached : undefined\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t/** Tree Props */\n\t\t\t\t\t\t\texpandColumnKey={expandColumnKey}\n\t\t\t\t\t\t\texpandedRowKeys={_expandedRowKeys}\n\t\t\t\t\t\t\t/** Events */\n\t\t\t\t\t\t\tonColumnSort={_onColumnSort}\n\t\t\t\t\t\t\trowEventHandlers={_rowEventHandlers}\n\t\t\t\t\t\t\tonExpandedRowsChange={_onExpandedRowsChange}\n\t\t\t\t\t\t\tonRowExpand={_onRowExpand}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</AutoResizer>\n\t\t\t</div>\n\t\t\t{showSelection && selectable && !expandColumnKey ? (\n\t\t\t\t<SelectionList\n\t\t\t\t\tonClickDropSelect={_onClickDropSelectHandler}\n\t\t\t\t\tselectedRowObjects={flatten(\n\t\t\t\t\t\tgetTableRowObjects(_rows, rowKey)\n\t\t\t\t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]))}\n\t\t\t\t\trowRender={rowRenderShowSelection}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</div>\n\t);\n});\n\nTable.propTypes = {\n\t/**\n\t * REQUIRED\n\t * */\n\n\t/** Столбцы таблицы */\n\tcolumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Тип таблицы\n\t * **infinity** - загрузка данных по скроллу. Фильтрация, сортировка и поиск через сервер.\n\t * **serverSide** - первичная загрузка таблицы с сервера. Фильтрация, сортировка и поиск через сервер. Lazy Load для дерева тоже тут.\n\t * **localSide** - полностью локальная таблица. Фильтрация, сортировка и поиск через локальный rows */\n\ttype: PropTypes.oneOf(['infinity', 'serverSide', 'localSide']).isRequired,\n\n\t/** Объект со свойствами Command Panel */\n\tcommandPanelProps: PropTypes.object,\n\n\t/** Объект со свойствами Filter Panel */\n\tfilterPanelProps: PropTypes.object,\n\n\t/**\n\t * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n\t * */\n\n\t/** Строки по умолчанию */\n\tdefaultRows: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Ключи выделенных по умолчанию строк */\n\tdefaultSelectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска по умолчанию строк */\n\tdefaultSearchValue: PropTypes.string,\n\n\t/** Объект фильтрации по умолчанию */\n\tdefaultFilter: PropTypes.object,\n\n\t/** Сортировка по умолчанию */\n\tdefaultSortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n\t * */\n\n\t/** Строки таблицы. Используется для контроля таблицы из вне. */\n\trows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Функция задания строк таблицы. */\n    setRows: PropTypes.func,\n\n\t/** Выделенные строки таблицы. */\n\tselectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Объект фильтрации */\n\tfilter: PropTypes.object,\n\n\t/** Объект сортировки */\n\tsortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * BASE PROPS\n\t * */\n\n\t/** Автоудаление строк из таблицы по кнопке в командной панели*/\n\tautoDeleteRows: PropTypes.bool,\n\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/**\n\t * VIEW PROPS\n\t * */\n\n\t/** Вывод когда нет данных */\n\tempty: PropTypes.element,\n\n\t/** Отображение загрузки данных */\n\toverlay: PropTypes.element,\n\n\t/** Фиксированная ширина столбцов. Появится боковой скрол */\n\tfixWidthColumn: PropTypes.bool,\n\n\t/** Высота подвала */\n\tfooterHeight: PropTypes.number,\n\n\t/** Отображать ли подвал */\n\tfooterShow: PropTypes.bool,\n\n    /** Заголовки футтера */\n    footerTitles: PropTypes.shape({\n\t\t/** Заголовок выделенных элементов */\n        selectedRows: PropTypes.string,\n\t\t/** Заголовок загруженных элементов */\n        loadedRows: PropTypes.string,\n\t\t/** Заголовок всего элементов */\n\t\ttotalRows: PropTypes.string,\n    }),\n\n\tfooterProps: PropTypes.shape({\n\n\t\t/** Высота подвала */\n\t\theight: PropTypes.number,\n\n\t\t/** Массив элементов футтера, которые надо отобразить\n\t\t * ['selected', 'loaded', 'total'] */\n\t\tshowElements: PropTypes.arrayOf(PropTypes.string),\n\n\t\t/** Заколовок для кол-ва выбранных объектов */\n\t\tselectedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва загруженны объектов */\n\t\tloadedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва всего объектов */\n\t\ttotalTitle: PropTypes.string,\n\n\t\t/** Левый кастомный элемент командной панели */\n\t\tleftCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/** Центральный кастомный элемент командной панели */\n\t\tcenterCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/** Правый кастомный элемент командной панели */\n\t\trightCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\t}),\n\n\t/** Высота заголовка таблицы */\n\theaderHeight: PropTypes.number,\n\n\t/** Высота строки таблицы */\n\trowHeight: PropTypes.number,\n\n\t/** Custom row renderer\n\t * Параметры - ({ isScrolling, cells, columns, rowData, rowIndex, depth }) */\n\trowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n\t/** Строки будут в зебро-стиле */\n\tzebraStyle: PropTypes.bool,\n\n\t/**\n\t * LOAD DATA PROPS\n\t * */\n\n\t/** Порог в пикселях для вызова _onLoad.\n\t * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n\tloadThreshold: PropTypes.number,\n\n\t/** Размер страницы */\n\tpageSize: PropTypes.number,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\t/**\n\t * SELECTABLE PROPS\n\t * */\n\n\t/** Таблица с возможностью выбора строки */\n\tselectable: PropTypes.bool,\n\n\t/**\n\t * TREE PROPS\n\t * */\n\n\t/** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\n\tnodeAssociated: PropTypes.bool,\n\n\t/** Ключ колонки по которой строить иерархию */\n\texpandColumnKey: PropTypes.string,\n\n\t/** Открыть по умолчанию вложенность до уровня N или 'All' */\n\texpandDefaultAll: PropTypes.bool,\n\n\t/** Загружать ноды иерархии по одной */\n\texpandLazyLoad: PropTypes.bool,\n\n\t/** Поле в котором хранится ссылка на родителя */\n\texpandParentKey: PropTypes.string,\n\n\t/**\n\t * EVENTS\n\t * */\n\n\t/** Событие при клике на строку (только при selectable = false)\n\t * Параметр - ({selected, rowData, rowIndex}) */\n\tonRowClick: PropTypes.func,\n\n\t/** Событие при двойном клике на строку.\n\t * Параметр - ({rowData, rowIndex, rowKey}) */\n\tonRowDoubleClick: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * Парметры - ({ expanded, rowData, rowIndex, rowKey }) */\n\tonRowExpand: PropTypes.func,\n\n\t/** Событие при выборе строки.\n\t * Параметр - массив выбранных строе (только rowKey) */\n\tonSelectedRowsChange: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * Парметры - (expandedRowKeys) - массив ключей открытых нод */\n\tonExpandedRowsChange: PropTypes.func,\n\n\t/** SELECTED PANEL */\n\n\t/** Отображать ли панель выбранных элементов */\n\tshowSelection: PropTypes.bool,\n\n\t/** Строка или функция для отображения элементов списка выбранных\n\t * Строка - имя поля\n\t * Функция - рендер строк.\n\t * `({ rowData, rowIndex }) => { return <Component> }` */\n\trowRenderShowSelection: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.string,\n\t]),\n\n\t/** Путь в сторе куда класть выбранную строку таблицы */\n\tdispatchPath: PropTypes.string,\n\n\t/** Объект для подписки на изменения в STORE */\n\tsubscribe: PropTypes.object,\n};\n\nTable.defaultProps = {\n\tdefaultRows: [],\n\tdefaultSelectedRowKeys: [],\n\tdefaultSearchValue: '',\n\tdefaultFilter: {},\n\tdefaultSortBy: {},\n\n\trows: [],\n\tselectedRowKeys: [],\n\tsearchValue: '',\n\tfilter: {},\n\tsortBy: {},\n\n\tautoDeleteRows: true,\n\trowKey: 'id',\n\n\tempty: empty,\n\toverlay: overlay,\n\tfixWidthColumn: false,\n\tfooterHeight: 30,\n\tfooterShow: false,\n    footerTitles: {\n        selectedRows: 'Выделено:',\n        loadedRows: 'Загружено записей:',\n        totalRows: 'Всего записей:',\n    },\n\tfooterProps: {\n\t\theight: 30,\n\t\tshowElements: [],\n\t\tselectedTitle: 'Выделено:',\n\t\tloadedTitle: 'Загружено записей:',\n\t\ttotalTitle: 'Всего записей:',\n\t\tleftCustomSideElement: null,\n\t\tcenterCustomSideElement: null,\n\t\trightCustomSideElement: null\n\t},\n\theaderHeight: 30,\n\trowHeight: 30,\n\tzebraStyle: false,\n\n\tloadThreshold: 300,\n\tpageSize: 50,\n\trequestLoadRows: noop,\n    requestLoadCount: noop,\n\tsearchParamName: 'searchLine',\n\n\tselectable: false,\n\n\tnodeAssociated: true,\n\texpandColumnKey: undefined,\n\texpandDefaultAll: true,\n\texpandLazyLoad: false,\n\texpandParentKey: 'parentId',\n\n\tonRowClick: noop,\n\tonRowDoubleClick: noop,\n\tonRowExpand: noop,\n\tonSelectedRowsChange: noop,\n\tonExpandedRowsChange: noop,\n\n\tshowSelection: false,\n\n\tsubscribe: {},\n};\n\nconst mapStateToProps = (store, ownProps) => {\n\tconst {subscribe} = ownProps;\n\tif(subscribe){\n\t\tconst {name, path} = subscribe;\n\t\tif(name && path)\n\t\t\treturn { [name]: objectPath.get(store, path) };\n\t}\n\n\treturn {};\n};\nconst mapDispatchToProps = (dispatch) =>\n\tbindActionCreators({ setDateStore: setDateStore}, dispatch);\n\n// const mapStateToProps = (store, ownProps) => {\n//     // console.log(\"mapStateToProps -> store\", store);\n//     // const {match , section} = ownProps;\n//     // const { path } = match;\n//     // const rows = store.table[path] && store.table[path][section] ? store.table[path][section].rows : [];\n//     // console.log(\"mapStateToProps -> rows\", rows);\n//     return { store: store };\n// };\n// const mapDispatchToProps = (dispatch, ownProps) => {\n//     // console.log(\"mapDispatchToProps -> ownProps\", ownProps);\n//     // const {match , section} = ownProps;\n//     // const { path } = match;\n//     // initTableStore(path, section);\n//     return bindActionCreators(\n//         {\n//             initTableStore,\n//             setRows,\n//         },\n//         dispatch\n//     );\n// };\n//\n// export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\n","import React, {useEffect, useState, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { flatten, getTableRowKeys, noop, notificationError } from \"../utils/baseUtils\";\nimport {rtPrefix} from '../utils/variables';\nimport {Button, Typography} from 'antd';\nimport { DownOutlined, UpOutlined, CloseCircleFilled } from '@ant-design/icons'\nimport Table from '../Table/Table';\nimport { setDateStore } from \"../../redux/rtd.actions\";\nconst {Paragraph} = Typography;\n\nconst Select = (props) => {\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n\tconst [_selectedRowData, _setSelectedRowData] = useState(null);\n\tconst [isSelectOpened, setIsSelectOpened] = useState(false);\n\tconst [isClickInSelect, setIsClickInSelect] = useState(false);\n\n\tconst {\n\t\tname,\n\t\trowRender,\n        className,\n\t\ttype,\n\t\ttitle,\n\t\tplaceholder,\n        selectedRowKeys,\n\t\t// searchable,\n        size,\n\t\twidthControl,\n\t\twidthPopup,\n\t\theightPopup,\n\n\t\tonChangeKeys,\n        defaultValue,\n        value,\n\n\t\t/** Table Props */\n\t\tdefaultSelectedRowKeys,\n\t\trowKey,\n\t\texpandColumnKey,\n\t\tshowSelection,\n\t\trequestLoadRows,\n\t\trequestLoadDefault,\n        commandPanelProps,\n\t\trows,\n\t\tdispatchPath,\n\t} = props;\n\n\tconst selectedDispatchPath = dispatchPath && `${dispatchPath}.selected`;\n\tconst searchable = commandPanelProps && commandPanelProps.showElements && commandPanelProps.showElements.includes('search');\n\tconst node = useRef(null);\n\n\tconst setSelectedRowData = (rowData) => {\n\t\tselectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, rowData);\n\t\t_setSelectedRowData(rowData);\n\t}\n\n\tconst loadSelectedObject = ({selectedRowKeys}) => {\n        if(selectedRowKeys) {\n            let _selectedRowKeys;\n\t\t\tif(Array.isArray(selectedRowKeys)) {\n\t\t\t\tsetSelectedRowKeys(selectedRowKeys);\n\t\t\t\t_selectedRowKeys = selectedRowKeys\n\t\t\t}\n            else {\n            \tsetSelectedRowKeys([selectedRowKeys]);\n\t\t\t\t_selectedRowKeys = [selectedRowKeys]\n\t\t\t}\n\n\t\t\t// console.log(\"setSelectedRowKeys[70] -> \", _selectedRowKeys);\n\n\t\t\tconst request = requestLoadDefault\n                ? requestLoadDefault\n                : requestLoadRows;\n\n            if (!!request && !rows && _selectedRowKeys.length > 0) {\n                // console.log('defaultSelectedRowKeys ', defaultSelectedRowKeys, defaultSelectedRowKeys.length);\n                request({\n                    data: {\n                        [rowKey]:  _selectedRowKeys, //defaultSelectedRowKeys,\n                    },\n                })\n                    .then((response) => {\n                        let result = response.data;\n\t\t\t\t\t\t// console.log(\"setSelectedRowData[84] => \", response.data);\n\t\t\t\t\t\tif (result.length > 0) setSelectedRowData(result[0]);\n                    })\n\t\t\t\t\t.catch(error => notificationError(error, 'Ошибка загрузки данных в Select') );\n\n            } else if (rows && _selectedRowKeys && type === 'SingleSelect') {\n            \tlet srk = _selectedRowKeys[0];\n\t\t\t\t// if(Array.isArray(selectedRowKeys) && selectedRowKeys.length > 0)\n\t\t\t\t// \tsrk = selectedRowKeys[0];\n            \t// else\n\t\t\t\t// \tsrk = selectedRowKeys;\n\n                const findRow = rows.find((row) => row[rowKey] === srk);\n                // console.log(\"setSelectedRowData[98] => \", findRow, rows, srk);\n                setSelectedRowData(findRow);\n            } else {\n                setSelectedRowData(null);\n            }\n        }\n\t};\n\n\tuseEffect(() => {\n        loadSelectedObject({selectedRowKeys: defaultSelectedRowKeys});\n\t\twindow.addEventListener('mousedown', handleMouseClick, false);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('mousedown', handleMouseClick, false);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// console.log(\"selectedRowKeys\", selectedRowKeys);\n        loadSelectedObject({selectedRowKeys: selectedRowKeys});\n    }, [selectedRowKeys]);\n\n\tuseEffect(() => {\n\t\tif(_selectedRowKeys !== undefined && _selectedRowData === undefined){\n\t\t\t// console.log(\"useEffect rows\", _selectedRowKeys, _selectedRowData, rows);\n\t\t\tloadSelectedObject({selectedRowKeys: _selectedRowKeys});\n\t\t}\n\t}, [rows])\n\n\tuseEffect(() => {\n\t\t// console.log(\"isClickInSelect \", isClickInSelect);\n\t\t// console.log(\"isSelectOpened \", isSelectOpened);\n\t\tif(!isClickInSelect && isSelectOpened)\n\t\t\tonClosePopup();\n\t}, [isClickInSelect]);\n\n\t// useEffect(() => {\n\t// \t// console.log(\"setSelectedRowData[117] => \", props.value, props.defaultValue);\n\t// }, [props])\n\n\tconst columns = [\n\t\t{\n\t\t\tkey: rowKey,\n\t\t\ttitle: title,\n\t\t\tdataKey: rowKey,\n\t\t\twidth: 500,\n\t\t\tcellRenderer:\n\t\t\t\ttypeof rowRender === 'function'\n\t\t\t\t\t? rowRender\n\t\t\t\t\t: ({rowData}) => <div>{rowData[rowRender]}</div>,\n\t\t},\n\t];\n\n\tconst _getHeadCls = () => {\n\t    let cls = [`${rtPrefix}-select-header`];\n\n\t    if(isSelectOpened)\n            cls.push('opened');\n\n\t    if(_selectedRowKeys && _selectedRowKeys.length > 0)\n\t        cls.push('selected');\n\n\t    switch (size) {\n            case 'small':\n                cls.push(`${rtPrefix}-select-header-sm`);\n                break;\n            case 'large':\n                cls.push(`${rtPrefix}-select-header-lg`);\n                break;\n            default: break;\n        }\n\n\t    return cls.join(' ');\n    };\n\n\tconst _getHeadText = () => {\n\t\tif (type === 'SingleSelect') {\n\t\t\t\tif(_selectedRowData)\n\t\t\t\t\tif(typeof rowRender === 'function')\n\t\t\t\t\t\treturn rowRender({rowData: _selectedRowData});\n\t\t\t\t\telse\n\t\t\t\t\t\treturn `${_selectedRowData[rowRender]}`;\n\t\t\t\telse\n\t\t\t\t\treturn `${placeholder}`;\n\t\t} else {\n\t\t\treturn _selectedRowKeys.length > 0\n\t\t\t\t? `Выбрано: ${_selectedRowKeys.length}`\n\t\t\t\t: `${placeholder}`;\n\t\t}\n\t};\n\n    const _getPopupCls = () => {\n    \t// console.log('_getPopupCls _selectedRowKeys => ', _selectedRowKeys);\n        let cls = [`${rtPrefix}-select-popup`];\n\n        if(title)\n            cls.push(`${rtPrefix}-select-popup-with-title`);\n\n        return cls.join(' ');\n    };\n\tconst _getPopupStyle = () => {\n\t\t// if (heightPopup)\n\t\t// \treturn {height: `${heightPopup}px`, width: `${widthPopup}px`};\n\n\t\tlet height = {};\n\t\tlet defRowsLen = 0;\n\n\t\tif (!requestLoadRows && rows)\n\t\t\tif (expandColumnKey)\n\t\t\t\tdefRowsLen = flatten(getTableRowKeys(rows, rowKey)).length;\n\t\t\telse defRowsLen = rows.length;\n\n\t\t// console.log('_getPopupStyle', defRowsLen);\n\t\tif (defRowsLen && defRowsLen > 0) {\n\t\t\theight =\n\t\t\t\tdefRowsLen * 30 + // Кол-во строк * высоту строки\n\t\t\t\t(searchable ? 46 : 0) + // Размер поисковой строки или 0\n\t\t\t\t(type === 'MultiSelect' ? 65 : 0) + // Размер футтера (30) + размер кнопки 35 или 0\n\t\t\t\t(showSelection ? 200 : 0) + // Размер панели выбранных элементов или 0\n\t\t\t\t22; // Паддинги и бордер\n\t\t\t// console.log('heightPopup', height);\n\t\t\tif (height > heightPopup) height = `${heightPopup}px`;\n\t\t\telse height = `${height}px`;\n\t\t} else {\n\t\t\t// console.log(\"heightPopup\", heightPopup);\n\t\t\theight = `${heightPopup}px`;\n\t\t}\n\n\t\t// console.log(\"heightPopup, widthPopup\", heightPopup, widthPopup);\n\t\treturn {height, width: `${widthPopup}px`};\n\t};\n\n\tconst getEvents = () => {\n\t\treturn (commandPanelProps && commandPanelProps.systemBtnProps && Object.keys(commandPanelProps.systemBtnProps)) || [];\n\t};\n\n\tconst _onChange = (selectedKeys) => {\n\t\t// console.log('_onChange [176]', selectedKeys);\n\t\tsetSelectedRowKeys(selectedKeys);\n\t\t// setSelectedRowData(selectedObjects);\n\t\tonChangeKeys(name, selectedKeys.length ? selectedKeys : null);\n\t\t// onChangeObjects(name, selectedObjects.length ? selectedObjects : null);\n\t\t// setCountSelect(selectedKeys.length);\n\t\tif (type === 'SingleSelect') {\n\t\t\tsetIsSelectOpened(false);\n\t\t}\n\t};\n\n\tconst _SingleSelectRow = ({selected, rowData, rowIndex}) => {\n\t\t// console.log(\"_SingleSelectRow => \", rowData);\n\t\tsetSelectedRowData(rowData);\n\t\t// selected ? setSingleSelectRowData(rowData) : setSingleSelectRowData({})\n\t};\n\n\tconst handleMouseClick = (e) => {\n\t\tnode && node.current && setIsClickInSelect(node.current.contains(e.target))\n\t};\n\n\tconst onClosePopup  = () => {\n\t\tsetIsSelectOpened(false);\n\t};\n\n\tconst onOpenPopup = () => {\n\t\tif(!isSelectOpened)\n\t\t\tsetIsSelectOpened(true);\n\t\telse\n\t\t\tsetIsSelectOpened(false);\n\t};\n\n\tconst onClickClear = () => {\n\t\t// console.log(\"delete Selected\");\n\t\tsetSelectedRowData(null);\n\t\t_onChange([]);\n\t};\n\n\treturn (\n\t\t<div\n            className={`${rtPrefix}-select ${className ? className : ''}`}\n\t\t\tref={node}\n\t\t>\n\t\t\t{title ? <div className={'title'}>{title}</div> : null}\n\t\t\t<div\n\t\t\t\tclassName={_getHeadCls()}\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: widthControl === 0 ? '100%' : `${widthControl}px`,\n\t\t\t\t}}\n\n\t\t\t>\n\t\t\t\t<div className={`${rtPrefix}-select-selector`}\n\t\t\t\t\t // onFocus={ () => {setIsSelectOpened(true)} }\n\t\t\t\t\t onClick={ onOpenPopup }\n\t\t\t\t>\n\t\t\t\t\t<Paragraph ellipsis> {_getHeadText()} </Paragraph>\n\t\t\t\t</div>\n                {isSelectOpened ? <UpOutlined onClick={ onOpenPopup } className={`${rtPrefix}-select-header-icon`} /> : <DownOutlined onClick={ onOpenPopup } className={`${rtPrefix}-select-header-icon`}/> }\n\t\t\t\t{/*<Button shape=\"circle\" icon={<CloseCircleFilled />} onClick={() => console.log(\"delete Selected\")} className={`${rtPrefix}-select-header-clear`} />*/}\n\t\t\t\t{_selectedRowKeys.length > 0 ? <CloseCircleFilled onClick={onClickClear} className={`${rtPrefix}-select-header-clear`}/> : null }\n\t\t\t</div>\n\n\t\t\t{isSelectOpened ? (\n\t\t\t\t<div className={_getPopupCls()} style={_getPopupStyle()}>\n\t\t\t\t\t<Table\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t\tcommandPanelProps={{\n\t\t\t\t\t\t\t...props.commandPanelProps,\n\t\t\t\t\t\t\tshowElements: getEvents(),// getShowElements(),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdefaultSelectedRowKeys={_selectedRowKeys}\n                        selectedRowKeys={_selectedRowKeys}\n\t\t\t\t\t\theaderHeight={0}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\ttype={!!requestLoadRows ? 'serverSide' : 'localSide'}\n\t\t\t\t\t\t// showElements={searchable ? ['search'] : undefined}\n\t\t\t\t\t\tselectable={type === 'MultiSelect'}\n\t\t\t\t\t\tfooterShow={type === 'MultiSelect'}\n\t\t\t\t\t\tshowSelection={showSelection}\n\t\t\t\t\t\trowRenderShowSelection={rowRender}\n\t\t\t\t\t\tonRowClick={_SingleSelectRow}\n\t\t\t\t\t\tonSelectedRowsChange={_onChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{type === 'MultiSelect' ? (\n\t\t\t\t\t\t<div className={'close-panel'}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={() => setIsSelectOpened(false)}\n\t\t\t\t\t\t\t\tsize={'small'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tOk\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\nSelect.propTypes = {\n\t/** Имя параметра селекта (вернется в onChangeKeys и onChangeObjects) */\n\tname: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.number,\n\t\tPropTypes.arrayOf(\n\t\t\tPropTypes.oneOfType(\n\t\t\t\t[PropTypes.string, PropTypes.number]\n\t\t\t)\n\t\t)]).isRequired,\n\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { rowData, rowIndex }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n\t\t.isRequired,\n\n\t/** Тип селекта (SingleSelect и MultiSelect) */\n\ttype: PropTypes.oneOf(['SingleSelect', 'MultiSelect']).isRequired,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Заголовок фильтра */\n\ttitle: PropTypes.string,\n\n\t/** Строка, когда ничего не выбрано */\n\tplaceholder: PropTypes.string,\n\n\t/** Запрос на загрузку дефолтных данных */\n\trequestLoadDefault: PropTypes.func,\n\n    /** Массив выбранных значений */\n    selectedRowKeys: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n\n    /** Размер селектора ['small', 'middle', 'large'] */\n    size: PropTypes.oneOf(['small', 'middle', 'large']),\n\n\t// /** Показывать ли поисковую строку */\n\t// searchable: PropTypes.bool,\n\n\t/** Ширина поля выбора в пикселях */\n\twidthControl: PropTypes.number,\n\n\t/** Ширина выпадающего меню */\n\twidthPopup: PropTypes.number,\n\n\t/** Высота выпадающего меню (по умолчанию считается сама) */\n\theightPopup: PropTypes.number,\n\n    /** Событие об изменении состояния селектора */\n\tonChangeKeys: PropTypes.func,\n\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/** Высота строки таблицы */\n\trowHeight: PropTypes.number,\n\n\t/** Строки будут в зебро-стиле */\n\tzebraStyle: PropTypes.bool,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadCount: PropTypes.func,\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\t/** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\n\tnodeAssociated: PropTypes.bool,\n\n\t/** Ключ колонки по которой строить иерархию */\n\texpandColumnKey: PropTypes.string,\n\n\t/** Открыть по умолчанию вложенность до уровня N или 'All' */\n\texpandDefaultAll: PropTypes.bool,\n\n\t/** Загружать ноды иерархии по одной */\n\texpandLazyLoad: PropTypes.bool,\n\n\t/** Поле в котором хранится ссылка на родителя */\n\texpandParentKey: PropTypes.string,\n};\n\nSelect.defaultProps = {\n\tonChangeKeys: noop,\n\t// onChangeObjects: noop,\n\tplaceholder: 'Выбрать',\n\t// searchable: false,\n    size: 'middle',\n\twidthControl: 110,\n\twidthPopup: 400,\n\theightPopup: 600,\n    rowKey: 'id',\n\trowHeight: 30,\n\tzebraStyle: false,\n\n\trequestLoadDefault: undefined,\n\trequestLoadRows: undefined,\n\trequestLoadCount: undefined,\n\tsearchValue: '',\n\tsearchParamName: 'searchLine',\n\n\tnodeAssociated: true,\n\texpandColumnKey: undefined,\n\texpandDefaultAll: true,\n\texpandLazyLoad: false,\n\texpandParentKey: 'parentId',\n};\nconst mapDispatchToProps = (dispatch) =>\n\tbindActionCreators({ setDateStore: setDateStore}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(Select);\n","import React, {forwardRef, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '../Table/Table';\nimport {notification} from 'antd';\nimport { notificationError } from \"../utils/baseUtils\";\n\nconst AdvancedTable = forwardRef((props, ref) => {\n\tconst [config, setConfig] = useState({});\n\n\tconst {\n\t\tconfigData,\n        customColumnProps,\n\t\tdefaultFilter,\n\t\texpandColumnKey,\n\t\texpandLazyLoad,\n\t\texpandParentKey,\n\t\tpageSize,\n\t\trowKey,\n\t\trequestLoadConfig,\n\t} = props;\n\n\tuseEffect(() => {\n        let cleanupFunction = false;\n        const loadData = async () => {\n            if (requestLoadConfig) {\n                // console.log('requestLoadConfig => ', typeof requestLoadConfig);\n                // console.log('requestLoadRows => ', typeof props.requestLoadRows);\n                requestLoadConfig()\n                    .then((response) => {\n                        // let result = response.data;\n                        // console.log('requestLoadConfig -> ', response.data);\n                        if(!cleanupFunction)\n                            setConfig(response.data);\n                    })\n                    .catch(error => notificationError(error, 'Ошибка получения конфигурации') );\n            } else {\n                if(!cleanupFunction)\n                    setConfig(configData);\n            }\n        };\n        loadData();\n        return () => cleanupFunction = true;\n\t}, []);\n\n\tconst columnsByConfig = () =>\n\t\tconfig &&\n\t\tconfig.fields &&\n\t\tconfig.fields.map((item) => {\n\n\t\t\tconst colProps =\n                customColumnProps &&\n                customColumnProps.find(\n                    (render) =>\n                        render.name === item.name || render.name === item.alias\n                );\n\t\t\treturn {\n\t\t\t\tkey: item.name,\n\t\t\t\ttitle: item.header ? item.header : item.name,\n\t\t\t\tdataKey: item.alias ? item.alias : item.name,\n\t\t\t\talign: item.align,\n\t\t\t\twidth: item.width,\n\t\t\t\tresizable: item.resizable,\n\t\t\t\tsortable: item.sortable,\n\t\t\t\thidden: !item.visible,\n\t\t\t\t// cellRenderer: cellR && cellR.cellRender,\n                ...colProps,\n                cellRenderer: (object) => {\n                    if(colProps && colProps.cellRenderer)\n                        return colProps.cellRenderer(object) ? colProps.cellRenderer(object) : '---';\n                    else\n                        return object.cellData ? object.cellData : '---';\n                },\n\t\t\t};\n\t\t});\n\n\tconst getDefaultFilter = () => {\n\t\tif (config && config.hierarchical && config.hierarchyLazyLoad) {\n\t\t\tconst parentKey = config.hierarchyField\n\t\t\t\t? config.hierarchyField.split('/')[1]\n\t\t\t\t: expandParentKey;\n\t\t\treturn {...defaultFilter, [parentKey]: null};\n\t\t} else return defaultFilter;\n\t};\n\n\tif (config && config.fields) {\n\t\t// console.log('AdvancedTable render table -> ', config);\n\t\treturn (\n\t\t\t<Table\n\t\t\t\t{...props}\n\t\t\t\tref={ref}\n\t\t\t\tcolumns={columnsByConfig()}\n\t\t\t\tdefaultFilter={getDefaultFilter()}\n\t\t\t\trowKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyField\n\t\t\t\t\t\t? config.hierarchyField.split('/')[0]\n\t\t\t\t\t\t: rowKey\n\t\t\t\t}\n\t\t\t\texpandParentKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyField\n\t\t\t\t\t\t? config.hierarchyField.split('/')[1]\n\t\t\t\t\t\t: expandParentKey\n\t\t\t\t}\n\t\t\t\texpandColumnKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyView\n\t\t\t\t\t\t? config.hierarchyView\n\t\t\t\t\t\t: expandColumnKey\n\t\t\t\t}\n\t\t\t\texpandLazyLoad={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyLazyLoad\n\t\t\t\t\t\t? config.hierarchyLazyLoad\n\t\t\t\t\t\t: expandLazyLoad\n\t\t\t\t}\n\t\t\t\tpageSize={config && config.hierarchical ? 1 : pageSize}\n\t\t\t/>\n\t\t);\n\t} else return null;\n});\n\nAdvancedTable.propTypes = {\n\t/** Функция запроса на получение конфига для таблицы */\n\trequestLoadConfig: PropTypes.func,\n\n\t/** Конфигурация внешнего вида таблицы */\n\tconfigData: PropTypes.shape({\n\t\thierarchical: PropTypes.bool,\n\t\thierarchyField: PropTypes.string,\n\t\thierarchyView: PropTypes.string,\n\t\thierarchyLazyLoad: PropTypes.bool,\n\t\tfields: PropTypes.arrayOf(\n\t\t\tPropTypes.shape({\n\t\t\t\tname: PropTypes.string,\n\t\t\t\talias: PropTypes.string,\n\t\t\t\theader: PropTypes.string,\n\t\t\t\tvisible: PropTypes.bool,\n\t\t\t\tresizable: PropTypes.bool,\n\t\t\t\tsortable: PropTypes.bool,\n\t\t\t\talign: PropTypes.oneOf(['left', 'center', 'right']),\n\t\t\t\twidth: PropTypes.number,\n\t\t\t})\n\t\t),\n\t}),\n\n\t/** Дополнительные пропсы для колонок */\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\n};\n\nAdvancedTable.defaultProps = {};\n\nexport default AdvancedTable;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormItems from \"./FormItems\";\nimport { Form as AntForm, notification } from \"antd\";\nimport { getObjectExcludedProps, noop, notificationError } from \"../utils/baseUtils\";\nimport { rtPrefix } from \"../utils/variables\";\n\nconst excludeProps = [\"noPadding\", \"header\", \"body\", \"footer\", \"loadInitData\", \"autoSaveForm\", \"requestSaveForm\", \"methodSaveForm\", \"processBeforeSaveForm\"];\n\n\nconst Form = (props) => {\n    const { loadInitData, header, body, footer,\n        autoSaveForm, requestSaveForm, methodSaveForm, processBeforeSaveForm } = props;\n\n    /** Состояние первоначалной настройки компонента*/\n    const [loaded, setLoaded] = useState(false);\n    const [antFormProps, setAntFormProps] = useState({});\n    const [initFormData, setInitFormData] = useState({});\n\n    useEffect(() => {\n        if (!loaded) {\n            if (loadInitData !== noop)\n                loadInitData(_setInitFormData);\n            else\n                setLoaded(true);\n        }\n    }, [loaded]);\n\n    useEffect(() => {\n        setAntFormProps(getObjectExcludedProps(props, excludeProps));\n        // console.log('antFormProps props => ', getObjectExcludedProps(props, excludeProps));\n    }, [props]);\n\n\n    const _setInitFormData = (data) => {\n        // console.log(\"Form loaded init data => \", data);\n        setInitFormData(data);\n        setLoaded(true);\n    };\n\n\n    let antForm;\n    if (props && props.form) {\n        antForm = props.form;\n    } else {\n        const [form] = AntForm.useForm();\n        antForm = form;\n    }\n\n    const getBodyCls = () => {\n        let cls = [`${rtPrefix}-form-body`];\n        props.noPadding && cls.push(`${rtPrefix}-form-body-no-padding`);\n        return cls.join(\" \");\n    };\n\n    const onFinish = (rawValues) => {\n        const values = processBeforeSaveForm ? processBeforeSaveForm(rawValues) : rawValues;\n        console.log(`Success form [${props.name ? props.name : 'no name form'}]: `, values);\n        if (autoSaveForm && requestSaveForm) {\n            const saveObject = {\n                ...initFormData,\n                ...values,\n                // dateStart: getISO(values['dateStart'])\n            };\n            requestSaveForm({\n                method: methodSaveForm,\n                data: saveObject\n            })\n                .then(response => {\n                    notification.success({\n                        message: \"Сохранение прошло успешно\"\n                    });\n                    if (props.onFinish)\n                        props.onFinish(values);\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\n        } else if (props.onFinish)\n            props.onFinish(values);\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.error(\"Failed:\", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    return (\n        <React.Fragment>\n            {loaded ?\n                <AntForm\n                    form={antForm}\n                    {...antFormProps}\n                    className={`${antFormProps.className} ${rtPrefix}-form`}\n                    style={{ ...antFormProps.style, width: '100%', height: '100%' }}\n                    initialValues={{ ...antFormProps.initialValues, ...initFormData }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                >\n                    {header ? <div className={`${rtPrefix}-form-header`}><FormItems items={header}/></div> : null}\n                    <div className={getBodyCls()}><FormItems items={body}/></div>\n                    {footer ? <div className={`${rtPrefix}-form-footer`}><FormItems items={footer}/></div> : null}\n                </AntForm>\n                : null}\n        </React.Fragment>\n    );\n};\n\nForm.propTypes = {\n\n    /** Не делать отступы у формы от краев блока */\n    noPadding: PropTypes.bool,\n\n    /** Массив объектов для шапки формы. Как правило только заголовок. */\n    header: PropTypes.arrayOf(PropTypes.object),\n\n    /** Массив объектов для тела формы */\n    body: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n    /** Массив объектов для подвала формы. Как правило только кнопки \"Сохранить\" и \"Отмена\" */\n    footer: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ссылка на функцию загрузки значений по умолчанию\n     * (callBack) => callBack(initObject) */\n    loadInitData: PropTypes.func,\n\n    /** Производить ли автоматическое сохранение по параметрам requestSaveForm и methodSaveForm */\n    autoSaveForm: PropTypes.bool,\n\n    /** Запрос для автоматического сохранения формы */\n    requestSaveForm: PropTypes.func,\n\n    /** HTTP Метод, передаваемый в запрос сохранения */\n    methodSaveForm: PropTypes.string,\n\n    /** Функция обработки перед сохранением формы */\n    processBeforeSaveForm: PropTypes.func,\n};\n\nForm.defaultProps = {\n    noPadding: false,\n    loadInitData: noop,\n    autoSaveForm: true\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {getObjectExcludedProps} from '../utils/baseUtils';\nimport Form from './Form';\nimport {Modal} from 'antd';\n\nconst excludeProps = ['type', 'initialValues', 'form'];\n\nconst FormModal = props => {\n\n    const {\n        modal,\n        selectedRow,\n        visible,\n        setVisible,\n        saveRow,\n    } = props;\n\n    const getDefaultFooterProps = () => {\n\n        let okText = '';\n        let cancelText = '';\n        let modalTitle = '';\n\n        switch (modal.type) {\n            case 'addOnServer':\n            case 'addGroupOnServer':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Сохранить на сервере';\n                break;\n            case 'addOnLocal':\n            case 'addGroupOnLocal':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Сохранить локально';\n                break;\n            case 'editOnServer':\n            case 'editGroupOnServer':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Измененить на сервере';\n                break;\n            case 'editOnLocal':\n            case 'editGroupOnLocal':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Изменение локально';\n                break;\n            case 'select':\n                okText = 'Добавить';\n                cancelText = 'Отмена';\n                modalTitle = 'Выбор';\n                break;\n            case 'viewGroup':\n            case 'viewObject':\n                okText = 'Закрыть';\n                modalTitle = 'Просмотр';\n                break;\n            default: break;\n        }\n\n        if(modal.okText)\n            okText = modal.okText;\n\n        if(modal.cancelText)\n            cancelText = modal.cancelText;\n\n        if(modal.title)\n            modalTitle = modal.title;\n\n        return {okText, cancelText, title: modalTitle, okType: 'primary'}\n    };\n\n    let modalProps = { ...getDefaultFooterProps(), ...getObjectExcludedProps(modal, excludeProps) };\n\n    const onFinish = values => {\n        // console.log('FormModal Success:', values, selectedRow);\n        let saveObj = {};\n        if(modal.type.startsWith('add'))\n            saveObj = {...values};\n        else\n            saveObj = {...selectedRow, ...values};\n\n        saveRow({type: modal.type, row: saveObj, requestSaveRow: modal.requestSaveRow});\n\n        if (modalProps.onOk) modalProps.onOk(values);\n        if (modalProps.onFinish) modalProps.onFinish(values);\n    };\n\n    const onFinishFailed = errorInfo => {\n        // console.log('FormModal Failed:', errorInfo);\n        console.error(\"FormModal fields failed: \", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    const _onCancelHandler = (e) => {\n        // setVisibleModals({ ...visibleModals, [modal.type]: false });\n        // form.resetFields();\n        setVisible(modal.type, false);\n        if (modalProps.onCancel) modalProps.onCancel(e)\n    };\n\n    const _onLoadInitData = (callBack) => {\n        // console.log(\"Modal => loadInitData\", selectedRow);\n        formConfig.loadInitData(callBack, selectedRow)\n    }\n\n    const defaultFooter = [\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.cancelText,\n                className: 'mr-8',\n                onClick: _onCancelHandler,\n                ...modalProps.cancelButtonProps\n            }\n        },\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.okText,\n                type: modalProps.okType,\n                htmlType: 'submit',\n                ...modalProps.okButtonProps\n            }\n        }\n    ];\n\n    const formConfig =  {\n        footer: defaultFooter,\n        ...modal.form\n    };\n    return (\n        <Modal\n            {...modalProps}\n            centered\n            destroyOnClose\n            visible={visible}\n            onCancel={_onCancelHandler}\n            bodyStyle={{padding: 0, ...modalProps.bodyStyle}}\n            footer={null}\n        >\n            <Form\n                {...formConfig}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                loadInitData={_onLoadInitData}\n            />\n        </Modal>\n    )\n};\n\nFormModal.propTypes = {\n    /** Объект модального окна */\n    modal: PropTypes.object,\n\n    /** Выделенная строка таблицы */\n    selectedRow: PropTypes.object,\n\n    /** Состояние видимости модалки */\n    visible: PropTypes.bool,\n\n    /** Задание состояния видимости модалки */\n    setVisible: PropTypes.func,\n\n    /** CallBack функция для сохранения данных */\n    saveRow: PropTypes.func,\n};\n\nexport default FormModal;\n","import React, {forwardRef, useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport SortOrder from 'react-base-table/lib/SortOrder';\nimport AdvancedTable from '../AdvancedTable/AdvancedTable';\nimport { generateUUID, getObjectExcludedProps, noop, notificationError } from \"../utils/baseUtils\";\nimport FormModal from './FormModal';\nimport { notification as antNotification, notification } from \"antd\";\nimport { rtPrefix } from \"../utils/variables\";\nimport { empty, overlay } from \"../Table/defaultSettings\";\n\n\nconst excludeProps = ['onChange', 'defaultValue', 'modals', 'events', 'history'];\n\nconst FormTable = forwardRef((props, ref) => {\n\n    /** Состояние первоначалной настройки компонента*/\n    const [loading, setLoading] = useState(false);\n\n    /** Состояние отображения модалок таблицы */\n    const [visibleModals, setVisibleModals] = useState({\n        addOnServer: false,\n        editOnServer: false,\n        addOnLocal: false,\n        editOnLocal: false,\n        addGroupOnServer: false,\n        editGroupOnServer: false,\n        addGroupOnLocal: false,\n        editGroupOnLocal: false,\n        select: false,\n        viewGroup: false,\n        viewObject: false});\n    const [tableRows, setTableRows] = useState([]);\n    const [tableSelectedRowKeys, setTableSelectedRowKeys] = useState([]);\n    const [tableSelectedRow, setTableSelectedRow] = useState({});\n\n    /** Ссылка на объект таблицы */\n    const [tableRef, setTableRef] = useState({});\n    const _setTableRef = (_ref) => {\n        setTableRef(_ref);\n        ref && ref(_ref)\n    };\n\n    const {\n        rowKey,\n        rowKeyType,\n        customFields,\n        modals,\n        isGroupKey,\n        history,\n\n        componentType,\n        name,\n\n        // Form.Item props\n        value,\n\n        // Requests\n        requestDeleteRow,\n\n        dataDeleteRow\n    } = props;\n    const cmdProps = props.commandPanelProps;\n\n    // let advancedTableProps = getObjectExcludedProps(props, excludeProps);\n\n    /** Аналог componentDidMounted */\n    useEffect(() => {\n        // Если таблица локальная, то пробуем загрузить исходные данные\n        if(!loading && props.type === 'localSide') {\n            let cleanupFunction = false;\n            setLoading(true);\n            const loadData = async () => {\n                if (!loading && props.requestLoadRows) {\n                    props.requestLoadRows({params: {page: 0, size: 1}, data: {}})\n                        .then((response) => {\n                            // console.log('FormTable -> requestLoadRows -> response', response);\n                            // console.log('FormTable -> requestLoadRows -> value', value);\n                            if (!cleanupFunction)\n                                _addRowsToLocalTable(response.data, value);\n                        })\n                        .catch(error => notificationError(error, 'Ошибка загрузки данных') );\n                }\n                // console.log('FormTable -> setMounted ', advancedTableProps.type);\n                setLoading(false);\n            };\n            loadData();\n            return () => cleanupFunction = true;\n        }\n    }, [props.type]);\n\n    useEffect(() => {\n        if(props.selectable) {\n            console.log(\"FormTable => useEffect => value: \", value);\n            if(value && value.length > 0)\n                setTableSelectedRowKeys(value.map(item => item[rowKey]));\n            else\n                setTableSelectedRowKeys([]);\n\n        }\n    }, [value]);\n\n    /** Получить список кнопок для Command Panel */\n    const getEvents = () => {\n        return (cmdProps && cmdProps.systemBtnProps && Object.keys(cmdProps.systemBtnProps)) || [];\n    };\n\n    /** Получить рендер модалок */\n    const getModals = () => {\n        return modals.map((modal, index) => {\n            return (\n                <FormModal\n                    key={index}\n                    modal={modal}\n                    selectedRow={tableSelectedRow}\n                    visible={visibleModals[modal.type]}\n                    setVisible={(type, value) => setVisibleModals({ ...visibleModals, [type]: value })}\n                    saveRow={_onSaveRow}\n                />\n            )\n\n        })\n    };\n\n    /** Проверка существования кнопки в Command Panel */\n    const isExistCmdBtn = (btnType) => (cmdProps && cmdProps.systemBtnProps && cmdProps.systemBtnProps[btnType]);\n\n    /** Проверка соответствия типа кнопки и события ? (params) === (props) */\n    const equalsActionTypeCmdBtn = (btnType, actionType) => {\n        if(isExistCmdBtn(btnType)) {\n            if(btnType === 'edit') {\n                const aTypes = actionType.split('/');\n                if(aTypes[0] === 'g') {\n                    return !!(cmdProps.systemBtnProps[btnType].actionType\n                        && cmdProps.systemBtnProps[btnType].actionType.length === 2\n                        && cmdProps.systemBtnProps[btnType].actionType[1] === aTypes[1]);\n                }\n                else if (aTypes[0] === 'i') {\n                    return !!(cmdProps.systemBtnProps[btnType].actionType\n                        && cmdProps.systemBtnProps[btnType].actionType.length === 2\n                        && cmdProps.systemBtnProps[btnType].actionType[0] === aTypes[1]);\n                }\n            } else {\n                return !!(cmdProps.systemBtnProps[btnType].actionType\n                    && cmdProps.systemBtnProps[btnType].actionType === actionType);\n            }\n        }\n        return false;\n    };\n\n    /** Command Panel Events */\n    /** Добавить */\n    const _onClickAddHandler = () => {\n        if(equalsActionTypeCmdBtn('add', 'modal')) {\n            // console.log(\"FormTable => _onClickAddHandler => modal\");\n            if (props.type !== 'localSide') {\n                setVisibleModals({...visibleModals, addOnServer: true});\n            } else {\n                if (modals && (modals.find(modal => modal.type === 'select') !== undefined)) {\n                    setVisibleModals({...visibleModals, select: true});\n                    // console.log(\"FormTable => _onClickAddHandler => select\", modals.find(modal => modal.type === 'select'));\n                } else {\n                    setVisibleModals({...visibleModals, addOnLocal: true});\n                    // console.log(\"FormTable => _onClickAddHandler => addOnLocal\"); location.pathname\n                }\n            }\n        } else if (equalsActionTypeCmdBtn('add', 'page')) {\n            history.push(`${history.location.pathname}/new`);\n        }\n    };\n\n    /** Добавить копированием */\n    const _onClickAddAsCopyHandler = (event, row) => {\n        _addRowToLocalTable(row);\n    };\n\n    /** Добавить группу */\n    const _onClickAddGroupHandler = () => {\n        if(equalsActionTypeCmdBtn('addGroup', 'modal')) {\n            // console.log(\"FormTable => _onClickAddGroupHandler => modal\");\n            if (props.type !== 'localSide')\n                setVisibleModals({...visibleModals, addGroupOnServer: true});\n            else\n                setVisibleModals({...visibleModals, addGroupOnLocal: true});\n        } else if (equalsActionTypeCmdBtn('addGroup', 'page')) {\n            // console.log(\"FormTable => _onClickAddGroupHandler => page\");\n            history.push(`${history.location.pathname}/newGroup`);\n        }\n    };\n\n    /** Изменить */\n    const _onClickEditHandler = (event, {rowData}) => {\n        // console.log(\"FormTable -> _onClickEditHandler -> row \", rowData, props.type);\n        if (rowData[isGroupKey]) {\n            if (equalsActionTypeCmdBtn('edit', 'g/modal')) {\n                // console.log(\"FormTable => _onClickEditHandler => g/modal\");\n                if (props.type !== 'localSide')\n                    setVisibleModals({...visibleModals, editGroupOnServer: true});\n                else\n                    setVisibleModals({...visibleModals, editGroupOnLocal: true});\n            } else if (equalsActionTypeCmdBtn('edit', 'g/page')) {\n                // console.log(\"FormTable => _onClickEditHandler => g/page\");\n                history.push(`${history.location.pathname}/${rowData[rowKey]}`);\n            }\n        } else {\n            if (equalsActionTypeCmdBtn('edit', 'i/modal')) {\n                // console.log(\"FormTable => _onClickEditHandler => i/modal\");\n                if (props.type !== 'localSide')\n                    setVisibleModals({...visibleModals, editOnServer: true});\n                else\n                    setVisibleModals({...visibleModals, editOnLocal: true});\n            } else if (equalsActionTypeCmdBtn('edit', 'i/page')) {\n                // console.log(\"FormTable => _onClickEditHandler => i/page\");\n                history.push(`${history.location.pathname}/${rowData[rowKey]}`);\n            }\n        }\n    };\n\n    /** Удалить */\n    const _onClickDelete = (event, _selectedRowKeys) => {\n        if(props.type === 'localSide') {\n            const _rows = tableRows.filter(\n                (item) => !_selectedRowKeys.includes(item[rowKey])\n            );\n            setTableRows(_rows);\n            _onChange(_rows);\n        } else {\n            if(_selectedRowKeys && _selectedRowKeys.length > 0 && requestDeleteRow){\n                const deleteData = _selectedRowKeys.map(item => { return {[rowKey]: item, ...dataDeleteRow} } );\n                requestDeleteRow({data: {deleteData: deleteData}})\n                    .then((response) => {\n                        antNotification.success({message: 'Успешное удаленение'});\n                        tableRef && tableRef.reloadData({});\n\n                    })\n                    .catch(error => {\n                        notificationError(error, 'Ошибка удаления записи');\n                        tableRef && tableRef.reloadData({});\n                    });\n            }\n        }\n        cmdProps.onClickDelete && cmdProps.onClickDelete(event, _selectedRowKeys);\n    };\n\n    /** Переместить вверх / вниз */\n    const _onClickUpHandler = (event, row, rows) => {\n        _onChange(rows);\n        cmdProps.onClickUp && cmdProps.onClickUp(event, row, rows);\n    };\n\n    const _onClickDownHandler = (event, row, rows) => {\n        _onChange(rows);\n        cmdProps.onClickDown && cmdProps.onClickDown(event, row, rows);\n    };\n\n    /** Modal Events */\n    const _onSaveRow = ({type, row, requestSaveRow}) => {\n        // console.log(\"FormTable -> _saveRow -> row \", row);\n        if(type === 'select') {\n            // Получить массив строк из таблицы в модальной форме\n            let selectRows = row[name];\n            // console.log(\"FormTable -> _onSaveRow -> row [0]\", row);\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [0]\", selectRows);\n\n            // Фильтрация выбранных строк, оставить только те которых еще нет в таблице\n            let saveRows = selectRows.filter((sRow) =>\n                tableRows.findIndex((tRow) => tRow[rowKey] === sRow[rowKey]) === -1\n            );\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [1]\", saveRows);\n            if (customFields)\n                // Фильтрация по пользовательским параметрам\n                saveRows = saveRows.filter((sRow) => {\n                    let isValid = true;\n                    customFields.forEach((field) => {\n                        // Валидация по пользовательской логике функции validate\n                        if(field.validate)\n                            isValid = field.validate(sRow, tableRows);\n\n                        // Создание или переобразование по пользовательской логике функции value\n                        if(field.value)\n                            sRow[field.name] = field.value(sRow, tableRows);\n                    });\n                    if(isValid)\n                        return sRow;\n                });\n            setVisibleModals({ ...visibleModals, [type]: false });\n            notification.success({\n                message: `Добавлено ${saveRows.length} строк`\n            });\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [2]\", saveRows);\n            _addRowsToLocalTable([...tableRows, ...saveRows]);\n        }\n        else {\n            let saveRow = {...row};\n            if(type.indexOf('Group') !== -1)\n                saveRow[isGroupKey] = true;\n            else\n                saveRow[isGroupKey] = false;\n            if (customFields)\n                customFields.forEach((field) => saveRow[field.name] = field.value(saveRow, tableRows));\n            switch (type) {\n                case 'addOnServer':\n                case 'editOnServer':\n                case 'addGroupOnServer':\n                case 'editGroupOnServer':\n                    _addRowToServerTable({requestSaveRow, type, saveRow});\n                    break;\n                case 'addOnLocal':\n                case 'addGroupOnLocal':\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    _addRowToLocalTable(saveRow);\n                    break;\n                case 'editOnLocal':\n                case 'editGroupOnLocal':\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    _editRowToLocalTable(saveRow);\n                    break;\n\n                //            addGroupOnServer: false,\n                //         editGroupOnServer: false,\n                //         addGroupOnLocal: false,\n                //         editGroupOnLocal: false,\n                // case 'select':\n                case 'viewGroup':\n                case 'viewObject':\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    break;\n            }\n            // console.log(\"Modal Events => type: \", type, itemName, componentType, saveRow);\n        }\n\n    };\n\n    const _addRowToLocalTable = (row) => {\n        let saveObj = {...row};\n        if(rowKeyType === 'uuid')\n            saveObj[rowKey] = generateUUID();\n\n        // console.log('_addRowToLocalTable', tableRows);\n        _addRowsToLocalTable([...tableRows, saveObj]);\n    };\n\n    const _editRowToLocalTable = (row) => {\n        let arr = [...tableRows];\n        const rowIndex = arr.findIndex(item => item[rowKey] === row[rowKey]);\n        arr.splice(rowIndex, 1, row);\n        setTableRows(arr);\n        setTableSelectedRow(row);\n        _onChange(arr);\n    };\n\n    const _addRowsToLocalTable = (rows, keys) => {\n        // console.log('FormTable -> _addRowsToLocalTable -> rows', rows, keys);\n        setTableRows(rows);\n        if(props.selectable)\n            _onChange(keys);\n        else\n            _onChange(rows);\n    };\n\n    const _addRowToServerTable = ({requestSaveRow, type, saveRow}) => {\n        if (requestSaveRow\n            && ['addOnServer', 'editOnServer', 'addGroupOnServer', 'editGroupOnServer'].includes(type)\n        ) {\n            const method = (type === 'addOnServer' || type === 'addGroupOnServer') ? 'POST' : 'PUT';\n            // console.log(\"Modal Events => type: \", type, itemName, componentType, saveRow);\n            requestSaveRow({\n                method,\n                data: saveRow,\n            })\n                .then(response => {\n                    notification.success({\n                        message: 'Сохранение прошло успешно'\n                    });\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    tableRef && tableRef.reloadData({ filter: props.defaultFilter});\n                    // ref && ref.current && ref.current.reloadData({ filter: props.defaultFilter});\n                    // console.log('_addRowToServerTable tableRef =>', tableRef);\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\n        }\n    };\n\n    const _onRowClick = ({selected, rowData, rowIndex, rowKey}) => {\n        if(!props.selectable) {\n            setTableSelectedRow(rowData);\n            setTableSelectedRowKeys([rowKey]);\n            if(componentType === 'SelectTable')\n                _onChange([rowData]);\n        }\n        props.onRowClick && props.onRowClick({selected, rowData, rowIndex, rowKey});\n    };\n\n    const _onRowDoubleClick = ({rowData, rowIndex, rowKey}) => {\n        if (rowData[isGroupKey]) {\n            setVisibleModals({...visibleModals, viewGroup: true});\n        } else {\n            setVisibleModals({...visibleModals, viewObject: true});\n        }\n        props.onRowDoubleClick && props.onRowDoubleClick({rowData, rowIndex, rowKey});\n    };\n\n    const _onSelectedRowsChange = (keys, rows) => {\n        // console.log(\"_onSelectedRowsChange\", keys, rows);\n        if(props.selectable) {\n            setTableSelectedRow(rows[0]);\n            setTableSelectedRowKeys(keys);\n            _onChange(rows);\n        }\n    };\n\n    const _onChange = (rows) => {\n        if(rows !== undefined)\n            props.onChange(rows);\n        else\n            props.onChange(tableRows);\n    };\n\n    const getTableCls = () => {\n        let cls = [`${rtPrefix}-form-table`];\n        if (props.className)\n            cls.push(props.className);\n        return cls.join(' ');\n    };\n\n    return (\n        <div className={getTableCls()} style={props.style} >\n            <AdvancedTable\n                ref={_setTableRef}\n                {...getObjectExcludedProps(props, excludeProps)}\n                rows={tableRows}\n                setRows={setTableRows}\n                // selectedRowKeys={tableSelectedRow[rowKey] ? [tableSelectedRow[rowKey]] : []}\n                selectedRowKeys={tableSelectedRowKeys}\n                onRowClick={_onRowClick}\n                onRowDoubleClick={_onRowDoubleClick}\n                onSelectedRowsChange={_onSelectedRowsChange}\n                autoDeleteRows={false}\n                commandPanelProps={{\n                    ...props.commandPanelProps,\n                    showElements: getEvents(),// getShowElements(),\n                    onClickAdd: _onClickAddHandler,\n                    onClickAddAsCopy: _onClickAddAsCopyHandler,\n                    onClickAddGroup: _onClickAddGroupHandler,\n                    onClickEdit: _onClickEditHandler,\n                    onClickDelete: _onClickDelete,\n                    onClickDown: _onClickDownHandler,\n                    onClickUp: _onClickUpHandler,\n                }}\n                filterPanelProps={{\n                    ...props.filterPanelProps,\n                    // onApplyFilter: (filter) => console.log('filter', filter)\n                }}\n            />\n            {modals && getModals()}\n        </div>\n    );\n});\n\nFormTable.propTypes = {\n    /** Объект со свойствами Command Panel */\n    commandPanelProps: PropTypes.object,\n\n    /** Объект со свойствами Filter Panel */\n    filterPanelProps: PropTypes.object,\n\n    /**\n     * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n     * */\n\n    /** Строки по умолчанию */\n    defaultRows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ключи выделенных по умолчанию строк */\n    defaultSelectedRowKeys: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n\n    /** Значение строки поиска по умолчанию строк */\n    defaultSearchValue: PropTypes.string,\n\n    /** Объект фильтрации по умолчанию */\n    defaultFilter: PropTypes.object,\n\n    /** Сортировка по умолчанию */\n    defaultSortBy: PropTypes.shape({\n        key: PropTypes.string,\n        order: PropTypes.oneOf([SortOrder.ASC, SortOrder.DESC]),\n    }),\n\n    /**\n     * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n     * */\n\n    /** Значение строки поиска */\n    searchValue: PropTypes.string,\n\n    /** Фильтр */\n    filter: PropTypes.object,\n\n    /** Объект сортировки ({ key: 'string', order: 'asc' }).\n     * key - поле по которому сотрировать,\n     * order - направление сортировки (\"asc\", \"desc\")\n     * */\n    sortBy: PropTypes.shape({\n        key: PropTypes.string,\n        order: PropTypes.oneOf([SortOrder.ASC, SortOrder.DESC]),\n    }),\n\n    /**\n     * BASE PROPS\n     * */\n\n    /** Автоудаление строк из таблицы по кнопке в командной панели*/\n    autoDeleteRows: PropTypes.bool,\n\n    /** Поле для уникальной идентификации строки */\n    rowKey: PropTypes.string,\n\n    /** Тип поля для уникальной идентификации строки */\n    rowKeyType: PropTypes.oneOf(['uuid', 'number']),\n\n    /**\n     * VIEW PROPS\n     * */\n\n    /** Вывод когда нет данных. JSX для заглушки \"Нет данных\".  */\n    empty: PropTypes.element,\n\n    /** Отображение загрузки данных. JSX для загрузки данных. */\n    overlay: PropTypes.element,\n\n    /** Фиксированная ширина столбцов. Появится боковой скрол */\n    fixWidthColumn: PropTypes.bool,\n\n    /** Высота подвала */\n    footerHeight: PropTypes.number,\n\n    /** Отображать ли подвал */\n    footerShow: PropTypes.bool,\n\n    /** Названия футтера */\n    footerTitles: PropTypes.shape({\n        selectedRows: PropTypes.string,\n        loadedRows: PropTypes.string,\n        totalRows: PropTypes.string,\n    }),\n\n    /** Высота заголовка таблицы */\n    headerHeight: PropTypes.number,\n\n    /** Высота строки таблицы */\n    rowHeight: PropTypes.number,\n\n    /** Custom row renderer\n     * Параметры - ({ isScrolling, cells, columns, rowData, rowIndex, depth }) */\n    rowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n    /** Строки будут в зебро-стиле */\n    zebraStyle: PropTypes.bool,\n\n    /**\n     * LOAD DATA PROPS\n     * */\n\n    /** Порог в пикселях для вызова _onLoad.\n     * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n    loadThreshold: PropTypes.number,\n\n    /** Размер страницы */\n    pageSize: PropTypes.number,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n    /** Имя параметра для поиска */\n    searchParamName: PropTypes.string,\n\n    /**\n     * SELECTABLE PROPS\n     * */\n\n    /** Таблица с возможностью выбора строки */\n    selectable: PropTypes.bool,\n\n    /**\n     * TREE PROPS\n     * */\n\n    /** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\n    nodeAssociated: PropTypes.bool,\n\n    /** Ключ колонки по которой строить иерархию */\n    expandColumnKey: PropTypes.string,\n\n    /** Открыть по умолчанию вложенность до уровня N или 'All' */\n    expandDefaultAll: PropTypes.bool,\n\n    /** Загружать ноды иерархии по одной */\n    expandLazyLoad: PropTypes.bool,\n\n    /** Поле в котором хранится ссылка на родителя */\n    expandParentKey: PropTypes.string,\n\n    /**\n     * EVENTS\n     * */\n\n    /** Событие при клике на строку (только при selectable = false)\n     * Параметр - ({selected, rowData, rowIndex}) */\n    onRowClick: PropTypes.func,\n\n    /** Событие при двойном клике на строку.\n     * Параметр - ({rowData, rowIndex, rowKey}) */\n    onRowDoubleClick: PropTypes.func,\n\n    /** События при открытии / закрытии ноды\n     * Парметры - ({ expanded, rowData, rowIndex, rowKey }) */\n    onRowExpand: PropTypes.func,\n\n    /** Событие при выборе строки.\n     * Параметр - массив выбранных строе (только rowKey) */\n    onSelectedRowsChange: PropTypes.func,\n\n    /** События при открытии / закрытии ноды\n     * Парметры - (expandedRowKeys) - массив ключей открытых нод */\n    onExpandedRowsChange: PropTypes.func,\n\n    /** SELECTED PANEL */\n\n    /** Отображать ли панель выбранных элементов */\n    showSelection: PropTypes.bool,\n\n    /** Строка или функция для отображения элементов списка выбранных\n     * Строка - имя поля\n     * Функция - рендер строк.\n     * Параметры - ({ rowData, rowIndex }) */\n    rowRenderShowSelection: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.string,\n    ]),\n\n\n    /** Дополнительные пропсы для колонок */\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\n\n    /** Дополнительные поля и валидация в объекты таблицы */\n    customFields: PropTypes.arrayOf(PropTypes.object),\n\n    /** Модальные окна */\n    modals: PropTypes.arrayOf(PropTypes.object),\n\n    /** Событие об изменении объектов таблицы\n     * Параметр - (rows)*/\n    onChange: PropTypes.func,\n\n    /** implemented - только для (LocalTable + selectable) - Контроль значение из вне */\n    // value: PropTypes.arrayOf(PropTypes.object),\n\n    /** Not implemented - Задание значений по умолчанию */\n    defaultValue: PropTypes.arrayOf(PropTypes.object),\n\n    /** Классы стилей */\n    className: PropTypes.string,\n\n    /** Стили */\n    style: PropTypes.object,\n\n    /** Поле для идентификации группы */\n    isGroupKey: PropTypes.string,\n\n    /** Объект history для перемещения по путям */\n    history: PropTypes.object,\n\n    /** Функция запроса на получение конфига для таблицы */\n    requestLoadConfig: PropTypes.func,\n\n    /** Функция запроса на уделание данных */\n    requestDeleteRow: PropTypes.func,\n\n    /** Параметры объекта удаления */\n    dataDeleteRow: PropTypes.object,\n};\n\nFormTable.defaultProps = {\n    defaultRows: [],\n    defaultSelectedRowKeys: [],\n    defaultSearchValue: '',\n    defaultFilter: {},\n    defaultSortBy: {},\n\n    searchValue: '',\n    filter: {},\n    sortBy: {},\n\n    autoDeleteRows: true,\n    rowKey: 'id',\n\n    empty: empty,\n    overlay: overlay,\n    fixWidthColumn: false,\n    footerHeight: 30,\n    footerShow: false,\n    footerTitles: {\n        selectedRows: 'Выделено:',\n        loadedRows: 'Загружено записей:',\n        totalRows: 'Всего записей:',\n    },\n    headerHeight: 30,\n    rowHeight: 30,\n    zebraStyle: false,\n\n    loadThreshold: 300,\n    pageSize: 50,\n    requestLoadRows: noop,\n    requestLoadCount: noop,\n    searchParamName: 'searchLine',\n\n    selectable: false,\n\n    nodeAssociated: true,\n    expandColumnKey: undefined,\n    expandDefaultAll: true,\n    expandLazyLoad: false,\n    expandParentKey: 'parentId',\n\n    onRowClick: noop,\n    onRowDoubleClick: noop,\n    onRowExpand: noop,\n    onSelectedRowsChange: noop,\n    onExpandedRowsChange: noop,\n\n    showSelection: false,\n\n    rowKeyType: 'uuid',\n    onChange: noop,\n    isGroupKey: 'isGroup',\n};\n\nexport default FormTable;\n","import React, {useState, useEffect} from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../redux/rtd.actions\";\nimport {getObjectExcludedProps} from '../utils/baseUtils';\nimport moment from \"moment\";\nimport { Typography as AntTypography } from \"antd\";\nimport { getISO, toFormat } from \"../..\";\n\nexport const withStore = (Component, antFormItemProps) => {\n\n    const mapStateToProps = (store, ownProps) => {\n        const {subscribe} = ownProps;\n        if(subscribe){\n            const {name, path} = subscribe;\n            if(name && path)\n                return { [name]: objectPath.get(store, path) };\n        }\n\n        return {};\n    };\n    const mapDispatchToProps = (dispatch) =>\n        bindActionCreators({ setDateStore: setDateStore}, dispatch);\n\n    const defaultGetValueFromEvent = (valuePropName, event) => {\n        if (event && event.target && valuePropName in event.target) {\n            return event.target[valuePropName];\n        }\n        return event;\n    };\n\n    const defaultProps = {\n        trigger: 'onChange',\n        valuePropName: 'value',\n    };\n\n    const withStoreProps = { ...defaultProps, ...antFormItemProps };\n\n    return connect(mapStateToProps, mapDispatchToProps)( (props) => {\n\n        const {dispatchPath} = props;\n\n        const subscribe = props.subscribe ? props.subscribe : {};\n\n        const [subscribeProps, setSubscribeProps] = useState({});\n\n        const {trigger, getValueFromEvent, valuePropName} = withStoreProps;\n\n        const excludeProps = ['componentType', 'setDateStore', 'subscribe', subscribe.name, 'dispatchPath'];\n\n        const getValue = (...args) => {\n            let newValue;\n            if (getValueFromEvent) {\n                newValue = getValueFromEvent(...args);\n                // console.log(\"storeHOC => getValueFromEvent: \", newValue);\n            } else {\n                newValue = defaultGetValueFromEvent(valuePropName, ...args);\n                // console.log(\"storeHOC => defaultGetValueFromEvent: \", newValue);\n            }\n            return newValue;\n        };\n\n        /** Подписка на изменение props[subscribe.name] в сторе */\n        useEffect( () => {\n            if(subscribe.name) {\n                // console.log(\"storeHOC => subscribe: \", props[subscribe.name]);\n                subscribe.onChange && subscribe.onChange({value: props[subscribe.name], setSubscribeProps});\n            }\n            // console.log(\"Change Props[2]: \", props.subscribeЗф);\n        }, [props[subscribe.name]]);\n\n        useEffect(() => {\n            // dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, props.value);\n            if(dispatchPath) {\n                const newValue = props[valuePropName];\n                // console.log(\"storeHOC => dispatch: \", newValue);\n                dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, newValue);\n            }\n        }, [props]);\n\n        useEffect(() => {\n            if(subscribeProps.value) {\n                // console.log('subscribeProps.value => ', subscribeProps.value);\n                props[trigger] && props[trigger](subscribeProps.value);\n            }\n        }, [subscribeProps.value]);\n\n        const onChange = (...args) => {\n            // const newValue = getValue(...args);\n            // dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, newValue);\n            props[trigger] && props[trigger](...args);\n        };\n\n        const childProps = getObjectExcludedProps(props, excludeProps);\n        return <Component {...childProps} {...subscribeProps} {...{[trigger]: onChange }}/>\n    })\n};\n\n\nexport const DatePickerHOC = (Component) => {\n    return props => {\n        // console.log(\"DatePickerHOC => \", props);\n        if(props.value){\n            if(typeof props.value === 'string'){\n                // console.log(\"DatePickerHOC => onChange => string\");\n                props.onChange(moment(props.value), props.value);\n            }\n            // else {\n            // \tconsole.log(\"DatePickerHOC => onChange => moment\");\n            // \tprops.onChange(props.value, props.format ? toFormat(props.value,props.format) : getISO(props.value));\n            // }\n        }\n        const value = props.value ? (typeof props.value === 'string' ? moment(props.value) : props.value) : null;\n        return <Component {...props} value={value} />\n    };\n};\n\nexport const TypographyTitle = (props) =>\n    <AntTypography.Title {...props}> {props.label || props.value} </AntTypography.Title>;\n\nexport const TypographyText = (props) =>\n    <AntTypography.Text {...props}> {props.label || props.value} </AntTypography.Text>;\n\nexport const TypographyDate = (props) => {\n    const {label, value, format } = props;\n    const _value = value ? (format ? toFormat(value, format) : getISO(value)) : null;\n    return <AntTypography.Text {...props}> {label || _value} </AntTypography.Text>;\n}\n","\n\n\nconst getTitle = (type, element) => {\n    if(element === 'Group')\n        if(type === 'edit')\n            return 'Изменение папки';\n        else\n            return 'Создание папки';\n    else\n        return 'Изменение файла';\n};\n\nconst Modal = (type, element, requestSaveRow, processBeforeSaveForm, parentLoadHandler, requestLoadRows) => {\n    // console.log(\"FolderModal\", type, requestSaveRow, processBeforeSaveForm, parentLoadHandler, requestLoadRows);\n    let selectedRow;\n    return {\n        type: `${type}${element}OnServer`,\n        title: getTitle(type, element),\n        requestSaveRow: requestSaveRow,\n        width: 500,\n        // bodyStyle: {height: 650},\n        form: {\n            name: 'FileManagerModalModal',\n            labelCol: {span: 8},\n            wrapperCol: {span: 16},\n            processBeforeSaveForm: (rawValues) => processBeforeSaveForm(rawValues, type, element),\n            loadInitData: (callBack, row) => {\n                selectedRow = row;\n                callBack(type === 'edit' ? row : null);\n            },\n            body: [\n                {\n                    componentType: 'Item',\n                    label: 'Наименование',\n                    name: 'name',\n                    rules: [\n                        {\n                            message: `Заполните наименование`,\n                            required: true,\n                        },\n                    ],\n                    child: {componentType: 'Input'},\n                },\n                type === 'edit'\n                    ? {\n                        componentType: 'Item',\n                        label: 'Родитель',\n                        name: 'parentId',\n                        child: {\n                            componentType: 'SingleSelect',\n                            widthControl: 0,\n                            heightPopup: 300,\n                            expandColumnKey: 'id',\n                            rowRender: 'name',\n                            nodeAssociated: false,\n                            expandDefaultAll: true,\n                            // (info) аналогично ({params, data})\n                            // Но поскольку тут раскрывать объект не нужно, мы можем просто передать его дальше\n                            requestLoadRows: (info) => parentLoadHandler(type, selectedRow, info),\n                            requestLoadDefault: requestLoadRows,\n                        },\n                    }\n                    : {},\n            ],\n        },\n    };\n};\n\nexport const AddFolderModal = (...args) => Modal('add', 'Group', ...args);\nexport const EditFolderModal = (...args) => Modal('edit', 'Group', ...args);\nexport const EditFileModal = (...args) => Modal('edit', '', ...args);\n\n","import {notification} from 'antd';\n\nexport const copyTextToClipboard = text => {\n\tif (!navigator.clipboard) {\n\t\tfallbackCopyTextToClipboard(text);\n\t\treturn;\n\t}\n\tnavigator.clipboard.writeText(text).then(\n\t\tfunction() {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'success',\n\t\t\t\t'Успешно',\n\t\t\t\t`[${text}] успешно копирован в буфер обмена`\n\t\t\t);\n\t\t},\n\t\tfunction(err) {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'error',\n\t\t\t\t'Ошибка',\n\t\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\n\t\t\t);\n\t\t}\n\t);\n};\n\nconst fallbackCopyTextToClipboard = text => {\n\tlet textArea = document.createElement('textarea');\n\ttextArea.value = text;\n\n\t// Avoid scrolling to bottom\n\ttextArea.style.top = '0';\n\ttextArea.style.left = '0';\n\ttextArea.style.position = 'fixed';\n\n\tdocument.body.appendChild(textArea);\n\ttextArea.focus();\n\ttextArea.select();\n\n\ttry {\n\t\tlet successful = document.execCommand('copy');\n\t\tif (successful) {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'success',\n\t\t\t\t'Успешно',\n\t\t\t\t`[${text}] успешно копирован в буфер обмена`\n\t\t\t);\n\t\t} else {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'error',\n\t\t\t\t'Ошибка',\n\t\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\n\t\t\t);\n\t\t}\n\t} catch (err) {\n\t\topenNotificationWithIcon(\n\t\t\t'error',\n\t\t\t'Ошибка',\n\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\n\t\t);\n\t}\n\tdocument.body.removeChild(textArea);\n};\n\nconst openNotificationWithIcon = (type, title, msg) => {\n\tnotification[type]({\n\t\tmessage: title,\n\t\tdescription: msg\n\t});\n};\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormTable from \"../Form/FormTable\";\nimport {Button, Upload, notification as antNotification, Spin, Typography, Tooltip} from 'antd';\nimport {\n    HomeOutlined,\n    RollbackOutlined,\n    FolderFilled,\n    FileOutlined,\n    PlusOutlined,\n    LoadingOutlined,\n    FileWordOutlined,\n    FileExcelOutlined,\n    FileImageOutlined,\n    FileMarkdownOutlined,\n    FilePdfOutlined,\n    FilePptOutlined,\n    FileTextOutlined,\n    FileZipOutlined,\n    CopyOutlined\n} from '@ant-design/icons';\nimport { AddFolderModal, EditFileModal, EditFolderModal } from \"./AddFolderModal\";\nimport { rtPrefix } from \"../utils/variables\";\nimport { toDDMMYYYYHHMMSS } from \"../../components/utils/datesUtils\";\nimport { copyTextToClipboard } from \"../utils/clipboardUtils\";\nimport { notificationError } from \"../utils/baseUtils\";\n\n/**\n *\n * Виды: дерево, плоская, парно плоская\n * Функции: скопировать, переместить, удалить, создать папку, загрузить файл\n *\n * Зашитые параметры:\n *\n */\n\nconst FileManager = props => {\n\n    const {\n        rowKey,\n        isGroupKey,\n        expandParentKey\n    } = props;\n\n    const [tableRef, setTableRef] = useState({});\n    const _setTableRef = (ref) => setTableRef(ref);\n\n    // const tableRef = React.createRef();\n\n    const [breadcrumb, setBreadcrumb] = useState([{[rowKey]: null, name: <HomeOutlined />}]);\n    const [tableFilter, setTableFilter] = useState({deleted: false, [expandParentKey]: null});\n\n\n\n    /**\n     * TABLE EVENTS\n     */\n\n    // Down to folder OR download file\n    const _onRowDoubleClick = ({rowData, rowIndex, rowKey}) => {\n        if(rowData.isGroup) {\n            loadTable([...breadcrumb, rowData], { [expandParentKey]: rowKey });\n        } else {\n            props.requestDownloadFile(rowKey)\n        }\n        props.onRowDoubleClick && props.onRowDoubleClick({rowData, rowIndex, rowKey});\n    };\n\n    // Jump to folder\n    const _onClickBreadcrumb = (parentId, index) => {\n        loadTable(breadcrumb.slice(0, index), {[expandParentKey]: parentId})\n    };\n\n    // Up to folder\n    const _onClickBack = () => {\n        if(breadcrumb.length > 1) {\n            const newBreadcrumb = breadcrumb.slice(0, breadcrumb.length - 1);\n            // setBreadcrumb(newBreadcrumb);\n            // tableRef && tableRef.reloadData({ filter: { parentId: newBreadcrumb[newBreadcrumb.length - 1].id } });\n            loadTable(newBreadcrumb, { [expandParentKey]: newBreadcrumb[newBreadcrumb.length - 1][rowKey] })\n        }\n    };\n\n    // Delete folder OR file\n    const _onClickDelete = (event, _selectedRowKeys) => {\n        if(_selectedRowKeys && _selectedRowKeys.length > 0){\n            props.requestDeleteRow({data: {[rowKey]: _selectedRowKeys[0], deleted: true}})\n                .then((response) => {\n                    antNotification.success({message: 'Файл успешно удален'});\n                    tableRef && tableRef.reloadData({filter: tableFilter});\n                })\n                .catch(error => {\n                    notificationError(error, 'Ошибка удаления файла');\n                    tableRef && tableRef.reloadData({filter: tableFilter});\n                });\n        }\n    };\n\n    /**\n     * TABLE FUNCs\n     */\n    const loadTable = (breadcrumb, filter) => {\n        setBreadcrumb(breadcrumb);\n        const newFilter = {...tableFilter, ...filter};\n        setTableFilter(newFilter);\n        tableRef && tableRef.reloadData({filter: newFilter});\n    };\n\n\n    /**\n     * MODAL FUNCs\n     */\n    const processBeforeSaveModal = (rawValues, type, element) => {\n        let values = {...rawValues};\n        if(type === 'add')\n            values[expandParentKey] = breadcrumb[breadcrumb.length - 1][rowKey];\n\n        if(element === 'Group')\n            values.extension = 'dir';\n        // console.log(\"FileManager values =>\", values);\n        return values;\n    };\n\n    const parentLoadHandler = (type, selectedRow, {params, data}) => {\n        let newData = {...data, [isGroupKey]: true};\n        if (type === 'edit') newData.owner = selectedRow && selectedRow[rowKey];\n        return props.requestLoadParent({ params, data: newData, });\n    };\n\n    // const _onChangeViewDeleted = (checked) => {\n    //     const newFilter = {...tableFilter, deleted: checked };//? undefined : checked};\n    //     setTableFilter(newFilter);\n    //     tableRef && tableRef.reloadData({filter: newFilter});\n    // };\n\n    // console.log(\"EditFolderModal\", EditFolderModal(props.requestSaveRow, processBeforeSaveForm));\n\n\n    /**\n     * UPLOAD FUNCs\n     */\n\n    const _uploadFile = (file) => {\n        // console.log('beforeUpload fileList => ', fileList);\n        notification(file, 'loading');\n        if (props.requestUploadFile) {\n            props.requestUploadFile({ file: file, [expandParentKey]: breadcrumb[breadcrumb.length - 1][rowKey] })\n                .then((response) => {\n                    notification(file, 'success');\n                    tableRef && tableRef.reloadData({ filter: tableFilter });\n                })\n                .catch(() => {\n                    notification(file, 'error');\n                    tableRef && tableRef.reloadData({ filter: tableFilter });\n                });\n        }\n        return false;\n    };\n\n    const notification = (file, type) => {\n        const notifProps = {\n            key: file.uid,\n            duration: type === 'loading' ? 0 : 5,\n            icon: type === 'loading'\n                ? <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n                : null,\n            message: <span>Загрузка файла: <Typography.Text code>{file.name}</Typography.Text></span>\n        };\n        switch (type) {\n            case 'loading':\n                antNotification.info(notifProps);\n                break;\n            case 'success':\n                antNotification.success(notifProps);\n                break;\n            case 'error':\n                antNotification.error(notifProps);\n                break;\n            case 'close':\n                antNotification.close(file.uid);\n                break;\n            default:\n                break;\n        }\n    };\n\n    /**\n     * RENDER PARAMS\n     */\n    const customColumnProps = [\n        {\n            name: 'dateCreate',\n            cellRenderer: ({cellData}) => toDDMMYYYYHHMMSS(cellData),\n        },\n        {\n            name: 'dateUpdate',\n            cellRenderer: ({cellData}) => toDDMMYYYYHHMMSS(cellData),\n        },\n        {\n            name: 'path',\n            cellRenderer: ({rowData}) =>\n                rowData[isGroupKey] ? null\n                    :\n                <Tooltip title=\"Скопировать путь к файлу\">\n                    <CopyOutlined onClick={() => copyTextToClipboard(props.pathDownloadFile(rowData[rowKey]))}/>\n                </Tooltip>,\n        },\n        {\n            name: 'name',\n            cellRenderer: ({rowData}) => {\n                const styleDiv = {display: 'flex', alignItems: 'center'};\n                let Icon;\n                let styleIcon = {marginRight: '10px', fontSize: '16px'};\n                switch (rowData.extension) {\n                    case 'dir':\n                        Icon = FolderFilled;\n                        styleIcon.color = '#3a88c9';\n                        break;\n                    case 'doc':\n                    case 'docm':\n                    case 'docx':\n                    case 'dot':\n                    case 'dotx':\n                        Icon = FileWordOutlined;\n                        styleIcon.color = '#185abc';\n                        break;\n                    case 'xlm':\n                    case 'xls':\n                    case 'xlsm':\n                    case 'xlt':\n                    case 'xltm':\n                    case 'xltx':\n                    case 'xlsx':\n                        Icon = FileExcelOutlined;\n                        styleIcon.color = '#1f7244';\n                        break;\n                    case 'png':\n                    case 'jpg':\n                    case 'jpeg':\n                    case 'tiff':\n                    case 'bmp':\n                    case 'ico':\n                    case 'gif':\n                    case 'svg':\n                        Icon = FileImageOutlined;\n                        break;\n                    case 'markdown':\n                    case 'md':\n                        Icon = FileMarkdownOutlined;\n                        styleIcon.color = '#175987';\n                        break;\n                    case 'pdf':\n                        Icon = FilePdfOutlined;\n                        styleIcon.color = '#bd1f07';\n                        break;\n                    case 'ppt':\n                        Icon = FilePptOutlined;\n                        styleIcon.color = '#be5239';\n                        break;\n                    case 'txt':\n                        Icon = FileTextOutlined;\n                        break;\n                    case 'zip':\n                        Icon = FileZipOutlined;\n                        break;\n                    default:\n                        Icon = FileOutlined;\n                }\n\n\n                return (\n                    <div style={styleDiv}>\n                        {/*{rowData.isGroup*/}\n                        {/*    ? <FolderFilled style={{ marginRight: '10px', color: '#3a88c9'}}/>*/}\n                        {/*    : <FileOutlined style={{ marginRight: '10px' }}/>*/}\n                        {/*}*/}\n                        <Icon style={styleIcon}/>\n                        {rowData.name}\n                    </div>\n                );\n            },\n        }\n    ];\n\n    const uploadProps = {\n        multiple: true,\n        showUploadList: false,\n        beforeUpload: _uploadFile\n    };\n\n    const uploadRender = () => {\n        return (\n            <Upload {...uploadProps}>\n                <Button icon={<PlusOutlined />}/>\n            </Upload>\n        )\n    };\n\n    const breadcrumbRender = () => {\n        return (\n            <span className={`${rtPrefix}-file-manager-breadcrumb ml-8`}>\n                {breadcrumb.map((item, index) =>\n                    <span\n                        key={item[rowKey]}\n                        // type=\"text\"\n                        className={`${rtPrefix}-file-manager-breadcrumb-btn`}\n                        onClick={() => _onClickBreadcrumb(item[rowKey], index + 1)}\n                    >\n                        <span>/</span><span>{item.name}</span>\n                    </span>\n                )}\n            </span>\n        )\n    };\n\n    return (\n        <FormTable\n            {...props}\n            ref={_setTableRef}\n            type={'serverSide'}\n            componentType={'FilesTable'}\n            onRowDoubleClick={_onRowDoubleClick}\n            defaultFilter={tableFilter}\n            customColumnProps={customColumnProps}\n            commandPanelProps={{\n                ...props.commandPanelProps,\n                onClickDelete: _onClickDelete,\n                systemBtnProps: {\n                    add: {\n                        actionType: 'modal',\n                        tooltip: 'Загрузить файл(ы)',\n                        render: uploadRender\n                    },\n                    addGroup: {actionType: 'modal', tooltip: 'Создать папку'},\n                    edit: {actionType: ['modal', 'modal']},\n                    delete: {}\n                },\n                leftCustomSideElement: [\n                    {\n                        componentType: 'Item',\n                        child: {\n                            componentType: 'Button',\n                            icon: <RollbackOutlined />,\n                            label: 'Back',\n                            className: 'ml-4',\n                            disabled: (breadcrumb.length === 1),\n                            onClick: _onClickBack\n                        }\n                    },\n                    {\n                        componentType: 'Item',\n                        child: {\n                            componentType: 'Custom',\n                            render: breadcrumbRender\n                        }\n                    }\n                ],\n                // rightCustomSideElement: [\n                //     {\n                //         componentType: 'Item',\n                //         label: 'View deleted',\n                //         className: 'mb-0',\n                //         child: {\n                //             componentType: 'Switch',\n                //             checked: tableFilter.deleted,\n                //             onChange: _onChangeViewDeleted\n                //         }\n                //     },\n                // ]\n            }}\n            modals={[\n                AddFolderModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows),\n                EditFolderModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows),\n                EditFileModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows)\n            ]}\n        />\n    );\n};\n\nFileManager.propTypes = {\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция запроса на получение конфига для таблицы */\n    requestLoadConfig: PropTypes.func,\n};\n\nFileManager.defaultProps = {\n    rowKey: 'id',\n    isGroupKey: 'isGroup',\n    expandParentKey: 'parentId',\n};\n\nexport default FileManager;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport FormModal from \"../Form/FormModal\";\nimport { notification, Button} from \"antd\";\nimport { notificationError } from \"../utils/baseUtils\";\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../redux/rtd.actions\";\n\nconst Modal = props => {\n\n    const {buttonProps, modalConfig, modalData, dispatchPath} = props;\n\n    const [visible, setVisible] = useState(false);\n    const [_modalData, _setModalData] = useState({});\n    const [_buttonProps, setButtonProps] = useState({});\n\n    const subscribe = props.subscribe ? props.subscribe : {};\n\n    const setModalData = (value) => {\n        // console.log(\"setModalData: \", value);\n        _setModalData && _setModalData(value);\n    }\n\n    useEffect(() => {\n        _setModalData(modalData);\n    }, []);\n\n    /** Подписка на изменение props[subscribe.name] в сторе */\n    useEffect( () => {\n        if(subscribe.name) {\n            // console.log(\"Modal => subscribe: \", props[subscribe.name]);\n            subscribe.onChange && subscribe.onChange({value: props[subscribe.name], setModalData, setButtonProps});\n        }\n        // console.log(\"Change Props[2]: \", props.subscribeЗф);\n    }, [props[subscribe.name]]);\n\n    const _onOpenModal = () => {\n        // console.log(\"Modal => _modalData: \", _modalData);\n        setVisible(true)\n    }\n\n    const _onCloseModal = () => {\n        setVisible(false)\n    }\n\n    const _onSaveRow = ({type, row, requestSaveRow}) => {\n        dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, row);\n\n        if (requestSaveRow\n            && ['addOnServer', 'editOnServer', 'addGroupOnServer', 'editGroupOnServer'].includes(type)\n        ) {\n            const method = (type === 'addOnServer' || type === 'addGroupOnServer') ? 'POST' : 'PUT';\n            // console.log(\"Modal Events => type: \", type, method, row, _modalData);\n            requestSaveRow({\n                method,\n                data: row,\n            })\n                .then(response => {\n                    notification.success({\n                        message: 'Сохранение прошло успешно'\n                    });\n                    _onCloseModal();\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении'));\n        } else _onCloseModal();\n    };\n\n    return (\n        <React.Fragment>\n            <Button\n                type=\"primary\"\n                {...buttonProps}\n                {..._buttonProps}\n                onClick={_onOpenModal}\n            >{buttonProps && buttonProps.label}</Button>\n            <FormModal\n                modal={modalConfig}\n                selectedRow={_modalData}\n                visible={visible}\n                setVisible={_onCloseModal}\n                saveRow={_onSaveRow}\n            />\n        </React.Fragment>\n    )\n};\n\nModal.propTypes = {\n\n    /** Свойства [Button](https://ant.design/components/button/) из Ant Design\n     * Добавлено свойство `label` с типом `ReactNode` или `string` для формирования контента кнопки*/\n    buttonProps: PropTypes.object,\n\n    /** Объект модального окна. Стандартная конфигурация. */\n    modalConfig: PropTypes.object,\n\n    /** Данные для модального окна */\n    modalData: PropTypes.object,\n\n    /** Путь в сторе куда класть данных окна после закрытия */\n    dispatchPath: PropTypes.string,\n\n    /** Объект для подписки на изменения в STORE */\n    subscribe: PropTypes.object,\n};\n\nconst mapStateToProps = (store, ownProps) => {\n    const {subscribe} = ownProps;\n    if(subscribe){\n        const {name, path} = subscribe;\n        if(name && path)\n            return { [name]: objectPath.get(store, path) };\n    }\n    return {};\n};\nconst mapDispatchToProps = (dispatch) =>\n    bindActionCreators( { setDateStore: setDateStore, }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Select from '../Select/Select';\nimport {\n\tInput,\n\tInputNumber,\n\tForm as AntForm,\n\tButton,\n\tCheckbox,\n\tSwitch,\n\tDatePicker,\n\tRadio,\n    Divider,\n} from 'antd';\nimport { getObjectExcludedProps, getValueFromMultiSelect, getValueFromSingleSelect } from \"../utils/baseUtils\";\nimport FormTable from './FormTable';\n// import Typography from './Typography';\nimport { withStore, DatePickerHOC, TypographyTitle, TypographyText, TypographyDate } from \"./HOCs\";\nimport FileManager from \"../FileManager/FileManager\";\nimport Modal from \"../Modal/Modal\";\n\nconst excludeProps = ['child', 'componentType', 'field'];\nconst noAntItemTypes = ['Title', 'Text', 'Divider', 'Button', 'LocalTable', 'ServerTable', 'InfinityTable'];\n\nconst FormItem = (props) => {\n\n\tconst {child, field} = props;\n\tlet antFormItemProps = getObjectExcludedProps(props, excludeProps);\n\n\t// Если тип элемента Select -> добавить доп свойства к Form.Item\n    if (child && child.componentType && (child.componentType === 'SingleSelect' || child.componentType === 'MultiSelect')) {\n        antFormItemProps.valuePropName = 'defaultSelectedRowKeys';\n        antFormItemProps.getValueFromEvent = child.componentType === 'SingleSelect' ? getValueFromSingleSelect : getValueFromMultiSelect;\n        antFormItemProps.trigger = 'onChangeKeys';\n    } else if (child && child.componentType && child.componentType === 'SelectTable') {\n        // antFormItemProps.getValueFromEvent = getValueFromSelectTable;\n        // antFormItemProps.trigger = 'onRowClick';\n    }\n\n\t// console.log('FormItem props => ', props);\n\n\tconst getItem = () => {\n\t\tif (child) {\n\t\t    // const childProps = getObjectExcludedProps(child, ['componentType']);\n\t\t\tconst childProps = {...child};\n            // console.log('FormItem childProps => ', childProps);\n\t\t\tlet Component;\n\t\t\tlet placeholder;\n            switch (child.componentType) {\n\t\t\t\tcase 'Button':\n\t\t\t\t\tComponent = withStore(Button, antFormItemProps);\n\t\t\t\t\t// console.log('Props field => ', field);\n\t\t\t\t\tconst onClick = (e) => childProps.onClick && childProps.onClick(e, field);\n\t\t\t\t\treturn (<Component {...childProps} onClick={onClick}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'Title':\n\t\t\t\t\tComponent = withStore(TypographyTitle, antFormItemProps);\n\t\t\t\t\treturn (<Component {...child} componentType={child.componentType}/>);\n\t\t\t\tcase 'Text':\n\t\t\t\t\tComponent = withStore(TypographyText, antFormItemProps);\n\t\t\t\t\treturn (<Component {...child} componentType/>);\n\t\t\t\tcase 'Divider':\n\t\t\t\t\tComponent = withStore(Divider, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'Checkbox':\n\t\t\t\t\tComponent = withStore(Checkbox, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'DatePicker':\n\t\t\t\t\tComponent = withStore(DatePickerHOC(DatePicker), antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Выберите дату';\n\t\t\t\t\tconst style = {width: '100%', ...(childProps && childProps.style)};\n\t\t\t\t\treturn (<Component{...childProps} style={style} placeholder={placeholder}/>);\n\t\t\t\tcase 'DateText':\n\t\t\t\t\tComponent = withStore(TypographyDate, antFormItemProps);\n\t\t\t\t\treturn (<Component {...child} />);\n\t\t\t\tcase 'Input':\n\t\t\t\t\tComponent = withStore(Input, antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите значение';\n\t\t\t\t\treturn (<Component {...childProps} placeholder={placeholder} />);\n\t\t\t\tcase 'TextArea':\n\t\t\t\t\tComponent = withStore(Input.TextArea, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps} />);\n\t\t\t\tcase 'Password':\n\t\t\t\t\tComponent = withStore(Input.Password, antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите пароль';\n\t\t\t\t\treturn (<Component {...childProps} placeholder={placeholder}/>);\n\t\t\t\tcase 'InputNumber':\n\t\t\t\t\tComponent = withStore(InputNumber, antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите значение';\n\t\t\t\t\treturn (<Component {...childProps} style={{width: '100%'}} placeholder={placeholder}/>);\n\t\t\t\tcase 'Radio':\n\t\t\t\t\tComponent = withStore(Radio, antFormItemProps);\n\t\t\t\t\treturn <Component {...childProps}>{childProps && childProps.label}</Component>;\n\t\t\t\tcase 'RadioButton':\n\t\t\t\t\tComponent = withStore(Radio.Button, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'Switch':\n\t\t\t\t\tComponent = withStore(Switch, antFormItemProps);\n\t\t\t\t\treturn <Component {...childProps} />;\n                case \"RadioGroup\":\n                    Component = withStore(Radio.Group, antFormItemProps);\n                    return (<Component {...childProps} />);\n\t\t\t\tcase 'SingleSelect':\n                case 'MultiSelect':\n\t\t\t\t\treturn <Select {...childProps} type={child.componentType} name={antFormItemProps.name}/>;\n\t\t\t\t\t//'infinity', 'serverSide', 'localSide'\n                case 'InfinityTable':\n                    childProps.type = 'infinity';\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\n                case 'ServerTable':\n                    childProps.type = 'serverSide';\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\n                case 'LocalTable':\n                    childProps.type = 'localSide';\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\n                case 'SelectTable':\n\t\t\t\t\tchildProps.type = 'localSide';\n\t\t\t\t\treturn <FormTable {...childProps} name={props.name} componentType={child.componentType} /> ;\n\t\t\t\tcase 'FileManager':\n\t\t\t\t\treturn <FileManager {...childProps} name={props.name} />;\n\t\t\t\tcase 'Modal':\n\t\t\t\t\treturn <Modal {...childProps} name={props.name} />;\n\t\t\t\tcase 'Custom':\n\t\t\t\t\tComponent = withStore(child.render, antFormItemProps);\n\t\t\t\t\treturn <Component />;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t};\n\n    if(!antFormItemProps.label)\n        return <AntForm.Item {...antFormItemProps} noStyle>{getItem()}</AntForm.Item>;\n    else\n        return <AntForm.Item {...antFormItemProps}>{getItem()}</AntForm.Item>;\n};\n\nFormItem.propTypes = {\n\tchild: PropTypes.object.isRequired\n};\n\nexport default FormItem;\n","import React from 'react';\nimport {rtPrefix} from '../utils/variables';\nimport PropTypes from \"prop-types\";\n\nconst Layout = props => {\n\n    let itemProps = {};\n    Object.keys(props).forEach((key) =>\n        key !== 'children' ? (itemProps[key] = props[key]) : null\n    );\n\n    const getCls = () => {\n        let cls = [`${rtPrefix}-layout`];\n        itemProps.className && cls.push(itemProps.className);\n        return cls.join(' ');\n    };\n\n    return (\n        <div {...itemProps} className={getCls()}>\n            {props.children}\n        </div>\n    );\n};\n\nLayout.propTypes = {\n    /** Строка класса */\n    className: PropTypes.string,\n\n    /** Объект стиля */\n    style: PropTypes.object,\n};\n\nexport default Layout;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormItem from \"./FormItem\";\nimport Layout from \"../Layout/Layout\";\nimport { Row, Col, Tabs, Radio, Form as AntForm, Input, Space } from \"antd\";\nimport { getObjectExcludedProps } from \"../utils/baseUtils\";\n\nconst excludeProps = [\"children\", \"componentType\"];\n\nconst FormItems = (props) => {\n    const { items } = props;\n\n    // console.log('FormItems props => ', props);\n\n    const getItems = (data, antFormListParams) => {\n\n        return (data && data.map((item, index) => {\n            let itemProps = getObjectExcludedProps(item, excludeProps);\n            // console.log('FormItems index => ', index);\n\n            switch (item.componentType) {\n                case \"Row\":\n                    return (\n                        <Row key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Row>\n                    );\n                case \"Col\":\n                    return (\n                        <Col key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Col>\n                    );\n                case \"Layout\":\n                    return (\n                        <Layout key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Layout>\n                    );\n                case \"Tabs\":\n                    return (\n                        <Tabs key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Tabs>\n                    );\n                case \"TabPane\":\n                    return (\n                        <Tabs.TabPane key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Tabs.TabPane>\n                    );\n                case \"RadioGroup\":\n                    return (\n                        <Radio.Group key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Radio.Group>\n                    );\n                case \"Item\":\n                    let _item = { ...item };\n                    let _key = index;\n                    if (antFormListParams && antFormListParams.field) {\n                        if (_item.name) {\n                            if (Array.isArray(_item.name)) {\n                                _item.name = [antFormListParams.field.name, ..._item.name];\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\n                            } else {\n                                _item.name = [antFormListParams.field.name, _item.name];\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\n                            }\n                        }\n                    }\n                    // console.log('_item ', _item.name);\n                    return <FormItem key={`${_key}`} {..._item} field={{ ...antFormListParams }}/>;\n                case \"ListItems\":\n                    return (\n                        <AntForm.List key={index} {...itemProps}>\n                            {(fields, operation) => {\n                                const param = { fields: [...fields], operation: { ...operation } };\n                                return getItems(item.children, param);\n                            }}\n                        </AntForm.List>\n                    );\n                case \"ListItem\":\n                    // console.log('antFormListParams => ', antFormListParams);\n                    return (\n                        <div key={index}>\n                            {antFormListParams && antFormListParams.fields && antFormListParams.fields.map((field, fIndex) => {\n                                // console.log('index field.key', index, field);\n                                const param = { field: { ...field }, ...antFormListParams };\n                                return <div key={field.key}>{getItems(item.children, param)} </div>;\n                            })}\n                        </div>\n                    );\n\n\n                default:\n                    return null;\n            }\n        })) || null;\n    };\n\n    return getItems(items);\n};\n\nFormItems.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default FormItems;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {noop} from '../utils/baseUtils';\nimport {rtPrefix} from '../utils/variables';\nimport {Input, Tooltip, Popconfirm, Modal, Button} from 'antd';\nimport {\n\tPlusOutlined,\n\tCopyOutlined,\n\tFolderAddOutlined,\n\tDeleteOutlined,\n\tEditOutlined,\n\tArrowUpOutlined,\n\tArrowDownOutlined,\n\tSettingOutlined,\n\tFilterOutlined,\n\tExclamationCircleOutlined,\n} from '@ant-design/icons';\nimport FormItems from \"../Form/FormItems\";\nconst {confirm} = Modal;\n\nconst CommandPanel = (props) => {\n\tconst {\n\t\tborderStyle,\n\t\tdefaultValueSearch,\n\t\tdeleteConfirm,\n\t\tdeleteConfirmType,\n\t\tdeleteConfirmTitle,\n\t\tdeleteConfirmDescription,\n\t\tonClickAdd,\n\t\tonClickAddAsCopy,\n\t\tonClickAddGroup,\n\t\tonClickDelete,\n\t\tonClickEdit,\n\t\tonClickUp,\n\t\tonClickDown,\n\t\tonSearch,\n\t\tshowElements,\n        systemBtnProps,\n\t\tdisabledElements,\n\t\tleftCustomSideElement,\n\t\tcenterCustomSideElement,\n\t\trightCustomSideElement,\n\t} = props;\n\n    const defaultSystemBtnProps = {\n        add: {\n            tooltip: 'Добавить',\n            onClick: onClickAdd,\n            icon: <PlusOutlined />\n        },\n        addAsCopy: {\n            tooltip: 'Добавить копированием',\n            onClick: onClickAddAsCopy,\n            icon: <CopyOutlined />\n        },\n        addGroup: {\n            tooltip: 'Добавить группу',\n            onClick: onClickAddGroup,\n            icon: <FolderAddOutlined />\n        },\n        edit: {\n            tooltip: 'Изменить',\n            onClick: onClickEdit,\n            icon: <EditOutlined />\n        },\n        delete: {\n            tooltip: 'Удалить',\n            icon: <DeleteOutlined />\n        },\n        up: {\n            tooltip: 'Переместить вверх',\n            onClick: onClickUp,\n            icon: <ArrowUpOutlined />\n        },\n        down: {\n            tooltip: 'Переместить вниз',\n            onClick: onClickDown,\n            icon: <ArrowDownOutlined />\n        },\n\t\tsearch: {\n\t\t\tplaceholder: 'Поиск',\n\t\t\tonSearch: onSearch,\n\t\t},\n        settings: {\n            tooltip: 'Настройки таблицы',\n            tooltipPlacement: 'topRight',\n            onClick: () => {},\n            icon: <SettingOutlined />\n        },\n        filter: {\n            tooltip: 'Настройки фильтров',\n            tooltipPlacement: 'topRight',\n            onClick: () => {},\n            icon: <FilterOutlined />\n        }\n    };\n\n\tconst _onClickDelete = (event) => {\n\t\tif (deleteConfirmType === 'Modal') {\n\t\t\tdeleteButtonModalConfirm();\n\t\t} else {\n\t\t\tonClickDelete(event);\n\t\t}\n\t};\n\n\tconst deleteButtonPopupConfirm = () => {\n\t\treturn (\n\t\t\t<Popconfirm\n\t\t\t\tplacement='top'\n\t\t\t\ttitle={deleteConfirmDescription}\n\t\t\t\tonConfirm={onClickDelete}\n\t\t\t\tokText='Да'\n\t\t\t\tcancelText='Нет'\n\t\t\t>\n\t\t\t\t{renderDeleteBtn(false)}\n\t\t\t</Popconfirm>\n\t\t);\n\t};\n\n    const deleteButtonModalConfirm = () => {\n\t\tconfirm({\n\t\t\ttitle: deleteConfirmTitle,\n\t\t\ticon: <ExclamationCircleOutlined />,\n\t\t\tcontent: deleteConfirmDescription,\n\t\t\tcentered: true,\n\t\t\tokText: 'Ок',\n\t\t\tcancelText: 'Отмена',\n\t\t\tonOk() {\n\t\t\t\tonClickDelete();\n\t\t\t},\n\t\t});\n\t};\n\n    const renderDeleteBtn = (withOnClick) => {\n        const genProps = {...defaultSystemBtnProps['all'], ...systemBtnProps['all']};\n        const btnProps = {...defaultSystemBtnProps['delete'], ...systemBtnProps['delete']};\n\n        return (\n            <Tooltip title={btnProps.tooltip}>\n                <Button\n                    {...genProps}\n                    className={`${rtPrefix}-btn`}\n                    icon={btnProps.icon}\n                    onClick={withOnClick ? _onClickDelete : null}\n                    disabled={disabledElements.includes('delete')}\n                />\n            </Tooltip>\n        );\n    };\n\n    const renderBtn = (type) => {\n        const genProps = {...defaultSystemBtnProps['all'], ...systemBtnProps['all']};\n        const btnProps = {...defaultSystemBtnProps[type], ...systemBtnProps[type]};\n\n        if(showElements.includes(type)) {\n            if(btnProps.render)\n                return btnProps.render({\n                    disabled: disabledElements.includes(type),\n                    onClick: btnProps.onClick,\n\t\t\t\t\tonSearch: btnProps.onSearch\n\t\t\t\t});\n             else\n             \tif (type === 'search')\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Input.Search\n\t\t\t\t\t\t\tdisabled={disabledElements.includes(type)}\n\t\t\t\t\t\t\tdefaultValue={defaultValueSearch}\n\t\t\t\t\t\t\tplaceholder={btnProps.placeholder}\n\t\t\t\t\t\t\tonSearch={btnProps.onSearch}\n\t\t\t\t\t\t\tclassName={'search'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\telse\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Tooltip title={btnProps.tooltip} placement={btnProps.tooltipPlacement ? btnProps.tooltipPlacement : 'top'}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t{...genProps}\n\t\t\t\t\t\t\t\tclassName={`${rtPrefix}-btn`}\n\t\t\t\t\t\t\t\ticon={btnProps.icon}\n\t\t\t\t\t\t\t\tonClick={btnProps.onClick}\n\t\t\t\t\t\t\t\tdisabled={disabledElements.includes(type)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t)\n        }\n        else\n            return null\n    };\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{showElements.length ||\n\t\t\tleftCustomSideElement ||\n\t\t\tcenterCustomSideElement ||\n\t\t\trightCustomSideElement ? (\n\t\t\t\t<div\n\t\t\t\t\tclassName={`${rtPrefix}-command-panel border-${borderStyle}`}\n\t\t\t\t>\n\t\t\t\t\t<div className={'left-system-side'}>\n                        {renderBtn('add')}\n                        {renderBtn('addAsCopy')}\n                        {renderBtn('addGroup')}\n                        {renderBtn('edit')}\n\n\t\t\t\t\t\t{showElements.includes('delete')\n\t\t\t\t\t\t\t? deleteConfirm\n\t\t\t\t\t\t\t\t? deleteConfirmType === 'Popup'\n\t\t\t\t\t\t\t\t\t? deleteButtonPopupConfirm()\n\t\t\t\t\t\t\t\t\t: renderDeleteBtn(true)\n\t\t\t\t\t\t\t\t: renderDeleteBtn(true)\n\t\t\t\t\t\t\t: null}\n\n                        {renderBtn('up')}\n                        {renderBtn('down')}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'left-custom-side'}>\n\t\t\t\t\t\t{leftCustomSideElement ? <FormItems items={leftCustomSideElement} /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'center-custom-side'}>\n\t\t\t\t\t\t{centerCustomSideElement ? <FormItems items={centerCustomSideElement} /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'right-custom-side'}>\n\t\t\t\t\t\t{rightCustomSideElement ? <FormItems items={rightCustomSideElement} /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'right-system-side'}>\n\t\t\t\t\t\t{renderBtn('search')}\n                        {renderBtn('settings')}\n                        {renderBtn('filter')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n};\n\nCommandPanel.propTypes = {\n\t/** Центральный кастомный элемент командной панели */\n\tcenterCustomSideElement: PropTypes.arrayOf(PropTypes.object), // PropTypes.element,\n\n\t/** Тип бордера панели (по умолчанию 'bottom')\n\t * ['all', 'none', 'top', 'left', 'bottom', 'right', 'top-bottom', 'left-right'] */\n\tborderStyle: PropTypes.oneOf([\n\t\t'all',\n\t\t'none',\n\t\t'top',\n\t\t'left',\n\t\t'bottom',\n\t\t'right',\n\t\t'top-bottom',\n\t\t'left-right',\n\t]),\n\n\t/** Значение по умолчанию для строки поиска */\n\tdefaultValueSearch: PropTypes.string,\n\n\t/** Нужно ли делать подтверждение на кнопке удалить */\n\tdeleteConfirm: PropTypes.bool,\n\n\t/** Тип подтверждения удаления 'Popup' / 'Modal' */\n\tdeleteConfirmType: PropTypes.oneOf(['Popup', 'Modal']),\n\n\t/** Текст подтверждения на удаление элемента */\n\tdeleteConfirmTitle: PropTypes.string,\n\n\t/** Текст подтверждения на удаление элемента */\n\tdeleteConfirmDescription: PropTypes.string,\n\n\t/** Массив элементов командной панели для блокировки\n     ['add', 'addAsCopy', 'addGroup', 'delete', 'edit', 'up', 'down', 'search', 'settings', 'filter'] */\n\tdisabledElements: PropTypes.arrayOf(PropTypes.string),\n\n\t/** Левый кастомный элемент командной панели */\n\tleftCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Событие при нажатии на кнопку \"Добавить\" */\n\tonClickAdd: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Добавить копированием\" */\n\tonClickAddAsCopy: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Добавить группу\" */\n\tonClickAddGroup: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Удалить\" */\n\tonClickDelete: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Переместить вниз\" */\n\tonClickDown: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Изменить\" */\n\tonClickEdit: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Переместить вверх\" */\n\tonClickUp: PropTypes.func,\n\n\t/** Событие при поиске */\n\tonSearch: PropTypes.func,\n\n\t/** Правый кастомный элемент командной панели */\n\trightCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Массив элементов командной панели, которые надо отобразить\n     ['add', 'addAsCopy', 'addGroup', 'delete', 'edit', 'up', 'down', 'search', 'settings', 'filter'] */\n\tshowElements: PropTypes.arrayOf(PropTypes.string),\n\n    /** Объект кастомизации системных кнопок\n     { [btnType]: { tooltip: <String>, icon: <Icon />, render: ({disabled, onClick}) => <Component /> } } */\n    systemBtnProps: PropTypes.object\n};\n\nCommandPanel.defaultProps = {\n\tcenterCustomSideElement: null,\n\tborderStyle: 'bottom',\n\tdefaultValueSearch: undefined,\n\tdeleteConfirm: true,\n\tdeleteConfirmType: 'Modal',\n\tdeleteConfirmTitle: 'Подтвержение удаления',\n\tdeleteConfirmDescription: 'Вы действительно хотите удалить?',\n\tdisabledElements: [],\n\tleftCustomSideElement: null,\n\tonClickAdd: noop,\n\tonClickAddAsCopy: noop,\n\tonClickAddGroup: noop,\n\tonClickDelete: noop,\n\tonClickEdit: noop,\n\tonClickUp: noop,\n\tonClickDown: noop,\n\tonSearch: noop,\n\trightCustomSideElement: null,\n\tshowElements: [],\n    systemBtnProps: {},\n};\nexport default CommandPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '../Table/Table';\n\n/**\n * ### Список / Дерево.\n */\nconst List = (props) => {\n\tconst {rowKey, rowRender, title} = props;\n\n\tconst columns = [\n\t\t{\n\t\t\tkey: rowKey,\n\t\t\ttitle: title,\n\t\t\tdataKey: rowKey,\n\t\t\twidth: 500,\n\t\t\tcellRenderer:\n\t\t\t\ttypeof rowRender === 'function'\n\t\t\t\t\t? rowRender\n\t\t\t\t\t: ({rowData}) => <div>{rowData[rowRender]}</div>,\n\t\t},\n\t];\n\treturn <Table {...props} columns={columns} headerHeight={title ? 30 : 0} />;\n};\n\nList.propTypes = {\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { cellData, columns, column, columnIndex, rowData, rowIndex, container, isScrolling }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n\t/** Заголовок списка (по умолчанию скрыт)*/\n\ttitle: PropTypes.string,\n};\n\nList.defaultProps = {\n\trowKey: 'id',\n\trowRender: 'id',\n\ttitle: undefined,\n};\n\nexport default List;\n","import objectPath from 'object-path';\nimport {actionTypes} from './rtd.action.types';\n\nconst rtdReducer = (state = {}, action) => {\n    switch (action.type) {\n        case actionTypes.INIT_STORE: {\n            const {path} = action.payload;\n            // console.log(\"INIT_TABLE_STORE: \", path);\n            let newState = {...state};\n            objectPath.set(newState, path, {});\n            return newState;\n        }\n        case actionTypes.SET_DATA_STORE: {\n            const {path, row} = action.payload;\n\n            let newState = {...state};\n            objectPath.set(newState, path, row); // obj.a is now {}\n            // console.log(\"SET_ROWS newState: \", newState);\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\nexport default rtdReducer;\n"],"names":["noop","flatten","arrayOfArrays","reduce","flattened","item","concat","Array","isArray","getTableRowObjects","data","rowKeys","map","children","length","getTableRowKeys","rowKey","findNodeByRowKey","rowValue","node","i","_findNodeByRowKey","currentNode","value","currentChild","result","generateUUID","replace","c","crypto","getRandomValues","Uint8Array","toString","getValueFromSingleSelect","name","keys","getValueFromMultiSelect","getObjectExcludedProps","object","exclude","returnObject","Object","forEach","key","includes","notificationError","error","message","response","console","status","errorDescription","description","rtPrefix","empty","overlay","fontSize","SelectionHead","props","column","container","onSelectAll","selectedRowKeys","selectAll","_handleChange","e","rowObjects","filter","totalLength","selectLength","checked","selected","getRowChildren","findBrothers","selfItem","parentKey","arr","push","parentAnalysis","rowData","nodeAssociated","treeData","indeterminateRowKeys","_selectedRowKeys","_indeterminateRowKeys","currentRowData","parentExist","lastTypeSelect","typeSelect","nextSquare","indeterminateBrothers","selectedBrothers","allBrothers","index","indexOf","splice","indexS","indexI","SelectionCell","rowIndex","onChange","rowChildren","element","Set","_selectedRowObjects","_selectedRow","_selectAll","det","target","APP_TIME_OFFSET","getMomentFromStringByFormat","date","format","moment","utcOffset","getMomentWithOffset","getMomentWithOffsetTruncateDay","hours","minutes","seconds","milliseconds","toFormat","dateString","mom","isValid","toDDMMYYYYdot","toDDMMYYYYdotAltDashDash","toDDMMYYYYHHMMSS","toDDMMYYYYdash","getISO","toISOString","DateRange","useState","mounted","setMounted","undefined","startValue","setStartValue","endValue","setEndValue","className","nameStart","nameEnd","dateFormat","size","title","valueStart","valueEnd","showTime","useEffect","defaultValueStart","_onChange","defaultValueEnd","disabledStartDate","valueOf","disabledEndDate","onStartChange","onEndChange","locale","width","propTypes","PropTypes","string","func","oneOf","defaultProps","SingleDate","_value","setValue","defaultValue","_onChangePicker","FilterPanel","defaultFilter","setFilter","applyFilterTooltip","applyFilterSize","applyFilterRender","borderStyle","onChangeFilter","onApplyFilter","configFilter","resetFilterRender","resetFilterTooltip","resetFilterSize","_onChangeData","_filter","_applyFilter","_resetFilter","getPanelCls","cls","findIndex","join","componentType","Select","render","marginLeft","oneOfType","arrayOf","SelectionList","selectedRowObjects","rowRender","onClickDropSelect","isRequired","types","INIT_STORE","SET_DATA_STORE","setDateStore","path","row","type","actionTypes","payload","Table","forwardRef","ref","hasMore","setHasMore","loading","setLoading","_rows","_setRows","setSelectedRowKeys","_searchValue","setSearchValue","_sortBy","setSortBy","setSelectAll","setIndeterminateRowKeys","_expandedRowKeys","setExpandedRowKeys","_totalCountRows","setTotalCountRows","_footerShow","_setFooterShow","tableRef","useRef","defaultRows","defaultSelectedRowKeys","defaultSearchValue","defaultSortBy","rows","setRows","searchValue","sortBy","columns","autoDeleteRows","fixWidthColumn","footerHeight","footerShow","footerTitles","headerHeight","rowHeight","zebraStyle","rowRenderer","estimatedRowHeight","loadThreshold","pageSize","requestLoadRows","requestLoadCount","searchParamName","selectable","expandColumnKey","expandParentKey","expandLazyLoad","expandDefaultAll","onRowClick","onRowDoubleClick","onRowExpand","onSelectedRowsChange","onExpandedRowsChange","showSelection","rowRenderShowSelection","dispatchPath","subscribe","commandPanelProps","CommandPanel","filterPanelProps","footerProps","selectedDispatchPath","rowsDispatchPath","_setRowsHandler","showElements","leftCustomSideElement","centerCustomSideElement","rightCustomSideElement","flatRows","selectedRow","ss","ii","_dataProcessing","searchLine","reload","reloadData","current","setReloadTable","rowsDispatch","setRowsHandler","params","expandRow","pageNum","Math","floor","page","sort","order","dataQuery","then","catch","child","newRows","_rowEventHandlers","onClick","event","newRowObject","onDoubleClick","_onColumnSort","scrollToRow","loadParams","_getColumns","_columns","selectColumn","headerRenderer","cellRenderer","flexShrink","resizable","frozen","Column","FrozenDirection","LEFT","_onChangeSelectHandler","_onSelectAllHandler","unshift","_footer","selectedTitle","loadedTitle","totalTitle","_rowClassName","rowClassName","rowClass","callOrReturn","Boolean","onEndReached","selectedKeys","_onExpandedRowsChange","expandedRowKeys","_onRowExpand","expanded","allChildKeys","_getDisabledElementsOfCommandPanel","_disabledElements","disabledElements","_onClickAddAsCopy","onClickAddAsCopy","_onClickEdit","onClickEdit","_onClickDelete","onClickDelete","loop","callback","_onClickUp","newRowIndex","_getNewIndexRow","_changeIndexRow","onClickUp","_onClickDown","onClickDown","oldIndex","newIndex","_onSearch","preventDefault","onSearch","_onChangeFilter","_onApplyFilter","_onClickDropSelectHandler","dropObject","newSelectedKeys","height","number","shape","bool","selectedRows","loadedRows","totalRows","mapStateToProps","store","ownProps","objectPath","get","mapDispatchToProps","dispatch","bindActionCreators","connect","Paragraph","_selectedRowData","_setSelectedRowData","isSelectOpened","setIsSelectOpened","isClickInSelect","setIsClickInSelect","placeholder","widthControl","widthPopup","heightPopup","onChangeKeys","requestLoadDefault","searchable","setSelectedRowData","loadSelectedObject","request","srk","findRow","find","window","addEventListener","handleMouseClick","removeEventListener","onClosePopup","dataKey","_getHeadCls","_getHeadText","_getPopupCls","_getPopupStyle","defRowsLen","getEvents","systemBtnProps","_SingleSelectRow","contains","onOpenPopup","onClickClear","AdvancedTable","config","setConfig","configData","customColumnProps","requestLoadConfig","cleanupFunction","loadData","columnsByConfig","fields","colProps","alias","header","align","sortable","hidden","visible","cellData","getDefaultFilter","hierarchical","hierarchyLazyLoad","hierarchyField","split","hierarchyView","excludeProps","Form","loadInitData","body","footer","autoSaveForm","requestSaveForm","methodSaveForm","processBeforeSaveForm","loaded","setLoaded","antFormProps","setAntFormProps","initFormData","setInitFormData","_setInitFormData","antForm","form","useForm","getBodyCls","noPadding","onFinish","rawValues","values","log","saveObject","method","success","onFinishFailed","errorInfo","style","initialValues","FormModal","modal","setVisible","saveRow","getDefaultFooterProps","okText","cancelText","modalTitle","okType","modalProps","saveObj","startsWith","requestSaveRow","onOk","_onCancelHandler","onCancel","_onLoadInitData","callBack","formConfig","defaultFooter","label","cancelButtonProps","htmlType","okButtonProps","padding","bodyStyle","FormTable","addOnServer","editOnServer","addOnLocal","editOnLocal","addGroupOnServer","editGroupOnServer","addGroupOnLocal","editGroupOnLocal","select","viewGroup","viewObject","visibleModals","setVisibleModals","tableRows","setTableRows","tableSelectedRowKeys","setTableSelectedRowKeys","tableSelectedRow","setTableSelectedRow","setTableRef","_setTableRef","_ref","rowKeyType","customFields","modals","isGroupKey","history","requestDeleteRow","dataDeleteRow","cmdProps","_addRowsToLocalTable","getModals","_onSaveRow","isExistCmdBtn","btnType","equalsActionTypeCmdBtn","actionType","aTypes","_onClickAddHandler","location","pathname","_onClickAddAsCopyHandler","_addRowToLocalTable","_onClickAddGroupHandler","_onClickEditHandler","deleteData","_onClickUpHandler","_onClickDownHandler","selectRows","saveRows","sRow","tRow","field","validate","_addRowToServerTable","_editRowToLocalTable","_onRowClick","_onRowDoubleClick","_onSelectedRowsChange","getTableCls","onClickAdd","onClickAddGroup","SortOrder","ASC","DESC","withStore","Component","antFormItemProps","trigger","valuePropName","withStoreProps","subscribeProps","setSubscribeProps","getValueFromEvent","newValue","childProps","DatePickerHOC","TypographyTitle","TypographyText","TypographyDate","getTitle","Modal","parentLoadHandler","labelCol","span","wrapperCol","rules","required","info","AddFolderModal","args","EditFolderModal","EditFileModal","copyTextToClipboard","navigator","clipboard","fallbackCopyTextToClipboard","text","writeText","openNotificationWithIcon","err","textArea","document","createElement","top","left","position","appendChild","focus","successful","execCommand","removeChild","msg","FileManager","breadcrumb","setBreadcrumb","deleted","tableFilter","setTableFilter","isGroup","loadTable","requestDownloadFile","_onClickBreadcrumb","parentId","slice","_onClickBack","newBreadcrumb","newFilter","processBeforeSaveModal","extension","newData","owner","requestLoadParent","_uploadFile","file","notification","requestUploadFile","notifProps","uid","duration","icon","close","pathDownloadFile","styleDiv","display","alignItems","Icon","styleIcon","marginRight","FolderFilled","color","FileWordOutlined","FileExcelOutlined","FileImageOutlined","FileMarkdownOutlined","FilePdfOutlined","FilePptOutlined","FileTextOutlined","FileZipOutlined","FileOutlined","uploadProps","multiple","showUploadList","beforeUpload","uploadRender","breadcrumbRender","add","tooltip","addGroup","edit","delete","disabled","buttonProps","modalConfig","modalData","_modalData","_setModalData","_buttonProps","setButtonProps","setModalData","_onOpenModal","_onCloseModal","FormItem","getItem","TextArea","Password","Button","Group","Layout","itemProps","getCls","FormItems","items","getItems","antFormListParams","_item","_key","fieldKey","operation","param","fIndex","confirm","defaultValueSearch","deleteConfirm","deleteConfirmType","deleteConfirmTitle","deleteConfirmDescription","defaultSystemBtnProps","addAsCopy","up","down","search","settings","tooltipPlacement","deleteButtonModalConfirm","deleteButtonPopupConfirm","renderDeleteBtn","content","centered","withOnClick","genProps","btnProps","renderBtn","List","rtdReducer","state","action","newState","set"],"mappings":"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"}