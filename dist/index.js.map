{"version":3,"file":"index.js","sources":["../src/components/Table/defaultSettings.js","../src/components/utils/baseUtils.js","../src/components/Table/Selectable/SelectionHead.js","../src/components/Table/Selectable/SelectionCell.js","../src/components/CommandPanel/CommandPanel.js","../src/components/utils/datesUtils.js","../src/components/DateRange/DateRange.js","../src/components/SingleDate/SingleDate.js","../src/components/Select/SelectContainer.js","../src/components/Select/Select.js","../src/components/FilterPanel/FilterPanel.js","../src/components/Table/SelectionList/SelectionList.js","../src/components/Table/Table.js","../src/components/AdvancedTable/AdvancedTable.js","../src/components/List/List.js"],"sourcesContent":["import {Spin} from 'antd';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport React from 'react';\n\nexport const empty = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<span>Нет данных</span>{' '}\n\t</div>\n);\n\nexport const overlay = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<Spin\n\t\t\ttip='Загрузка...'\n\t\t\tindicator={<LoadingOutlined style={{fontSize: 24}} spin />}\n\t\t/>{' '}\n\t</div>\n);\n","export const noop = () => {};\n\nexport const flatten = (arrayOfArrays) =>\n\tarrayOfArrays.reduce(\n\t\t(flattened, item) =>\n\t\t\tflattened.concat(Array.isArray(item) ? flatten(item) : [item]),\n\t\t[]\n\t);\n\nexport const getTableRowObjects = (data) => {\n\tconst rowKeys = data.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item, getTableRowObjects(item.children)];\n\t\t}\n\t\treturn item;\n\t});\n\treturn rowKeys;\n};\n\nexport const getTableRowKeys = (data, rowKey) => {\n\tconst rowKeys = data.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item[rowKey], getTableRowKeys(item.children, rowKey)];\n\t\t}\n\t\treturn item[rowKey];\n\t});\n\treturn rowKeys;\n};\n\nexport const findNodeByRowKey = (data, rowKey, rowValue) => {\n\tlet node = {};\n\tlet item = {};\n\tfor (let i = 0; i < data.length; i++) {\n\t\titem = _findNodeByRowKey(data[i], rowKey, rowValue);\n\t\tif (item !== false) return item;\n\t}\n\treturn node;\n};\n\nconst _findNodeByRowKey = (currentNode, rowKey, value) => {\n\tlet i, currentChild, result;\n\n\tif (value === currentNode[rowKey]) {\n\t\treturn currentNode;\n\t} else {\n\t\tif (currentNode.children) {\n\t\t\tfor (i = 0; i < currentNode.children.length; i += 1) {\n\t\t\t\tcurrentChild = currentNode.children[i];\n\t\t\t\tresult = _findNodeByRowKey(currentChild, rowKey, value);\n\t\t\t\tif (result !== false) return result;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n};\n\nexport const generateUUID = () => {\n\treturn ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n\t\t(\n\t\t\tc ^\n\t\t\t(crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n\t\t).toString(16)\n\t);\n};\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport {flatten, getTableRowKeys} from '../../utils/baseUtils';\n\nconst SelectionHead = (props) => {\n\tconst {column, container} = props;\n\tconst {onSelectAll, selectedRowKeys, selectAll} = column;\n\n\tconst _handleChange = (e) => {\n\t\tconst rowKeys = flatten(\n\t\t\tgetTableRowKeys(container.props.data, column.rowKey)\n\t\t);\n\t\tconst totalLength = rowKeys.length;\n\t\tconst selectLength = selectedRowKeys.length;\n\t\tconst checked = !(totalLength === selectLength);\n\n\t\t// const newRowKeys = container.props.data.map((item) => { return item[column.rowKey] });\n\t\tonSelectAll({selected: checked, rowKeys: rowKeys});\n\t};\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={selectAll === null}\n\t\t\tonChange={_handleChange}\n\t\t\tchecked={selectAll}\n\t\t/>\n\t);\n};\n\nexport default SelectionHead;\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport {\n\tflatten,\n\tgetTableRowKeys,\n\tfindNodeByRowKey,\n} from '../../utils/baseUtils';\n\nconst getRowChildren = (data, rowKey) =>\n\tdata.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item[rowKey], getRowChildren(item.children, rowKey)];\n\t\t}\n\t\treturn item[rowKey];\n\t});\n\nconst findBrothers = (data, selfItem, rowKey, parentKey, rowKeys = null) => {\n\tlet arr = [];\n\tdata.forEach((item) => {\n\t\tif (\n\t\t\titem[parentKey] &&\n\t\t\titem[parentKey] === selfItem[parentKey] &&\n\t\t\titem[rowKey] !== selfItem[rowKey]\n\t\t) {\n\t\t\tif (rowKeys !== null) {\n\t\t\t\tif (rowKeys.includes(item[rowKey])) {\n\t\t\t\t\tarr.push(item[rowKey]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tarr.push(item[rowKey]);\n\t\t\t}\n\t\t} else if (item.children && item.children.length) {\n\t\t\tarr.push(\n\t\t\t\tfindBrothers(\n\t\t\t\t\titem.children,\n\t\t\t\t\tselfItem,\n\t\t\t\t\trowKey,\n\t\t\t\t\tparentKey,\n\t\t\t\t\trowKeys\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\treturn arr;\n};\n\nexport const parentAnalysis = ({\n\trowData,\n\trowKey,\n\tparentKey,\n\tchecked,\n\tnodeAssociated,\n\ttreeData,\n\tselectedRowKeys,\n\tindeterminateRowKeys,\n}) => {\n\tlet _selectedRowKeys = [...selectedRowKeys];\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\tlet currentRowData = rowData;\n\tlet parentExist = !!currentRowData[parentKey];\n\tlet lastTypeSelect = checked ? 'checked' : 'square';\n\tlet typeSelect = '';\n\tlet nextSquare = false;\n\n\t/** Пока есть родитель */\n\twhile (parentExist && nodeAssociated) {\n\t\tconst indeterminateBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_indeterminateRowKeys\n\t\t\t)\n\t\t);\n\t\tconst selectedBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_selectedRowKeys\n\t\t\t)\n\t\t);\n\t\tconst allBrothers = flatten(\n\t\t\tfindBrothers(treeData, currentRowData, rowKey, parentKey)\n\t\t);\n\n\t\tif (checked) {\n\t\t\tif (\n\t\t\t\tlastTypeSelect === 'checked' &&\n\t\t\t\tselectedBrothers.length === allBrothers.length\n\t\t\t)\n\t\t\t\ttypeSelect = 'checked';\n\t\t\telse typeSelect = 'square';\n\t\t} else {\n\t\t\tif (\n\t\t\t\t!checked &&\n\t\t\t\t!nextSquare &&\n\t\t\t\t(selectedBrothers.length || indeterminateBrothers.length)\n\t\t\t)\n\t\t\t\tnextSquare = true;\n\t\t\tif (nextSquare) typeSelect = 'square';\n\t\t\telse typeSelect = 'none';\n\t\t}\n\n\t\t// console.log(\"allBrothers \", allBrothers);\n\t\t// console.log(\"findParentById \", treeData,\n\t\t//     rowKey,\n\t\t//     parentKey,\n\t\t//     currentRowData[parentKey]);\n\t\t//\n\t\t// console.log(\"findNodeByRowKey \", findNodeByRowKey(treeData, rowKey, currentRowData[parentKey]));\n\n\t\t// Найти родителя\n\t\tcurrentRowData = findNodeByRowKey(\n\t\t\ttreeData,\n\t\t\trowKey,\n\t\t\tcurrentRowData[parentKey]\n\t\t);\n\n\t\tif (typeSelect === 'checked') {\n\t\t\t// Выделить галкой\n\t\t\t// console.log(\"checked\");\n\t\t\tlastTypeSelect = 'checked';\n\t\t\tif (!_selectedRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_selectedRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _indeterminateRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _indeterminateRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'square') {\n\t\t\t// Выдлеить квадратом\n\t\t\t// console.log(\"square: \");\n\t\t\tlastTypeSelect = 'square';\n\t\t\tif (!_indeterminateRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_indeterminateRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _selectedRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'none') {\n\t\t\t// Снять выделение\n\t\t\t// console.log(\"none: \");\n\t\t\tlastTypeSelect = 'none';\n\t\t\tconst indexS = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (indexS > -1) _selectedRowKeys.splice(indexS, 1);\n\t\t\tconst indexI = _indeterminateRowKeys.indexOf(\n\t\t\t\tcurrentRowData[rowKey]\n\t\t\t);\n\t\t\tif (indexI > -1) _indeterminateRowKeys.splice(indexI, 1);\n\t\t}\n\n\t\tparentExist = !!currentRowData[parentKey];\n\t\t// parentExist = проверка наличия след родителя\n\t}\n\n\treturn [_selectedRowKeys, _indeterminateRowKeys];\n};\n\nconst SelectionCell = (props) => {\n\tconst _handleChange = (checked) => {\n\t\tconst {rowData, rowIndex, column, container} = props;\n\t\tconst {\n\t\t\tonChange,\n\t\t\tselectedRowKeys,\n\t\t\tindeterminateRowKeys,\n\t\t\trowKey,\n\t\t\tparentKey,\n\t\t\tnodeAssociated,\n\t\t} = column;\n\n\t\t// const rowKeys = flatten(getTableRowKeys([rowData], column.rowKey));\n\t\t// const totalLength = container.props.data.length;\n\t\t// const checked = e.target.checked;\n\t\t// const currentRowKey = {[rowKey]: rowData[rowKey], checked};\n\t\t// console.log(\"_handleChange: \", selectedRowKeys);\n\n\t\tlet _selectedRowKeys = [...selectedRowKeys];\n\t\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\t\t/** Обработка себя, поиск детей, выделение / снятие их */\n\t\tlet rowChildren = [];\n\t\tif (checked) {\n\t\t\tif (rowData.children && nodeAssociated)\n\t\t\t\trowChildren = flatten(getRowChildren(rowData.children, rowKey));\n\n\t\t\t_selectedRowKeys = _selectedRowKeys\n\t\t\t\t.concat([rowData[rowKey]])\n\t\t\t\t.concat(rowChildren);\n\t\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t} else {\n\t\t\tif (rowData.children && nodeAssociated)\n\t\t\t\trowChildren = flatten(\n\t\t\t\t\tgetRowChildren(rowData.children, rowKey, false)\n\t\t\t\t);\n\n\t\t\t_selectedRowKeys = _selectedRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t}\n\n\t\t[_selectedRowKeys, _indeterminateRowKeys] = parentAnalysis({\n\t\t\trowData,\n\t\t\trowKey,\n\t\t\tparentKey,\n\t\t\tchecked,\n\t\t\tnodeAssociated,\n\t\t\ttreeData: container.props.data,\n\t\t\tselectedRowKeys: _selectedRowKeys,\n\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t});\n\n\t\t//return [...new Set(_disabledElements)]\n\t\t// onChange({ selected: checked, totalLength, rowData, rowIndex });\n\n\t\t/** Выясняем новое состояние галочки \"Выделить все\" */\n\t\tlet selectAll;\n\t\tconst selectLength = _selectedRowKeys.length;\n\t\tconst totalLength = flatten(\n\t\t\tgetTableRowKeys(container.props.data, column.rowKey)\n\t\t).length;\n\t\tif (selectLength === 0) selectAll = false;\n\t\telse if (totalLength === selectLength) selectAll = true;\n\t\telse if (totalLength !== selectLength) selectAll = null;\n\n\t\tonChange({\n\t\t\tselected: checked,\n\t\t\t_selectedRow: {\n\t\t\t\trowData: {...rowData},\n\t\t\t\trowIndex: rowIndex,\n\t\t\t\trowKey: rowKey,\n\t\t\t},\n\t\t\t_selectAll: selectAll,\n\t\t\t_selectedRowKeys: [...new Set(_selectedRowKeys)],\n\t\t\t_indeterminateRowKeys: [...new Set(_indeterminateRowKeys)],\n\t\t});\n\n\t\t// let uniqIds = {};\n\t\t// onChange({selected: checked, rowKeys: rowKeys.filter(obj => !uniqIds[obj[rowKey]] && (uniqIds[obj[rowKey]] = true)) });\n\t};\n\n\tconst {rowData, column} = props;\n\tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\n\tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\n\tconst checked = selectedRowKeys.includes(rowData[rowKey]);\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={det}\n\t\t\tonChange={(e) => _handleChange(e.target.checked)}\n\t\t\tchecked={checked}\n\t\t/>\n\t);\n};\n\nexport default SelectionCell;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {noop} from '../utils/baseUtils';\nimport {Input, Tooltip, Popconfirm, Modal} from 'antd';\nimport {\n\tPlusOutlined,\n\tCopyOutlined,\n\tFolderAddOutlined,\n\tDeleteOutlined,\n\tEditOutlined,\n\tArrowUpOutlined,\n\tArrowDownOutlined,\n\tSettingOutlined,\n\tFilterOutlined,\n\tExclamationCircleOutlined,\n} from '@ant-design/icons';\nconst {confirm} = Modal;\n\nconst CommandPanel = (props) => {\n\tconst {\n\t\tborderStyle,\n\t\tdefaultValueSearch,\n\t\tdeleteConfirm,\n\t\tdeleteConfirmType,\n\t\tdeleteConfirmTitle,\n\t\tdeleteConfirmDescription,\n\t\tonClickAdd,\n\t\tonClickAddAsCopy,\n\t\tonClickAddGroup,\n\t\tonClickDelete,\n\t\tonClickEdit,\n\t\tonClickUp,\n\t\tonClickDown,\n\t\tonSearch,\n\t\tshowElements,\n\t\tdisabledElements,\n\t\tleftCustomSideElement,\n\t\tcenterCustomSideElement,\n\t\trightCustomSideElement,\n\t} = props;\n\n\tconst _onClickDelete = (event) => {\n\t\tif (deleteConfirmType === 'Modal') {\n\t\t\tdeleteButtonModalConfirm();\n\t\t} else {\n\t\t\tonClickDelete(event);\n\t\t}\n\t};\n\n\tconst deleteButton = (withOnClick) => {\n\t\treturn (\n\t\t\t<Tooltip title='Удалить'>\n\t\t\t\t<button\n\t\t\t\t\tdisabled={disabledElements.includes('delete')}\n\t\t\t\t\tonClick={withOnClick ? _onClickDelete : null}\n\t\t\t\t>\n\t\t\t\t\t<DeleteOutlined />\n\t\t\t\t</button>\n\t\t\t</Tooltip>\n\t\t);\n\t};\n\n\tconst deleteButtonPopupConfirm = () => {\n\t\treturn (\n\t\t\t<Popconfirm\n\t\t\t\tplacement='top'\n\t\t\t\ttitle={deleteConfirmDescription}\n\t\t\t\tonConfirm={onClickDelete}\n\t\t\t\tokText='Да'\n\t\t\t\tcancelText='Нет'\n\t\t\t>\n\t\t\t\t{deleteButton(false)}\n\t\t\t</Popconfirm>\n\t\t);\n\t};\n\n\tfunction deleteButtonModalConfirm() {\n\t\tconfirm({\n\t\t\ttitle: deleteConfirmTitle,\n\t\t\ticon: <ExclamationCircleOutlined />,\n\t\t\tcontent: deleteConfirmDescription,\n\t\t\tcentered: true,\n\t\t\tokText: 'Ок',\n\t\t\tcancelText: 'Отмена',\n\t\t\tonOk() {\n\t\t\t\tonClickDelete();\n\t\t\t},\n\t\t});\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{showElements.length ||\n\t\t\tleftCustomSideElement ||\n\t\t\tcenterCustomSideElement ||\n\t\t\trightCustomSideElement ? (\n\t\t\t\t<div\n\t\t\t\t\tclassName={'command-panel-container border-' + borderStyle}\n\t\t\t\t>\n\t\t\t\t\t<div className={'left-system-side'}>\n\t\t\t\t\t\t{showElements.includes('add') ? (\n\t\t\t\t\t\t\t<Tooltip title='Добавить'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tdisabled={disabledElements.includes('add')}\n\t\t\t\t\t\t\t\t\tonClick={onClickAdd}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{showElements.includes('addAsCopy') ? (\n\t\t\t\t\t\t\t<Tooltip title='Добавить копированием'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tdisabled={disabledElements.includes(\n\t\t\t\t\t\t\t\t\t\t'addAsCopy'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tonClick={onClickAddAsCopy}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CopyOutlined />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{showElements.includes('addGroup') ? (\n\t\t\t\t\t\t\t<Tooltip title='Добавить группу'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tdisabled={disabledElements.includes(\n\t\t\t\t\t\t\t\t\t\t'addGroup'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tonClick={onClickAddGroup}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FolderAddOutlined />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{showElements.includes('edit') ? (\n\t\t\t\t\t\t\t<Tooltip title='Изменить'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tdisabled={disabledElements.includes('edit')}\n\t\t\t\t\t\t\t\t\tonClick={onClickEdit}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<EditOutlined />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{showElements.includes('delete')\n\t\t\t\t\t\t\t? deleteConfirm\n\t\t\t\t\t\t\t\t? deleteConfirmType === 'Popup'\n\t\t\t\t\t\t\t\t\t? deleteButtonPopupConfirm()\n\t\t\t\t\t\t\t\t\t: deleteButton(true)\n\t\t\t\t\t\t\t\t: deleteButton(true)\n\t\t\t\t\t\t\t: null}\n\n\t\t\t\t\t\t{showElements.includes('up') ? (\n\t\t\t\t\t\t\t<Tooltip title='Переместить вверх'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tdisabled={disabledElements.includes('up')}\n\t\t\t\t\t\t\t\t\tonClick={onClickUp}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ArrowUpOutlined />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{showElements.includes('down') ? (\n\t\t\t\t\t\t\t<Tooltip title='Переместить вниз'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tdisabled={disabledElements.includes('down')}\n\t\t\t\t\t\t\t\t\tonClick={onClickDown}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ArrowDownOutlined />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'left-custom-side'}>\n\t\t\t\t\t\t{leftCustomSideElement}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'center-custom-side'}>\n\t\t\t\t\t\t{centerCustomSideElement}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'right-custom-side'}>\n\t\t\t\t\t\t{rightCustomSideElement}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'right-system-side'}>\n\t\t\t\t\t\t{showElements.includes('search') ? (\n\t\t\t\t\t\t\t<Input.Search\n\t\t\t\t\t\t\t\tdisabled={disabledElements.includes('search')}\n\t\t\t\t\t\t\t\tdefaultValue={defaultValueSearch}\n\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\tplaceholder='Поиск'\n\t\t\t\t\t\t\t\tonSearch={onSearch}\n\t\t\t\t\t\t\t\tclassName={'search'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{showElements.includes('settings') ? (\n\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\ttitle='Настройки таблицы'\n\t\t\t\t\t\t\t\tplacement='topRight'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tdisabled={disabledElements.includes(\n\t\t\t\t\t\t\t\t\t\t'settings'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tonClick={() => {}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<SettingOutlined />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{showElements.includes('filter') ? (\n\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\ttitle='Настройки фильтров'\n\t\t\t\t\t\t\t\tplacement='topRight'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tdisabled={disabledElements.includes(\n\t\t\t\t\t\t\t\t\t\t'filter'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tonClick={() => {}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FilterOutlined />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n};\n\nCommandPanel.propTypes = {\n\t/** Центральный кастомный элемент командной панели */\n\tcenterCustomSideElement: PropTypes.element,\n\n\t/** Тип бордера панели (по умолчанию 'bottom')\n\t * ['all', 'none', 'top', 'left', 'bottom', 'right', 'top-bottom', 'left-right'] */\n\tborderStyle: PropTypes.oneOf([\n\t\t'all',\n\t\t'none',\n\t\t'top',\n\t\t'left',\n\t\t'bottom',\n\t\t'right',\n\t\t'top-bottom',\n\t\t'left-right',\n\t]),\n\n\t/** Значение по умолчанию для строки поиска */\n\tdefaultValueSearch: PropTypes.string,\n\n\t/** Нужно ли делать подтверждение на кнопке удалить */\n\tdeleteConfirm: PropTypes.bool,\n\n\t/** Тип подтверждения удаления 'Popup' / 'Modal' */\n\tdeleteConfirmType: PropTypes.oneOf(['Popup', 'Modal']),\n\n\t/** Текст подтверждения на удаление элемента */\n\tdeleteConfirmTitle: PropTypes.string,\n\n\t/** Текст подтверждения на удаление элемента */\n\tdeleteConfirmDescription: PropTypes.string,\n\n\t/** Массив элементов командной панели для блокировки\n     ['add', 'addAsCopy', 'addGroup', 'delete', 'edit', 'up', 'down', 'search', 'settings', 'filter'] */\n\tdisabledElements: PropTypes.arrayOf(PropTypes.string),\n\n\t/** Левый кастомный элемент командной панели */\n\tleftCustomSideElement: PropTypes.element,\n\n\t/** Событие при нажатии на кнопку \"Добавить\" */\n\tonClickAdd: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Добавить копированием\" */\n\tonClickAddAsCopy: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Добавить группу\" */\n\tonClickAddGroup: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Удалить\" */\n\tonClickDelete: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Переместить вниз\" */\n\tonClickDown: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Изменить\" */\n\tonClickEdit: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Переместить вверх\" */\n\tonClickUp: PropTypes.func,\n\n\t/** Событие при поиске */\n\tonSearch: PropTypes.func,\n\n\t/** Правый кастомный элемент командной панели */\n\trightCustomSideElement: PropTypes.element,\n\n\t/** Массив элементов командной панели, которые надо отобразить\n     ['add', 'addAsCopy', 'addGroup', 'delete', 'edit', 'up', 'down', 'search', 'settings', 'filter'] */\n\tshowElements: PropTypes.arrayOf(PropTypes.string),\n};\n\nCommandPanel.defaultProps = {\n\tcenterCustomSideElement: undefined,\n\tborderStyle: 'bottom',\n\tdefaultValueSearch: undefined,\n\tdeleteConfirm: true,\n\tdeleteConfirmType: 'Modal',\n\tdeleteConfirmTitle: 'Подтвержение удаления',\n\tdeleteConfirmDescription: 'Вы действительно хотите удалить?',\n\tdisabledElements: [],\n\tleftCustomSideElement: undefined,\n\tonClickAdd: noop,\n\tonClickAddAsCopy: noop,\n\tonClickAddGroup: noop,\n\tonClickDelete: noop,\n\tonClickEdit: noop,\n\tonClickUp: noop,\n\tonClickDown: noop,\n\tonSearch: noop,\n\trightCustomSideElement: undefined,\n\tshowElements: [],\n};\nexport default CommandPanel;\n","import moment from 'moment';\n\nexport const APP_TIME_OFFSET = 3;\n\nexport const getMomentFromStringByFormat = (date, format) =>\n\tdate ? moment(date, format).utcOffset(APP_TIME_OFFSET) : null;\n\nexport const getMomentWithOffset = (date) =>\n\tmoment(date).utcOffset(APP_TIME_OFFSET);\n\nexport const getMomentWithOffsetTruncateDay = (date) =>\n\tgetMomentWithOffset(date)\n\t\t.hours(0)\n\t\t.minutes(0)\n\t\t.seconds(0)\n\t\t.milliseconds(0)\n\t\t.format();\n\nexport const toFormat = (dateString, format) => {\n\tif (!dateString) {\n\t\treturn '';\n\t}\n\tconst mom = moment(dateString);\n\treturn mom.isValid() ? mom.format(format) : dateString;\n};\n\nexport const toDDMMYYYYdot = (dateString) => toFormat(dateString, 'DD.MM.YYYY');\n\nexport const toDDMMYYYYdotAltDashDash = (dateString) =>\n\ttoDDMMYYYYdot(dateString) || '--';\n\nexport const toDDMMYYYYHHMMSS = (dateString) =>\n\ttoFormat(dateString, 'DD.MM.YYYY HH:mm:ss') || '--';\n\nexport const toDDMMYYYYdash = (dateString) =>\n\ttoFormat(dateString, 'DD-MM-YYYY');\n\nexport const getISO = (date) =>\n\tmoment(date).utcOffset(APP_TIME_OFFSET).toISOString();\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport {DatePicker} from 'antd';\nimport locale from 'antd/es/date-picker/locale/ru_RU';\nimport {noop} from '../utils/baseUtils';\nimport {\n\tgetMomentWithOffsetTruncateDay,\n\tgetMomentFromStringByFormat,\n} from '../utils/datesUtils';\n\nconst DateRange = (props) => {\n\t/** Состояние первоначалной настройки компонента */\n\tconst [mounted, setMounted] = useState(false);\n\tconst [startValue, setStartValue] = useState();\n\tconst [endValue, setEndValue] = useState();\n\n\tconst {\n        className,\n\t\tnameStart,\n\t\tnameEnd,\n\t\tdateFormat,\n\t\tonChange,\n\t\ttitle,\n\t\tvalueStart,\n\t\tvalueEnd,\n\t} = props;\n\n\tuseEffect(() => {\n\t\tif (!mounted) {\n\t\t\t// console.log(\"DateRange mounted :\", nameStart, props.defaultValueStart);\n\t\t\tif (props.defaultValueStart) {\n\t\t\t\t_onChange(\n\t\t\t\t\tnameStart,\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueStart,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tsetStartValue(\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueStart,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (props.defaultValueEnd) {\n\t\t\t\t_onChange(\n\t\t\t\t\tnameEnd,\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueEnd,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tsetEndValue(\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueEnd,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tsetMounted(true);\n\t\t}\n\t}, [mounted]);\n\n\tuseEffect(() => {\n\t\tif (valueStart) {\n\t\t\tsetStartValue(moment(valueStart));\n\t\t\t// console.log('useEffect -> valueStart', valueStart);\n\t\t} else if (!props.defaultValueStart) setStartValue(null);\n\t}, [valueStart]);\n\tuseEffect(() => {\n\t\tif (valueEnd) {\n\t\t\tsetEndValue(moment(valueEnd));\n\t\t\t// console.log('useEffect -> valueEnd', valueEnd);\n\t\t} else if (!props.defaultValueEnd) setEndValue(null);\n\t}, [valueEnd]);\n\n\tconst disabledStartDate = (startValue) => {\n\t\tif (!startValue || !endValue) {\n\t\t\treturn false;\n\t\t}\n\t\treturn startValue.valueOf() > endValue.valueOf();\n\t};\n\n\tconst disabledEndDate = (endValue) => {\n\t\tif (!endValue || !startValue) {\n\t\t\treturn false;\n\t\t}\n\t\treturn endValue.valueOf() <= startValue.valueOf();\n\t};\n\n\tconst onStartChange = (date) => {\n\t\tsetStartValue(date);\n\t\t_onChange(nameStart, date);\n\t};\n\n\tconst onEndChange = (date) => {\n\t\tsetEndValue(date);\n\t\t_onChange(nameEnd, date);\n\t};\n\n\tconst _onChange = (name, value) => {\n\t\tif (value) onChange(name, getMomentWithOffsetTruncateDay(value));\n\t\telse onChange(name, value);\n\t};\n\n\treturn (\n\t\t<div className={`date-range-container ${className}`}>\n\t\t\t<div>\n\t\t\t\t<div className={'title'}>{title}</div>\n\t\t\t\t<span className={'subtitleStart'}>c</span>\n\t\t\t\t<DatePicker\n\t\t\t\t\tlocale={locale}\n\t\t\t\t\t// defaultValue={ checkDefValue(props.defaultValueStart) }\n\t\t\t\t\tsize={'small'}\n\t\t\t\t\tstyle={{width: '135px'}}\n\t\t\t\t\tdisabledDate={disabledStartDate}\n\t\t\t\t\tonChange={onStartChange}\n\t\t\t\t\tformat={dateFormat}\n\t\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\t\tvalue={startValue}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span className={'subtitleEnd'}>по</span>\n\t\t\t\t<DatePicker\n\t\t\t\t\tlocale={locale}\n\t\t\t\t\t// defaultValue={ checkDefValue(props.defaultValueEnd) }\n\t\t\t\t\tsize={'small'}\n\t\t\t\t\tstyle={{width: '135px'}}\n\t\t\t\t\tdisabledDate={disabledEndDate}\n\t\t\t\t\tonChange={onEndChange}\n\t\t\t\t\tformat={dateFormat}\n\t\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\t\tvalue={endValue}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nDateRange.propTypes = {\n\t/** Формат отображения даты (не влияет на формат в onChange) */\n\tdateFormat: PropTypes.string,\n\n\t/** Значение по умолчанию для первого пикера */\n\tdefaultValueStart: PropTypes.string,\n\n\t/** Значение по умолчанию для второго пикера */\n\tdefaultValueEnd: PropTypes.string,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Наименование параметра для первого пикера */\n\tnameStart: PropTypes.string,\n\n\t/** Наименование параметра для второго пикера */\n\tnameEnd: PropTypes.string,\n\n\t/** Событие при изменении любого из пикеров */\n\tonChange: PropTypes.func,\n\n\t/** Заголовок */\n\ttitle: PropTypes.string,\n\n\t/** Значение даты первого пикера (используется для управления датой из родительного компонента) */\n\tvalueStart: PropTypes.string,\n\n\t/** Значение даты второго пикера (используется для управления датой из родительного компонента) */\n\tvalueEnd: PropTypes.string,\n};\n\nDateRange.defaultProps = {\n\tnameStart: 'dateStart',\n\tnameEnd: 'dateEnd',\n\tdateFormat: 'DD.MM.YYYY',\n\tonChange: noop,\n\ttitle: 'Период',\n};\n\nexport default DateRange;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {DatePicker} from 'antd';\nimport moment from 'moment';\nimport {noop} from '../utils/baseUtils';\nimport {\n\tgetMomentFromStringByFormat,\n\tgetMomentWithOffsetTruncateDay,\n} from '../utils/datesUtils';\n\nconst SingleDate = (props) => {\n\t/** Состояние первоначалной настройки компонента */\n\tconst [mounted, setMounted] = useState(false);\n\tconst [_value, setValue] = useState(null);\n\n\tconst {dateFormat, defaultValue, name, onChange, title, value, className} = props;\n\n\tuseEffect(() => {\n\t\tif (!mounted) {\n\t\t\t// console.log(\"DateRange mounted :\", nameFrom, props.defaultValueFrom);\n\t\t\tif (defaultValue) {\n\t\t\t\t_onChange(\n\t\t\t\t\tname,\n\t\t\t\t\tgetMomentFromStringByFormat(defaultValue, dateFormat)\n\t\t\t\t);\n\t\t\t\tsetValue(getMomentFromStringByFormat(defaultValue, dateFormat));\n\t\t\t}\n\t\t\tsetMounted(true);\n\t\t}\n\t}, [mounted]);\n\n\tuseEffect(() => {\n\t\tif (value) {\n\t\t\tsetValue(moment(value));\n\t\t} else if (!defaultValue) setValue(null);\n\t}, [value]);\n\n\tconst _onChangePicker = (date) => {\n\t\tsetValue(date);\n\t\t_onChange(name, date);\n\t};\n\n\tconst _onChange = (name, value) => {\n\t\tif (value) onChange(name, getMomentWithOffsetTruncateDay(value));\n\t\telse onChange(name, value);\n\t};\n\n\treturn (\n\t\t<div className={`single-date-container ${className}`}>\n\t\t\t<div className={'title'}>{title}</div>\n\t\t\t<DatePicker\n\t\t\t\tsize={'small'}\n\t\t\t\tstyle={{width: '135px'}}\n\t\t\t\tonChange={_onChangePicker}\n\t\t\t\tformat={dateFormat}\n\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\tvalue={_value}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nSingleDate.propTypes = {\n\t/** Формат отображения даты (не влияет на формат в onChange) */\n\tdateFormat: PropTypes.string,\n\n\t/** Значение по умолчанию */\n\tdefaultValue: PropTypes.string,\n\n\t/** Наименование параметра */\n\tname: PropTypes.string,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Событие при изменении пикера */\n\tonChange: PropTypes.func,\n\n\t/** Заголовок */\n\ttitle: PropTypes.string,\n\n\t/** Значение даты */\n\tvalue: PropTypes.string,\n};\n\nSingleDate.defaultProps = {\n\tname: 'date',\n\tdateFormat: 'DD.MM.YYYY',\n\tonChange: noop,\n\ttitle: 'Дата',\n};\n\nexport default SingleDate;\n","import React, {useEffect, useRef} from 'react';\n\nexport const SelectContainer = (props) => {\n\tconst {handleOpen, handleClose, isOpened, className} = props;\n\tconst node = useRef(null);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('mousedown', handleMouseClick, false);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('mousedown', handleMouseClick, false);\n\t\t};\n\t}, []);\n\n\tconst handleMouseClick = (e) => {\n\t\tnode && node.current.contains(e.target) && !isOpened\n\t\t\t? handleOpen()\n\t\t\t: handleClose();\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`select-container ${className}`}\n\t\t\tstyle={{position: 'relative'}}\n\t\t\tref={node}\n\t\t>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n};\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {flatten, getTableRowKeys, noop} from '../utils/baseUtils';\nimport {SelectContainer} from '../Select/SelectContainer';\nimport {Button, Typography} from 'antd';\nimport Table from '../Table/Table';\nconst {Paragraph} = Typography;\n\nconst Select = (props) => {\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n\tconst [_selectedRowData, setSelectedRowData] = useState(null);\n\tconst [isSelectOpened, setIsSelectOpened] = useState(false);\n\n\tconst {\n\t\tname,\n\t\trowRender,\n        className,\n\t\ttype,\n\t\ttitle,\n\t\tplaceholder,\n        selectedRowKeys,\n\t\t// searchable,\n\t\twidthControl,\n\t\twidthPopup,\n\t\theightPopup,\n\n\t\tonChangeKeys,\n\n\t\t/** Table Props */\n\t\tdefaultSelectedRowKeys,\n\t\trowKey,\n\t\texpandColumnKey,\n\t\tshowSelection,\n\t\trequestLoadRows,\n\t\trequestLoadDefault,\n        commandPanelProps,\n\t\trows,\n\t} = props;\n\n\tconst searchable = commandPanelProps && commandPanelProps.showElements && commandPanelProps.showElements.includes('search');\n\n\tuseEffect(() => {\n\t\tif (defaultSelectedRowKeys) {\n\t\t\tconst request = requestLoadDefault\n\t\t\t\t? requestLoadDefault\n\t\t\t\t: requestLoadRows;\n\n\t\t\tif (!!request && !rows && defaultSelectedRowKeys.length > 0) {\n\t\t\t\t// console.log('defaultSelectedRowKeys ', defaultSelectedRowKeys, defaultSelectedRowKeys.length);\n\t\t\t\trequest({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t[rowKey]: defaultSelectedRowKeys,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tlet result = response.data;\n\t\t\t\t\t\tif (result.length > 0) setSelectedRowData(result[0]);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {});\n\t\t\t} else if (rows && defaultSelectedRowKeys.length > 0 && type === 'SingleSelect') {\n\t\t\t    const findRow = rows.find((row) => row[rowKey] === defaultSelectedRowKeys[0]);\n\t\t\t    // console.log(\"setSelectedRowData => \", findRow);\n                setSelectedRowData(findRow);\n            }\n\t\t\t// console.log(\"setSelectedRowKeys[65] -> \", defaultSelectedRowKeys);\n\t\t\tsetSelectedRowKeys(defaultSelectedRowKeys);\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t    if(selectedRowKeys && selectedRowKeys.length === 0) {\n            // console.log(\"setSelectedRowKeys[72] -> \", selectedRowKeys);\n            setSelectedRowKeys(selectedRowKeys);\n        }\n        if (rows && selectedRowKeys.length > 0 && type === 'SingleSelect') {\n            const findRow = rows.find((row) => row[rowKey] === selectedRowKeys[0]);\n            // console.log(\"setSelectedRowData => \", findRow);\n            setSelectedRowData(findRow);\n        }\n    }, [selectedRowKeys]);\n\n\tconst columns = [\n\t\t{\n\t\t\tkey: rowKey,\n\t\t\ttitle: title,\n\t\t\tdataKey: rowKey,\n\t\t\twidth: 500,\n\t\t\tcellRenderer:\n\t\t\t\ttypeof rowRender === 'function'\n\t\t\t\t\t? rowRender\n\t\t\t\t\t: ({rowData}) => <div>{rowData[rowRender]}</div>,\n\t\t},\n\t];\n\n\tconst _getHeadText = () => {\n\t\tif (type === 'SingleSelect') {\n\t\t\treturn _selectedRowData && _selectedRowData[rowRender]\n\t\t\t\t? `${_selectedRowData[rowRender]}`\n\t\t\t\t: `${placeholder}`;\n\t\t} else {\n\t\t\treturn _selectedRowKeys.length > 0\n\t\t\t\t? `Выбрано: ${_selectedRowKeys.length}`\n\t\t\t\t: `${placeholder}`;\n\t\t}\n\t};\n\n\tconst _getPopupStyle = () => {\n\t\t// if (heightPopup)\n\t\t// \treturn {height: `${heightPopup}px`, width: `${widthPopup}px`};\n\n\t\tlet height = {};\n\t\tlet defRowsLen = 0;\n\n\t\tif (!requestLoadRows && rows)\n\t\t\tif (expandColumnKey)\n\t\t\t\tdefRowsLen = flatten(getTableRowKeys(rows, rowKey)).length;\n\t\t\telse defRowsLen = rows.length;\n\n\t\t// console.log('_getPopupStyle', defRowsLen);\n\t\tif (defRowsLen && defRowsLen > 0) {\n\t\t\theight =\n\t\t\t\tdefRowsLen * 30 + // Кол-во строк * высоту строки\n\t\t\t\t(searchable ? 46 : 0) + // Размер поисковой строки или 0\n\t\t\t\t(type === 'MultiSelect' ? 65 : 0) + // Размер футтера (30) + размер кнопки 35 или 0\n\t\t\t\t(showSelection ? 200 : 0) + // Размер панели выбранных элементов или 0\n\t\t\t\t22; // Паддинги и бордер\n\t\t\t// console.log('heightPopup', height);\n\t\t\tif (height > heightPopup) height = `${heightPopup}px`;\n\t\t\telse height = `${height}px`;\n\t\t} else {\n\t\t\t// console.log(\"heightPopup\", heightPopup);\n\t\t\theight = `${heightPopup}px`;\n\t\t}\n\n\t\t// console.log(\"heightPopup, widthPopup\", heightPopup, widthPopup);\n\t\treturn {height, width: `${widthPopup}px`};\n\t};\n\n\tconst _onChange = (selectedKeys) => {\n\t\t// console.log('_onChange', selectedObjects);\n\t\tsetSelectedRowKeys(selectedKeys);\n\t\t// setSelectedRowData(selectedObjects);\n\t\tonChangeKeys(name, selectedKeys.length ? selectedKeys : null);\n\t\t// onChangeObjects(name, selectedObjects.length ? selectedObjects : null);\n\t\t// setCountSelect(selectedKeys.length);\n\t\tif (type === 'SingleSelect') {\n\t\t\tsetIsSelectOpened(false);\n\t\t}\n\t};\n\n\tconst _SingleSelectRow = ({selected, rowData, rowIndex}) => {\n\t\t// console.log(\"_SingleSelectRow => \", rowData);\n\t\tsetSelectedRowData(rowData);\n\t\t// selected ? setSingleSelectRowData(rowData) : setSingleSelectRowData({})\n\t};\n\n\treturn (\n\t\t<SelectContainer\n\t\t\thandleOpen={() => setIsSelectOpened(true)}\n\t\t\thandleClose={() => setIsSelectOpened(false)}\n\t\t\tisOpened={isSelectOpened}\n            className={className}\n\t\t>\n\t\t\t{title ? <div className={'title'}>{title}</div> : null}\n\t\t\t<div\n\t\t\t\tclassName={[\n\t\t\t\t\t'select-header',\n\t\t\t\t\tisSelectOpened ? 'opened' : '',\n                    _selectedRowKeys && _selectedRowKeys.length > 0 ? 'selected' : '',\n\t\t\t\t].join(' ')}\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: widthControl === 0 ? '100%' : `${widthControl}px`,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Paragraph ellipsis> {_getHeadText()} </Paragraph>\n\t\t\t</div>\n\t\t\t{isSelectOpened ? (\n\t\t\t\t<div className='select-popup' style={_getPopupStyle()}>\n\t\t\t\t\t<Table\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t\tdefaultSelectedRowKeys={_selectedRowKeys}\n\t\t\t\t\t\tselectedRowKeys={_selectedRowKeys}\n\t\t\t\t\t\theaderHeight={0}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\ttype={!!requestLoadRows ? 'serverSide' : 'localSide'}\n\t\t\t\t\t\t// showElements={searchable ? ['search'] : undefined}\n\t\t\t\t\t\tselectable={type === 'MultiSelect'}\n\t\t\t\t\t\tfooterShow={type === 'MultiSelect'}\n\t\t\t\t\t\tshowSelection={showSelection}\n\t\t\t\t\t\trowRenderShowSelection={rowRender}\n\t\t\t\t\t\tonRowClick={_SingleSelectRow}\n\t\t\t\t\t\tonSelectedRowsChange={_onChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{type === 'MultiSelect' ? (\n\t\t\t\t\t\t<div className={'close-panel'}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={() => setIsSelectOpened(false)}\n\t\t\t\t\t\t\t\tsize={'small'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tOk\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</SelectContainer>\n\t);\n};\n\nSelect.propTypes = {\n\t/** Имя параметра селекта (вернется в onChangeKeys и onChangeObjects) */\n\tname: PropTypes.string.isRequired,\n\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { rowData, rowIndex }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n\t\t.isRequired,\n\n\t/** Тип селекта (SingleSelect и MultiSelect) */\n\ttype: PropTypes.oneOf(['SingleSelect', 'MultiSelect']).isRequired,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Заголовок фильтра */\n\ttitle: PropTypes.string,\n\n\t/** Строка, когда ничего не выбрано */\n\tplaceholder: PropTypes.string,\n\n\t/** Запрос на загрузку дефолтных данных */\n\trequestLoadDefault: PropTypes.func,\n\n    selectedRowKeys: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n\n\t// /** Показывать ли поисковую строку */\n\t// searchable: PropTypes.bool,\n\n\t/** Ширина поля выбора в пикселях */\n\twidthControl: PropTypes.number,\n\n\t/** Ширина выпадающего меню */\n\twidthPopup: PropTypes.number,\n\n\t/** Высота выпадающего меню (по умолчанию считается сама) */\n\theightPopup: PropTypes.number,\n\n    /** Событие об изменении состояния селектора */\n\tonChangeKeys: PropTypes.func,\n};\n\nSelect.defaultProps = {\n\tonChangeKeys: noop,\n\t// onChangeObjects: noop,\n\tplaceholder: 'Выбрать',\n\t// searchable: false,\n\twidthControl: 110,\n\twidthPopup: 400,\n\theightPopup: 600,\n    rowKey: 'id',\n};\n\nexport default Select;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {Button, Tooltip} from 'antd';\nimport {noop} from '../utils/baseUtils';\nimport DateRange from '../DateRange/DateRange';\nimport SingleDate from '../SingleDate/SingleDate';\nimport Select from '../Select/Select';\n\nconst FilterPanel = (props) => {\n\t/**\n\t * Период с, по (день / месяц / год)\n\t * Множественный выбор (дерево с галочками с поиском) (ajax / const)\n\t * Множественный выбор (список с поиском) (ajax / const)\n\t * Единственный выбор (список с поиском) (ajax / const)\n\t */\n\n\tconst [filter, setFilter] = useState(props.defaultFilter);\n\t// const [multiSelectObjects, setMultiSelectObjects] = useState([]);\n\n\tconst {\n\t\tapplyFilterRender,\n\t\tborderStyle,\n\t\tonChangeFilter,\n\t\tonApplyFilter,\n\t\tconfigFilter,\n\t\tresetFilterRender,\n\t} = props;\n\n\tconst _onChangeData = (name, value) => {\n\t\t// console.log(\"FilterPanel -> onChangeData\", name, value);\n\t\tlet _filter = {...filter};\n\t\tif (value === null) {\n\t\t\tdelete _filter[name];\n\t\t} else {\n\t\t\t_filter = {..._filter, ...{[name]: value}};\n\t\t}\n\t\t// console.log(\"onChangeData:\", _filter);\n\t\tsetFilter(_filter);\n\t\tonChangeFilter(_filter);\n\t};\n\n\tconst _applyFilter = () => {\n\t\t// console.log(\"_applyFilter:\", filter);\n\t\tonApplyFilter(filter);\n\t};\n\tconst _resetFilter = () => {\n\t\tsetFilter(props.defaultFilter);\n\t\tonChangeFilter(props.defaultFilter);\n\t\tonApplyFilter(props.defaultFilter);\n\t\t// setMultiSelectObjects([]);\n\t};\n\n\t// const _onChangeObjects = (name, value) => {\n\t// \tlet _multiSelectObjects = {...multiSelectObjects};\n\t// \tif (value === null) {\n\t// \t\tdelete _multiSelectObjects[name];\n\t// \t} else {\n\t// \t\t_multiSelectObjects = {..._multiSelectObjects, ...{[name]: value}};\n\t// \t}\n\t// \t// console.log(\"onChangeData:\", _filter);\n\t// \tsetMultiSelectObjects(_multiSelectObjects);\n\t// };\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{configFilter && configFilter.length ? (\n\t\t\t\t<div className={`filter-panel-container border-${borderStyle}`}>\n\t\t\t\t\t{configFilter.map((item, index) => {\n\t\t\t\t\t\t// console.log(\"item.defaultRows\", item.defaultRows);\n\t\t\t\t\t\tswitch (item.type) {\n\t\t\t\t\t\t\tcase 'DateRange':\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<DateRange\n\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t{...item}\n                                        className={`filter-panel-item ${item.className}`}\n\t\t\t\t\t\t\t\t\t\tdefaultValueStart={\n\t\t\t\t\t\t\t\t\t\t\tfilter[item.nameStart]\n\t\t\t\t\t\t\t\t\t\t\t\t? filter[item.nameStart]\n\t\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdefaultValueEnd={\n\t\t\t\t\t\t\t\t\t\t\tfilter[item.nameEnd]\n\t\t\t\t\t\t\t\t\t\t\t\t? filter[item.nameEnd]\n\t\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonChange={_onChangeData}\n\t\t\t\t\t\t\t\t\t\tvalueStart={filter[item.nameStart]}\n\t\t\t\t\t\t\t\t\t\tvalueEnd={filter[item.nameEnd]}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcase 'SingleDate':\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<SingleDate\n\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t{...item}\n                                        className={`filter-panel-item ${item.className}`}\n\t\t\t\t\t\t\t\t\t\tdateFormat={\n\t\t\t\t\t\t\t\t\t\t\titem.dateFormat\n\t\t\t\t\t\t\t\t\t\t\t\t? item.dateFormat\n\t\t\t\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdefaultValue={\n\t\t\t\t\t\t\t\t\t\t\tfilter[item.name]\n\t\t\t\t\t\t\t\t\t\t\t\t? filter[item.name]\n\t\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonChange={_onChangeData}\n\t\t\t\t\t\t\t\t\t\tvalue={filter[item.name]}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcase 'MultiSelect':\n\t\t\t\t\t\t\tcase 'SingleSelect':\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t{...item}\n                                        className={`filter-panel-item ${item.className}`}\n\t\t\t\t\t\t\t\t\t\tonChangeKeys={_onChangeData}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t})}\n\t\t\t\t\t<Tooltip title='Применить фильтр'>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype='primary'\n\t\t\t\t\t\t\tsize={'small'}\n\t\t\t\t\t\t\tstyle={{marginLeft: 'auto'}}\n\t\t\t\t\t\t\tonClick={_applyFilter}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{applyFilterRender}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t\t<Tooltip title='Сбросить фильтр'>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize={'small'}\n\t\t\t\t\t\t\tstyle={{marginLeft: '10px'}}\n\t\t\t\t\t\t\tonClick={_resetFilter}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{resetFilterRender}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n};\n\nFilterPanel.propTypes = {\n\t/** Строка / функция / элемент для отображения в кнопке \"Применить фильтр\" */\n\tapplyFilterRender: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.element,\n\t\tPropTypes.string,\n\t]),\n\n\t/** Тип бордера панели (по умолчанию 'none')\n\t * ['all', 'none', 'top', 'left', 'bottom', 'right', 'top-bottom', 'left-right'] */\n\tborderStyle: PropTypes.oneOf([\n\t\t'all',\n\t\t'none',\n\t\t'top',\n\t\t'left',\n\t\t'bottom',\n\t\t'right',\n\t\t'top-bottom',\n\t\t'left-right',\n\t]),\n\n\t/** Объект фильтра по умолчанию */\n\tdefaultFilter: PropTypes.object,\n\n\t/** Конфигурация панели фильтров */\n\tconfigFilter: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Событие по кнопке выполнить фильтр */\n\tonApplyFilter: PropTypes.func,\n\n\t/** Событие по изменение объекта фильтра */\n\tonChangeFilter: PropTypes.func,\n\n\t/** Строка / функция / элемент для отображения в кнопке \"Сбросить фильтр\" */\n\tresetFilterRender: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.element,\n\t\tPropTypes.string,\n\t]),\n};\n\nFilterPanel.defaultProps = {\n\tborderStyle: 'none',\n\tdefaultFilter: {},\n\tconfigFilter: [],\n\tonApplyFilter: noop,\n\tonChangeFilter: noop,\n\tapplyFilterRender: 'Применить',\n\tresetFilterRender: 'Сбросить',\n};\n\nexport default FilterPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {CloseCircleOutlined} from '@ant-design/icons';\n\nconst SelectionList = (props) => {\n\tconst {selectedRowObjects, rowRender, onClickDropSelect} = props;\n\n\t// console.log(\"SelectionList typeof -> \", typeof(rowRender));\n\treturn (\n\t\t<div className={'show-selection-container'}>\n\t\t\t{selectedRowObjects && selectedRowObjects.length > 0 ? (\n\t\t\t\t<ul>\n\t\t\t\t\t{selectedRowObjects.map((item, index) => (\n\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t{/*{(typeof(rowRender) === 'string') ? <div>{item[rowRender]}</div> : rowRender }*/}\n\t\t\t\t\t\t\t{typeof rowRender === 'function' ? (\n\t\t\t\t\t\t\t\trowRender({rowData: item, rowIndex: index})\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>{item[rowRender]}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<div onClick={() => onClickDropSelect(item)}>\n\t\t\t\t\t\t\t\t<CloseCircleOutlined />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t) : (\n\t\t\t\t<div>Нет выбранных записей</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nSelectionList.propTypes = {\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { rowData, rowIndex }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n\t/** Список выделенных объектов */\n\tselectedRowObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Событие удаления элемента */\n\tonClickDropSelect: PropTypes.func.isRequired,\n};\n\nSelectionList.defaultProps = {};\n\nexport default SelectionList;\n","import React, {useEffect, useState, forwardRef} from 'react';\nimport PropTypes from 'prop-types';\nimport {notification} from 'antd';\nimport SortOrder from 'react-base-table/lib/SortOrder';\nimport BaseTable, {AutoResizer, callOrReturn, Column} from 'react-base-table';\nimport {empty, overlay} from './defaultSettings';\nimport SelectionHead from '../Table/Selectable/SelectionHead';\nimport SelectionCell, {parentAnalysis} from '../Table/Selectable/SelectionCell';\nimport CommandPanel from '../CommandPanel/CommandPanel';\nimport FilterPanel from '../FilterPanel/FilterPanel';\nimport SelectionList from '../Table/SelectionList/SelectionList';\nimport {\n\tflatten,\n\tgenerateUUID,\n\tgetTableRowKeys,\n\tfindNodeByRowKey,\n\tnoop,\n\tgetTableRowObjects,\n} from '../utils/baseUtils';\n\n/**\n *\n * Таблица с редактированием с первичной загрузкой с сервера\n *\n * Таблица с редактированием с подачей строк снаружи\n *\n * Таблица с автозагрузкой по скроллу\n *\n * Таблица с фильтрацией (внутренняя / внешняя)\n *\n * Таблица деревом\n *\n * Множественный выбор в любой таблица\n *\n * Значения по умолчанию\n *      Строки\n *      Выделенные строки\n *      Сортировка\n *      Фильтрация\n *\n * Создание строки\n * Изменение\n * Удаление\n *\n * Контролируемы из вне параметры (приоритетнее внутренних)\n *      Строки  (только при localSide)\n *      Выделенные строки (при любом режиме)\n *      Сортировка (при любом режиме)\n *      Фильтрация (при любом режиме)\n *\n * Управление строками (исключает функции изменения)\n *\n * Функция получения выделенных строк\n * Функция задания выделенных строк\n *\n *\n *  'infinity', 'serverSide', 'localSide'\n *\n * Загрузка по скроллу --- не доступно: добавить / удалить / изменить\n * Загрузка с сервера 1 раз + по сортировкам, фильтрациям и поискам --- доступно: добавить / удалить / изменить\n * Без загрузки с сервера --- доступно: добавить / удалить / изменить\n *\n *\n * Загрузка по скроллу\n * Загрузка при старте плоской\n * Загрузка при старте иерархии\n * Загрузка при старте плоской с обработкой lazyLoad\n * Обработка локальных данных\n *\n *\n * /** Локальная обработка запроса\n\n // console.log(\"manual table\", localRows, rows);\n if (localRows.length === 0) {\n    setLocalRows(rows);\n}\n let _rows = localRows.length > 0 ? [...localRows] : [...rows];\n if (sortBy.key && sortBy.order) {\n    _rows.sort((a, b) => {\n        let x = a[sortBy.key].toLowerCase();\n        let y = b[sortBy.key].toLowerCase();\n        // console.log(\"sort\", x, y);\n        if (x > y) {\n            return sortBy.order === 'asc' ? 1 : -1;\n        }\n        if (x < y) {\n            return sortBy.order === 'asc' ? -1 : 1;\n        }\n        return 0;\n    });\n    // console.log(\"_rows\", sortBy);\n}\n if (searchLine) {\n    _rows = _rows.filter((item, index) => {\n        for (let propName in item) {\n            if (item[propName]) {\n                const val = item[propName].toString().toLowerCase();\n                if (val.includes(searchLine.toLowerCase()))\n                    return true;\n            }\n        }\n        return false;\n    });\n}\n setRows(section, _rows);\n\n *\n *\n *\n */\n\nconst Table = forwardRef((props, ref) => {\n\t/** Состояние первоначалной настройки компонента*/\n\tconst [mounted, setMounted] = useState(false);\n\t/** Наличие на сервере еще данных */\n\tconst [hasMore, setHasMore] = useState(true);\n\t/** Индикатор загрузки данных */\n\tconst [loading, setLoading] = useState(false);\n\n\t/** Indoor control */\n\tconst [_rows, _setRows] = useState([]);\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n\tconst [_searchValue, setSearchValue] = useState({});\n\tconst [_filter, setFilter] = useState(false);\n\tconst [_sortBy, setSortBy] = useState(false);\n\n\t/** Selectable States */\n\tconst [selectAll, setSelectAll] = useState(false);\n\n\t/** Tree States */\n\tconst [_indeterminateRowKeys, setIndeterminateRowKeys] = useState([]);\n    const [_expandedRowKeys, setExpandedRowKeys] = useState([]);\n\n    const [_totalCountRows, setTotalCountRows] = useState(0);\n\n    const tableRef = React.useRef();\n\n\tconst {\n\t\t/** Def values */\n\t\tdefaultRows,\n\t\tdefaultSelectedRowKeys,\n\t\tdefaultSearchValue,\n\t\tdefaultFilter,\n\t\tdefaultSortBy,\n\n\t\t/** Outdoor control */\n\t\trows,\n\t\tsetRows,\n\t\tselectedRowKeys,\n\t\tsearchValue,\n\t\tfilter,\n\t\tsortBy,\n\n\t\t/** Required */\n\t\tcolumns,\n\t\ttype,\n\n\t\t/** Base Props */\n\t\tautoDeleteRows,\n\t\trowKey,\n\n\t\t/** View Props */\n\t\tempty,\n\t\tfixWidthColumn,\n\t\tfooterHeight,\n\t\tfooterShow,\n        footerTitles,\n\t\theaderHeight,\n\t\trowHeight,\n\t\tzebraStyle,\n\t\trowRenderer,\n\n\t\t/** Load Data Props */\n\t\tloadThreshold,\n\t\tpageSize,\n\t\trequestLoadRows,\n        requestLoadCount,\n\t\tsearchParamName,\n\n\t\t/** Selectable Props */\n\t\tselectable,\n\n\t\t/** Tree Props */\n\t\tnodeAssociated,\n\t\texpandColumnKey,\n\t\texpandParentKey,\n\t\texpandLazyLoad,\n\t\texpandDefaultAll,\n\n\t\t/** Events */\n\t\tonRowClick,\n\t\tonRowDoubleClick,\n\t\tonRowExpand,\n\t\tonSelectedRowsChange,\n\t\tonExpandedRowsChange,\n\n\t\t/** SELECTED PANEL */\n\t\tshowSelection,\n\t\trowRenderShowSelection,\n\t} = props;\n\n\tconst commandPanelProps = {\n\t\t...CommandPanel.defaultProps,\n\t\t...props.commandPanelProps,\n\t};\n\tconst filterPanelProps = {\n\t\t...FilterPanel.defaultProps,\n\t\t...props.filterPanelProps,\n\t};\n\n\tuseEffect(() => {\n\t\t// console.log(\"Инициализация дефолтных значений \");\n\n\t\t// Инициализация дефолтных значений\n\t\t_setRows(defaultRows);\n\t\tsetSelectedRowKeys(defaultSelectedRowKeys);\n\t\tsetSearchValue(defaultSearchValue);\n\t\tsetFilter(defaultFilter);\n\t\tsetSortBy(defaultSortBy);\n\t\tsetSelectAll(\n\t\t\tdefaultRows.length > 0 &&\n\t\t\t\tdefaultRows.length === defaultSelectedRowKeys.length\n\t\t);\n\n\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t// Открытие всех нод\n\t\t\tif (expandDefaultAll)\n\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\tflatten(getTableRowKeys(defaultRows, rowKey))\n\t\t\t\t);\n\t\t\t// Установка квадратиков на нужных нодах\n\t\t\tif (defaultSelectedRowKeys && defaultSelectedRowKeys.length > 0) {\n\t\t\t\tlet flatRows = flatten(getTableRowKeys(defaultRows, rowKey));\n\t\t\t\tlet selectedRow = flatRows.filter((item) =>\n\t\t\t\t\tdefaultSelectedRowKeys.includes(item[rowKey])\n\t\t\t\t);\n\t\t\t\tlet _indeterminateRowKeys = [];\n\t\t\t\tselectedRow.forEach((item) => {\n\t\t\t\t\tconst [ss, ii] = parentAnalysis({\n\t\t\t\t\t\trowData: item,\n\t\t\t\t\t\trowKey,\n\t\t\t\t\t\tparentKey: expandParentKey,\n\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t\tnodeAssociated,\n\t\t\t\t\t\ttreeData: defaultRows,\n\t\t\t\t\t\tselectedRowKeys: defaultSelectedRowKeys,\n\t\t\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t\t\t\t});\n\t\t\t\t\t_indeterminateRowKeys.push(...ii);\n\t\t\t\t});\n\t\t\t\tsetIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\n\t\t\t}\n\t\t}\n\n\t\tif (type !== 'localSide') {\n\t\t\t_dataProcessing({\n\t\t\t\tsortBy: defaultSortBy,\n\t\t\t\tfilter: defaultFilter,\n\t\t\t\tsearchLine: defaultSearchValue,\n\t\t\t\treload: true,\n\t\t\t});\n\t\t}\n\t\tsetMounted(true);\n\t\tif (ref && typeof ref === 'function') ref({reloadData});\n\t\telse if (ref && typeof ref === 'object') ref.current = {reloadData};\n\t}, []);\n\n\tconst reloadData = ({sortBy, filter, searchValue}) => {\n\t    // console.log(\"reloadData params \", sortBy, filter, searchValue);\n        setSelectedRowKeys([]);\n        if(sortBy) setSortBy(sortBy);\n        if(filter) setFilter(filter);\n        if(searchValue) setSearchValue(searchValue);\n        _dataProcessing({\n\t\t\tsortBy: sortBy ? sortBy : _sortBy,\n\t\t\tfilter: filter ? filter : _filter,\n\t\t\tsearchLine: searchValue ? searchValue : _searchValue,\n\t\t\treload: true,\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tif (type === 'localSide') {\n\t\t\t// console.log(\"Control useEffect => \", rows, selectedRowKeys, searchValue, filter, sortBy);\n\t\t\t_setRows(rows);\n\t\t\tsetSelectedRowKeys(selectedRowKeys);\n\t\t\tsetSearchValue(searchValue);\n\t\t\tsetFilter(filter);\n\t\t\tsetSortBy(sortBy);\n\t\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t\t// Открытие всех нод\n\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\tsetExpandedRowKeys(flatten(getTableRowKeys(rows, rowKey)));\n\t\t\t}\n\t\t}\n\t}, [rows, selectedRowKeys, searchValue, filter, sortBy]);\n\n\t/** BASE FUNCTIONS */\n\tconst _dataProcessing = (params) => {\n\t\t// console.log('_dataProcessing', params);\n\t\tconst {sortBy, filter, searchLine, expandRow, reload} = params;\n\t\tswitch (type) {\n\t\t\tcase 'infinity':\n\t\t\tcase 'serverSide':\n\t\t\t\tif ((hasMore || reload) && !loading) {\n\t\t\t\t\tsetLoading(true);\n\t\t\t\t\tconst pageNum = reload\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: Math.floor(_rows.length / pageSize);\n\t\t\t\t\tconst params = {\n\t\t\t\t\t\tpage: pageNum,\n\t\t\t\t\t\tsize: pageSize,\n\t\t\t\t\t\tsort:\n\t\t\t\t\t\t\tsortBy && sortBy.key\n\t\t\t\t\t\t\t\t? sortBy.key + ',' + sortBy.order\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t};\n\t\t\t\t\tconst dataQuery = {\n                        ...filter,\n                        ...(searchLine\n                            ? {[searchParamName]: searchLine}\n                            : null),\n                    };\n\t\t\t\t\t// console.log('dataQuery', dataQuery);\n\n                    if(type === 'infinity' && reload && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad) {\n                        requestLoadCount({\n                            params,\n                            data: dataQuery,\n                        })\n                            .then((response) => {\n                                // console.log(\"infinity then response\", response);\n                                // const result = response.data;\n                                setTotalCountRows(response.data);\n                            })\n                            .catch((error) => {\n                                console.log('RequestLoadCount catch: ', error);\n                            });\n                    }\n\n\t\t\t\t\trequestLoadRows({\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tdata: dataQuery,\n\t\t\t\t\t})\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\t\t\tconst result = response.data;\n\t\t\t\t\t\t\t// Если иерархия и ленивая, то ищим кому добавть полученные записи\n\t\t\t\t\t\t\tif (!!expandColumnKey && expandLazyLoad) {\n\t\t\t\t\t\t\t\t// lastExpandRow//, setLastExpandRow\n\t\t\t\t\t\t\t\t// console.log('!!expandColumnKey && expandLazyLoad', result);\n\t\t\t\t\t\t\t\tif (pageNum === 0) {\n\t\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t\t{[rowKey]: generateUUID()},\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t_setRows(result);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlet newRows = [..._rows];\n\t\t\t\t\t\t\t\t\t// (data, rowKey, rowValue)\n\t\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t\t{[rowKey]: generateUUID()},\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tlet node = findNodeByRowKey(\n\t\t\t\t\t\t\t\t\t\tnewRows,\n\t\t\t\t\t\t\t\t\t\trowKey,\n\t\t\t\t\t\t\t\t\t\texpandRow[rowKey]\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tnode.children = result;\n\t\t\t\t\t\t\t\t\t// console.log('newRows -> ', newRows);\n\t\t\t\t\t\t\t\t\t_setRows(newRows);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (result && result.length < pageSize) {\n\t\t\t\t\t\t\t\t\tsetHasMore(false);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetHasMore(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpageNum === 0\n\t\t\t\t\t\t\t\t\t? _setRows(result)\n\t\t\t\t\t\t\t\t\t: _setRows(_rows.concat(result));\n\n\t\t\t\t\t\t\t\t// console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\n\t\t\t\t\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\t\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\t\t\t\t\t\tflatten(getTableRowKeys(result, rowKey))\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\t// console.log('loadData catch: ', error);\n\t\t\t\t\t\t\tif (error.response) {\n\t\t\t\t\t\t\t\tnotification.error({\n\t\t\t\t\t\t\t\t\tmessage: `Ошибка загрузки данных [${error.response.status}]`,\n\t\t\t\t\t\t\t\t\tdescription: error.response.data.message,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\tnotification.error({\n\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t'Не удалось детектировать ошибку. См. console.log',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t_setRows(_rows);\n\t\t\t\t\t\t\t// setHasMore(false);\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t// case 'serverSide':\n\t\t\t// \tsetLoading(true);\n\t\t\t// \tbreak;\n\t\t\tcase 'localSide':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t/** Событие выделение одной строки в режиме без галочек */\n\tconst _rowEventHandlers = {\n\t\tonClick: ({rowData, rowIndex, rowKey, event}) => {\n\t\t\tif (!selectable) {\n\t\t\t\t// if (_selectedRowKeys.includes(rowKey)) {\n\t\t\t\t//     setSelectedRowKeys([]);\n\t\t\t\t//     // setSelectedRow([]);\n\t\t\t\t//     // setSelectedRowObjects([]);\n\t\t\t\t//     onRowClick({\n\t\t\t\t//         selected: false,\n\t\t\t\t//         rowData,\n\t\t\t\t//         rowIndex,\n\t\t\t\t//         rowKey,\n\t\t\t\t//     });\n\t\t\t\t//     onSelectedRowsChange([]);\n\t\t\t\t// } else {\n\t\t\t\t// console.log('_rowEventHandlers -> onClick', rowKey);\n\t\t\t\tconst newRowObject = {\n\t\t\t\t\trowData: {...rowData},\n\t\t\t\t\trowIndex: rowIndex,\n\t\t\t\t\trowKey: rowKey,\n\t\t\t\t};\n\t\t\t\t// if(type !== 'localSide')\n\t\t\t\tsetSelectedRowKeys([rowKey]);\n\t\t\t\t// setSelectedRow(newRowObject);\n\t\t\t\t// setSelectedRowObjects([newRowObject]);\n\t\t\t\tonRowClick({\n\t\t\t\t\tselected: true,\n\t\t\t\t\t...newRowObject,\n\t\t\t\t});\n\t\t\t\tonSelectedRowsChange([rowKey], [rowData]);\n\t\t\t\t// }\n\t\t\t}\n\t\t},\n\t\tonDoubleClick: ({rowData, rowIndex, rowKey}) => {\n\t\t\t// console.log('onDoubleClick', rowData, rowIndex, rowKey);\n\t\t\tonRowDoubleClick({rowData, rowIndex, rowKey});\n\t\t},\n\t\t// onContextMenu: console.log('context menu'),\n\t\t// onMouseEnter: console.log('mouse enter'),\n\t\t// onMouseLeave: console.log('mouse leave'),\n\t};\n\n\t/** Событие при сортировке */\n\tconst _onColumnSort = (sortBy) => {\n\t\t// console.log(\"sortBy\", sortBy);\n\t\ttableRef.current.scrollToRow(0, 'auto');\n\t\tsetSortBy(sortBy);\n\n\t\t// Для серверной сортировки - сбросить выделение\n\t\tif (type !== 'localSide') {\n\t\t\tsetSelectedRowKeys([]);\n\t\t}\n\t\tconst loadParams = {\n\t\t\tsortBy: sortBy,\n\t\t\tfilter: _filter,\n\t\t\tsearchLine: _searchValue,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t};\n\n\t/** Получение колонок таблицы */\n\tconst _getColumns = () => {\n\t\tlet _columns = [...columns];\n\n\t\t/** Создаем колонку с галочками (если надо) */\n\t\tif (selectable) {\n\t\t\tconst selectColumn = {\n\t\t\t\tkey: '__selection__',\n\t\t\t\theaderRenderer: SelectionHead,\n\t\t\t\tcellRenderer: SelectionCell,\n\t\t\t\twidth: 40,\n\t\t\t\tflexShrink: 0,\n\t\t\t\tresizable: false,\n\t\t\t\tfrozen: Column.FrozenDirection.LEFT,\n\t\t\t\trowKey: rowKey,\n\t\t\t\tparentKey: expandParentKey,\n\t\t\t\tselectedRowKeys: _selectedRowKeys,\n\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t\t\tnodeAssociated: nodeAssociated,\n\t\t\t\tonChange: _onChangeSelectHandler,\n\t\t\t\tselectAll: selectAll,\n\t\t\t\tonSelectAll: _onSelectAllHandler,\n\t\t\t};\n\t\t\t_columns.unshift(selectColumn);\n\t\t}\n\t\treturn _columns;\n\t};\n\n\t/** VIEW FUNCTIONS */\n\n\tconst _footer = (\n\t\t<div className={'BaseTable__footer__counter'}>\n\t\t\t{selectable ? (\n                <React.Fragment>\n                    <span>{footerTitles.selectedRows} {_selectedRowKeys.length}</span>\n                    <span>{footerTitles.loadedRows} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n                </React.Fragment>\n                ) : null}\n\n            {type === 'infinity' && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad\n                ? <span>{footerTitles.totalRows} {_totalCountRows}</span>\n                : <span>{footerTitles.totalRows} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n            }\n\n            </div>\n\t);\n\n\t/** Событие при рендере для стилизации */\n\tconst _rowClassName = ({rowData, rowIndex}) => {\n\t\tconst {rowClassName} = props;\n\t\tconst rowClass = rowClassName\n\t\t\t? callOrReturn(rowClassName, {rowData, rowIndex})\n\t\t\t: '';\n\t\t// const key = {[rowKey]: rowData[rowKey], checked: true};\n\t\t// selectedRowKeys.some((item) => (item[rowKey] === rowData[rowKey] && item.checked))\n\t\treturn [\n\t\t\trowClass,\n\t\t\t_selectedRowKeys.includes(rowData[rowKey]) && 'row-selected',\n\t\t]\n\t\t\t.filter(Boolean)\n\t\t\t.concat(zebraStyle ? (rowIndex % 2 === 0 ? 'even' : 'odd') : '')\n\t\t\t.concat(' ');\n\t};\n\n\t/** LOAD DATA FUNCTIONS */\n\tconst onEndReached = () => {\n\t\tlet selectAll;\n\t\tconst selectLength = _selectedRowKeys.length;\n\t\tif (selectLength === 0) selectAll = false;\n\t\telse if (selectLength > 0) selectAll = null;\n\n\t\tsetSelectAll(selectAll);\n\n\t\tif (type === 'infinity') {\n\t\t\tconst loadParams = {\n\t\t\t\tsortBy: _sortBy,\n\t\t\t\tfilter: _filter,\n\t\t\t\tsearchLine: _searchValue,\n\t\t\t\treload: false,\n\t\t\t};\n\t\t\t_dataProcessing(loadParams);\n\t\t}\n\t};\n\n\t/** SELECTABLE FUNCTIONS */\n\n\t/** Событие при изменении галочки одной строки */\n\tconst _onChangeSelectHandler = ({\n\t\tselected,\n\t\t_selectedRow,\n\t\t_selectAll,\n\t\t_selectedRowKeys,\n\t\t_indeterminateRowKeys,\n\t}) => {\n\t\tsetSelectedRowKeys(_selectedRowKeys);\n\t\tsetIndeterminateRowKeys(_indeterminateRowKeys);\n\t\tsetSelectAll(_selectAll);\n\t\t// setSelectedRow(_selectedRow);\n\n\t\t// let newSelectedObjects = [];\n\t\t// if (selected) {\n\t\t// \tif (!!expandColumnKey)\n\t\t// \t\tnewSelectedObjects = flatten(\n\t\t// \t\t\tgetTableRowObjects(rows, rowKey)\n\t\t// \t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]));\n\t\t// \telse\n\t\t// \t\tnewSelectedObjects = selectedRowObjects.concat([\n\t\t// \t\t\t_selectedRow.rowData,\n\t\t// \t\t]);\n\t\t// \t// setSelectedRowObjects(newSelectedObjects);\n\t\t// } else {\n\t\t// \tnewSelectedObjects = selectedRowObjects.filter(\n\t\t// \t\t(item) => item[rowKey] !== _selectedRow.rowData[rowKey]\n\t\t// \t);\n\t\t// \t// setSelectedRowObjects(newSelectedObjects);\n\t\t// }\n\t\t// console.log(\"_handleSelectChange\", _selectedRowKeys, newSelectedObjects);\n\t\tonRowClick({\n\t\t\tselected,\n\t\t\trowData: _selectedRow.rowData,\n\t\t\trowIndex: _selectedRow.rowIndex,\n\t\t\trowKey,\n\t\t});\n\t\tonSelectedRowsChange(_selectedRowKeys);\n\t};\n\n\t/** Событие при изменении галочки \"Выделить все\" */\n\tconst _onSelectAllHandler = ({selected, rowKeys}) => {\n\t\tconst selectedKeys = selected ? rowKeys : [];\n\t\tsetSelectedRowKeys(selectedKeys);\n\t\tsetIndeterminateRowKeys([]);\n\t\tsetSelectAll(selected);\n\t\t// setSelectedRowObjects(rows);\n\t\t// console.log(\"_handleSelectAll\", selectedKeys);\n\t\tonSelectedRowsChange(selectedKeys);\n\t};\n\n\t/** TREE FUNCTIONS */\n\n\t/** Анализ дерева на пердмет квадратиков\n\t * Нужно для выделения по умолчанию свернутых элементов */\n\t// const _postLoadTreeAnalysis = () => {\n\t//     if (!!expandColumnKey && !expandLazyLoad) {\n\t//         let _indeterminateRowKeys = [];\n\t//         // console.log(\"mounted->selectedRowObjects: \", selectedRowObjects);\n\t//         selectedRowObjects.map((item) => {\n\t//             const [ss, ii] = parentAnalysis({\n\t//                 rowData: item,\n\t//                 rowKey,\n\t//                 parentKey: expandParentKey,\n\t//                 checked: true,\n\t//                 nodeAssociated,\n\t//                 treeData: _rows,\n\t//                 selectedRowKeys: _selectedRowKeys,\n\t//                 indeterminateRowKeys: _indeterminateRowKeys,\n\t//             });\n\t//             _indeterminateRowKeys.push(...ii);\n\t//         });\n\t//         setIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\n\t//     }\n\t// }\n\n\tconst _onExpandedRowsChange = (expandedRowKeys) => {\n\t\t// console.log(\"_onExpandedRowsChange\", expandedRowKeys);\n\t\tonExpandedRowsChange(expandedRowKeys);\n\t};\n\tconst _onRowExpand = ({expanded, rowData, rowIndex, rowKey}) => {\n\t\t// console.log(\"_onRowExpand\", rowData, expanded, rowIndex, rowKey);\n\t\tif (expanded) {\n\t\t\tsetExpandedRowKeys([..._expandedRowKeys, rowKey]);\n\n\t\t\tif (expandLazyLoad) {\n\t\t\t\tconst loadParams = {\n\t\t\t\t\tsortBy: _sortBy,\n\t\t\t\t\tfilter: {..._filter, [expandParentKey]: rowKey},\n\t\t\t\t\tsearchLine: _searchValue,\n\t\t\t\t\treload: false,\n\t\t\t\t\texpandRow: rowData,\n\t\t\t\t};\n\t\t\t\t// _callPropsOnLoad(loadParams);\n\t\t\t\t_dataProcessing(loadParams);\n\t\t\t}\n\t\t} else {\n\t\t\tlet expandedRowKeys = [..._expandedRowKeys];\n\t\t\tlet allChildKeys = flatten(\n\t\t\t\tgetTableRowKeys(rowData.children, props.rowKey)\n\t\t\t);\n\t\t\tallChildKeys.push(rowKey);\n\t\t\t// console.log('allChildKeys', allChildKeys);\n\t\t\tsetExpandedRowKeys(\n\t\t\t\texpandedRowKeys.filter((item) => !allChildKeys.includes(item))\n\t\t\t);\n\t\t}\n\t\tonRowExpand({expanded, rowData, rowIndex, rowKey});\n\t};\n\n\t/** COMMAND PANEL FUNCTIONS */\n\n\tconst _getDisabledElementsOfCommandPanel = () => {\n\t\t// console.log('commandPanelProps', commandPanelProps);\n\t\tlet _disabledElements = [...commandPanelProps.disabledElements];\n\t\tif (type === 'infinity') {\n\t\t\t_disabledElements.push('up', 'down');\n\t\t}\n\t\tif (selectable && _selectedRowKeys.length > 1) {\n\t\t\t_disabledElements.push('addAsCopy', 'edit', 'up', 'down');\n\t\t}\n\t\tif (_selectedRowKeys.length === 0) {\n\t\t\t_disabledElements.push('addAsCopy', 'edit', 'delete', 'up', 'down');\n\t\t}\n\t\tif (expandColumnKey) {\n\t\t\t//|| !selectedRow) {\n\t\t\t_disabledElements.push('up', 'down');\n\t\t}\n\t\treturn [...new Set(_disabledElements)];\n\t};\n\n\tconst _onClickAddAsCopy = (event) => {\n\t\t// console.log(\"_onClickAddAsCopy\", selectedRow);\n\t\tcommandPanelProps.onClickAddAsCopy(\n\t\t\tevent,\n\t\t\tfindNodeByRowKey(_rows, rowKey, _selectedRowKeys[0])\n\t\t);\n\t};\n\n\tconst _onClickEdit = (event) => {\n\t\t// console.log(\"_onClickEdit\", selectedRow);\n\t\tcommandPanelProps.onClickEdit(event, {\n\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t});\n\t\t// props.onClickEdit(event, selectedRow);\n\t};\n\n\tconst _onClickDelete = (event) => {\n\t\t// console.log(\"_onClickDelete\", autoDeleteRows, selectedRowKeys);\n\t\tif (autoDeleteRows) {\n\t\t\tif (type === 'localSide') {\n\t\t\t\tsetRows(\n\t\t\t\t\t_rows.filter(\n\t\t\t\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey])\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t_setRows(\n\t\t\t\t\t_rows.filter(\n\t\t\t\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey])\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tsetSelectedRowKeys([]);\n\t\t}\n\t\tcommandPanelProps.onClickDelete(event, _selectedRowKeys);\n\t};\n\n\tconst _onClickUp = (event) => {\n\t\t// console.log(\"_onClickUp\", selectedRow);\n\t\tconst rowIndex = _rows.findIndex(\n\t\t\t(item) => item[rowKey] === _selectedRowKeys[0]\n\t\t);\n\t\tconst newRowIndex = _getNewIndexRow(rowIndex, rowIndex - 1);\n\t\t_changeIndexRow(rowIndex, newRowIndex);\n\t\t// console.log(\"_onClickUp\", rowIndex, newRowIndex);\n\t\tcommandPanelProps.onClickUp(event, {\n\t\t\trowIndex: newRowIndex,\n\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t});\n\t};\n\n\tconst _onClickDown = (event) => {\n\t\tconst rowIndex = _rows.findIndex(\n\t\t\t(item) => item[rowKey] === _selectedRowKeys[0]\n\t\t);\n\t\tconst newRowIndex = _getNewIndexRow(rowIndex, rowIndex + 1);\n\t\t_changeIndexRow(rowIndex, newRowIndex);\n\t\t// console.log(\"_onClickDown\", rowIndex, newRowIndex);\n\t\tcommandPanelProps.onClickDown(event, {\n\t\t\trowIndex: newRowIndex,\n\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t});\n\t};\n\n\tconst _getNewIndexRow = (oldIndex, newIndex) =>\n\t\tnewIndex >= 0 && newIndex < _rows.length ? newIndex : oldIndex;\n\n\tconst _changeIndexRow = (oldIndex, newIndex) => {\n\t\tif (newIndex >= 0 && newIndex < _rows.length) {\n\t\t\tlet arr = [..._rows]; // Копируем массив\n\t\t\tconst item = arr.splice(oldIndex, 1); // Удаляем элемент со старого места\n\t\t\t// console.log('_changeIndexRow => ',item);\n\t\t\tarr.splice(newIndex > 0 ? newIndex : 0, 0, item[0]); // Ставим элемент на новое место\n\t\t\t// console.log(\"_changeIndexRow\", item[0]);\n\t\t\tif (type === 'localSide') {\n\t\t\t\tsetRows(arr);\n\t\t\t} else {\n\t\t\t\t_setRows(arr);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst _onSearch = (searchLine) => {\n\t\t// console.log(\"_onSearch\", searchLine);\n        tableRef.current.scrollToRow(0, 'auto');\n\t\tsetSearchValue(searchLine);\n\t\tconst loadParams = {\n\t\t\tsortBy: _sortBy,\n\t\t\tfilter: _filter,\n\t\t\tsearchLine: searchLine,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t\tcommandPanelProps.onSearch(searchLine);\n\t};\n\n\t/** FILTER PANEL FUNCTIONS */\n\n\tconst _onChangeFilter = (filter) => {\n\t\t// console.log('_onChangeFilter', filter);\n\t\tsetHasMore(true);\n\t\tsetFilter(filter);\n\t\tfilterPanelProps.onChangeFilter(filter);\n\t};\n\tconst _onApplyFilter = (filter) => {\n\t\t// console.log('_onApplyFilter', filter);\n\t\tconst loadParams = {\n\t\t\tsortBy: _sortBy,\n\t\t\tfilter: filter,\n\t\t\tsearchLine: _searchValue,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t\tfilterPanelProps.onApplyFilter(filter);\n\t};\n\n\t/** SELECTED PANEL */\n\n\tconst _onClickDropSelectHandler = (dropObject) => {\n\t\tconst newSelectedKeys = _selectedRowKeys.filter(\n\t\t\t(item) => item !== dropObject[rowKey]\n\t\t);\n\t\tsetSelectedRowKeys(newSelectedKeys);\n\t\tonSelectedRowsChange(newSelectedKeys);\n\t};\n\n\t// const rowProps = {\n\t//     // tagName: 'button',\n\t//     // onClick: e => {\n\t//     //     e.preventDefault();\n\t//     //     e.stopPropagation();\n\t//     //     console.log(`You clicked row onClick`)\n\t//     // },\n\t//     onDoubleClick: e => {\n\t//         e.preventDefault();\n\t//         e.stopPropagation();\n\t//         console.log(`You clicked row onDoubleClick`)\n\t//     }\n\t// };\n\n\treturn (\n\t\t<div\n\t\t\tclassName={'Table__container'}\n\t\t\tstyle={{width: '100%', height: '100%'}}\n\t\t>\n\t\t\t<div className={'Table__Top-panel'}>\n\t\t\t\t<CommandPanel\n\t\t\t\t\t{...commandPanelProps}\n\t\t\t\t\tdefaultValueSearch={defaultSearchValue}\n\t\t\t\t\tdisabledElements={_getDisabledElementsOfCommandPanel()}\n\t\t\t\t\tonClickAddAsCopy={_onClickAddAsCopy}\n\t\t\t\t\tonClickDelete={_onClickDelete}\n\t\t\t\t\tonClickDown={_onClickDown}\n\t\t\t\t\tonClickEdit={_onClickEdit}\n\t\t\t\t\tonClickUp={_onClickUp}\n\t\t\t\t\tonSearch={_onSearch}\n\t\t\t\t/>\n\t\t\t\t{/*{!filter ? (*/}\n\t\t\t\t<FilterPanel\n\t\t\t\t\t{...filterPanelProps}\n\t\t\t\t\tdefaultFilter={defaultFilter}\n\t\t\t\t\tonChangeFilter={_onChangeFilter}\n\t\t\t\t\tonApplyFilter={_onApplyFilter}\n\t\t\t\t/>\n\t\t\t\t{/*) : null}*/}\n\t\t\t</div>\n\t\t\t<div className={'BaseTable__container'}>\n\t\t\t\t<AutoResizer>\n\t\t\t\t\t{({width, height}) => (\n\t\t\t\t\t\t<BaseTable\n\t\t\t\t\t\t\tref={tableRef}\n\t\t\t\t\t\t\t/** Required */\n\t\t\t\t\t\t\tcolumns={_getColumns()}\n\t\t\t\t\t\t\tdata={_rows}\n\t\t\t\t\t\t\t/** Control Props */\n\t\t\t\t\t\t\tsortBy={_sortBy}\n\t\t\t\t\t\t\t/** Base Props */\n\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\trowKey={rowKey}\n\t\t\t\t\t\t\t// rowProps={rowProps}\n\n\t\t\t\t\t\t\t/** View Props */\n\t\t\t\t\t\t\trowClassName={_rowClassName}\n\t\t\t\t\t\t\temptyRenderer={empty}\n\t\t\t\t\t\t\tfixed={fixWidthColumn}\n\t\t\t\t\t\t\tfooterHeight={footerShow ? footerHeight : 0}\n\t\t\t\t\t\t\theaderHeight={headerHeight}\n\t\t\t\t\t\t\trowHeight={rowHeight}\n\t\t\t\t\t\t\toverlayRenderer={loading ? overlay : null}\n\t\t\t\t\t\t\tfooterRenderer={_footer}\n\t\t\t\t\t\t\trowRenderer={rowRenderer}\n\t\t\t\t\t\t\t/** Load Data Props */\n\t\t\t\t\t\t\tonEndReachedThreshold={loadThreshold}\n\t\t\t\t\t\t\tonEndReached={\n\t\t\t\t\t\t\t\ttype === 'infinity' ? onEndReached : undefined\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t/** Tree Props */\n\t\t\t\t\t\t\texpandColumnKey={expandColumnKey}\n\t\t\t\t\t\t\texpandedRowKeys={_expandedRowKeys}\n\t\t\t\t\t\t\t/** Events */\n\t\t\t\t\t\t\tonColumnSort={_onColumnSort}\n\t\t\t\t\t\t\trowEventHandlers={_rowEventHandlers}\n\t\t\t\t\t\t\tonExpandedRowsChange={_onExpandedRowsChange}\n\t\t\t\t\t\t\tonRowExpand={_onRowExpand}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</AutoResizer>\n\t\t\t</div>\n\t\t\t{showSelection && selectable && !expandColumnKey ? (\n\t\t\t\t<SelectionList\n\t\t\t\t\tonClickDropSelect={_onClickDropSelectHandler}\n\t\t\t\t\tselectedRowObjects={flatten(\n\t\t\t\t\t\tgetTableRowObjects(_rows, rowKey)\n\t\t\t\t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]))}\n\t\t\t\t\trowRender={rowRenderShowSelection}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</div>\n\t);\n});\n\nTable.propTypes = {\n\t/**\n\t * REQUIRED\n\t * */\n\n\t/** Столбцы таблицы (обязательно) */\n\tcolumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Тип таблицы.\n\t * 'infinity' - загрузка данных по скроллу. Фильтрация, сортировка и поиск через сервер.\n\t * 'serverSide' - первичная загрузка таблицы с сервера. Фильтрация, сортировка и поиск через сервер. Lazy Load для дерева тоже тут.\n\t * 'localSide' - полностью локальная таблица. Фильтрация, сортировка и поиск через локальный rows\n\t */\n\ttype: PropTypes.oneOf(['infinity', 'serverSide', 'localSide']).isRequired,\n\n\t/**\n\t * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n\t * */\n\n\t/** Строки по умолчанию */\n\tdefaultRows: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Ключи выделенных по умолчанию строк */\n\tdefaultSelectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска по умолчанию строк */\n\tdefaultSearchValue: PropTypes.string,\n\n\t/** Объект фильтрации по умолчанию */\n\tdefaultFilter: PropTypes.object,\n\n\t/** Сортировка по умолчанию */\n\tdefaultSortBy: PropTypes.shape({\n\t\tkey: PropTypes.string,\n\t\torder: PropTypes.oneOf([SortOrder.ASC, SortOrder.DESC]),\n\t}),\n\n\t/**\n\t * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n\t * */\n\n\t/** Строки таблицы. Используется для контроля таблицы из вне. */\n\trows: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Выделенные строки таблицы. */\n\tselectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Фильтр */\n\tfilter: PropTypes.object,\n\n\t/** Объект сортировки ({ key: 'string', order: 'asc' }).\n\t * key - поле по которому сотрировать,\n\t * order - направление сортировки (\"asc\", \"desc\")\n\t * */\n\tsortBy: PropTypes.shape({\n\t\tkey: PropTypes.string,\n\t\torder: PropTypes.oneOf([SortOrder.ASC, SortOrder.DESC]),\n\t}),\n\n\t/**\n\t * BASE PROPS\n\t * */\n\n\t/** Автоудаление строк из таблицы по кнопке в командной панели*/\n\tautoDeleteRows: PropTypes.bool,\n\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/**\n\t * VIEW PROPS\n\t * */\n\n\t/** Вывод когда нет данных */\n\tempty: PropTypes.element,\n\n\t/** Отображение загрузки данных */\n\toverlay: PropTypes.element,\n\n\t/** Фиксированная ширина столбцов. Появится боковой скрол */\n\tfixWidthColumn: PropTypes.bool,\n\n\t/** Высота подвала */\n\tfooterHeight: PropTypes.number,\n\n\t/** Отображать ли подвал */\n\tfooterShow: PropTypes.bool,\n\n    /** Названия футтера */\n    footerTitles: PropTypes.shape({\n        selectedRows: PropTypes.string,\n        loadedRows: PropTypes.string,\n        totalRows: PropTypes.string,\n    }),\n\n\t/** Высота заголовка таблицы */\n\theaderHeight: PropTypes.number,\n\n\t/** Высота строки таблицы */\n\trowHeight: PropTypes.number,\n\n\t/** Custom row renderer\n\t * Параметры - ({ isScrolling, cells, columns, rowData, rowIndex, depth }) */\n\trowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n\t/** Строки будут в зебро-стиле */\n\tzebraStyle: PropTypes.bool,\n\n\t/**\n\t * LOAD DATA PROPS\n\t * */\n\n\t/** Порог в пикселях для вызова _onLoad.\n\t * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n\tloadThreshold: PropTypes.number,\n\n\t/** Размер страницы */\n\tpageSize: PropTypes.number,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\t/**\n\t * SELECTABLE PROPS\n\t * */\n\n\t/** Таблица с возможностью выбора строки */\n\tselectable: PropTypes.bool,\n\n\t/**\n\t * TREE PROPS\n\t * */\n\n\t/** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\n\tnodeAssociated: PropTypes.bool,\n\n\t/** Ключ колонки по которой строить иерархию */\n\texpandColumnKey: PropTypes.string,\n\n\t/** Открыть по умолчанию вложенность до уровня N или 'All' */\n\texpandDefaultAll: PropTypes.bool,\n\n\t/** Загружать ноды иерархии по одной */\n\texpandLazyLoad: PropTypes.bool,\n\n\t/** Поле в котором хранится ссылка на родителя */\n\texpandParentKey: PropTypes.string,\n\n\t/**\n\t * EVENTS\n\t * */\n\n\t/** Событие при клике на строку (только при selectable = false)\n\t * Параметр - ({selected, rowData, rowIndex}) */\n\tonRowClick: PropTypes.func,\n\n\t/** Событие при двойном клике на строку.\n\t * Параметр - ({rowData, rowIndex, rowKey}) */\n\tonRowDoubleClick: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * Парметры - ({ expanded, rowData, rowIndex, rowKey }) */\n\tonRowExpand: PropTypes.func,\n\n\t/** Событие при выборе строки.\n\t * Параметр - массив выбранных строе (только rowKey) */\n\tonSelectedRowsChange: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * Парметры - (expandedRowKeys) - массив ключей открытых нод */\n\tonExpandedRowsChange: PropTypes.func,\n\n\t/**\n\t *\n\t *\n\t */\n\t// commandPanelProps: PropTypes.shape(CommandPanel.propTypes),\n\t//\n\t// filterPanelProps: PropTypes.shape(FilterPanel.propTypes),\n\n\t/** SELECTED PANEL */\n\n\t/** Отображать ли панель выбранных элементов */\n\tshowSelection: PropTypes.bool,\n\n\t/** Строка или функция для отображения элементов списка выбранных\n\t * Строка - имя поля\n\t * Функция - рендер строк.\n\t * Параметры - ({ rowData, rowIndex }) */\n\trowRenderShowSelection: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.string,\n\t]),\n};\n\nTable.defaultProps = {\n\tdefaultRows: [],\n\tdefaultSelectedRowKeys: [],\n\tdefaultSearchValue: '',\n\tdefaultFilter: {},\n\tdefaultSortBy: {},\n\n\trows: [],\n\tselectedRowKeys: [],\n\tsearchValue: '',\n\tfilter: {},\n\tsortBy: {},\n\n\tautoDeleteRows: true,\n\trowKey: 'id',\n\n\tempty: empty,\n\toverlay: overlay,\n\tfixWidthColumn: false,\n\tfooterHeight: 30,\n\tfooterShow: false,\n    footerTitles: {\n        selectedRows: 'Выделено:',\n        loadedRows: 'Загружено записей:',\n        totalRows: 'Всего записей:',\n    },\n\theaderHeight: 30,\n\trowHeight: 30,\n\tzebraStyle: false,\n\n\tloadThreshold: 300,\n\tpageSize: 50,\n\trequestLoadRows: noop,\n    requestLoadCount: noop,\n\tsearchParamName: 'searchLine',\n\n\tselectable: false,\n\n\tnodeAssociated: true,\n\texpandColumnKey: undefined,\n\texpandDefaultAll: true,\n\texpandLazyLoad: false,\n\texpandParentKey: 'parentId',\n\n\tonRowClick: noop,\n\tonRowDoubleClick: noop,\n\tonRowExpand: noop,\n\tonSelectedRowsChange: noop,\n\tonExpandedRowsChange: noop,\n\n\tshowSelection: false,\n};\n\nexport default Table;\n","import React, {forwardRef, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '../Table/Table';\nimport {notification} from 'antd';\n\nconst AdvancedTable = forwardRef((props, ref) => {\n\tconst [config, setConfig] = useState({});\n\n\tconst {\n\t\tconfigData,\n        customColumnProps,\n\t\tdefaultFilter,\n\t\texpandColumnKey,\n\t\texpandLazyLoad,\n\t\texpandParentKey,\n\t\tpageSize,\n\t\trowKey,\n\t\trequestLoadConfig,\n\t} = props;\n\n\tuseEffect(() => {\n\t\tif (requestLoadConfig) {\n\t\t\trequestLoadConfig()\n\t\t\t\t.then((response) => {\n\t\t\t\t\t// let result = response.data;\n\t\t\t\t\t// console.log('requestLoadConfig -> ', response.data);\n\t\t\t\t\tsetConfig(response.data);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log('error -> ', error);\n\t\t\t\t\tnotification.error({\n\t\t\t\t\t\tmessage: 'Произошла ошибка получения конфигурации',\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t} else {\n\t\t\tsetConfig(configData);\n\t\t}\n\t}, []);\n\n\tconst columnsByConfig = () =>\n\t\tconfig &&\n\t\tconfig.fields &&\n\t\tconfig.fields.map((item) => {\n\n\t\t\tconst colProps =\n                customColumnProps &&\n                customColumnProps.find(\n                    (render) =>\n                        render.name === item.name || render.name === item.alias\n                );\n\t\t\treturn {\n\t\t\t\tkey: item.name,\n\t\t\t\ttitle: item.header ? item.header : item.name,\n\t\t\t\tdataKey: item.alias ? item.alias : item.name,\n\t\t\t\talign: item.align,\n\t\t\t\twidth: item.width,\n\t\t\t\tresizable: item.resizable,\n\t\t\t\tsortable: item.sortable,\n\t\t\t\thidden: !item.visible,\n\t\t\t\t// cellRenderer: cellR && cellR.cellRender,\n                ...colProps,\n                cellRenderer: (object) => {\n                    if(colProps && colProps.cellRenderer)\n                        return colProps.cellRenderer(object) ? colProps.cellRenderer(object) : '---';\n                    else\n                        return object.cellData ? object.cellData : '---';\n                },\n\t\t\t};\n\t\t});\n\n\tconst getDefaultFilter = () => {\n\t\tif (config && config.hierarchical && config.hierarchyLazyLoad) {\n\t\t\tconst parentKey = config.hierarchyField\n\t\t\t\t? config.hierarchyField.split('/')[1]\n\t\t\t\t: expandParentKey;\n\t\t\treturn {...defaultFilter, [parentKey]: null};\n\t\t} else return defaultFilter;\n\t};\n\n\tif (config && config.fields) {\n\t\t// console.log('AdvancedTable render table -> ', config);\n\t\treturn (\n\t\t\t<Table\n\t\t\t\t{...props}\n\t\t\t\tref={ref}\n\t\t\t\tcolumns={columnsByConfig()}\n\t\t\t\tdefaultFilter={getDefaultFilter()}\n\t\t\t\trowKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyField\n\t\t\t\t\t\t? config.hierarchyField.split('/')[0]\n\t\t\t\t\t\t: rowKey\n\t\t\t\t}\n\t\t\t\texpandParentKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyField\n\t\t\t\t\t\t? config.hierarchyField.split('/')[1]\n\t\t\t\t\t\t: expandParentKey\n\t\t\t\t}\n\t\t\t\texpandColumnKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyView\n\t\t\t\t\t\t? config.hierarchyView\n\t\t\t\t\t\t: expandColumnKey\n\t\t\t\t}\n\t\t\t\texpandLazyLoad={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyLazyLoad\n\t\t\t\t\t\t? config.hierarchyLazyLoad\n\t\t\t\t\t\t: expandLazyLoad\n\t\t\t\t}\n\t\t\t\tpageSize={config && config.hierarchical ? 1 : pageSize}\n\t\t\t/>\n\t\t);\n\t} else return null;\n});\n\nAdvancedTable.propTypes = {\n\t/** Функция запроса на получение конфига для таблицы */\n\trequestLoadConfig: PropTypes.func,\n\n\t/** Конфигурация внешнего вида таблицы */\n\tconfigData: PropTypes.shape({\n\t\thierarchical: PropTypes.bool,\n\t\thierarchyField: PropTypes.string,\n\t\thierarchyView: PropTypes.string,\n\t\thierarchyLazyLoad: PropTypes.bool,\n\t\tfields: PropTypes.arrayOf(\n\t\t\tPropTypes.shape({\n\t\t\t\tname: PropTypes.string,\n\t\t\t\talias: PropTypes.string,\n\t\t\t\theader: PropTypes.string,\n\t\t\t\tvisible: PropTypes.bool,\n\t\t\t\tresizable: PropTypes.bool,\n\t\t\t\tsortable: PropTypes.bool,\n\t\t\t\talign: PropTypes.oneOf(['left', 'center', 'right']),\n\t\t\t\twidth: PropTypes.number,\n\t\t\t})\n\t\t),\n\t}),\n\n\t/** Дополнительные пропсы для колонок */\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\n};\n\nAdvancedTable.defaultProps = {};\n\nexport default AdvancedTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '../Table/Table';\n\n/**\n * ### Список / Дерево.\n */\nconst List = (props) => {\n\tconst {rowKey, rowRender, title} = props;\n\n\tconst columns = [\n\t\t{\n\t\t\tkey: rowKey,\n\t\t\ttitle: title,\n\t\t\tdataKey: rowKey,\n\t\t\twidth: 500,\n\t\t\tcellRenderer:\n\t\t\t\ttypeof rowRender === 'function'\n\t\t\t\t\t? rowRender\n\t\t\t\t\t: ({rowData}) => <div>{rowData[rowRender]}</div>,\n\t\t},\n\t];\n\treturn <Table {...props} columns={columns} headerHeight={title ? 30 : 0} />;\n};\n\nList.propTypes = {\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { cellData, columns, column, columnIndex, rowData, rowIndex, container, isScrolling }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n\t/** Заголовок списка (по умолчанию скрыт)*/\n\ttitle: PropTypes.string,\n};\n\nList.defaultProps = {\n\trowKey: 'id',\n\trowRender: 'id',\n\ttitle: undefined,\n};\n\nexport default List;\n"],"names":["empty","React","overlay","LoadingOutlined","fontSize","noop","flatten","arrayOfArrays","reduce","flattened","item","concat","Array","isArray","getTableRowObjects","data","rowKeys","map","children","length","getTableRowKeys","rowKey","findNodeByRowKey","rowValue","node","i","_findNodeByRowKey","currentNode","value","currentChild","result","generateUUID","replace","c","crypto","getRandomValues","Uint8Array","toString","SelectionHead","props","column","container","onSelectAll","selectedRowKeys","selectAll","_handleChange","e","totalLength","selectLength","checked","selected","getRowChildren","findBrothers","selfItem","parentKey","arr","forEach","includes","push","parentAnalysis","rowData","nodeAssociated","treeData","indeterminateRowKeys","_selectedRowKeys","_indeterminateRowKeys","currentRowData","parentExist","lastTypeSelect","typeSelect","nextSquare","indeterminateBrothers","selectedBrothers","allBrothers","index","indexOf","splice","indexS","indexI","SelectionCell","rowIndex","onChange","rowChildren","filter","element","_selectedRow","_selectAll","Set","det","target","confirm","CommandPanel","borderStyle","defaultValueSearch","deleteConfirm","deleteConfirmType","deleteConfirmTitle","deleteConfirmDescription","onClickAdd","onClickAddAsCopy","onClickAddGroup","onClickDelete","onClickEdit","onClickUp","onClickDown","onSearch","showElements","disabledElements","leftCustomSideElement","centerCustomSideElement","rightCustomSideElement","_onClickDelete","event","deleteButtonModalConfirm","deleteButton","withOnClick","DeleteOutlined","deleteButtonPopupConfirm","title","icon","ExclamationCircleOutlined","content","centered","okText","cancelText","onOk","PlusOutlined","CopyOutlined","FolderAddOutlined","EditOutlined","ArrowUpOutlined","ArrowDownOutlined","SettingOutlined","FilterOutlined","propTypes","PropTypes","oneOf","string","bool","arrayOf","func","defaultProps","undefined","APP_TIME_OFFSET","getMomentFromStringByFormat","date","format","moment","utcOffset","getMomentWithOffset","getMomentWithOffsetTruncateDay","hours","minutes","seconds","milliseconds","toFormat","dateString","mom","isValid","toDDMMYYYYdot","toDDMMYYYYdotAltDashDash","toDDMMYYYYHHMMSS","toDDMMYYYYdash","getISO","toISOString","DateRange","useState","mounted","setMounted","startValue","setStartValue","endValue","setEndValue","className","nameStart","nameEnd","dateFormat","valueStart","valueEnd","useEffect","defaultValueStart","_onChange","defaultValueEnd","disabledStartDate","valueOf","disabledEndDate","onStartChange","onEndChange","name","locale","width","SingleDate","_value","setValue","defaultValue","_onChangePicker","SelectContainer","handleOpen","handleClose","isOpened","useRef","window","addEventListener","handleMouseClick","removeEventListener","current","contains","position","Paragraph","Select","setSelectedRowKeys","_selectedRowData","setSelectedRowData","isSelectOpened","setIsSelectOpened","rowRender","type","placeholder","widthControl","widthPopup","heightPopup","onChangeKeys","defaultSelectedRowKeys","expandColumnKey","showSelection","requestLoadRows","requestLoadDefault","commandPanelProps","rows","searchable","request","then","response","catch","error","findRow","find","row","columns","key","dataKey","cellRenderer","_getHeadText","_getPopupStyle","height","defRowsLen","selectedKeys","_SingleSelectRow","join","isRequired","oneOfType","number","FilterPanel","defaultFilter","setFilter","applyFilterRender","onChangeFilter","onApplyFilter","configFilter","resetFilterRender","_onChangeData","_filter","_applyFilter","_resetFilter","marginLeft","object","SelectionList","selectedRowObjects","onClickDropSelect","CloseCircleOutlined","Table","forwardRef","ref","hasMore","setHasMore","loading","setLoading","_rows","_setRows","_searchValue","setSearchValue","_sortBy","setSortBy","setSelectAll","setIndeterminateRowKeys","_expandedRowKeys","setExpandedRowKeys","_totalCountRows","setTotalCountRows","tableRef","defaultRows","defaultSearchValue","defaultSortBy","setRows","searchValue","sortBy","autoDeleteRows","fixWidthColumn","footerHeight","footerShow","footerTitles","headerHeight","rowHeight","zebraStyle","rowRenderer","loadThreshold","pageSize","requestLoadCount","searchParamName","selectable","expandParentKey","expandLazyLoad","expandDefaultAll","onRowClick","onRowDoubleClick","onRowExpand","onSelectedRowsChange","onExpandedRowsChange","rowRenderShowSelection","filterPanelProps","flatRows","selectedRow","ss","ii","_dataProcessing","searchLine","reload","reloadData","params","expandRow","pageNum","Math","floor","page","size","sort","order","dataQuery","console","log","child","newRows","message","status","description","_rowEventHandlers","onClick","newRowObject","onDoubleClick","_onColumnSort","scrollToRow","loadParams","_getColumns","_columns","selectColumn","headerRenderer","flexShrink","resizable","frozen","Column","FrozenDirection","LEFT","_onChangeSelectHandler","_onSelectAllHandler","unshift","_footer","selectedRows","loadedRows","totalRows","_rowClassName","rowClassName","rowClass","callOrReturn","Boolean","onEndReached","_onExpandedRowsChange","expandedRowKeys","_onRowExpand","expanded","allChildKeys","_getDisabledElementsOfCommandPanel","_disabledElements","_onClickAddAsCopy","_onClickEdit","_onClickUp","findIndex","newRowIndex","_getNewIndexRow","_changeIndexRow","_onClickDown","oldIndex","newIndex","_onSearch","_onChangeFilter","_onApplyFilter","_onClickDropSelectHandler","dropObject","newSelectedKeys","BaseTable","shape","SortOrder","ASC","DESC","AdvancedTable","config","setConfig","configData","customColumnProps","requestLoadConfig","columnsByConfig","fields","colProps","render","alias","header","align","sortable","hidden","visible","cellData","getDefaultFilter","hierarchical","hierarchyLazyLoad","hierarchyField","split","hierarchyView","List"],"mappings":"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"}