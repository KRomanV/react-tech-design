{"version":3,"file":"index.js","sources":["../src/components/utils/datesUtils.js","../src/redux/rtd.action.types.js","../src/redux/rtd.actions.js","../src/components/utils/baseUtils.js","../src/components/Base/withStore.js","../src/components/utils/variables.js","../src/components/Base/index.js","../src/components/Form/FormItem.js","../src/components/Form/FormItems.js","../src/components/Form/Form.js","../src/components/Layout/Layout.js","../src/components/Switcher/Switcher.js","../src/components/Table/defaultSettings.js","../src/components/Table/Selectable/SelectionHead.js","../src/components/Table/Selectable/SelectionCell.js","../src/components/Table/SelectionList/SelectionList.js","../src/components/Table/Table.js","../src/components/Table/ConfigLoader.js","../src/components/Select/Select.js","../src/components/TreeSelect/TreeSelect.js","../src/components/Modal/Modal.js","../src/components/UploadFile/UploadFile.js","../src/components/declarative.js","../src/components/deprecated/Table/defaultSettings.js","../src/components/deprecated/Table/Selectable/SelectionHead.js","../src/components/deprecated/Table/Selectable/SelectionCell.js","../src/components/deprecated/DateRange/DateRange.js","../src/components/deprecated/SingleDate/SingleDate.js","../src/components/deprecated/FilterPanel/FilterPanel.js","../src/components/deprecated/Table/SelectionList/SelectionList.js","../src/components/deprecated/Table/Table.js","../src/components/deprecated/Select/Select.js","../src/components/deprecated/AdvancedTable/AdvancedTable.js","../src/components/deprecated/Form/Form.js","../src/components/deprecated/Form/FormModal.js","../src/components/deprecated/Form/FormTable.js","../src/components/deprecated/Form/HOCs.js","../src/components/deprecated/FileManager/AddFolderModal.js","../src/components/utils/clipboardUtils.js","../src/components/deprecated/FileManager/FileManager.js","../src/components/deprecated/Modal/Modal.js","../src/components/deprecated/Form/FormItem.js","../src/components/deprecated/Layout/Layout.js","../src/components/deprecated/Form/FormItems.js","../src/components/deprecated/CommandPanel/CommandPanel.js","../src/components/deprecated/List/List.js","../src/redux/rtd.reducer.js","../src/components/utils/api.js","../src/index.js"],"sourcesContent":["import moment from 'moment';\n\nexport const APP_TIME_OFFSET = 3;\n\nexport const getMomentFromStringByFormat = (date, format) =>\n\tdate ? moment(date, format).utcOffset(APP_TIME_OFFSET) : null;\n\n// export const getMomentWithOffset = (date) =>\n// \tmoment(date).utcOffset(APP_TIME_OFFSET);\nexport const getMomentWithOffset = (date) => moment(date).format();\n\nexport const getMomentWithOffsetTruncateDay = (date) =>\n\tmoment(date).startOf('day')\n\t\t// .hours(0)\n\t\t// .minutes(0)\n\t\t// .seconds(0)\n\t\t// .milliseconds(0)\n\t\t.format();\n\n\nexport const toFormat = (dateString, format) => {\n\tif (!dateString) {\n\t\treturn '';\n\t}\n\tconst mom = moment(dateString);\n\treturn mom.isValid() ? mom.format(format) : dateString;\n};\n\nexport const toDDMMYYYYdot = (dateString) => toFormat(dateString, 'DD.MM.YYYY');\n\nexport const toDDMMYYYYdotAltDashDash = (dateString) =>\n\ttoDDMMYYYYdot(dateString) || '--';\n\nexport const toDDMMYYYYHHMMSS = (dateString) =>\n\ttoFormat(dateString, 'DD.MM.YYYY HH:mm:ss') || '--';\n\nexport const toDDMMYYYYdash = (dateString) =>\n\ttoFormat(dateString, 'DD-MM-YYYY');\n\nexport const getISO = (date) =>\n\tmoment(date).utcOffset(APP_TIME_OFFSET).toISOString();\n","const types =\n{\n    INIT_STORE: 'INIT_STORE',\n    SET_DATA_STORE: 'SET_DATA_STORE',\n};\n\nexport {types as actionTypes};\n","import {actionTypes} from './rtd.action.types';\n\nexport const initStore = (path) => ({\n    type: actionTypes.INIT_STORE,\n    payload: {path}\n});\n\nexport const setDateStore = (path, row) => ({\n    type: actionTypes.SET_DATA_STORE,\n    payload: {path, row}\n});\n","import React from 'react';\nimport {notification} from 'antd';\nimport moment from \"moment\";\n\nexport const noop = () => {};\n\nexport const flatten = (arrayOfArrays) =>\n\tarrayOfArrays.reduce(\n\t\t(flattened, item) =>\n\t\t\tflattened.concat(Array.isArray(item) ? flatten(item) : [item]),\n\t\t[]\n\t);\n\nexport const getTableRowObjects = (data) => {\n\tconst rowKeys = data.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item, getTableRowObjects(item.children)];\n\t\t}\n\t\treturn item;\n\t});\n\treturn rowKeys;\n};\n\nexport const getTableRowKeys = (data, rowKey) => {\n\tconst rowKeys = data.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item[rowKey], getTableRowKeys(item.children, rowKey)];\n\t\t}\n\t\treturn item[rowKey];\n\t});\n\treturn rowKeys;\n};\n\nexport const findNodeByRowKey = (data, rowKey, rowValue) => {\n\tlet node = {};\n\tlet item = {};\n\tfor (let i = 0; i < data.length; i++) {\n\t\titem = _findNodeByRowKey(data[i], rowKey, rowValue);\n\t\tif (item !== false) return item;\n\t}\n\treturn node;\n};\n\nconst _findNodeByRowKey = (currentNode, rowKey, value) => {\n\tlet i, currentChild, result;\n\n\tif (value === currentNode[rowKey]) {\n\t\treturn currentNode;\n\t} else {\n\t\tif (currentNode.children) {\n\t\t\tfor (i = 0; i < currentNode.children.length; i += 1) {\n\t\t\t\tcurrentChild = currentNode.children[i];\n\t\t\t\tresult = _findNodeByRowKey(currentChild, rowKey, value);\n\t\t\t\tif (result !== false) return result;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n};\n\nexport const generateUUID = () => {\n\treturn ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n\t\t(\n\t\t\tc ^\n\t\t\t(crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n\t\t).toString(16)\n\t);\n};\n\n\nexport const getValueFromSingleSelect = (name, keys) => (keys && keys.length > 0) ? keys[0] : null;\n\nexport const getValueFromMultiSelect = (name, keys) => (keys && keys.length > 0) ? keys : null;\n\nexport const getValueFromSelectTable = (rows) => {\n    if (rows && rows.length > 0) return rows[0];\n    else return null;\n};\n\nexport const getObjectExcludedProps = (object, exclude) => {\n    let returnObject = {};\n    Object.keys(object).forEach((key) =>\n        !exclude.includes(key) ? (returnObject[key] = object[key]) : undefined // было null\n    );\n    return returnObject;\n};\n\nexport const notificationError = (error, message) => {\n\tif (error.response) {\n\t\tconsole.error(error.response.status, error.response.data);\n\t\tconst errorDescription = (error.response.data && error.response.data.error)\n\t\t\t? error.response.data.error\n\t\t\t: \"Нет описания ошибки\";\n\t\tnotification.error({\n\t\t\tmessage: `[${error.response.status}] ${message}`,\n\t\t\tdescription: errorDescription,\n\t\t});\n\t} else {\n\t\tconsole.error(error);\n\t\tnotification.error({\n\t\t\tmessage: 'Не удалось детектировать ошибку. См. console.error',\n\t\t});\n\t}\n};\n\nexport const dispatchToStore = ({dispatch, setDateStore, value, extraData}) => {\n\tif(dispatch.path) {\n\t\t// console.log(\"storeHOC => dispatchToStore\");\n\t\tif(dispatch.type === 'event')\n\t\t\tsetDateStore && setDateStore(dispatch.path,  {\n\t\t\t\ttimestamp: moment(),\n\t\t\t\t// type: dispatch.type,\n\t\t\t\tvalue: value,\n\t\t\t\textraData: extraData\n\t\t\t});\n\t\telse\n\t\t\tsetDateStore && setDateStore(dispatch.path, value);\n\t}\n}\n\nexport function useMounted() {\n\tconst [isMounted, setIsMounted] = React.useState(false)\n\n\tReact.useEffect(() => {\n\t\tsetIsMounted(true)\n\t}, [])\n\treturn isMounted\n}\n","import React, {useState, useEffect} from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../redux/rtd.actions\";\nimport { dispatchToStore, getObjectExcludedProps, useMounted } from \"../utils/baseUtils\";\n\nexport const withStore = (Component, antFormItemProps) => {\n\n    const mapStateToProps = (store, ownProps) => {\n        const {subscribe, dispatch} = ownProps;\n        let state = {};\n        if(subscribe && subscribe.length > 0){\n            subscribe.forEach(item => {\n                const {name, path, extraData} = item;\n                if(name && path)\n                    state[name] = objectPath.get(store, path);\n                if(name && extraData)\n                    state[`${name}ExtraData`] = objectPath.get(store, extraData);\n            })\n        }\n        if(dispatch && dispatch.extraData) {\n            // console.log('subscribe to ', dispatch.extraData)\n            state.dispatchExtraData = objectPath.get(store, dispatch.extraData);\n        }\n\n        return state;\n    };\n    const mapDispatchToProps = (dispatch) =>\n        bindActionCreators({ setDateStore: setDateStore}, dispatch);\n\n    const defaultProps = {\n        trigger: 'onChange',\n        valuePropName: 'value',\n    };\n\n    const withStoreProps = { ...defaultProps, ...antFormItemProps };\n\n    return connect(mapStateToProps, mapDispatchToProps)( (props) => {\n\n        const {componentType, setDateStore, dispatchExtraData} = props;\n\n        // Объект подписки на стор\n        const subscribe = props.subscribe ? props.subscribe : [];\n\n        // Объект публикации в стор\n        const dispatch = props.dispatch ? props.dispatch : {};\n\n        const [subscribeProps, setSubscribeProps] = useState({});\n\n        const {trigger, valuePropName} = withStoreProps;\n\n        const excludeProps = ['componentType', 'setDateStore', 'subscribe', ...subscribe.map(item => item.name), 'dispatch', 'dispatchExtraData'];\n\n        const isMounted = useMounted()\n\n        /** Подписка на изменение props[subscribe.name] в сторе */\n        subscribe.map(item => {\n            return useEffect( () => {\n                if(isMounted && item.name) {\n                    // console.log(\"storeHOC => subscribe: \", props[subscribe.name]);\n                    item.onChange && item.onChange({value: props[item.name], extraData: props[`${item.name}ExtraData`], setSubscribeProps});\n                }\n                // console.log(\"Change Props[2]: \", props.subscribeЗф);\n            }, [props[item.name]]);\n        })\n\n        /** Подписка на изменение props и отправка данных в стор */\n        useEffect(() => {\n            // dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, props.value);\n            let _value = props[valuePropName];\n            if (_value === null || _value === undefined || (typeof _value === 'string' && _value.trim() === ''))\n                _value = undefined;\n\n            // console.log(`storeHOC [${dispatch.name}] => `, _value);\n            // console.log(`storeHOC => `, props);\n\n            if (componentType !== 'Button' && componentType !== 'Search')\n                dispatchToStore({ dispatch, setDateStore, value: _value });\n        }, [props]);\n\n        /** Подписка на изменение subscribeProps.value и отправка данных в props[trigger] (как правило это onChange) */\n        useEffect(() => {\n            if(subscribeProps && subscribeProps.value) {\n                // console.log('subscribeProps.value => ', subscribeProps.value);\n                props[trigger] && props[trigger](subscribeProps.value);\n            }\n        }, [subscribeProps.value]);\n\n        const onChange = (...args) => {\n            // console.log('withStore [trigger] ', props.componentType)\n            // const newValue = getValue(...args);\n            // dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, newValue);\n            if(componentType === 'Button')\n                dispatchToStore({dispatch, setDateStore, value: args[0], extraData: dispatchExtraData});\n            // else if(componentType === 'Search')\n            //     args[1].preventDefault();\n\n            props[trigger] && props[trigger](...args);\n        };\n\n        const _onSearch = (searchLine, e) => {\n            e.preventDefault();\n            // console.log(\"_onSearch\", searchLine);\n            dispatchToStore({dispatch, setDateStore, value: searchLine, extraData: dispatchExtraData});\n        };\n\n        const childProps = getObjectExcludedProps(props, excludeProps);\n        const onSearchProps = (componentType === 'Search') ? {onSearch: _onSearch} : {}\n        // console.log(`storeHOC Component => `, componentType, Component);\n        return (\n            <Component\n                {...childProps}\n                {...subscribeProps}\n                {...{[trigger]: onChange}}\n                {...onSearchProps}\n            >{props.children}</Component>\n        )\n    })\n};\n","export const rtPrefix = 'rt';\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Button as AntButton, DatePicker as AntDatePicker, Typography as AntTypography, Tabs as AntTabs,  } from \"antd\";\nimport { getISO, toFormat } from \"../utils/datesUtils\";\nimport {withStore} from \"./withStore\";\nimport { rtPrefix } from \"../utils/variables\";\nimport { renderClassic, renderClassicWithLabel } from \"../declarative\";\n\n/** Компонент выбора даты */\nconst DatePicker = (props) => {\n    // console.log(\"DatePickerHOC => \", props);\n    if(props.value){\n        if(typeof props.value === 'string'){\n            // console.log(\"DatePickerHOC => onChange => string\");\n            props.onChange(moment(props.value), props.value);\n        }\n        // else {\n        // \tconsole.log(\"DatePickerHOC => onChange => moment\");\n        // \tprops.onChange(props.value, props.format ? toFormat(props.value,props.format) : getISO(props.value));\n        // }\n    }\n    const value = props.value ? (typeof props.value === 'string' ? moment(props.value) : props.value) : undefined;\n    const style = {width: '100%', ...(props && props.style)}; // locale={locale}\n    // console.log(\"DatePickerHOC value => \", value);\n    return <AntDatePicker {...props} style={style} value={value} />\n};\n\n/** Компонент вывода даты в текстовом виде */\nconst TypographyDate = (props) => {\n    const {label, value, format } = props;\n    const _value = value ? (format ? toFormat(value, format) : getISO(value)) : undefined;\n    return <AntTypography.Text {...props}> {label || _value} </AntTypography.Text>;\n}\n\n/** Компонент кнопки со всеми пропрами AntButton */\nconst Button = (props) => {\n    const Component = withStore(AntButton, { trigger: 'onClick' });\n    // console.log('Props classic field renderClassic => ', props.field);\n    // const onClick = (e) => childProps.onClick && childProps.onClick(e, field);\n    const onClick = (e) => props.onClick && props.onClick(e, props.field);\n    return renderClassicWithLabel(Component)({...props, onClick: onClick})\n}\n\n/** Custom компонент */\nconst Custom = (props) => {\n    return renderClassic(props.render)({...props, componentType: 'Custom' })\n}\n\n/** Компонент заголовка формы */\nconst FormHeader = (props) => {\n    return <div className={`${rtPrefix}-form-header`}>{props.children}</div>\n}\n\n/** Компонент тела формы */\nconst FormBody = (props) => {\n    let cls = [`${rtPrefix}-form-body`];\n    props.noPadding && cls.push(`${rtPrefix}-form-body-no-padding`);\n    props.scrollable && cls.push(`${rtPrefix}-form-body-scrollable`);\n    return <div className={cls.join(\" \")}>{props.children}</div>\n}\n\n/** Компонент подвала формы */\nconst FormFooter = (props) => {\n    return <div className={`${rtPrefix}-form-footer`}>{props.children}</div>\n}\n\nconst TabPane = (props) => {\n    let cls = [];\n    props.className && cls.push(props.className);\n    props.scrollable && cls.push(`${rtPrefix}-tabs-tabpane-scrollable`);\n    return <AntTabs.TabPane {...props} className={cls.join(\" \")}>{props.children}</AntTabs.TabPane>\n}\n\n\nexport {\n    DatePicker,\n    TypographyDate,\n    Button,\n    Custom,\n    FormHeader,\n    FormBody,\n    FormFooter,\n    TabPane,\n    withStore\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getObjectExcludedProps } from \"../utils/baseUtils\";\nimport {renderClassicByName} from \"../declarative\";\nconst excludeProps = ['child', 'componentType', 'field'];\nconst FormItem = (props) => {\n\n\tconst {child, field} = props;\n\tlet antFormItemProps = getObjectExcludedProps(props, excludeProps);\n\tif (child)\n\t\treturn renderClassicByName(child.componentType)\n\t\t\t({itemProps: {...antFormItemProps}, ...child, field})\n\telse\n\t\treturn null;\n};\n\nFormItem.propTypes = {\n\tchild: PropTypes.object.isRequired\n};\n\nexport default FormItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormItem from \"./FormItem\";\nimport { Form as AntForm } from \"antd\";\nimport { getObjectExcludedProps } from \"../utils/baseUtils\";\nimport { renderDeclarativeByName } from \"../declarative\";\n\nconst excludeProps = [\"children\", \"componentType\"];\n\nconst FormItems = (props) => {\n    const { items } = props;\n\n    // console.log('FormItems props => ', props);\n\n    const getItems = (data, antFormListParams) => {\n\n        return (data && data.map((item, index) => {\n            let itemProps = getObjectExcludedProps(item, excludeProps);\n            // console.log('FormItems index => ', index);\n\n            switch (item.componentType) {\n                case \"Item\":\n                    let _item = { ...item };\n                    let _key = index;\n                    if (antFormListParams && antFormListParams.field) {\n                        if (_item.name) {\n                            if (Array.isArray(_item.name)) {\n                                _item.name = [antFormListParams.field.name, ..._item.name];\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\n                            } else {\n                                _item.name = [antFormListParams.field.name, _item.name];\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\n                            }\n                        }\n                    }\n                    // console.log('_item ', _item.name);\n                    return <FormItem key={`${_key}`} {..._item} field={{ ...antFormListParams }}/>;\n                case \"ListItems\":\n                    return (\n                        <AntForm.List key={index} {...itemProps}>\n                            {(fields, operation) => {\n                                const param = { fields: [...fields], operation: { ...operation } };\n                                return getItems(item.children, param);\n                            }}\n                        </AntForm.List>\n                    );\n                case \"ListItem\":\n                    // console.log('antFormListParams => ', antFormListParams);\n                    return (\n                        <div key={index}>\n                            {antFormListParams && antFormListParams.fields && antFormListParams.fields.map((field, fIndex) => {\n                                // console.log('index field.key', index, field);\n                                const param = { field: { ...field }, ...antFormListParams };\n                                return <div key={field.key}>{getItems(item.children, param)} </div>;\n                            })}\n                        </div>\n                    );\n                default:\n                    return renderDeclarativeByName(item.componentType)({ key: index, ...itemProps })(getItems(item.children, antFormListParams))\n            }\n        })) || null;\n    };\n\n    return getItems(items);\n};\n\nFormItems.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default FormItems;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormItems from \"./FormItems\";\nimport { Form as AntForm, notification } from \"antd\";\nimport { getObjectExcludedProps, noop, notificationError } from \"../utils/baseUtils\";\nimport { rtPrefix } from \"../utils/variables\";\n\nconst excludeProps = [\n    \"componentType\",\n    \"noPadding\",\n    \"scrollable\",\n    \"header\",\n    \"body\",\n    \"footer\",\n    \"loadInitData\",\n    \"autoSaveForm\",\n    \"requestSaveForm\",\n    \"methodSaveForm\",\n    \"processBeforeSaveForm\"\n];\n\n/** Компонент формы */\nconst Form = (props) => {\n    const {\n        loadInitData,\n        header,\n        body,\n        footer,\n        autoSaveForm,\n        requestSaveForm,\n        methodSaveForm,\n        processBeforeSaveForm\n    } = props;\n\n    /** Состояние первоначалной настройки компонента*/\n    const [loaded, setLoaded] = useState(false);\n    const [antFormProps, setAntFormProps] = useState({});\n    const [initFormData, setInitFormData] = useState({});\n\n    useEffect(() => {\n        if (!loaded) {\n            if (loadInitData !== noop)\n                loadInitData(_setInitFormData);\n            else\n                setLoaded(true);\n        }\n    }, [loaded]);\n\n    useEffect(() => {\n        setAntFormProps(getObjectExcludedProps(props, excludeProps));\n        // console.log('antFormProps props => ', getObjectExcludedProps(props, excludeProps));\n    }, [props]);\n\n\n    const _setInitFormData = (data) => {\n        // console.log(\"Form loaded init data => \", data);\n        setInitFormData(data);\n        setLoaded(true);\n    };\n\n\n    let antForm;\n    if (props && props.form) {\n        antForm = props.form;\n    } else {\n        const [form] = AntForm.useForm();\n        antForm = form;\n    }\n\n    const getBodyCls = () => {\n        let cls = [`${rtPrefix}-form-body`];\n        props.noPadding && cls.push(`${rtPrefix}-form-body-no-padding`);\n        props.scrollable && cls.push(`${rtPrefix}-form-body-scrollable`);\n        return cls.join(\" \");\n    };\n\n    const onFinish = (rawValues) => {\n        const values = processBeforeSaveForm ? processBeforeSaveForm(rawValues) : rawValues;\n        // console.log(`Success form [${props.name ? props.name : 'no name form'}]: `, values);\n        const saveObject = {\n            ...initFormData,\n            ...values,\n            // dateStart: getISO(values['dateStart'])\n        };\n\n        // console.group(`Success form [${props.name ? props.name : 'no name form'}]:`);\n        // console.log(\"values: \", values);\n        // console.log(\"saveObject: \", saveObject);\n        // console.groupEnd();\n        console.log(`Success form [${props.name ? props.name : 'no name form'}]: `, saveObject);\n        if (autoSaveForm && requestSaveForm) {\n            // const saveObject = {\n            //     ...initFormData,\n            //     ...values,\n            //     // dateStart: getISO(values['dateStart'])\n            // };\n            requestSaveForm({\n                method: methodSaveForm,\n                data: saveObject\n            })\n                .then(response => {\n                    notification.success({\n                        message: \"Сохранение прошло успешно\"\n                    });\n                    if (props.onFinish)\n                        props.onFinish(values);\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\n        } else if (props.onFinish)\n            props.onFinish(values);\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.error(\"Failed:\", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    const Header = (header) => <div className={`${rtPrefix}-form-header`}><FormItems items={header}/></div>\n    const Footer = (footer) => <div className={`${rtPrefix}-form-footer`}><FormItems items={footer}/></div>\n\n    return (\n        <React.Fragment>\n            {loaded\n                ? <AntForm\n                    form={antForm}\n                    {...antFormProps}\n                    className={`${antFormProps.className} ${rtPrefix}-form`}\n                    style={{ ...antFormProps.style, width: '100%', height: '100%' }}\n                    initialValues={{ ...antFormProps.initialValues, ...initFormData }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                >\n                    <React.Fragment>\n                        {header ? Header(header) : null}\n                        {body ? <div className={getBodyCls()}><FormItems items={body}/></div> : null}\n                        {props.children}\n                        {footer ? Footer(footer) : null}\n                    </React.Fragment>\n                </AntForm>\n                : null}\n        </React.Fragment>\n    );\n};\n\nForm.propTypes = {\n\n    /** Не делать отступы у формы от краев блока. **Only config Form** */\n    noPadding: PropTypes.bool,\n\n    /** Разрешит скролл внтри формы. **Only config Form** */\n    scrollable: PropTypes.bool,\n\n    /** Массив объектов для шапки формы. Как правило только заголовок. */\n    header: PropTypes.arrayOf(PropTypes.object),\n\n    /** Массив объектов для тела формы */\n    body: PropTypes.arrayOf(PropTypes.object),\n\n    /** Массив объектов для подвала формы. Как правило только кнопки \"Сохранить\" и \"Отмена\" */\n    footer: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ссылка на функцию загрузки значений по умолчанию\n     * `(callBack) => callBack(initObject)` */\n    loadInitData: PropTypes.func,\n\n    /** Производить ли автоматическое сохранение по параметрам `requestSaveForm` и `methodSaveForm` */\n    autoSaveForm: PropTypes.bool,\n\n    /** Запрос для автоматического сохранения формы */\n    requestSaveForm: PropTypes.func,\n\n    /** HTTP Метод, передаваемый в запрос сохранения */\n    methodSaveForm: PropTypes.string,\n\n    /** Функция обработки перед сохранением формы */\n    processBeforeSaveForm: PropTypes.func\n};\n\nForm.defaultProps = {\n    noPadding: false,\n    scrollable: false,\n    loadInitData: noop,\n    autoSaveForm: true\n};\n\nexport default Form;\n","import React from 'react';\nimport {rtPrefix} from '../utils/variables';\n\n/** Компонент обертка со всеми пропрами div */\nconst Layout = props => {\n\n    const getCls = () => {\n        let cls = [`${rtPrefix}-layout`];\n        props.className && cls.push(props.className);\n        return cls.join(' ');\n    };\n\n    return (\n        <div {...props} className={getCls()}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Layout;\n","import React, {useState, useEffect} from 'react';\n\nconst Switcher = props => {\n\n    const { value } = props;\n\n    const [_value, _setValue] = useState(0);\n\n    useEffect(() => {\n        if(value !== undefined && value < props.children.length) {\n            _setValue(value);\n        }\n    }, [value])\n\n    return (props.children[_value]);\n};\n\n\nexport default Switcher;\n","import {Spin} from 'antd';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport React from 'react';\n\nexport const empty = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<span>Нет данных</span>{' '}\n\t</div>\n);\n\nexport const overlay = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<Spin\n\t\t\ttip='Загрузка...'\n\t\t\tindicator={<LoadingOutlined style={{fontSize: 24}} spin />}\n\t\t/>{' '}\n\t</div>\n);\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport { flatten, getTableRowKeys, getTableRowObjects } from \"../../utils/baseUtils\";\n\nconst SelectionHead = (props) => {\n\tconst {column, container} = props;\n\tconst {rowKey, onSelectAll, selectedRowKeys, selectAll} = column;\n\n\tconst _handleChange = (e) => {\n\t\tconst rowKeys = flatten(getTableRowKeys(container.props.data, column.rowKey));\n\t\tconst rowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => rowKeys.includes(item[rowKey]));\n\t\tconst totalLength = rowKeys.length;\n\t\tconst selectLength = selectedRowKeys.length;\n\t\tconst checked = !(totalLength === selectLength);\n\n\t\t// const newRowKeys = container.props.data.map((item) => { return item[column.rowKey] });\n\t\tonSelectAll({selected: checked, rowKeys: rowKeys, rowObjects: rowObjects});\n\t};\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={selectAll === null}\n\t\t\tonChange={_handleChange}\n\t\t\tchecked={selectAll}\n\t\t/>\n\t);\n};\n\nexport default SelectionHead;\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport {\n\tflatten,\n\tgetTableRowKeys,\n\tfindNodeByRowKey, getTableRowObjects\n} from \"../../utils/baseUtils\";\n\nconst getRowChildren = (data, rowKey) =>\n\tdata.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item[rowKey], getRowChildren(item.children, rowKey)];\n\t\t}\n\t\treturn item[rowKey];\n\t});\n\nconst findBrothers = (data, selfItem, rowKey, parentKey, rowKeys = null) => {\n\tlet arr = [];\n\tdata.forEach((item) => {\n\t\tif (\n\t\t\titem[parentKey] &&\n\t\t\titem[parentKey] === selfItem[parentKey] &&\n\t\t\titem[rowKey] !== selfItem[rowKey]\n\t\t) {\n\t\t\tif (rowKeys !== null) {\n\t\t\t\tif (rowKeys.includes(item[rowKey])) {\n\t\t\t\t\tarr.push(item[rowKey]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tarr.push(item[rowKey]);\n\t\t\t}\n\t\t} else if (item.children && item.children.length) {\n\t\t\tarr.push(\n\t\t\t\tfindBrothers(\n\t\t\t\t\titem.children,\n\t\t\t\t\tselfItem,\n\t\t\t\t\trowKey,\n\t\t\t\t\tparentKey,\n\t\t\t\t\trowKeys\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\treturn arr;\n};\n\nexport const parentAnalysis = ({\n\trowData,\n\trowKey,\n\tparentKey,\n\tchecked,\n\tnodeAssociated,\n\ttreeData,\n\tselectedRowKeys,\n\tindeterminateRowKeys,\n}) => {\n\tlet _selectedRowKeys = [...selectedRowKeys];\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\tlet currentRowData = rowData;\n\tlet parentExist = !!currentRowData[parentKey];\n\tlet lastTypeSelect = checked ? 'checked' : 'square';\n\tlet typeSelect = '';\n\tlet nextSquare = false;\n\n\t/** Пока есть родитель */\n\twhile (parentExist && nodeAssociated) {\n\t\tconst indeterminateBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_indeterminateRowKeys\n\t\t\t)\n\t\t);\n\t\tconst selectedBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_selectedRowKeys\n\t\t\t)\n\t\t);\n\t\tconst allBrothers = flatten(\n\t\t\tfindBrothers(treeData, currentRowData, rowKey, parentKey)\n\t\t);\n\n\t\tif (checked) {\n\t\t\tif (\n\t\t\t\tlastTypeSelect === 'checked' &&\n\t\t\t\tselectedBrothers.length === allBrothers.length\n\t\t\t)\n\t\t\t\ttypeSelect = 'checked';\n\t\t\telse typeSelect = 'square';\n\t\t} else {\n\t\t\tif (\n\t\t\t\t!checked &&\n\t\t\t\t!nextSquare &&\n\t\t\t\t(selectedBrothers.length || indeterminateBrothers.length)\n\t\t\t)\n\t\t\t\tnextSquare = true;\n\t\t\tif (nextSquare) typeSelect = 'square';\n\t\t\telse typeSelect = 'none';\n\t\t}\n\n\t\t// console.log(\"allBrothers \", allBrothers);\n\t\t// console.log(\"findParentById \", treeData,\n\t\t//     rowKey,\n\t\t//     parentKey,\n\t\t//     currentRowData[parentKey]);\n\t\t//\n\t\t// console.log(\"findNodeByRowKey \", findNodeByRowKey(treeData, rowKey, currentRowData[parentKey]));\n\n\t\t// Найти родителя\n\t\tcurrentRowData = findNodeByRowKey(\n\t\t\ttreeData,\n\t\t\trowKey,\n\t\t\tcurrentRowData[parentKey]\n\t\t);\n\n\t\tif (typeSelect === 'checked') {\n\t\t\t// Выделить галкой\n\t\t\t// console.log(\"checked\");\n\t\t\tlastTypeSelect = 'checked';\n\t\t\tif (!_selectedRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_selectedRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _indeterminateRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _indeterminateRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'square') {\n\t\t\t// Выдлеить квадратом\n\t\t\t// console.log(\"square: \");\n\t\t\tlastTypeSelect = 'square';\n\t\t\tif (!_indeterminateRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_indeterminateRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _selectedRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'none') {\n\t\t\t// Снять выделение\n\t\t\t// console.log(\"none: \");\n\t\t\tlastTypeSelect = 'none';\n\t\t\tconst indexS = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (indexS > -1) _selectedRowKeys.splice(indexS, 1);\n\t\t\tconst indexI = _indeterminateRowKeys.indexOf(\n\t\t\t\tcurrentRowData[rowKey]\n\t\t\t);\n\t\t\tif (indexI > -1) _indeterminateRowKeys.splice(indexI, 1);\n\t\t}\n\n\t\tparentExist = !!currentRowData[parentKey];\n\t\t// parentExist = проверка наличия след родителя\n\t}\n\n\treturn [_selectedRowKeys, _indeterminateRowKeys];\n};\n\nexport const onChangeSelectionCell = (props) => {\n\tconst {rowData, rowIndex, column, rows, checked} = props;\n\tconst {\n\t\trowKey,\n\t\tparentKey,\n\t\tnodeAssociated,\n\t\tselectedRowKeys,\n\t\tindeterminateRowKeys,\n\t\tonChange\n\t} = column;\n\n\t// const rowKeys = flatten(getTableRowKeys([rowData], column.rowKey));\n\t// const totalLength = container.props.data.length;\n\t// const checked = e.target.checked;\n\t// const currentRowKey = {[rowKey]: rowData[rowKey], checked};\n\t// console.log(\"_handleChange: \", container);\n\n\tlet _selectedRowKeys = [...selectedRowKeys];\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\t/** Обработка себя, поиск детей, выделение / снятие их */\n\tlet rowChildren = [];\n\tif (checked) {\n\t\tif (rowData.children && nodeAssociated)\n\t\t\trowChildren = flatten(getRowChildren(rowData.children, rowKey));\n\n\t\t_selectedRowKeys = _selectedRowKeys\n\t\t\t.concat([rowData[rowKey]])\n\t\t\t.concat(rowChildren);\n\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t(element) =>\n\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t!rowChildren.includes(element)\n\t\t);\n\t} else {\n\t\tif (rowData.children && nodeAssociated)\n\t\t\trowChildren = flatten(\n\t\t\t\tgetRowChildren(rowData.children, rowKey, false)\n\t\t\t);\n\n\t\t_selectedRowKeys = _selectedRowKeys.filter(\n\t\t\t(element) =>\n\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t!rowChildren.includes(element)\n\t\t);\n\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t(element) =>\n\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t!rowChildren.includes(element)\n\t\t);\n\t}\n\n\t[_selectedRowKeys, _indeterminateRowKeys] = parentAnalysis({\n\t\trowData,\n\t\trowKey,\n\t\tparentKey,\n\t\tchecked,\n\t\tnodeAssociated,\n\t\ttreeData: rows,\n\t\tselectedRowKeys: _selectedRowKeys,\n\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t});\n\n\tconst keys = [...new Set(_selectedRowKeys)];\n\tconst _selectedRowObjects = flatten(getTableRowObjects(rows, rowKey)).filter((item) => keys.includes(item[rowKey]));\n\t//return [...new Set(_disabledElements)]\n\t// onChange({ selected: checked, totalLength, rowData, rowIndex });\n\n\t/** Выясняем новое состояние галочки \"Выделить все\" */\n\tlet selectAll;\n\tconst selectLength = keys.length;\n\tconst totalLength = flatten(\n\t\tgetTableRowKeys(rows, column.rowKey)\n\t).length;\n\n\tif (selectLength === 0) selectAll = false;\n\telse if (totalLength === selectLength) selectAll = true;\n\telse if (totalLength !== selectLength) selectAll = null;\n\n\n\n\tonChange({\n\t\tselected: checked,\n\t\t_selectedRow: {\n\t\t\trowData: {...rowData},\n\t\t\trowIndex: rowIndex,\n\t\t\trowKey: rowKey,\n\t\t},\n\t\t_selectAll: selectAll,\n\t\t_selectedRowKeys: keys, //[...new Set(_selectedRowKeys)],\n\t\t_selectedRowObjects: _selectedRowObjects,\n\t\t_indeterminateRowKeys: [...new Set(_indeterminateRowKeys)],\n\t});\n\n\t// let uniqIds = {};\n\t// onChange({selected: checked, rowKeys: rowKeys.filter(obj => !uniqIds[obj[rowKey]] && (uniqIds[obj[rowKey]] = true)) });\n};\n\nconst SelectionCell = (props) => {\n\n\tconst {rowData, column} = props;\n\tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\n\tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\n\tconst checked = selectedRowKeys.includes(rowData[rowKey]);\n\n\t// React.useEffect(() => {\n\t// \tconsole.log(\"selectionCell\", props);\n\t// }, [props]);\n\n\tconst _onChangeHandler = (checked) => {\n\t\tconst {rowData, rowIndex, column, container} = props;\n\t\tonChangeSelectionCell({\n\t\t\trowData, rowIndex, column, rows: container.props.data, checked\n\t\t})\n\t}\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={det}\n\t\t\t// onChange={(e) => _onChangeHandler(e.target.checked)}\n\t\t\tchecked={checked}\n\t\t/>\n\t);\n};\n\nexport default SelectionCell;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {CloseCircleOutlined} from '@ant-design/icons';\nimport {rtPrefix} from '../../utils/variables';\n\nconst SelectionList = (props) => {\n\tconst {selectedRowObjects, rowRender, onClickDropSelect} = props;\n\n\t// console.log(\"SelectionList typeof -> \", typeof(rowRender));\n\treturn (\n\t\t<div className={`${rtPrefix}-table-selected-rows`}>\n\t\t\t{selectedRowObjects && selectedRowObjects.length > 0 ? (\n\t\t\t\t<ul>\n\t\t\t\t\t{selectedRowObjects.map((item, index) => (\n\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t{/*{(typeof(rowRender) === 'string') ? <div>{item[rowRender]}</div> : rowRender }*/}\n\t\t\t\t\t\t\t{typeof rowRender === 'function' ? (\n\t\t\t\t\t\t\t\trowRender({rowData: item, rowIndex: index})\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>{item[rowRender]}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<div onClick={() => onClickDropSelect(item)}>\n\t\t\t\t\t\t\t\t<CloseCircleOutlined />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t) : (\n\t\t\t\t<div>Нет выбранных записей</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nSelectionList.propTypes = {\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { rowData, rowIndex }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n\t/** Список выделенных объектов */\n\tselectedRowObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Событие удаления элемента */\n\tonClickDropSelect: PropTypes.func.isRequired,\n};\n\nSelectionList.defaultProps = {};\n\nexport default SelectionList;\n","import React, {useRef, forwardRef, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport BaseTable, {AutoResizer, callOrReturn} from 'react-base-table';\n// import BaseTable from \"./BaseTable/BaseTable\";\nimport {empty, overlay} from './defaultSettings';\nimport SelectionHead from './Selectable/SelectionHead';\nimport SelectionCell, {parentAnalysis, onChangeSelectionCell} from './Selectable/SelectionCell';\nimport SelectionList from './SelectionList/SelectionList';\nimport {rtPrefix} from '../utils/variables';\nimport {\n\tflatten,\n\tgenerateUUID,\n\tgetTableRowKeys,\n\tfindNodeByRowKey,\n\tnoop,\n\tgetTableRowObjects, notificationError, useMounted\n} from \"../utils/baseUtils\";\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../redux/rtd.actions\";\nimport FormItems from \"../Form/FormItems\";\nimport moment from \"moment\";\n\n/** Компонент таблицы */\nconst Table = forwardRef((props, ref) => {\n\n\t/** LOADING AND INFINITY MODE STATES */\n\t/** Наличие на сервере еще данных */\n\tconst [hasMore, setHasMore] = useState(true);\n\t/** Индикатор загрузки данных */\n\tconst [loading, setLoading] = useState(false);\n\n\t/** TABLE STATES */\n\t/** Колонки таблицы */\n\t// const [_columns, _setColumns] = useState([]);\n\t/** Строки таблицы */\n\tconst [_rows, _setRows] = useState([]);\n\t/** Ключи выделенных строк */\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n\t/** Значение строки поиска */\n\tconst [_searchValue, setSearchValue] = useState('');\n\t/** Объект фильтра */\n\tconst [_filter, setFilter] = useState({});\n\t/** Объект соритировки */\n\tconst [_sortBy, setSortBy] = useState({});\n\t/** Состояние selectAll галочки */\n\tconst [selectAll, setSelectAll] = useState(false);\n\n\t/** TREE STATES */\n\t/** Ключи строк с кубиками при selectable = true */\n\tconst [_indeterminateRowKeys, setIndeterminateRowKeys] = useState([]);\n\t/** Ключи раскрытых строк при selectable = true */\n\tconst [_expandedRowKeys, setExpandedRowKeys] = useState([]);\n\n\t/** FOOTER STATES */\n\t/** Отображать ли footer */\n\tconst [_footerShow, _setFooterShow] = useState(false);\n\t/** Всего строк по фильтру в таблице */\n    const [_totalCountRows, setTotalCountRows] = useState(0);\n\n\n\tconst [subscribeProps, setSubscribeProps] = useState({});\n\n\tconst tableRef = useRef();\n\n\tconst isMounted = useMounted()\n\n\tconst {\n\t\t/** Required */\n\t\tcolumns,\n\t\t// type,\n\t\tinfinityMode,\n\t\teditMode, // need Props.types\n\n\t\t/** Def values */\n\t\tdefaultRows,\n\t\tdefaultSelectedRowKeys,\n\t\tdefaultSearchValue,\n\t\tdefaultFilter,\n\t\tdefaultSortBy,\n\n\t\t/** Outdoor control */\n\t\trows,\n\t\tsetRows, // ???\n\t\tselectedRowKeys,\n\t\tsearchValue,\n\t\tfilter,\n\t\tsortBy,\n\n\t\t/** Base Props */\n\t\trowKey,\n\t\tcustomFields,\n\n\t\t/** View Props */\n\t\tempty,\n\t\toverlay,\n\t\tfixWidthColumn,\n\t\t// footerProps,\n\t\theaderHeight,\n\t\trowHeight,\n\t\trowRenderer,\n\t\tzebraStyle,\n\t\testimatedRowHeight,\n\t\t// cellBordered, // need Props.types\n\t\trowBordered,  // need Props.types\n\n\t\t/** Load Data Props */\n\t\tloadThreshold,\n\t\tpageSize,\n\t\trequestLoadRows,\n        requestLoadCount,\n\t\tsearchParamName,\n\n\t\t/** Selectable Props */\n\t\tselectable,\n\n\t\t/** Tree Props */\n\t\tnodeAssociated,\n\t\texpandColumnKey,\n\t\texpandDefaultAll,\n\t\texpandLazyLoad,\n\t\texpandParentKey,\n\n\t\t/** Events */\n\t\tonRowClick,\n\t\tonRowDoubleClick,\n\t\tonRowExpand,\n\t\tonSelectedRowsChange,\n\t\tonExpandedRowsChange,\n\n\t\t/** SELECTED PANEL */\n\t\tshowSelection,\n\t\trowRenderShowSelection,\n\n\t\t/** REDUX PROPS */\n\t\tdispatchPath,\n\t\tsubscribe,\n\n\t\tvalue,\n\t\tonChange,\n\t} = {...props, ...subscribeProps};\n\n\tconst footerProps = {\n\t\t...Table.defaultProps.footerProps,\n\t\t...props.footerProps,\n\t};\n\n\tconst selectedDispatchPath = dispatchPath && `${dispatchPath}.selected`;\n\tconst rowsDispatchPath = dispatchPath && `${dispatchPath}.rows`;\n\tconst rowDoubleClickDispatchPath = dispatchPath && `${dispatchPath}.events.onRowDoubleClick`;\n\n\tuseEffect(() => {\n        // console.log(\"Инициализация дефолтных значений \", selectColumn, columns);\n        // console.log(\"Инициализация дефолтных значений defaultSelectedRowKeys > \", defaultSelectedRowKeys);\n\n\t\t// Инициализация дефолтных значений\n\t\t// _setRows(defaultRows);\n\t\tif(defaultRows.length > 0) _setRowsHandler(defaultRows);\n\t\telse if(rows.length > 0) _setRowsHandler(rows);\n\t\t// setSelectedRowKeys(defaultSelectedRowKeys);\n\t\t_setSelectedRowsHandler(defaultSelectedRowKeys,undefined, defaultRows)\n\t\tsetSearchValue(defaultSearchValue);\n\t\tsetFilterHandler(defaultFilter);\n\t\tsetSortBy(defaultSortBy);\n\t\tsetSelectAll(\n\t\t\tdefaultRows.length > 0 &&\n\t\t\t\tdefaultRows.length === defaultSelectedRowKeys.length\n\t\t);\n\t\t// Определение нужно ли отображать подвал\n\t\t_setFooterShow(\n\t\t\t(footerProps.showElements.length ||\n\t\t\tfooterProps.leftCustomSideElement ||\n\t\t\tfooterProps.centerCustomSideElement ||\n\t\t\tfooterProps.rightCustomSideElement));\n\n\t\t// Only tree table\n\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t// Открытие всех нод\n\t\t\tif (expandDefaultAll)\n\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\tflatten(getTableRowKeys(defaultRows, rowKey))\n\t\t\t\t);\n\t\t\t// Установка квадратиков на нужных нодах\n\t\t\tif (defaultSelectedRowKeys && defaultSelectedRowKeys.length > 0) {\n\t\t\t\tlet flatRows = flatten(getTableRowKeys(defaultRows, rowKey));\n\t\t\t\tlet selectedRow = flatRows.filter((item) =>\n\t\t\t\t\tdefaultSelectedRowKeys.includes(item[rowKey])\n\t\t\t\t);\n\t\t\t\tlet _indeterminateRowKeys = [];\n\t\t\t\tselectedRow.forEach((item) => {\n\t\t\t\t\tconst [ss, ii] = parentAnalysis({\n\t\t\t\t\t\trowData: item,\n\t\t\t\t\t\trowKey,\n\t\t\t\t\t\tparentKey: expandParentKey,\n\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t\tnodeAssociated,\n\t\t\t\t\t\ttreeData: defaultRows,\n\t\t\t\t\t\tselectedRowKeys: defaultSelectedRowKeys,\n\t\t\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t\t\t\t});\n\t\t\t\t\t_indeterminateRowKeys.push(...ii);\n\t\t\t\t});\n\t\t\t\tsetIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\n\t\t\t}\n\t\t}\n\n\t\t// if (type !== 'localSide') {\n\t\t_dataProcessing({\n\t\t\tsortBy: defaultSortBy,\n\t\t\tfilter: defaultFilter,\n\t\t\tsearchLine: defaultSearchValue,\n\t\t\treload: true,\n\t\t});\n\t\t// }\n\t\t// console.log(\"Table => useEffect start \");\n\t\t// setMounted(true);\n\t\tif (ref && typeof ref === 'function') ref({reloadData});\n\t\telse if (ref && typeof ref === 'object') ref.current = {reloadData};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif(isMounted) {\n\t\t\t// console.log('useEffect rows');\n\t\t\t_setRowsHandler(rows);\n\t\t\t// setSelectedRowKeys(selectedRowKeys);\n\t\t\t_setSelectedRowsHandler(selectedRowKeys, undefined, rows);\n\t\t\tsetSearchValue(searchValue);\n\t\t\tsetFilterHandler(filter);\n\t\t\tsetSortBy(sortBy);\n\t\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t\t// Открытие всех нод\n\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\tsetExpandedRowKeys(flatten(getTableRowKeys(rows, rowKey)));\n\t\t\t}\n\t\t}\n    }, [rows, selectedRowKeys, searchValue, filter, sortBy]);\n\n\tuseEffect(() => {\n\t\t// console.log('useEffect editMode');\n\t\t_setSelectedRowsHandler([], [])\n\t}, [editMode])\n\n\tuseEffect(() => {\n\t\t// console.log('useEffect value');\n\t\t_setRowsHandler(value)\n\t}, [value])\n\n\t/** Подписка на изменение props[subscribe.name] в сторе */\n\tsubscribe.map(item => {\n\t\treturn useEffect( () => {\n\t\t\tif(isMounted && item.name) {\n\t\t\t\t// console.log(\"Table => useEffect => [%s] \", item.name, props[item.name]);\n\t\t\t\tconst onChangeObject = {\n\t\t\t\t\tvalue: props[item.name],\n\t\t\t\t\textraData: props[`${item.name}ExtraData`],\n\t\t\t\t\treloadTable: reloadData,\n\t\t\t\t\taddRows: _addRows,\n\t\t\t\t\taddRow: _addRow,\n\t\t\t\t\taddRowAsCopy: _addRowAsCopy,\n\t\t\t\t\teditRow: _editRow,\n\t\t\t\t\tremoveRow: _removeRow,\n\t\t\t\t\tmoveUpRow: _moveUpRow,\n\t\t\t\t\tmoveDownRow: _moveDownRow,\n\t\t\t\t\tsetSubscribeProps: _setSubscribeProps,\n\t\t\t\t}\n\t\t\t\titem.onChange && item.onChange(onChangeObject);\n\t\t\t}\n\t\t}, [props[item.name]]);\n\t})\n\n\t/** BASE FUNCTIONS */\n\n\tconst _setSubscribeProps = (props) => {\n\t\t// setTimeout(() => {\n\t\t// \tconsole.log('_setSubscribeProps');\n\t\tsetSubscribeProps({...subscribeProps, ...props});\n\t\t// }, 2000)\n\t}\n\n\tconst _setRowsHandler = (rows) => {\n\t\t// console.log('_setRowsHandler onChange');\n\t\t_setRows(rows);\n\t\tsetRows(rows);\n\t\trowsDispatch(rows);\n\t};\n\n\tconst _setSelectedRowsHandler = (selectedKeys = [], selectedObjects = undefined, rows = []) => {\n\t\t// console.log('_setSelectedRowsHandler => ', selectedKeys)\n\t\tsetSelectedRowKeys(selectedKeys);\n\t\tif(selectedKeys.length === 0)\n\t\t\tif (selectable)\n\t\t\t\tselectedDispatch([]);\n\t\t\telse\n\t\t\t\tselectedDispatch(undefined);\n\t\telse if(selectedKeys.length > 0 && !selectedObjects)\n\t\t\tif (selectable)\n\t\t\t\tselectedDispatch (flatten( getTableRowObjects(rows, rowKey) ).filter((item) => selectedKeys.includes(item[rowKey])))\n\t\t\telse\n\t\t\t\tselectedDispatch (findNodeByRowKey(rows, rowKey, selectedKeys[0]))\n\t\telse\n\t\t\tselectedDispatch(selectedObjects);\n\t}\n\n\tconst rowsDispatch = (rows) => {\n\t\trowsDispatchPath && props.setDateStore && props.setDateStore(rowsDispatchPath, rows);\n\t};\n\n\tconst selectedDispatch = (data) => {\n\t\tselectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, data);\n\t}\n\n\tconst rowDoubleClickDispatch = (value) => {\n\t\trowDoubleClickDispatchPath\n\t\t&& props.setDateStore\n\t\t&& props.setDateStore(rowDoubleClickDispatchPath, {\n\t\t\ttimestamp: moment(),\n\t\t\tvalue: value\n\t\t});\n\t}\n\n\tconst onTableEventsDispatch = (nameEvent, value) => {\n\t\tconst dp = dispatchPath && `${dispatchPath}.events.${nameEvent}`;\n\t\tdp && props.setDateStore && props.setDateStore(dp, {\n\t\t\ttimestamp: moment(),\n\t\t\tvalue: value\n\t\t});\n\t\t// console.log('onTableEventsDispatch onChange');\n\t\tonChange && onChange(value)\n\t}\n\n\tconst setFilterHandler = (filter) => {\n\t\t// console.log('setFilterHandler => ', filter);\n\t\tsetFilter(filter);\n\t}\n\n\tconst reloadData = ({sortBy, filter, searchValue}, appendParams) => {\n\t\t// console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\n\t\ttableRef.current && tableRef.current.scrollToRow(0, 'auto');\n\t\tif(props.value && props.value.length > 0)\n\t\t\t_setSelectedRowsHandler(props.value.map(item => item[rowKey]), props.value);\n\t\telse\n\t\t\t_setSelectedRowsHandler()\n\n\t\tconst __sortBy = appendParams ? (sortBy ? sortBy : _sortBy) : sortBy;\n\t\tconst __filter = appendParams ? {..._filter, ...filter} : filter;\n\t\tconst __searchValue = appendParams ? (searchValue ? searchValue : _searchValue) : searchValue;\n\t\tif(sortBy) setSortBy(__sortBy);\n\t\tif(filter) setFilterHandler(__filter);\n\t\tif(searchValue) setSearchValue(__searchValue);\n\t\t_dataProcessing({\n\t\t\tsortBy: __sortBy,\n\t\t\tfilter: __filter,\n\t\t\tsearchLine: __searchValue,\n\t\t\treload: true,\n\t\t});\n        // console.log(\"reloadData loading \", loading);\n    };\n\n\tconst _dataProcessing = (params) => {\n\t\t// console.log('_dataProcessing', params);\n\t\tconst {sortBy, filter, searchLine, expandRow, reload} = params;\n\t\tif ((hasMore || reload) && !loading) {\n\t\t\tsetLoading(true);\n\t\t\tconst pageNum = reload\n\t\t\t\t? 0\n\t\t\t\t: Math.floor(_rows.length / pageSize);\n\t\t\tconst params = {\n\t\t\t\tpage: pageNum,\n\t\t\t\tsize: pageSize,\n\t\t\t\tsort:\n\t\t\t\t\tsortBy && sortBy.key\n\t\t\t\t\t\t? sortBy.key + ',' + sortBy.order\n\t\t\t\t\t\t: null,\n\t\t\t};\n\t\t\tconst dataQuery = {\n\t\t\t\t...filter,\n\t\t\t\t...(searchLine\n\t\t\t\t\t? {[searchParamName]: searchLine}\n\t\t\t\t\t: null),\n\t\t\t};\n\t\t\t// console.log('dataQuery', dataQuery);\n\n\t\t\tif(infinityMode && reload && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad) {\n\t\t\t\trequestLoadCount({\n\t\t\t\t\tparams,\n\t\t\t\t\tdata: dataQuery,\n\t\t\t\t})\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\t\t// const result = response.data;\n\t\t\t\t\t\tsetTotalCountRows(response.data);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error =>\n\t\t\t\t\t\tnotificationError(error, 'Ошибка получения количества записей по фильтру') );\n\t\t\t}\n\n\t\t\t// console.log('requestLoadRows => ', typeof requestLoadRows);\n\t\t\t// if(typeof requestLoadRows !== 'function'){\n\t\t\t//     setLoading(false);\n\t\t\t// }\n\t\t\tif(requestLoadRows) {\n\t\t\t\trequestLoadRows({\n\t\t\t\t\tparams,\n\t\t\t\t\tdata: dataQuery,\n\t\t\t\t})\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\t\tconst result = response.data;\n\t\t\t\t\t\t// Если иерархия и ленивая, то ищим кому добавть полученные записи\n\t\t\t\t\t\tif (!!expandColumnKey && expandLazyLoad) {\n\t\t\t\t\t\t\t// lastExpandRow//, setLastExpandRow\n\t\t\t\t\t\t\t// console.log('!!expandColumnKey && expandLazyLoad', result);\n\t\t\t\t\t\t\tif (pageNum === 0) {\n\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t{ [rowKey]: generateUUID() },\n\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t// _setRows(result);\n\t\t\t\t\t\t\t\t_setRowsHandler(result);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlet newRows = [..._rows];\n\t\t\t\t\t\t\t\t// (data, rowKey, rowValue)\n\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t{ [rowKey]: generateUUID() },\n\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tlet node = findNodeByRowKey(\n\t\t\t\t\t\t\t\t\tnewRows,\n\t\t\t\t\t\t\t\t\trowKey,\n\t\t\t\t\t\t\t\t\texpandRow[rowKey]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tnode.children = result;\n\t\t\t\t\t\t\t\t// console.log('newRows -> ', newRows);\n\t\t\t\t\t\t\t\t// _setRows(newRows);\n\t\t\t\t\t\t\t\t_setRowsHandler(newRows);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (result && result.length < pageSize) {\n\t\t\t\t\t\t\t\tsetHasMore(false);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetHasMore(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpageNum === 0\n\t\t\t\t\t\t\t\t? _setRowsHandler(result) // _setRows\n\t\t\t\t\t\t\t\t: _setRowsHandler(_rows.concat(result)); // _setRows\n\n\t\t\t\t\t\t\t// console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\n\t\t\t\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\t\t\t\t\tflatten(getTableRowKeys(result, rowKey))\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t\t\t\t_setRowsHandler(_rows); // _setRows\n\t\t\t\t\t\t// setHasMore(false);\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t});\n\t\t\t} else setLoading(false);\n\t\t}\n\t};\n\n\t/** Событие выделение одной строки в режиме без галочек */\n\tconst useSimpleAndDoubleClick = (actionSimpleClick, actionDoubleClick, delay = 200) => {\n\t\tconst [click, setClick] = useState(0);\n\t\tconst [data, setData] = useState(undefined);\n\t\tuseEffect(() => {\n\t\t\tconst timer = setTimeout(() => {\n\t\t\t\t// simple click\n\t\t\t\tif (click === 1) actionSimpleClick(data);\n\t\t\t\tsetClick(0);\n\t\t\t}, delay);\n\t\t\tif (click === 2) actionDoubleClick(data);\n\t\t\treturn () => clearTimeout(timer);\n\t\t}, [click]);\n\t\treturn (_data) => {setClick(prev => prev + 1); setData(() => _data);}\n\t}\n\n\tlet timer;\n\tconst simpleAndDoubleClick = (actionSimpleClick, actionDoubleClick, data) => (event) => {\n\t\tclearTimeout(timer);\n\t\tif (event.detail === 1) {\n\t\t\t// console.log('actionSimpleClick', data)\n\t\t\ttimer = setTimeout(() => actionSimpleClick(data), 200)\n\t\t} else if (event.detail === 2) {\n\t\t\t// console.log('actionDoubleClick', data)\n\t\t\tactionDoubleClick(data)\n\t\t}\n\t}\n\n\tconst _onRowClick = ({rowData, rowIndex, rowKey}) => {\n\t\t// console.log('actionSimpleClick')\n\t\t_rowSelectAfterClick({rowData, rowIndex, rowKey, onClick: onRowClick})\n\t}\n\tconst _onRowDoubleClick = ({rowData, rowIndex, rowKey}) => {\n\t\t// console.log('onDoubleClick', rowData, rowIndex, rowKey);\n\t\t// console.log('actionDoubleClick')\n\t\trowDoubleClickDispatch(rowData);\n\t\t_rowSelectAfterClick({rowData, rowIndex, rowKey, onClick: onRowDoubleClick})\n\t}\n\n\tconst _rowSelectAfterClick = ({rowData, rowIndex, rowKey, onClick}) => {\n\t\tconst checked = !_selectedRowKeys.includes(rowKey);\n\t\tconst newRowObject = {\n\t\t\trowData: {...rowData},\n\t\t\trowIndex: rowIndex,\n\t\t\trowKey: rowKey,\n\t\t};\n\t\tif (!selectable) {\n\t\t\t// console.log('_rowEventHandlers -> onClick', rowKey, rowIndex);\n\t\t\t// console.log('q onRowClick => ', rowData)\n\t\t\t// if(_selectedRowKeys)\n\t\t\tif(checked && !editMode)\n\t\t\t\t_setSelectedRowsHandler([rowKey], rowData);\n\t\t\tonSelectedRowsChange([rowKey], [rowData]);\n\t\t} else {\n\t\t\tonChangeSelectionCell({\n\t\t\t\t...newRowObject,\n\t\t\t\tcolumn: _getSelectionColumnProps(),\n\t\t\t\trows: _rows,\n\t\t\t\tchecked: checked,\n\t\t\t})\n\t\t}\n\t\tonClick({ selected: checked, ...newRowObject });\n\t}\n\n\tconst _rowEventHandlers = {\n\t\tonClick: _onRowClick,\n\t\tonDoubleClick: _onRowDoubleClick,\n\n\t\t// onClick: useSimpleAndDoubleClick(_onRowClick, _onRowDoubleClick),\n\t\t// onClick: simpleAndDoubleClick(_onRowClick, _onRowDoubleClick),\n\n\t\t// onDoubleClick: console.log('onDoubleClick'),\n\t\t// onContextMenu: console.log('context menu'),\n\t\t// onMouseEnter: console.log('mouse enter'),\n\t\t// onMouseLeave: console.log('mouse leave'),\n\t};\n\n\n\t/** Событие при сортировке */\n\tconst _onColumnSort = (sortBy) => {\n\t\t// console.log(\"sortBy\", sortBy);\n\t\ttableRef.current.scrollToRow(0, 'auto');\n\t\tsetSortBy(sortBy);\n\n\t\t// Для серверной сортировки - сбросить выделение\n\t\t// if (type !== 'localSide') {\n\t\t// setSelectedRowKeys([]);\n\t\t_setSelectedRowsHandler();\n\t\t// }\n\t\tconst loadParams = {\n\t\t\tsortBy: sortBy,\n\t\t\tfilter: _filter,\n\t\t\tsearchLine: _searchValue,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t};\n\n\t/** VIEW FUNCTIONS */\n\n\n\tconst _footer = (\n\t\t<React.Fragment>\n\t\t\t{_footerShow ? (\n\t\t\t\t\t<React.Fragment>\n                        {/*className={'BaseTable__footer__counter'}>*/}\n\t\t\t\t\t\t<div key={'footer-left-custom-side'} className={'left-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.leftCustomSideElement\n\t\t\t\t\t\t\t\t? Array.isArray(footerProps.leftCustomSideElement)\n\t\t\t\t\t\t\t\t\t? <FormItems items={footerProps.leftCustomSideElement} />\n\t\t\t\t\t\t\t\t\t: <footerProps.leftCustomSideElement/>\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-center-custom-side'} className={'center-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.centerCustomSideElement\n\t\t\t\t\t\t\t\t? Array.isArray(footerProps.centerCustomSideElement)\n\t\t\t\t\t\t\t\t\t? <FormItems items={footerProps.centerCustomSideElement} />\n\t\t\t\t\t\t\t\t\t: <footerProps.centerCustomSideElement/>\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-right-custom-side'} className={'right-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.rightCustomSideElement\n\t\t\t\t\t\t\t\t? Array.isArray(footerProps.rightCustomSideElement)\n\t\t\t\t\t\t\t\t\t? <FormItems items={footerProps.rightCustomSideElement} />\n\t\t\t\t\t\t\t\t\t: <footerProps.rightCustomSideElement/>\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{selectable ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('selected')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.selectedTitle} {_selectedRowKeys.length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('loaded')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.loadedTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{footerProps.showElements.includes('total')\n\t\t\t\t\t\t\t? infinityMode && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad\n\t\t\t\t\t\t\t\t? <span>{footerProps.totalTitle} {_totalCountRows}</span>\n\t\t\t\t\t\t\t\t: <span>{footerProps.totalTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t: null}\n\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n\n\t/** Событие при рендере для стилизации */\n\tconst _rowClassName = ({rowData, rowIndex}) => {\n\t\tconst {rowClassName} = props;\n\t\treturn [\n\t\t\trowClassName,\n\t\t\t_selectedRowKeys.includes(rowData[rowKey]) && 'row-selected',\n\t\t\tzebraStyle ? (rowIndex % 2 === 0 ? 'even' : 'odd') : '',\n\t\t\trowBordered ? 'bordered' : ''\n\t\t].join(' ')\n\t};\n\n\t// const _cellProps = () => ({ className: [cellBordered ? 'cellBordered' : ''].join(' ')})\n\n\tconst _rowRenderer = (props) => {\n\t\tconst { cells, rowData, rowIndex } = props;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\theight: '100%'\n\t\t\t\t}}\n\t\t\t\tonClick={(e) =>\n\t\t\t\tsimpleAndDoubleClick(_onRowClick, _onRowDoubleClick, {rowData, rowIndex, rowKey: rowData[rowKey]})(e)}\n\t\t\t>\n\t\t\t\t{cells}\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst _rowProps = ({ columns, rowData, rowIndex }) => ({\n\t\tonClick: (e) =>\n\t\tsimpleAndDoubleClick(_onRowClick, _onRowDoubleClick, {rowData, rowIndex, rowKey: rowData[rowKey]})(e)\n\n})\n\n\t/** LOAD DATA FUNCTIONS */\n\tconst onEndReached = () => {\n\t\tlet selectAll;\n\t\tconst selectLength = _selectedRowKeys.length;\n\t\tif (selectLength === 0) selectAll = false;\n\t\telse if (selectLength > 0) selectAll = null;\n\n\t\tsetSelectAll(selectAll);\n\t\t// console.log('_filter', _filter);\n\n\t\tif (infinityMode) {\n\t\t\tconst loadParams = {\n\t\t\t\tsortBy: _sortBy,\n\t\t\t\tfilter: _filter,\n\t\t\t\tsearchLine: _searchValue,\n\t\t\t\treload: false,\n\t\t\t};\n\t\t\t_dataProcessing(loadParams);\n\t\t}\n\t};\n\n\t/** SELECTABLE FUNCTIONS */\n\n\t/** Событие при изменении галочки одной строки */\n\tconst _onChangeSelectHandler = ({\n\t\tselected,\n\t\t_selectedRow,\n\t\t_selectAll,\n\t\t_selectedRowKeys,\n\t\t_selectedRowObjects,\n\t\t_indeterminateRowKeys,\n\t}) => {\n\t\t// console.group(\"_onChangeSelectHandler\", _selectedRowKeys);\n\t\t// console.log(\"_selectedRowKeys\", _selectedRowKeys);\n\t\t// console.log(\"_indeterminateRowKeys\", _indeterminateRowKeys);\n\t\t// console.log(\"_selectAll\", _selectAll);\n\t\t// console.groupEnd();\n\n\t\t// setSelectedRowKeys(_selectedRowKeys);\n\t\t// selectedDispatch(_selectedRowObjects);\n\t\t_setSelectedRowsHandler(_selectedRowKeys, _selectedRowObjects)\n\t\tsetIndeterminateRowKeys(_indeterminateRowKeys);\n\t\tsetSelectAll(_selectAll);\n\t\tonSelectedRowsChange(_selectedRowKeys, _selectedRowObjects);\n\t};\n\n\t/** Событие при изменении галочки \"Выделить все\" */\n\tconst _onSelectAllHandler = ({selected, rowKeys, rowObjects}) => {\n\t\tconst selectedKeys = selected ? rowKeys : [];\n\t\t// setSelectedRowKeys(selectedKeys);\n\t\t// selectedDispatch(selected ? rowObjects : []);\n\t\t_setSelectedRowsHandler(selectedKeys, selected ? rowObjects : [])\n\t\tsetIndeterminateRowKeys([]);\n\t\tsetSelectAll(selected);\n\t\t// setSelectedRowObjects(rows);\n\t\t// console.log(\"_handleSelectAll\", selectedKeys);\n\t\tonSelectedRowsChange(selectedKeys, rowObjects);\n\t};\n\t//\n\t// const SelectionCell = (props) => {\n\t// \tconst {rowData, column} = props;\n\t// \tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\n\t// \tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\n\t// \tconst checked = selectedRowKeys.includes(rowData[rowKey]);\n\t// \tReact.useEffect(() => {\n\t// \t\tconsole.log(\"selectionCell\", props);\n\t// \t}, []);\n\t//\n\t// \tconst _handleChange = (checked) => {\n\t// \t\tconsole.log(\"_handleChange\", checked);\n\t// \t}\n\t//\n\t// \treturn (\n\t// \t\t<Checkbox\n\t// \t\t\tindeterminate={det}\n\t// \t\t\tonChange={(e) => _handleChange(e.target.checked)}\n\t// \t\t\tchecked={checked}\n\t// \t\t/>\n\t// \t);\n\t// };\n\n\tconst _getSelectionColumnProps = () => ({\n\t\trowKey: rowKey,\n\t\tparentKey: expandParentKey,\n\t\tnodeAssociated: nodeAssociated,\n\t\tselectedRowKeys: _selectedRowKeys,\n\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\tonChange: _onChangeSelectHandler,\n\t})\n\n\tconst _getColumns = () => {\n\t\tconst selectColumn = {\n\t\t\tkey: '__selection__',\n\t\t\theaderRenderer: SelectionHead,\n\t\t\tcellRenderer: <SelectionCell/>,\n\t\t\twidth: 40,\n\t\t\tflexShrink: 0,\n\t\t\tresizable: false,\n\t\t\tfrozen: 'left',\n\t\t\tselectAll: selectAll,\n\t\t\tonSelectAll: _onSelectAllHandler,\n\t\t\t..._getSelectionColumnProps()\n\t\t};\n\t\treturn selectable ? [selectColumn, ...columns] : [...columns];\n\t}\n\n\n\n\t/** TREE FUNCTIONS */\n\n\tconst _onExpandedRowsChange = (expandedRowKeys) => {\n\t\t// console.log(\"_onExpandedRowsChange\", expandedRowKeys);\n\t\tonExpandedRowsChange(expandedRowKeys);\n\t};\n\tconst _onRowExpand = ({expanded, rowData, rowIndex, rowKey}) => {\n\t\t// console.log(\"_onRowExpand\", rowData, expanded, rowIndex, rowKey);\n\t\tif (expanded) {\n\t\t\tsetExpandedRowKeys([..._expandedRowKeys, rowKey]);\n\n\t\t\tif (expandLazyLoad) {\n\t\t\t\tconst loadParams = {\n\t\t\t\t\tsortBy: _sortBy,\n\t\t\t\t\tfilter: {..._filter, [expandParentKey]: rowKey},\n\t\t\t\t\tsearchLine: _searchValue,\n\t\t\t\t\treload: false,\n\t\t\t\t\texpandRow: rowData,\n\t\t\t\t};\n\t\t\t\t// _callPropsOnLoad(loadParams);\n\t\t\t\t_dataProcessing(loadParams);\n\t\t\t}\n\t\t} else {\n\t\t\tlet expandedRowKeys = [..._expandedRowKeys];\n\t\t\tlet allChildKeys = flatten(\n\t\t\t\tgetTableRowKeys(rowData.children, props.rowKey)\n\t\t\t);\n\t\t\tallChildKeys.push(rowKey);\n\t\t\t// console.log('allChildKeys', allChildKeys);\n\t\t\tsetExpandedRowKeys(\n\t\t\t\texpandedRowKeys.filter((item) => !allChildKeys.includes(item))\n\t\t\t);\n\t\t}\n\t\tonRowExpand({expanded, rowData, rowIndex, rowKey});\n\t};\n\n\n\t/** ROW CHANGE FUNCTIONS */\n\n\t/**\n\t * Find row by key\n\t * @param data - table rows\n\t * @param key - key row for find\n\t * @param callback - function for return result\n\t * @returns {*}\n\t */\n\tconst loop = (data, key, callback) => {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tif (data[i][rowKey] === key) {\n\t\t\t\t// console.log(`Selected => index: [${i}], path: [${data[i].path}]`, data);\n\t\t\t\treturn callback(data[i], i, data);\n\t\t\t} else {\n\t\t\t\t// console.log(`Other => index: [${i}], path: [${data[i].path}]`);\n\t\t\t}\n\t\t\tif (data[i].children) {\n\t\t\t\tloop(data[i].children, key, callback);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst _addRows = (rows) => {\n\t\tlet saveRows = [...rows];\n\t\tif (customFields)\n\t\t\t// Фильтрация по пользовательским параметрам\n\t\t\tsaveRows = saveRows.filter((sRow) => {\n\t\t\t\tlet isValid = true;\n\t\t\t\tcustomFields.forEach((field) => {\n\t\t\t\t\t// Валидация по пользовательской логике функции validate\n\t\t\t\t\tif(field.validate)\n\t\t\t\t\t\tisValid = field.validate(sRow, _rows);\n\n\t\t\t\t\t// Создание или переобразование по пользовательской логике функции value\n\t\t\t\t\tif(field.value)\n\t\t\t\t\t\tsRow[field.name] = field.value(sRow, _rows);\n\t\t\t\t});\n\t\t\t\tif(isValid)\n\t\t\t\t\treturn sRow;\n\t\t\t});\n\t\tconst _localRows = [..._rows, ...saveRows]\n\t\t_setRowsHandler(_localRows);\n\t\tonTableEventsDispatch('onAddRows', _localRows);\n\n\t}\n\n\tconst _addRow = (row) => {\n\t\tlet _row = {...row}\n\t\tif (customFields)\n\t\t\tcustomFields.forEach((field) => _row[field.name] = field.value(_row, _rows));\n\t\tconst _localRows = [..._rows, _row]\n\t\t_setRowsHandler(_localRows);\n\t\tonTableEventsDispatch('onAddRow', _localRows);\n\n\t}\n\n\tconst _addRowAsCopy = () => {\n\t\t// console.log(\"_onClickAddAsCopy\", selectedRow);\n\t\tconst _localRows = [..._rows, findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0])]\n\t\t_setRowsHandler(_localRows);\n\t\tonTableEventsDispatch('onAddRowAsCopy', _localRows);\n\n\t};\n\n\tconst _editRow = (row) => {\n\t\t// console.log(\"_onClickEdit\", selectedRow);\n\t\tconst data = [..._rows];\n\t\tconst key = row[rowKey];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tdata[index] = row;\n\t\t\t_setRowsHandler(data);\n\t\t\t// selectedDispatch(row)\n\t\t\t_setSelectedRowsHandler(_selectedRowKeys, undefined, data);\n\t\t\tonTableEventsDispatch('onEditRow', data);\n\n\t\t\t// setSelectedRowKeys([]);\n\t\t})\n\t\t// props.onClickEdit(event, selectedRow);\n\t};\n\n\tconst _removeRow = (event) => {\n\t\t// console.log(\"_onClickDelete\", autoDeleteRows, selectedRowKeys);\n\t\tconst _localRows = _rows.filter(\n\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey]) )\n\t\t_setRowsHandler(_localRows);\n\t\t_setSelectedRowsHandler();\n\t\tonTableEventsDispatch('onRemoveRow', _localRows);\n\n\t\t// setSelectedRowKeys([]);\n\t\t// if (selectable)\n\t\t// \tselectedDispatch([]);\n\t\t// else\n\t\t// \tselectedDispatch(undefined);\n\t\t// commandPanelProps.onClickDelete(event, _selectedRowKeys);\n\t};\n\n\t// const _moveUpRow\n\n\tconst _moveUpRow = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index - 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data, 'onMoveUpRow');\n\t\t\t// commandPanelProps.onClickUp(event, {\n\t\t\t// \trowIndex: newRowIndex,\n\t\t\t// \trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t// }, data);\n\t\t})\n\t};\n\n\tconst _moveDownRow = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index + 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data, 'onMoveDownRow');\n\t\t\t// commandPanelProps.onClickDown(event, {\n\t\t\t// \trowIndex: newRowIndex,\n\t\t\t// \trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t// }, data);\n\t\t})\n\t};\n\n\tconst _getNewIndexRow = (oldIndex, newIndex) =>\n\t\tnewIndex >= 0 && newIndex < _rows.length ? newIndex : oldIndex;\n\n\tconst _changeIndexRow = (oldIndex, newIndex, arr, data, nameEvent) => {\n\t\tif (newIndex >= 0 && newIndex < arr.length) {\n\t\t\t// let arr = [..._rows]; // Копируем массив\n\t\t\tconst item = arr.splice(oldIndex, 1); // Удаляем элемент со старого места\n\t\t\t// console.log('_changeIndexRow => ',item);\n\t\t\tarr.splice(newIndex > 0 ? newIndex : 0, 0, item[0]); // Ставим элемент на новое место\n\t\t\t// console.log(\"_changeIndexRow\", item[0]);\n\t\t\t_setRowsHandler(data);\n\t\t\tonTableEventsDispatch(nameEvent, data);\n\n\t\t}\n\t};\n\n\t// const _onSearch = (searchLine, e) => {\n\t// \te.preventDefault();\n\t// \t// console.log(\"_onSearch\", searchLine);\n\t// \ttableRef.current.scrollToRow(0, 'auto');\n\t// \tsetSearchValue(searchLine);\n\t// \tconst loadParams = {\n\t// \t\tsortBy: _sortBy,\n\t// \t\tfilter: _filter,\n\t// \t\tsearchLine: searchLine,\n\t// \t\treload: true,\n\t// \t};\n\t// \t_dataProcessing(loadParams);\n\t// \tcommandPanelProps.onSearch(searchLine);\n\t// };\n\n\t/** SELECTED PANEL */\n\n\tconst _onClickDropSelectHandler = (dropObject) => {\n\t\tconst newSelectedKeys = _selectedRowKeys.filter(\n\t\t\t(item) => item !== dropObject[rowKey]\n\t\t);\n\t\t// setSelectedRowKeys(newSelectedKeys);\n\t\t_setSelectedRowsHandler(newSelectedKeys, undefined, _rows);\n\t\tsetSelectAll((newSelectedKeys.length === 0 ? false : null));\n\t\tonSelectedRowsChange(newSelectedKeys);\n\t};\n\n\treturn (\n\t\t<div className={`${rtPrefix}-table`}>\n\t\t\t<div className={`${rtPrefix}-baseTable`}>\n\t\t\t\t<AutoResizer>\n\t\t\t\t\t{({width, height}) => (\n\t\t\t\t\t\t<BaseTable\n\t\t\t\t\t\t\tref={tableRef}\n\t\t\t\t\t\t\t/** Required */\n\t\t\t\t\t\t\tcolumns={_getColumns()}\n\t\t\t\t\t\t\tdata={_rows}\n\t\t\t\t\t\t\t/** Control Props */\n\t\t\t\t\t\t\tsortBy={_sortBy}\n\t\t\t\t\t\t\t/** Base Props */\n\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\trowKey={rowKey}\n\t\t\t\t\t\t\t// rowProps={rowProps}\n\n\t\t\t\t\t\t\t/** View Props */\n\t\t\t\t\t\t\trowClassName={_rowClassName}\n\t\t\t\t\t\t\temptyRenderer={empty}\n\t\t\t\t\t\t\tfixed={fixWidthColumn}\n\t\t\t\t\t\t\tfooterHeight={_footerShow ? footerProps.height : 0}\n\t\t\t\t\t\t\theaderHeight={headerHeight}\n\t\t\t\t\t\t\trowHeight={rowHeight}\n\t\t\t\t\t\t\toverlayRenderer={loading ? overlay : null}\n\t\t\t\t\t\t\tfooterRenderer={_footer}\n\t\t\t\t\t\t\trowRenderer={rowRenderer}\n\t\t\t\t\t\t\t// rowProps={_rowProps}\n\t\t\t\t\t\t\t// cellProps={_cellProps}\n\t\t\t\t\t\t\testimatedRowHeight={estimatedRowHeight}\n\t\t\t\t\t\t\t/** Load Data Props */\n\t\t\t\t\t\t\tonEndReachedThreshold={loadThreshold}\n\t\t\t\t\t\t\tonEndReached={infinityMode ? onEndReached : undefined}\n\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t/** Tree Props */\n\t\t\t\t\t\t\texpandColumnKey={expandColumnKey}\n\t\t\t\t\t\t\texpandedRowKeys={_expandedRowKeys}\n\t\t\t\t\t\t\t/** Events */\n\t\t\t\t\t\t\tonColumnSort={_onColumnSort}\n\t\t\t\t\t\t\trowEventHandlers={_rowEventHandlers}\n\t\t\t\t\t\t\tonExpandedRowsChange={_onExpandedRowsChange}\n\t\t\t\t\t\t\tonRowExpand={_onRowExpand}\n\t\t\t\t\t\t\teditMode={editMode}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</AutoResizer>\n\t\t\t</div>\n\t\t\t{showSelection && selectable && !expandColumnKey ? (\n\t\t\t\t<SelectionList\n\t\t\t\t\tonClickDropSelect={_onClickDropSelectHandler}\n\t\t\t\t\tselectedRowObjects={flatten(\n\t\t\t\t\t\tgetTableRowObjects(_rows, rowKey)\n\t\t\t\t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]))}\n\t\t\t\t\trowRender={rowRenderShowSelection}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</div>\n\t);\n});\n\nTable.propTypes = {\n\t/**\n\t * REQUIRED\n\t * */\n\n\t/** Столбцы таблицы */\n\tcolumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Режим загрузки данных по скроллу */\n\tinfinityMode: PropTypes.bool,\n\n\t/**\n\t * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n\t * */\n\n\t/** Строки по умолчанию */\n\tdefaultRows: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Ключи выделенных по умолчанию строк */\n\tdefaultSelectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска по умолчанию строк */\n\tdefaultSearchValue: PropTypes.string,\n\n\t/** Объект фильтрации по умолчанию */\n\tdefaultFilter: PropTypes.object,\n\n\t/** Сортировка по умолчанию */\n\tdefaultSortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n\t * */\n\n\t/** Строки таблицы. Используется для контроля таблицы из вне. */\n\trows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Функция задания строк таблицы. */\n    setRows: PropTypes.func,\n\n\t/** Выделенные строки таблицы. */\n\tselectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Объект фильтрации */\n\tfilter: PropTypes.object,\n\n\t/** Объект сортировки */\n\tsortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * BASE PROPS\n\t * */\n\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\n\t/** Дополнительные поля и валидация в объекты таблицы\n\t * Данный параметр (props) осуществляет дополнительную обработку объекта таблицы после закрытия модалки, но перед добавлением в таблицу.\n\t * Можно как изменить существующие поля объекта, так и добавить новые поля объекта.\n\t * `customFields` - массив объектов для дополнения или изменения полей объектов таблицы\n\t * ```json\n\t * [\n\t * \t{\n\t * \t\tname: <String>,\n\t * \t\tvalue: <func>,\n\t * \t\tvalidate: <func>\n\t * \t}\n\t * ]\n\t * ```\n\t * `name` – Имя параметра в объекте\n\t * `value` – Функция формирования значения - `(row, rows) => { return {} }`\n\t * `validate` – Функция проверки значения - `(row, rows) => { return <Bool> }`\n\t * Параметра **validate** работает **только** для модельного окна тип `select`.\n\t * Validate можно наложить на любое кол-во полей объекта и если хотя бы один `validate` === `false`, то исключает строку из добавления.\n\t */\n\tcustomFields: PropTypes.arrayOf(PropTypes.object),\n\n\t/**\n\t * Данный параметр (props) позволяет добавить или переопределить пропсы для колонок, которые заданы конфигурацией на сервере\n\t * `customColumnProps` - массив объектов `props` к `columns`. Один объект описывает доп. параметры для одной колонки\n\t * ```json\n\t * [\n\t * \t{\n\t * \t\tname: <String>,\n\t * \t\tcellRenderer: <func>,\n\t * \t\t...advancedColProps\n\t * \t}\n\t * ]\n\t * ```\n\t * `name` – key колонки к которой надо применить дополнительные пропсы\n\t * `cellRenderer` – `({ cellData, columns, column, columnIndex, rowData, rowIndex, container, isScrolling }) => return <ReactNode>`\n\t * `advancedColProps` – подолнительные свойства колонок тут -> [Column](https://autodesk.github.io/react-base-table/api/column)\n\t */\n\tcustomColumnProps: PropTypes.arrayOf(PropTypes.object),\n\n\t/**\n\t * VIEW PROPS\n\t * */\n\n\t/** Вывод когда нет данных */\n\tempty: PropTypes.element,\n\n\t/** Отображение загрузки данных */\n\toverlay: PropTypes.element,\n\n\t/** Фиксированная ширина столбцов. Появится боковой скрол */\n\tfixWidthColumn: PropTypes.bool,\n\n\tfooterProps: PropTypes.shape({\n\n\t\t/** Высота подвала */\n\t\theight: PropTypes.number,\n\n\t\t/** Массив элементов футтера, которые надо отобразить\n\t\t * ['selected', 'loaded', 'total'] */\n\t\tshowElements: PropTypes.arrayOf(PropTypes.string),\n\n\t\t/** Заколовок для кол-ва выбранных объектов */\n\t\tselectedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва загруженны объектов */\n\t\tloadedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва всего объектов */\n\t\ttotalTitle: PropTypes.string,\n\n\t\t/** Левый кастомный элемент командной панели */\n\t\tleftCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\n\t\t/** Центральный кастомный элемент командной панели */\n\t\tcenterCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\n\t\t/** Правый кастомный элемент командной панели */\n\t\trightCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\t}),\n\n\t/** Высота заголовка таблицы */\n\theaderHeight: PropTypes.number,\n\n\t/** Высота строки таблицы */\n\trowHeight: PropTypes.number,\n\n\t/** Custom row renderer\n\t * Параметры - `({ isScrolling, cells, columns, rowData, rowIndex, depth })` */\n\trowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n\t/** Строки будут в зебро-стиле */\n\tzebraStyle: PropTypes.bool,\n\n\t/** Высота расширения */\n\testimatedRowHeight: PropTypes.number,\n\n\t/** Отображать ли разделители ячеек в строке */\n\tcellBordered: PropTypes.bool,\n\n\t/** Отобрадать ли разделители строк */\n\trowBordered: PropTypes.bool,\n\n\t/**\n\t * LOAD DATA PROPS\n\t * */\n\n\t/** Порог в пикселях для вызова _onLoad.\n\t * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n\tloadThreshold: PropTypes.number,\n\n\t/** Размер страницы */\n\tpageSize: PropTypes.number,\n\n\t/** Функция запроса для конфигурации */\n\trequestLoadConfig: PropTypes.func,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\t/**\n\t * SELECTABLE PROPS\n\t * */\n\n\t/** Таблица с возможностью выбора строки */\n\tselectable: PropTypes.bool,\n\n\t/**\n\t * TREE PROPS\n\t * */\n\n\t/** Родительский узел и дочерние узлы связаны (Работает только при `selectable`) */\n\tnodeAssociated: PropTypes.bool,\n\n\t/** Ключ колонки по которой строить иерархию */\n\texpandColumnKey: PropTypes.string,\n\n\t/** Открыть по умолчанию вложенность до уровня N или 'All' */\n\texpandDefaultAll: PropTypes.bool,\n\n\t/** Загружать ноды иерархии по одной */\n\texpandLazyLoad: PropTypes.bool,\n\n\t/** Поле в котором хранится ссылка на родителя */\n\texpandParentKey: PropTypes.string,\n\n\t/**\n\t * EVENTS\n\t * */\n\n\t/** Событие при клике на строку (только при `selectable` = `false`)\n\t * `({selected, rowData, rowIndex}) => {}` */\n\tonRowClick: PropTypes.func,\n\n\t/** Событие при двойном клике на строку.\n\t * `({rowData, rowIndex, rowKey}) => {}` */\n\tonRowDoubleClick: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * `({ expanded, rowData, rowIndex, rowKey }) => {}` */\n\tonRowExpand: PropTypes.func,\n\n\t/** Событие при выборе строки.\n\t * `([rowKeys], [rowDatas]) => {}` */\n\tonSelectedRowsChange: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * `(expandedRowKeys) => {}` - массив ключей открытых нод */\n\tonExpandedRowsChange: PropTypes.func,\n\n\t/** SELECTED PANEL */\n\n\t/** Отображать ли панель выбранных элементов */\n\tshowSelection: PropTypes.bool,\n\n\t/** Строка или функция для отображения элементов списка выбранных\n\t * Строка - имя поля\n\t * Функция - рендер строк.\n\t * `({ rowData, rowIndex }) => { return <Component> }` */\n\trowRenderShowSelection: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.string,\n\t]),\n\n\t/** Путь в сторе куда класть выбранную строку таблицы */\n\tdispatchPath: PropTypes.string,\n\n\t/** Объект для подписки на изменения в STORE */\n\tsubscribe: PropTypes.arrayOf(PropTypes.object),\n};\n\nTable.defaultProps = {\n\tinfinityMode: false,\n\teditMode: false,\n\tdefaultRows: [],\n\tdefaultSelectedRowKeys: [],\n\tdefaultSearchValue: '',\n\tdefaultFilter: {},\n\tdefaultSortBy: {},\n\n\trows: [],\n\tsetRows: noop,\n\tselectedRowKeys: [],\n\tsearchValue: '',\n\tfilter: {},\n\tsortBy: {},\n\n\trowKey: 'id',\n\n\tempty: empty,\n\toverlay: overlay,\n\tfixWidthColumn: false,\n\tfooterProps: {\n\t\theight: 30,\n\t\tshowElements: [],\n\t\tselectedTitle: 'Выделено:',\n\t\tloadedTitle: 'Загружено записей:',\n\t\ttotalTitle: 'Всего записей:',\n\t\tleftCustomSideElement: null,\n\t\tcenterCustomSideElement: null,\n\t\trightCustomSideElement: null\n\t},\n\theaderHeight: 30,\n\trowHeight: 30,\n\tzebraStyle: false,\n\testimatedRowHeight: undefined,\n\tcellBordered: false,\n\trowBordered: true,\n\n\tloadThreshold: 300,\n\tpageSize: 50,\n\trequestLoadRows: undefined,\n    requestLoadCount: noop,\n\tsearchParamName: 'searchLine',\n\n\tselectable: false,\n\n\tnodeAssociated: true,\n\texpandColumnKey: undefined,\n\texpandDefaultAll: true,\n\texpandLazyLoad: false,\n\texpandParentKey: 'parentId',\n\n\tonRowClick: noop,\n\tonRowDoubleClick: noop,\n\tonRowExpand: noop,\n\tonSelectedRowsChange: noop,\n\tonExpandedRowsChange: noop,\n\n\tshowSelection: false,\n\n\tdispatchPath: undefined,\n\tsubscribe: [],\n};\n\nconst mapStateToProps = (store, ownProps) => {\n\tconst {subscribe} = ownProps;\n\tlet state = {};\n\tif(subscribe && subscribe.length > 0){\n\t\tsubscribe.forEach(item => {\n\t\t\tconst {name, path, extraData} = item;\n\t\t\tif(name && path)\n\t\t\t\tstate[name] = objectPath.get(store, path);\n\t\t\tif(name && extraData)\n\t\t\t\tstate[`${name}ExtraData`] = objectPath.get(store, extraData);\n\t\t})\n\t}\n\treturn state;\n};\nconst mapDispatchToProps = (dispatch) =>\n\tbindActionCreators({ setDateStore: setDateStore}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\n","import React, {useEffect, useState} from \"react\";\nimport { noop, notificationError } from \"../utils/baseUtils\";\nimport Table from \"./Table\";\nimport { Typography } from \"antd\";\n\nconst defaultProps = {\n    defaultFilter: {},\n    rowKey: 'id',\n    pageSize: 50,\n    requestLoadConfig: noop,\n    expandColumnKey: undefined,\n    expandLazyLoad: false,\n    expandParentKey: 'parentId',\n    customColumnProps: [],\n};\n\nconst ConfigLoader = props => {\n\n    /** Конфигурация таблицы */\n    const [tableConfig, setTableConfig] = useState(undefined);\n\n    const {\n        defaultFilter,\n        rowKey,\n        pageSize,\n        requestLoadConfig,\n        expandColumnKey,\n        expandLazyLoad,\n        expandParentKey,\n        customColumnProps,\n        cellBordered,\n    } = {...defaultProps, ...props};\n\n    useEffect(() => {\n        let cleanupFunction = false;\n        const loadData = async () => {\n            if (requestLoadConfig) {\n                // console.log('requestLoadConfig => ', typeof requestLoadConfig);\n                // console.log('requestLoadRows => ', typeof props.requestLoadRows);\n                requestLoadConfig()\n                    .then((response) => {\n                        // let result = response.data;\n                        // console.log('requestLoadConfig -> ', response.data);\n                        if(!cleanupFunction) {\n                            // setTableConfig(response.data);\n                            configParser(response.data);\n                        }\n                    })\n                    .catch(error => notificationError(error, 'Ошибка получения конфигурации') );\n            }\n        };\n        loadData().then(r => r);\n        return () => cleanupFunction = true;\n    }, []);\n\n    const configParser = (config) => {\n        let _columns = [];\n        if(config && config.fields) {\n            _columns = config.fields.map((item) => {\n                const colProps =\n                    customColumnProps &&\n                    customColumnProps.find(\n                        (render) =>\n                            render.name === item.name || render.name === item.alias\n                    );\n                return {\n                    key: item.name,\n                    title: item.header ? item.header : item.name,\n                    dataKey: item.alias ? item.alias : item.name,\n                    align: item.align,\n                    width: item.width,\n                    resizable: item.resizable,\n                    sortable: item.sortable,\n                    hidden: !item.visible,\n                    className: [cellBordered ? 'bordered' : ''].join(' '),\n                    headerClassName: [cellBordered ? 'bordered' : ''].join(' '),\n                    // cellRenderer: cellR && cellR.cellRender,\n                    ...colProps,\n                    cellRenderer: (object) => {\n                        if (colProps && colProps.cellRenderer)\n                            return <colProps.cellRenderer {...object}/>\n                            // return colProps.cellRenderer(object) ? colProps.cellRenderer(object) : '---';\n                        else\n                            return object.cellData\n                                ? <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>{object.cellData}</Typography.Text>\n                                : <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>---</Typography.Text> ;\n                            // return object.cellData ? object.cellData : '---';\n                    },\n                };\n            });\n        }\n\n        let _defaultFilter;\n        if (config && config.hierarchical && config.hierarchyLazyLoad) {\n            const parentKey = config.hierarchyField\n                ? config.hierarchyField.split('/')[1]\n                : expandParentKey;\n            _defaultFilter =  {...defaultFilter, [parentKey]: null};\n        } else _defaultFilter = defaultFilter;\n\n\n        setTableConfig({\n            columns: _columns,\n            defaultFilter: _defaultFilter,\n            rowKey:\n                config && config.hierarchical && config.hierarchyField\n                    ? config.hierarchyField.split('/')[0]\n                    : rowKey,\n            expandParentKey:\n                config && config.hierarchical && config.hierarchyField\n                    ? config.hierarchyField.split('/')[1]\n                    : expandParentKey,\n            expandColumnKey:\n                config && config.hierarchical && config.hierarchyView\n                    ? config.hierarchyView\n                    : expandColumnKey,\n            expandLazyLoad:\n                config && config.hierarchical && config.hierarchyLazyLoad\n                    ? config.hierarchyLazyLoad\n                    : expandLazyLoad,\n            pageSize: config && config.hierarchical ? 1 : pageSize,\n        });\n    }\n\n    if(tableConfig)\n        return ( <Table {...props} {...tableConfig} /> );\n    else\n        return null\n}\n\nexport default ConfigLoader;\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Select as AntSelect} from \"antd\";\nimport {\n\tgetObjectExcludedProps,\n\tnotificationError, useMounted\n} from \"../utils/baseUtils\";\n\nimport { CheckOutlined } from '@ant-design/icons';\n\nconst excludeProps = [\n\t'componentType',\n\t'defaultSortBy',\n\t'defaultFilter',\n\t'defaultSearchValue',\n\t'sortBy',\n\t'filter',\n\t'searchValue',\n\t'searchParamName',\n\t'infinityMode',\n\t'requestLoadRows',\n\t'optionConverter',\n\t'options',\n\t'widthControl',\n\t'pageSize'\n];\n\n/** Компонент выбора элемента(ов) из списка */\nconst Select = props => {\n\n\tconst {\n\t\t// Rt Props\n\t\tdefaultSortBy,\n\t\tdefaultFilter,\n\t\tdefaultSearchValue,\n\t\tsortBy,\n\t\tfilter,\n\t\tsearchValue,\n\t\tsearchParamName,\n\t\tinfinityMode,\n\t\trequestLoadRows,\n\t\toptionConverter,\n\t\toptions,\n\t\twidthControl,\n\t\tpageSize,\n\n\t\t// Ant Props\n\t\tmode,\n\t\tonChange,\n\t\tvalue,\n\t} = props;\n\n\t/** Наличие на сервере еще данных */\n\tconst [_hasMore, _setHasMore] = useState(true);\n\t/** Индикатор загрузки данных */\n\tconst [_loading, _setLoading] = useState(false);\n\t/** Опции селекта */\n\tconst [_options, _setOptions] = useState(options);\n\t/** Индикатор достижения низа окна */\n\tconst [isEndReached, setIsEndReached] = useState(false);\n\n\t/** Объект сортировки */\n\tconst [_sortBy, _setSortBy] = useState(undefined);\n\t/** Объект фильтрации */\n\tconst [_filter, _setFilter] = useState({});\n\t/** Строка поиска */\n\tconst [_searchValue, _setSearchValue] = useState(undefined);\n\n\t/** Состояние параметра выбрать все */\n\tconst [_isSelectAll, _setIsSelectAll] = useState(false);\n\n\tconst isMounted = useMounted()\n\n\tuseEffect(() => {\n\t\t_setSearchValue(defaultSearchValue);\n\t\t_loadOptions({\n\t\t\tsortBy: defaultSortBy,\n\t\t\tfilter: defaultFilter,\n\t\t\tsearchValue: defaultSearchValue,\n\t\t\treload: true,\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\t_setRowsHandler(options);\n\t}, [options]);\n\n\tuseEffect(() => {\n\t\t// console.log(\"Change sortBy, filter, searchValue\", sortBy, filter, searchValue);\n\t\tif(isMounted) {\n\t\t\tconst __sortBy = sortBy ? sortBy : _sortBy;\n\t\t\tconst __filter = filter ? filter : _filter;\n\t\t\tconst __searchValue = searchValue ? searchValue : _searchValue;\n\t\t\t_setSortBy(__sortBy);\n\t\t\t_setFilter(__filter);\n\t\t\t_setSearchValue(__searchValue);\n\t\t\t_loadOptions({\n\t\t\t\tsortBy: __sortBy,\n\t\t\t\tfilter: __filter,\n\t\t\t\tsearchLine: __searchValue,\n\t\t\t\treload: true,\n\t\t\t});\n\t\t}\n\t}, [sortBy, filter, searchValue]);\n\n\tconst _setRowsHandler = (options) => {\n\t\t\t_setOptions(options);\n\t\t\t// console.log('Select _setRowsHandler value => ', options)\n\t\t\tif(mode === 'multiple') {\n\t\t\t\tif(Array.isArray(value))\n\t\t\t\t\tif(options.reduce((preValue, item) => value.includes(item.value) ? preValue + 1 : preValue, 0) === options.length)\n\t\t\t\t\t\t_setIsSelectAll(true);\n\t\t\t\t\telse\n\t\t\t\t\t\t_setIsSelectAll(false);\n\t\t\t\tonChange(value);\n\t\t\t}\n\t\t// setRows(rows);\n\t\t// rowsDispatch(rows);\n\t};\n\n\tconst getPageNum = (reload) =>\n\t\treload ? 0 : Math.floor(_options.length / pageSize);\n\n\tconst getSort = (sortBy) =>\n\t\tsortBy && sortBy.key ? sortBy.key + ',' + sortBy.order : null;\n\n\tconst getSearchValue = (searchValue) =>\n\t\tsearchValue ? {[searchParamName]: searchValue} : null\n\n\tconst _loadOptions = (params) => {\n\t\t// console.log('_dataProcessing', params);\n\t\tconst {sortBy, filter, searchValue, reload} = params;\n\t\tif ((_hasMore || reload) && !_loading && requestLoadRows) {\n\t\t\t_setLoading(true);\n\n\t\t\tconst requestOptions = {\n\t\t\t\tparams: {\n\t\t\t\t\tpage: getPageNum(reload),\n\t\t\t\t\tsize: pageSize,\n\t\t\t\t\tsort: getSort(sortBy)\n\t\t\t\t},\n\t\t\t\tdata: {\n\t\t\t\t\t...filter,\n\t\t\t\t\t...getSearchValue(searchValue)\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log('dataQuery', dataQuery);\n\n\t\t\trequestLoadRows(requestOptions)\n\t\t\t\t.then((response) => {\n\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\tconst result = response.data;\n\n\t\t\t\t\tif (result && result.length < pageSize) {\n\t\t\t\t\t\t_setHasMore(false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_setHasMore(true);\n\t\t\t\t\t\tsetIsEndReached(false);\n\t\t\t\t\t}\n\t\t\t\t\treload\n\t\t\t\t\t\t? _setRowsHandler(result.map(option => optionConverter(option))) // _setRows\n\t\t\t\t\t\t: _setRowsHandler(_options.concat(result.map(option => optionConverter(option)))); // _setRows\n\n\t\t\t\t\t// console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\n\n\t\t\t\t\t_setLoading(false);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t\t\t_setRowsHandler(_options); // _setRows\n\t\t\t\t\t// setHasMore(false);\n\t\t\t\t\t_setLoading(false);\n\t\t\t\t});\n\t\t}\n\t};\n\n\tconst onScroll = (event) => {\n\t\tlet scrollTopMax = event.nativeEvent.target.scrollTopMax\n\t\tlet scrollTop = event.nativeEvent.target.scrollTop//.body.scrollTop\n\n\t\tconst onEndReached = scrollTopMax - scrollTop;\n\n\t\tif(onEndReached < 300 && !isEndReached) {\n\t\t\t// console.log('Load Data');\n\t\t\tsetIsEndReached(true);\n\t\t\t_setSearchValue(defaultSearchValue);\n\t\t\tif(infinityMode){\n\t\t\t\t_loadOptions({\n\t\t\t\t\tsortBy: defaultSortBy,\n\t\t\t\t\tfilter: defaultFilter,\n\t\t\t\t\tsearchValue: defaultSearchValue,\n\t\t\t\t\treload: false,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// console.log(\"scrollTopMax / scrollTop\", scrollTopMax, scrollTop, onEndReached);\n\t\t// const lastScrollTop = this._scroll.scrxollTop;\n\t\t// if (args.scrollTop > lastScrollTop) this._maybeCallOnEndReached();\n\t}\n\n\tconst onSearch = (value) => {\n\t\t_setSearchValue(value);\n\t\t_loadOptions({\n\t\t\tsortBy: defaultSortBy,\n\t\t\tfilter: defaultFilter,\n\t\t\tsearchValue: value,\n\t\t\treload: true,\n\t\t});\n\t}\n\n\tconst _onChangeSelectAll = () => {\n\t\t// console.log(`_onChangeSelectAll`, _isSelectAll);\n\t\tif(mode === 'multiple') {\n\t\t\tif (_isSelectAll) {\n\t\t\t\tconst optionsValues = _options.map(item => item.value);\n\t\t\t\tonChange(value.filter(item => !optionsValues.includes(item)));\n\t\t\t\t_setIsSelectAll(false);\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(value) && value.length > 0)\n\t\t\t\t\tonChange([...new Set([...value, ..._options.map(item => item.value)])]);\n\t\t\t\telse\n\t\t\t\t\tonChange([...new Set([..._options.map(item => item.value)])]);\n\t\t\t\t_setIsSelectAll(true);\n\t\t\t}\n\t\t} else\n\t\t\tonChange(undefined);\n\t}\n    const _onChange = (value) => {\n        // console.log(`_onChange selected`, value);\n        if(Array.isArray(value))\n        \tif(_options.reduce((preValue, item) => value.includes(item.value) ? preValue + 1 : preValue, 0) === _options.length)\n        \t\t_setIsSelectAll(true);\n        \telse\n\t\t\t\t_setIsSelectAll(false);\n\n\t\tonChange(value);\n    }\n\n    const getSelectAllCls = () => {\n\t\tlet cls = ['ant-select-item', 'ant-select-item-option', 'ant-select-item-option-select-all'];\n\t\tif(_isSelectAll)\n\t\t\tcls.push('ant-select-item-option-selected');\n\t\treturn cls.join(' ');\n\t}\n\n\tconst childProps = getObjectExcludedProps(props, excludeProps);\n    return (\n\t\t<AntSelect\n\t\t\t{...childProps}\n\t\t\tsearchValue={_searchValue}\n\t\t\tstyle={{ width: widthControl }}\n\t\t\t// listHeight={heightPopup}\n\t\t\t// defaultValue={['a10', 'c12']}\n\t\t\tonChange={_onChange}\n\t\t\tmaxTagCount={0}\n\t\t\tmaxTagPlaceholder={(omittedValues) => `Выбрано: ${omittedValues.length}`}\n\t\t\t// dropdownMatchSelectWidth={200}\n\t\t\t// listItemHeight={10} listHeight={250}\n\t\t\tonPopupScroll={onScroll}\n\t\t\tonSearch={onSearch}\n\t\t\tdropdownRender={menu => (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t{mode === 'multiple' ?\n\t\t\t\t\t\t<div className={getSelectAllCls()} onClick={_onChangeSelectAll}>\n\t\t\t\t\t\t\t<div className=\"ant-select-item-option-content\">\n\t\t\t\t\t\t\t\t<span>Выбрать все</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{_isSelectAll ?\n\t\t\t\t\t\t\t\t<span className=\"ant-select-item-option-state\"><CheckOutlined/></span> : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t\t{menu}\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t>\n    \t\t{_options && _options.map(({ label, value, className, disabled }, i) =>\n\t\t\t\t<AntSelect.Option key={i.toString(36) + i} value={value} className={className} disabled={disabled}>{label}</AntSelect.Option>)}\n    \t</AntSelect>\n    );\n};\n\nSelect.propTypes = {\n\t/** Сортировка по умолчанию */\n\tdefaultSortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/** Объект фильтрации по умолчанию */\n\tdefaultFilter: PropTypes.object,\n\n\t/** Значение строки поиска по умолчанию строк */\n\tdefaultSearchValue: PropTypes.string,\n\n\t/** Сортировка */\n\tsortBy: PropTypes.object,\n\n\t/** Фильтр */\n\tfilter: PropTypes.object,\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\t/** Режим загружки по скроллу */\n\tinfinityMode: PropTypes.bool,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n\t/** Функция преобразования загруженных объектов в объекты для селекта.\n\t * Сигнатура `(option) => ({})`\n\t * Требоваеть вернуть объект с параметрам\n\t * `{ label: ReactNode, value: any, className: string, disabled: bool }`\n\t * ##### Example:\n\t * ``` JS\n\t * (option) => ({\n\t * \tlabel: (<span><MehOutlined />{option.name}</span>),\n\t * \tvalue: option.id,\n\t * \tclassName: 'some-class',\n\t * \tdisabled: false,\n\t * })\n\t * ```\n\t */\n\toptionConverter: PropTypes.func.isRequired,\n\n\t/** Select options `[{ label, value, className, disabled }]` */\n\toptions: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Ширина поля выбора в пикселях */\n\twidthControl: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n\t/** Размер страницы */\n\tpageSize: PropTypes.number,\n};\n\nSelect.defaultProps = {\n\t// Rt Props\n\tdefaultSortBy: undefined,\n\tdefaultFilter: {},\n\tdefaultSearchValue: undefined,\n\tinfinityMode: false,\n\trequestLoadRows: undefined,\n\toptions: [],\n\twidthControl: '100%',\n\tpageSize: 50,\n\tsearchParamName: 'searchValue',\n}\n\nexport default Select;\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TreeSelect as AntTreeSelect } from \"antd\";\nimport { getObjectExcludedProps, notificationError, useMounted } from \"../utils/baseUtils\";\n\nconst excludeProps = [\n    'componentType',\n    'defaultSortBy',\n    'defaultFilter',\n    'defaultSearchValue',\n    'sortBy',\n    'filter',\n    'searchValue',\n    'searchParamName',\n    'requestLoadRows',\n    'optionConverter',\n    'treeData'\n];\n\n/** Компонент выбора элемента(ов) из древовидного списка */\nconst TreeSelect = props => {\n\n    const {\n        // Rt Props\n        defaultSortBy,\n        defaultFilter,\n        defaultSearchValue,\n        sortBy,\n        filter,\n        searchValue,\n        searchParamName,\n        requestLoadRows,\n        optionConverter,\n        treeData,\n    } = props;\n    /** Индикатор загрузки данных */\n    const [_loading, _setLoading] = useState(false);\n    /** Опции селекта */\n    const [_treeData, _setTreeData] = useState(treeData);\n\n    const isMounted = useMounted()\n\n    useEffect(() => {\n        _loadOptions({\n            sortBy: defaultSortBy,\n            filter: defaultFilter,\n            searchValue: defaultSearchValue,\n            reload: true,\n        });\n    }, []);\n\n    useEffect(() => {\n        // console.log(\"Change sortBy, filter, searchValue\", sortBy, filter, searchValue);\n        if(isMounted) {\n            _loadOptions({\n                sortBy: sortBy,\n                filter: filter,\n                searchLine: searchValue,\n                reload: true,\n            });\n        }\n    }, [sortBy, filter, searchValue]);\n\n    const getSort = (sortBy) =>\n        sortBy && sortBy.key ? sortBy.key + ',' + sortBy.order : null;\n\n    const getSearchValue = (searchValue) =>\n        searchValue ? {[searchParamName]: searchValue} : null\n\n    const _optionConverter = (options) => {\n        if(Array.isArray(options))\n            return options.map(option => {\n                if(option.children && Array.isArray(option.children))\n                    option.children = _optionConverter(option.children)\n                return optionConverter(option)\n            })\n    }\n\n    const _loadOptions = (params) => {\n        const {sortBy, filter, searchValue} = params;\n        if (!_loading && requestLoadRows) {\n            _setLoading(true);\n            const requestOptions = {\n                params: {\n                    page: 0,\n                    size: 1,\n                    sort: getSort(sortBy)\n                },\n                data: {\n                    ...filter,\n                    ...getSearchValue(searchValue)\n                }\n            }\n            requestLoadRows(requestOptions)\n                .then((response) => {\n                    // console.log(\"infinity then response\", response);\n                    const result = response.data;\n                    _setTreeData(_optionConverter(result))\n                })\n                .catch((error) => {\n                    notificationError(error, 'Ошибка загрузки данных')\n                    // _setRowsHandler(_options); // _setRows\n                    // setHasMore(false);\n                    _setLoading(false);\n                });\n        }\n    }\n\n    const childProps = getObjectExcludedProps(props, excludeProps);\n    return (\n        <AntTreeSelect\n            {...childProps}\n            maxTagCount={0}\n            maxTagPlaceholder={(omittedValues) => `Выбрано: ${omittedValues.length}`}\n            treeData={_treeData}\n            showArrow={true}\n            // loadData={onLoadData}\n        />\n    );\n};\n\nTreeSelect.propTypes = {\n    /** Сортировка по умолчанию */\n    defaultSortBy: PropTypes.shape({\n        /** Ключ поля для сортировки */\n        key: PropTypes.string,\n        /** Направление сортировки */\n        order: PropTypes.oneOf(['asc', 'desc']),\n    }),\n\n    /** Объект фильтрации по умолчанию */\n    defaultFilter: PropTypes.object,\n\n    /** Значение строки поиска по умолчанию строк */\n    defaultSearchValue: PropTypes.string,\n\n    /** Сортировка */\n    sortBy: PropTypes.object,\n\n    /** Фильтр */\n    filter: PropTypes.object,\n\n    /** Значение строки поиска */\n    searchValue: PropTypes.string,\n\n    /** Имя параметра для поиска */\n    searchParamName: PropTypes.string,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция преобразования загруженных объектов в объекты для селекта.\n     * Сигнатура `(option) => ({})`\n     * Требоваеть вернуть объект с параметрам\n     * `{ label: ReactNode, value: any, children: any, checkable: bool, selectable: bool }`\n     * ##### Example:\n     * ``` JS\n     * (option) => ({\n     * \tlabel: (<span><MehOutlined />{option.name}</span>),\n     * \tvalue: option.id,\n     * \tchildren: option.children,\n     * \tcheckable: !option.isGroup,\n     * \tselectable: !option.isGroup,\n     * })\n     * ```*/\n    optionConverter: PropTypes.func.isRequired,\n\n    /** Select options `[{ label, value, children, checkable, selectable }]` */\n    options: PropTypes.arrayOf(PropTypes.object),\n};\n\nTreeSelect.defaultProps = {\n    // Rt Props\n    defaultSortBy: undefined,\n    defaultFilter: {},\n    defaultSearchValue: undefined,\n    requestLoadRows: undefined,\n};\n\nexport default TreeSelect;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { notification, Button, Tooltip, Modal as AntModal} from \"antd\";\nimport { notificationError, dispatchToStore, useMounted, getObjectExcludedProps } from \"../utils/baseUtils\";\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../redux/rtd.actions\";\nimport Form from \"../Form/Form\";\n\nconst excludeProps = [\"buttonProps\", \"toolTipProps\", \"modalConfig\", \"modalData\", \"subscribe\", \"dispatch\"];\nconst serverModalTypes = ['addOnServer', 'editOnServer', 'addGroupOnServer', 'editGroupOnServer']\nconst localModalTypes = ['addOnLocal', 'addGroupOnLocal', 'editOnLocal', 'editGroupOnLocal']\nconst allModalTypes = [...serverModalTypes, ...localModalTypes, 'select', 'viewGroup', 'viewObject']\n\nconst defaultProps = {\n    subscribe: [],\n    dispatch: {}\n}\n\nconst getDefaultFooterProps = (modal) => {\n\n    let okText = '';\n    let cancelText = '';\n    let modalTitle = '';\n\n    switch (modal.type) {\n        case 'addOnServer':\n        case 'addGroupOnServer':\n            okText = 'Сохранить';\n            cancelText = 'Отмена';\n            modalTitle = 'Сохранить на сервере';\n            break;\n        case 'addOnLocal':\n        case 'addGroupOnLocal':\n            okText = 'Сохранить';\n            cancelText = 'Отмена';\n            modalTitle = 'Сохранить локально';\n            break;\n        case 'editOnServer':\n        case 'editGroupOnServer':\n            okText = 'Сохранить';\n            cancelText = 'Отмена';\n            modalTitle = 'Измененить на сервере';\n            break;\n        case 'editOnLocal':\n        case 'editGroupOnLocal':\n            okText = 'Сохранить';\n            cancelText = 'Отмена';\n            modalTitle = 'Изменение локально';\n            break;\n        case 'select':\n            okText = 'Добавить';\n            cancelText = 'Отмена';\n            modalTitle = 'Выбор';\n            break;\n        case 'viewGroup':\n        case 'viewObject':\n            okText = 'Закрыть';\n            modalTitle = 'Просмотр';\n            break;\n        default: break;\n    }\n\n    if(modal.okText)\n        okText = modal.okText;\n\n    if(modal.cancelText)\n        cancelText = modal.cancelText;\n\n    if(modal.title)\n        modalTitle = modal.title;\n\n    return {okText, cancelText, title: modalTitle, okType: 'primary'}\n};\n\n/**\n * Компонент модального окна\n */\nconst Modal = props => {\n\n    const {buttonProps, toolTipProps, modalConfig, modalData, subscribe, dispatch} = props;\n    const modalProps = { ...getDefaultFooterProps(modalConfig), ...getObjectExcludedProps(modalConfig, excludeProps) };\n\n    const [visible, setVisible] = useState(false);\n    const [_modalData, _setModalData] = useState({});\n    const [_buttonProps, setButtonProps] = useState({});\n\n    const isMounted = useMounted()\n\n    useEffect(() => {\n        _setModalData(modalData);\n    }, []);\n\n    /** Подписка на изменение props[subscribe.name] в сторе */\n    subscribe.map(item => {\n        return useEffect( () => {\n            if(isMounted && item.name) {\n                // console.log(\"storeHOC => subscribe: \", props[subscribe.name]);\n                item.onChange && item.onChange({\n                    value: props[item.name],\n                    extraData: props[`${item.name}ExtraData`],\n                    setModalData,\n                    setButtonProps,\n                    openModal: _onOpenModal,\n                    closeModal: _onCloseModal\n                });\n            }\n            // console.log(\"Change Props[2]: \", props.subscribeЗф);\n        }, [props[item.name]]);\n    })\n\n    const setModalData = (value) => _setModalData && _setModalData(value);\n    const _onOpenModal = () => setVisible(true)\n    const _onCloseModal = () => setVisible(false)\n\n    const onFinishHandler = (values) => { //} {type, row, requestSaveRow}) => {\n        // console.log(\"Modal Events => before dispatchToStore: \", dispatch);\n\n        let saveObj;\n        if(modalProps.type.startsWith('add'))\n            saveObj = {...values};\n        else\n            saveObj = {..._modalData, ...values};\n\n        dispatchToStore({dispatch, setDateStore: props.setDateStore, value: saveObj});\n\n        if (modalProps.requestSaveRow && serverModalTypes.includes(modalProps.type)) {\n            const method = (modalProps.type === 'addOnServer' || modalProps.type === 'addGroupOnServer') ? 'POST' : 'PUT';\n            // console.log(\"Modal Events => type: \", type, method, row, _modalData);\n            modalProps.requestSaveRow({\n                method,\n                data: saveObj,\n            })\n                .then(response => {\n                    notification.success({\n                        message: 'Сохранение прошло успешно'\n                    });\n                    _onCloseModal();\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении'));\n        } else _onCloseModal();\n\n        if (modalProps.onOk) modalProps.onOk(values);\n        if (modalProps.onFinish) modalProps.onFinish(values);\n    };\n\n    const onFinishFailedHandler = (errorInfo) => {\n        // console.log('FormModal Failed:', errorInfo);\n        console.error(\"FormModal fields failed: \", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    const loadInitDataHandler = (callBack) =>\n        formConfig.loadInitData(callBack, _modalData)\n\n\n    const _onCancelHandler = (e) => {\n        // setVisibleModals({ ...visibleModals, [modal.type]: false });\n        // form.resetFields();\n        _onCloseModal()\n        if (modalProps.onCancel) modalProps.onCancel(e)\n    };\n\n    const defaultFooter = [\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.cancelText,\n                className: 'mr-8',\n                onClick: _onCancelHandler,\n                ...modalProps.cancelButtonProps\n            }\n        },\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.okText,\n                type: modalProps.okType,\n                htmlType: 'submit',\n                ...modalProps.okButtonProps\n            }\n        }\n    ];\n\n    const formConfig =  {\n        footer: defaultFooter,\n        loadInitData: (callBack, row) => callBack(row),\n        ...modalProps.form\n    };\n\n    return (\n        <React.Fragment>\n            <Tooltip {...toolTipProps}>\n                <Button\n                    type=\"primary\"\n                    {...buttonProps}\n                    {..._buttonProps}\n                    onClick={_onOpenModal}\n                >{buttonProps && buttonProps.label}</Button>\n            </Tooltip>\n            {/*<FormModal*/}\n            {/*    modal={ modalConfig }*/}\n            {/*    selectedRow={_modalData}*/}\n            {/*    visible={visible}*/}\n            {/*    setVisible={_onCloseModal}*/}\n            {/*    saveRow={_onSaveRow}*/}\n            {/*>{props.children}</FormModal>*/}\n            <AntModal\n                {...modalProps}\n                centered\n                destroyOnClose\n                visible={visible}\n                onCancel={_onCancelHandler}\n                bodyStyle={{padding: 0, ...modalProps.bodyStyle}}\n                footer={null}\n            >\n                <Form\n                    {...formConfig}\n                    onFinish={onFinishHandler}\n                    onFinishFailed={onFinishFailedHandler}\n                    loadInitData={loadInitDataHandler}\n                >{props.children}</Form>\n            </AntModal>\n        </React.Fragment>\n    )\n};\n\nModal.propTypes = {\n\n    /** Свойства [Button](https://ant.design/components/button/) из Ant Design\n     * Добавлено свойство `label` с типом `ReactNode` или `string` для формирования контента кнопки*/\n    buttonProps: PropTypes.object,\n\n    /** Объект модального окна. Стандартная конфигурация. */\n    modalConfig: PropTypes.shape({\n        /** Тип модального окна */\n        type: PropTypes.oneOf(allModalTypes),\n\n        /** Ссылка на функцию сохранения данных */\n        requestSaveRow: PropTypes.func,\n\n        /** Пропсы формы.\n         * Если верстка через конфиги, то пропс body обязателен */\n        form: PropTypes.object\n    }),\n\n    /** Данные для модального окна */\n    modalData: PropTypes.object,\n\n    /** Путь в сторе куда класть данных окна после закрытия */\n    dispatch: PropTypes.object,\n\n    /** Объект для подписки на изменения в STORE.\n     * Параметры в `onChange`:\n     * * `value`: значение за которым ведется наблюдение,\n     * * `extraData`: дополнительные данные, передаваемые при срабатывании события\n     * * `setModalData`: функция задания объекта формы\n     * * `setButtonProps`: функция задания пропсов кнопке\n     * * `openModal`: функция открытия модального окна\n     * * `closeModal`: функция закрытия модального окна */\n    subscribe: PropTypes.arrayOf(PropTypes.object),\n};\n\nModal.defaultProps = defaultProps;\n\nconst mapStateToProps = (store, ownProps) => {\n    const {subscribe} = ownProps;\n    let state = {};\n    if(subscribe && subscribe.length > 0){\n        subscribe.forEach(item => {\n            const {name, path, extraData} = item;\n            if(name && path)\n                state[name] = objectPath.get(store, path);\n            if(name && extraData)\n                state[`${name}ExtraData`] = objectPath.get(store, extraData);\n        })\n    }\n    return state;\n};\nconst mapDispatchToProps = (dispatch) =>\n    bindActionCreators( { setDateStore: setDateStore, }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, notification as antNotification, Spin, Tooltip, Typography, Upload } from \"antd\";\nimport { LoadingOutlined, CloudUploadOutlined } from \"@ant-design/icons\";\nimport { noop } from \"../utils/baseUtils\";\n\n\nconst defaultProps = {\n    requestUploadFile: noop,\n    dataObject: {},\n    onCompletedUpload: noop,\n    onFailedUpload: noop,\n    uploadProps: {},\n    toolTipProps: {},\n    buttonProps: {}\n}\n\n/** Компонент загрузки файлов */\nconst UploadFile = props => {\n\n    const {\n        requestUploadFile,\n        dataObject,\n        onCompletedUpload,\n        onFailedUpload,\n        uploadProps,\n        toolTipProps,\n        buttonProps,\n    } = props\n\n    const _uploadFile = (file) => {\n        // console.log('beforeUpload dataObject => ', dataObject);\n        notification(file, 'loading');\n        if (requestUploadFile) {\n            requestUploadFile({ file: file, dataObject })\n                .then((response) => {\n                    notification(file, 'success');\n                })\n                .catch(() => {\n                    notification(file, 'error');\n                });\n        }\n        return false;\n    };\n    const notification = (file, type) => {\n        const notifProps = {\n            key: file.uid,\n            duration: type === 'loading' ? 0 : 5,\n            icon: type === 'loading'\n                ? <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n                : null,\n            message: <span>Загрузка файла: <Typography.Text code>{file.name}</Typography.Text></span>\n        };\n        switch (type) {\n            case 'loading':\n                antNotification.info(notifProps);\n                break;\n            case 'success':\n                antNotification.success(notifProps);\n                onCompletedUpload(file);\n                props.onChange(file);\n                break;\n            case 'error':\n                antNotification.error(notifProps);\n                onFailedUpload(file);\n                break;\n            case 'close':\n                antNotification.close(file.uid);\n                break;\n            default:\n                break;\n        }\n    };\n    const defaultUploadProps = {\n        multiple: true,\n        showUploadList: false,\n        beforeUpload: _uploadFile\n    };\n\n    return (\n        <Upload {...defaultUploadProps} {...uploadProps}>\n            <Tooltip {...toolTipProps}>\n                <Button\n                    icon={<CloudUploadOutlined />}\n                    {...buttonProps}\n                >{buttonProps && buttonProps.label}</Button>\n            </Tooltip>\n        </Upload>\n    );\n};\n\nUploadFile.propTypes = {\n    /** Функция запроса для отправки файла с данным на сервер */\n    requestUploadFile: PropTypes.func.isRequired,\n\n    /** Данные, прикрепляемые к файлу */\n    dataObject: PropTypes.object,\n\n    /** Функция, вызываемая при удачной загрузке файла */\n    onCompletedUpload: PropTypes.func,\n\n    /** Функция, вызываемая при НЕ удачной загрузке файла */\n    onFailedUpload: PropTypes.func,\n\n    /** Ant Props для [Upload](https://ant.design/components/upload/) компонента */\n    uploadProps: PropTypes.object,\n\n    /** Ant Props для [Tooltip](https://ant.design/components/tooltip/) компонента */\n    toolTipProps: PropTypes.object,\n\n    /** Ant Props для [Button](https://ant.design/components/button/) компонента */\n    buttonProps: PropTypes.object,\n};\n\nUploadFile.defaultProps = defaultProps\n\nexport default UploadFile;\n","import React from \"react\";\nimport {\n    DatePicker as RtDatePicker,\n    TypographyDate,\n    Button as RtButton,\n    Custom,\n    FormHeader,\n    FormBody,\n    FormFooter,\n    TabPane as RtTabPane,\n    withStore\n} from \"./Base\";\nimport {\n    Form as AntForm,\n    Typography as AntTypography,\n    Radio as AntRadio,\n    Divider as AntDivider,\n    Checkbox as AntCheckbox,\n    Input as AntInput,\n    InputNumber as AntInputNumber,\n    Switch as AntSwitch,\n    Space as AntSpace,\n    Row as AntRow,\n    Col as AntCol,\n    Tabs as AntTabs,\n    List as AntList\n} from \"antd\";\nimport RtForm from \"./Form/Form\";\nimport RtLayout from \"./Layout/Layout\";\nimport RtSwitcher from './Switcher/Switcher';\nimport RtTable from \"./Table/ConfigLoader\";\nimport RtSelect from \"./Select/Select\";\nimport RtTreeSelect from './TreeSelect/TreeSelect'\nimport RtModal from \"./Modal/Modal\";\nimport RtUploadFile from \"./UploadFile/UploadFile\";\nimport { getObjectExcludedProps } from \"./utils/baseUtils\";\n\n/**\n * Renders\n */\nexport const renderClassic = (Component) => (props) => {\n    return (<Component {...props}>{props.children}</Component>)\n}\n\nexport const renderClassicWithLabel = (Component) => (props) => {\n    return (<Component {...props}>{props.label || props.value || props.children}</Component>)\n}\n\nconst renderClassicWithComponentType = (Component, componentType) => (props) => {\n    return renderClassic(Component)({...props, componentType});\n}\n\nexport const renderClassicByName = (componentName) => (props) => {\n    if(classic[componentName]) {\n        // console.log(\"renderClassicByName => \", props);\n        return renderClassic(classic[componentName])(props)\n    } else {\n        console.log(\"NO renderClassicByName => \", componentName);\n        return null;\n    }\n}\nexport const renderDeclarativeByName = (componentName) => (props) => (children) => {\n    if(classic[componentName]) {\n        // console.log(\"renderDeclarativeByName => \", props);\n        return renderDeclarative(classic[componentName])(props)(children)\n    } else {\n        console.log(\"NO renderDeclarativeByName => \", componentName);\n        return null;\n    }\n}\n\nexport const renderDeclarative = (Component) => (props) => (children) => {\n    // console.log(\"renderDeclarative => \", props);\n    return (<Component {...props}>{children}</Component>)\n}\n\nconst renderFormItemComponent = (Component) => (props) => {\n    const componentProps = getObjectExcludedProps(props, ['itemProps']);\n    return renderDeclarative(AntForm.Item)\n        ({...props.itemProps, noStyle: !(props.itemProps && props.itemProps.label)})\n        (renderClassic(Component)(componentProps))\n}\n\n\n/** */\nconst ComponentClassic = (Component) => (props) => {\n    // console.log(\"ComponentClassic => \", Component)\n    const StoreComponent = withStore(Component, {});\n    return renderFormItemComponent(StoreComponent)(props);\n}\nconst ComponentClassicWithLabel = (Component) => (props) => {\n    const StoreComponent = withStore(Component, {});\n    return renderFormItemComponent(renderClassicWithLabel(StoreComponent))(props);\n}\nconst ComponentClassicWithPlaceholder = (Component, placeholder) => (props) => {\n    const StoreComponent = withStore(Component, {});\n    const _placeholder = (props && props.placeholder) ? props.placeholder : placeholder;\n    return renderFormItemComponent(StoreComponent)({...props, placeholder: _placeholder});\n}\nconst ComponentClassicWithOutStore = (Component) => (props) => {\n    // console.log(\"ComponentClassicWithOutStore => \", Component)\n    return renderFormItemComponent(Component)(props);\n}\n\nconst classicComponents = {\n    Form:       RtForm,\n    FormHeader: FormHeader,\n    FormBody:   FormBody,\n    FormFooter: FormFooter,\n    FormList:   AntForm.List,\n    Space:      renderFormItemComponent(AntSpace),\n    Row:        renderFormItemComponent(AntRow),\n    Col:        renderFormItemComponent(AntCol),\n    Layout:     renderFormItemComponent(RtLayout),\n    Tabs:       AntTabs,\n    TabPane:    RtTabPane,\n    List:       renderFormItemComponent(AntList),\n}\nconst withComponentType = {\n    Button:     ComponentClassicWithOutStore(RtButton),\n    Title:      ComponentClassicWithLabel(AntTypography.Title),\n    Text:       ComponentClassicWithLabel(AntTypography.Text),\n    Divider:    ComponentClassicWithLabel(AntDivider),\n    Checkbox:   ComponentClassicWithLabel(AntCheckbox),\n    DatePicker: ComponentClassicWithPlaceholder(RtDatePicker, 'Выберите дату'),\n    DateText:   ComponentClassic(TypographyDate),\n    Input:      ComponentClassicWithPlaceholder(AntInput, 'Введите значение'),\n    Search:     ComponentClassicWithPlaceholder(AntInput.Search, 'Поиск'),\n    TextArea:   ComponentClassicWithPlaceholder(AntInput.TextArea, 'Введите текст'),\n    Password:   ComponentClassicWithPlaceholder(AntInput.Password, 'Введите пароль'),\n    InputNumber:ComponentClassicWithPlaceholder(AntInputNumber, 'Введите значение'),\n    Switch:     ComponentClassic(AntSwitch),\n    RadioGroup: ComponentClassic(AntRadio.Group),\n    Select:     ComponentClassicWithPlaceholder(RtSelect, 'Выберите значение'),\n    TreeSelect: ComponentClassicWithPlaceholder(RtTreeSelect, 'Выберите значение'),\n    Table:      ComponentClassicWithOutStore(RtTable),\n    Modal:      ComponentClassicWithOutStore(RtModal),\n    Custom:     ComponentClassic(Custom),\n    Switcher:   ComponentClassic(RtSwitcher),\n    UploadFile: ComponentClassic(RtUploadFile)\n}\n\nexport const classic = {\n    ...classicComponents,\n    ...Object.keys(withComponentType)\n        .reduce((obj, key) =>\n            ({ ...obj, [key]: renderClassicWithComponentType(withComponentType[key], key) }), {})\n}\n\nexport const declarative =\n    Object.keys(classic)\n    .reduce((obj, key) =>\n        ({ ...obj, [key]: renderDeclarative(classic[key]) }), {});\n","import {Spin} from 'antd';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport React from 'react';\n\nexport const empty = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<span>Нет данных</span>{' '}\n\t</div>\n);\n\nexport const overlay = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<Spin\n\t\t\ttip='Загрузка...'\n\t\t\tindicator={<LoadingOutlined style={{fontSize: 24}} spin />}\n\t\t/>{' '}\n\t</div>\n);\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport { flatten, getTableRowKeys, getTableRowObjects } from \"../../../utils/baseUtils\";\n\nconst SelectionHead = (props) => {\n\tconst {column, container} = props;\n\tconst {rowKey, onSelectAll, selectedRowKeys, selectAll} = column;\n\n\tconst _handleChange = (e) => {\n\t\tconst rowKeys = flatten(getTableRowKeys(container.props.data, column.rowKey));\n\t\tconst rowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => rowKeys.includes(item[rowKey]));\n\t\tconst totalLength = rowKeys.length;\n\t\tconst selectLength = selectedRowKeys.length;\n\t\tconst checked = !(totalLength === selectLength);\n\n\t\t// const newRowKeys = container.props.data.map((item) => { return item[column.rowKey] });\n\t\tonSelectAll({selected: checked, rowKeys: rowKeys, rowObjects: rowObjects});\n\t};\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={selectAll === null}\n\t\t\tonChange={_handleChange}\n\t\t\tchecked={selectAll}\n\t\t/>\n\t);\n};\n\nexport default SelectionHead;\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport {\n\tflatten,\n\tgetTableRowKeys,\n\tfindNodeByRowKey, getTableRowObjects\n} from \"../../../utils/baseUtils\";\n\nconst getRowChildren = (data, rowKey) =>\n\tdata.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item[rowKey], getRowChildren(item.children, rowKey)];\n\t\t}\n\t\treturn item[rowKey];\n\t});\n\nconst findBrothers = (data, selfItem, rowKey, parentKey, rowKeys = null) => {\n\tlet arr = [];\n\tdata.forEach((item) => {\n\t\tif (\n\t\t\titem[parentKey] &&\n\t\t\titem[parentKey] === selfItem[parentKey] &&\n\t\t\titem[rowKey] !== selfItem[rowKey]\n\t\t) {\n\t\t\tif (rowKeys !== null) {\n\t\t\t\tif (rowKeys.includes(item[rowKey])) {\n\t\t\t\t\tarr.push(item[rowKey]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tarr.push(item[rowKey]);\n\t\t\t}\n\t\t} else if (item.children && item.children.length) {\n\t\t\tarr.push(\n\t\t\t\tfindBrothers(\n\t\t\t\t\titem.children,\n\t\t\t\t\tselfItem,\n\t\t\t\t\trowKey,\n\t\t\t\t\tparentKey,\n\t\t\t\t\trowKeys\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\treturn arr;\n};\n\nexport const parentAnalysis = ({\n\trowData,\n\trowKey,\n\tparentKey,\n\tchecked,\n\tnodeAssociated,\n\ttreeData,\n\tselectedRowKeys,\n\tindeterminateRowKeys,\n}) => {\n\tlet _selectedRowKeys = [...selectedRowKeys];\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\tlet currentRowData = rowData;\n\tlet parentExist = !!currentRowData[parentKey];\n\tlet lastTypeSelect = checked ? 'checked' : 'square';\n\tlet typeSelect = '';\n\tlet nextSquare = false;\n\n\t/** Пока есть родитель */\n\twhile (parentExist && nodeAssociated) {\n\t\tconst indeterminateBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_indeterminateRowKeys\n\t\t\t)\n\t\t);\n\t\tconst selectedBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_selectedRowKeys\n\t\t\t)\n\t\t);\n\t\tconst allBrothers = flatten(\n\t\t\tfindBrothers(treeData, currentRowData, rowKey, parentKey)\n\t\t);\n\n\t\tif (checked) {\n\t\t\tif (\n\t\t\t\tlastTypeSelect === 'checked' &&\n\t\t\t\tselectedBrothers.length === allBrothers.length\n\t\t\t)\n\t\t\t\ttypeSelect = 'checked';\n\t\t\telse typeSelect = 'square';\n\t\t} else {\n\t\t\tif (\n\t\t\t\t!checked &&\n\t\t\t\t!nextSquare &&\n\t\t\t\t(selectedBrothers.length || indeterminateBrothers.length)\n\t\t\t)\n\t\t\t\tnextSquare = true;\n\t\t\tif (nextSquare) typeSelect = 'square';\n\t\t\telse typeSelect = 'none';\n\t\t}\n\n\t\t// console.log(\"allBrothers \", allBrothers);\n\t\t// console.log(\"findParentById \", treeData,\n\t\t//     rowKey,\n\t\t//     parentKey,\n\t\t//     currentRowData[parentKey]);\n\t\t//\n\t\t// console.log(\"findNodeByRowKey \", findNodeByRowKey(treeData, rowKey, currentRowData[parentKey]));\n\n\t\t// Найти родителя\n\t\tcurrentRowData = findNodeByRowKey(\n\t\t\ttreeData,\n\t\t\trowKey,\n\t\t\tcurrentRowData[parentKey]\n\t\t);\n\n\t\tif (typeSelect === 'checked') {\n\t\t\t// Выделить галкой\n\t\t\t// console.log(\"checked\");\n\t\t\tlastTypeSelect = 'checked';\n\t\t\tif (!_selectedRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_selectedRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _indeterminateRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _indeterminateRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'square') {\n\t\t\t// Выдлеить квадратом\n\t\t\t// console.log(\"square: \");\n\t\t\tlastTypeSelect = 'square';\n\t\t\tif (!_indeterminateRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_indeterminateRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _selectedRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'none') {\n\t\t\t// Снять выделение\n\t\t\t// console.log(\"none: \");\n\t\t\tlastTypeSelect = 'none';\n\t\t\tconst indexS = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (indexS > -1) _selectedRowKeys.splice(indexS, 1);\n\t\t\tconst indexI = _indeterminateRowKeys.indexOf(\n\t\t\t\tcurrentRowData[rowKey]\n\t\t\t);\n\t\t\tif (indexI > -1) _indeterminateRowKeys.splice(indexI, 1);\n\t\t}\n\n\t\tparentExist = !!currentRowData[parentKey];\n\t\t// parentExist = проверка наличия след родителя\n\t}\n\n\treturn [_selectedRowKeys, _indeterminateRowKeys];\n};\n\nconst SelectionCell = (props) => {\n\tconst _handleChange = (checked) => {\n\t\tconst {rowData, rowIndex, column, container} = props;\n\t\tconst {\n\t\t\tonChange,\n\t\t\tselectedRowKeys,\n\t\t\tindeterminateRowKeys,\n\t\t\trowKey,\n\t\t\tparentKey,\n\t\t\tnodeAssociated,\n\t\t} = column;\n\n\t\t// const rowKeys = flatten(getTableRowKeys([rowData], column.rowKey));\n\t\t// const totalLength = container.props.data.length;\n\t\t// const checked = e.target.checked;\n\t\t// const currentRowKey = {[rowKey]: rowData[rowKey], checked};\n\t\t// console.log(\"_handleChange: \", selectedRowKeys);\n\n\t\tlet _selectedRowKeys = [...selectedRowKeys];\n\t\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\t\t/** Обработка себя, поиск детей, выделение / снятие их */\n\t\tlet rowChildren = [];\n\t\tif (checked) {\n\t\t\tif (rowData.children && nodeAssociated)\n\t\t\t\trowChildren = flatten(getRowChildren(rowData.children, rowKey));\n\n\t\t\t_selectedRowKeys = _selectedRowKeys\n\t\t\t\t.concat([rowData[rowKey]])\n\t\t\t\t.concat(rowChildren);\n\t\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t} else {\n\t\t\tif (rowData.children && nodeAssociated)\n\t\t\t\trowChildren = flatten(\n\t\t\t\t\tgetRowChildren(rowData.children, rowKey, false)\n\t\t\t\t);\n\n\t\t\t_selectedRowKeys = _selectedRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t}\n\n\t\t[_selectedRowKeys, _indeterminateRowKeys] = parentAnalysis({\n\t\t\trowData,\n\t\t\trowKey,\n\t\t\tparentKey,\n\t\t\tchecked,\n\t\t\tnodeAssociated,\n\t\t\ttreeData: container.props.data,\n\t\t\tselectedRowKeys: _selectedRowKeys,\n\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t});\n\n\t\tconst keys = [...new Set(_selectedRowKeys)];\n\t\tconst _selectedRowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => keys.includes(item[rowKey]));\n\t\t//return [...new Set(_disabledElements)]\n\t\t// onChange({ selected: checked, totalLength, rowData, rowIndex });\n\n\t\t/** Выясняем новое состояние галочки \"Выделить все\" */\n\t\tlet selectAll;\n\t\tconst selectLength = _selectedRowKeys.length;\n\t\tconst totalLength = flatten(\n\t\t\tgetTableRowKeys(container.props.data, column.rowKey)\n\t\t).length;\n\n\t\tif (selectLength === 0) selectAll = false;\n\t\telse if (totalLength === selectLength) selectAll = true;\n\t\telse if (totalLength !== selectLength) selectAll = null;\n\n\n\n\t\tonChange({\n\t\t\tselected: checked,\n\t\t\t_selectedRow: {\n\t\t\t\trowData: {...rowData},\n\t\t\t\trowIndex: rowIndex,\n\t\t\t\trowKey: rowKey,\n\t\t\t},\n\t\t\t_selectAll: selectAll,\n\t\t\t_selectedRowKeys: keys, //[...new Set(_selectedRowKeys)],\n\t\t\t_selectedRowObjects: _selectedRowObjects,\n\t\t\t_indeterminateRowKeys: [...new Set(_indeterminateRowKeys)],\n\t\t});\n\n\t\t// let uniqIds = {};\n\t\t// onChange({selected: checked, rowKeys: rowKeys.filter(obj => !uniqIds[obj[rowKey]] && (uniqIds[obj[rowKey]] = true)) });\n\t};\n\n\tconst {rowData, column} = props;\n\tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\n\tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\n\tconst checked = selectedRowKeys.includes(rowData[rowKey]);\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={det}\n\t\t\tonChange={(e) => _handleChange(e.target.checked)}\n\t\t\tchecked={checked}\n\t\t/>\n\t);\n};\n\nexport default SelectionCell;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport {DatePicker} from 'antd';\nimport locale from 'antd/es/date-picker/locale/ru_RU';\nimport {noop} from '../../utils/baseUtils';\nimport {rtPrefix} from '../../utils/variables';\nimport {\n\tgetMomentWithOffset,\n\tgetMomentWithOffsetTruncateDay,\n\tgetMomentFromStringByFormat,\n} from '../../utils/datesUtils';\n\nconst DateRange = (props) => {\n\t/** Состояние первоначалной настройки компонента */\n\tconst [mounted, setMounted] = useState(false);\n\tconst [startValue, setStartValue] = useState(undefined);\n\tconst [endValue, setEndValue] = useState(undefined);\n\n\tconst {\n        className,\n\t\tnameStart,\n\t\tnameEnd,\n\t\tdateFormat,\n\t\tonChange,\n        size,\n\t\ttitle,\n\t\tvalueStart,\n\t\tvalueEnd,\n\t\tshowTime,\n\t} = props;\n\n\tuseEffect(() => {\n\t\tif (!mounted) {\n\t\t\tif (props.defaultValueStart) {\n                // console.log(\"DateRange mounted :\", nameStart, props.defaultValueStart);\n                _onChange(\n\t\t\t\t\tnameStart,\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueStart,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tsetStartValue(\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueStart,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (props.defaultValueEnd) {\n\t\t\t\t_onChange(\n\t\t\t\t\tnameEnd,\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueEnd,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tsetEndValue(\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueEnd,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tsetMounted(true);\n\t\t}\n\t}, [mounted]);\n\n\tuseEffect(() => {\n\t\tif (valueStart) {\n\t\t\tsetStartValue(moment(valueStart));\n\t\t\t// console.log('useEffect -> valueStart', valueStart);\n\t\t} else if (!props.defaultValueStart) setStartValue(null);\n\t}, [valueStart]);\n\tuseEffect(() => {\n\t\tif (valueEnd) {\n\t\t\tsetEndValue(moment(valueEnd));\n\t\t\t// console.log('useEffect -> valueEnd', valueEnd);\n\t\t} else if (!props.defaultValueEnd) setEndValue(null);\n\t}, [valueEnd]);\n\n\tconst disabledStartDate = (startValue) => {\n\t\tif (!startValue || !endValue) {\n\t\t\treturn false;\n\t\t}\n\t\treturn startValue.valueOf() > endValue.valueOf();\n\t};\n\n\tconst disabledEndDate = (endValue) => {\n\t\tif (!endValue || !startValue) {\n\t\t\treturn false;\n\t\t}\n\t\treturn endValue.valueOf() <= startValue.valueOf();\n\t};\n\n\tconst onStartChange = (date) => {\n\t\tsetStartValue(date);\n\t\t_onChange(nameStart, date);\n\t};\n\n\tconst onEndChange = (date) => {\n\t\tsetEndValue(date);\n\t\t_onChange(nameEnd, date);\n\t};\n\n\tconst _onChange = (name, value) => {\n\t\tif (value)\n\t\t\tif(showTime)\n\t\t\t\tonChange(name, getMomentWithOffset(value));\n\t\t\telse\n\t\t\t\tonChange(name, getMomentWithOffsetTruncateDay(value));\n\n\t\telse onChange(name, value);\n\t};\n\n\treturn (\n\t\t<div className={`${className} ${rtPrefix}-date-range`}>\n\t\t\t<div>\n                {title ? <div className={'title'}>{title}</div> : null}\n\t\t\t\t<span className={'subtitleStart'}>c</span>\n\t\t\t\t<DatePicker\n\t\t\t\t\tlocale={locale}\n\t\t\t\t\t// defaultValue={ checkDefValue(props.defaultValueStart) }\n\t\t\t\t\tsize={size}\n\t\t\t\t\tstyle={{width: !!showTime ? '160px' : '135px'}}\n\t\t\t\t\tdisabledDate={disabledStartDate}\n\t\t\t\t\tonChange={onStartChange}\n\t\t\t\t\tformat={dateFormat}\n\t\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\t\tvalue={startValue}\n\t\t\t\t\tshowTime={showTime}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span className={'subtitleEnd'}>по</span>\n\t\t\t\t<DatePicker\n\t\t\t\t\tlocale={locale}\n\t\t\t\t\t// defaultValue={ checkDefValue(props.defaultValueEnd) }\n\t\t\t\t\tsize={size}\n\t\t\t\t\tstyle={{width: showTime ? '160px' : '135px'}}\n\t\t\t\t\tdisabledDate={disabledEndDate}\n\t\t\t\t\tonChange={onEndChange}\n\t\t\t\t\tformat={dateFormat}\n\t\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\t\tvalue={endValue}\n\t\t\t\t\tshowTime={showTime}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nDateRange.propTypes = {\n\t/** Формат отображения даты (не влияет на формат в onChange) */\n\tdateFormat: PropTypes.string,\n\n\t/** Значение по умолчанию для первого пикера */\n\t// defaultValueStart: PropTypes.string,\n\n\t/** Значение по умолчанию для второго пикера */\n\t// defaultValueEnd: PropTypes.string,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Наименование параметра для первого пикера */\n\tnameStart: PropTypes.string,\n\n\t/** Наименование параметра для второго пикера */\n\tnameEnd: PropTypes.string,\n\n\t/** Событие при изменении любого из пикеров */\n\tonChange: PropTypes.func,\n\n    /** Размер пикера ['small', 'middle', 'large'] */\n    size: PropTypes.oneOf(['small', 'middle', 'large']),\n\n\t/** Заголовок */\n\ttitle: PropTypes.string,\n\n\t/** Значение даты первого пикера (используется для управления датой из родительного компонента) */\n\t// valueStart: PropTypes.string,\n\n\t/** Значение даты второго пикера (используется для управления датой из родительного компонента) */\n\t// valueEnd: PropTypes.string,\n};\n\nDateRange.defaultProps = {\n    className: '',\n\tnameStart: 'dateStart',\n\tnameEnd: 'dateEnd',\n\tdateFormat: 'DD.MM.YYYY',\n\tonChange: noop,\n    size: 'middle',\n    // title: 'Период',\n};\n\nexport default DateRange;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {DatePicker} from 'antd';\nimport moment from 'moment';\nimport {noop} from '../../utils/baseUtils';\nimport {\n\tgetMomentFromStringByFormat,\n\tgetMomentWithOffsetTruncateDay,\n} from '../../utils/datesUtils';\n\nconst SingleDate = (props) => {\n\t/** Состояние первоначалной настройки компонента */\n\tconst [mounted, setMounted] = useState(false);\n\tconst [_value, setValue] = useState(null);\n\n\tconst {dateFormat, defaultValue, name, onChange, title, value, className} = props;\n\n\tuseEffect(() => {\n\t\tif (!mounted) {\n\t\t\t// console.log(\"DateRange mounted :\", nameFrom, props.defaultValueFrom);\n\t\t\tif (defaultValue) {\n\t\t\t\t_onChange(\n\t\t\t\t\tname,\n\t\t\t\t\tgetMomentFromStringByFormat(defaultValue, dateFormat)\n\t\t\t\t);\n\t\t\t\tsetValue(getMomentFromStringByFormat(defaultValue, dateFormat));\n\t\t\t}\n\t\t\tsetMounted(true);\n\t\t}\n\t}, [mounted]);\n\n\tuseEffect(() => {\n\t\tif (value) {\n\t\t\tsetValue(moment(value));\n\t\t} else if (!defaultValue) setValue(null);\n\t}, [value]);\n\n\tconst _onChangePicker = (date) => {\n\t\tsetValue(date);\n\t\t_onChange(name, date);\n\t};\n\n\tconst _onChange = (name, value) => {\n\t\tif (value) onChange(name, getMomentWithOffsetTruncateDay(value));\n\t\telse onChange(name, value);\n\t};\n\n\treturn (\n\t\t<div className={`single-date-container ${className}`}>\n\t\t\t<div className={'title'}>{title}</div>\n\t\t\t<DatePicker\n\t\t\t\tsize={'small'}\n\t\t\t\tstyle={{width: '135px'}}\n\t\t\t\tonChange={_onChangePicker}\n\t\t\t\tformat={dateFormat}\n\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\tvalue={_value}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nSingleDate.propTypes = {\n\t/** Формат отображения даты (не влияет на формат в onChange) */\n\tdateFormat: PropTypes.string,\n\n\t/** Значение по умолчанию */\n\tdefaultValue: PropTypes.string,\n\n\t/** Наименование параметра */\n\tname: PropTypes.string,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Событие при изменении пикера */\n\tonChange: PropTypes.func,\n\n\t/** Заголовок */\n\ttitle: PropTypes.string,\n\n\t/** Значение даты */\n\tvalue: PropTypes.string,\n};\n\nSingleDate.defaultProps = {\n\tname: 'date',\n\tdateFormat: 'DD.MM.YYYY',\n\tonChange: noop,\n\ttitle: 'Дата',\n};\n\nexport default SingleDate;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Tooltip } from \"antd\";\nimport { noop } from \"../../utils/baseUtils\";\nimport DateRange from \"../DateRange/DateRange\";\nimport SingleDate from \"../SingleDate/SingleDate\";\nimport Select from \"../Select/Select\";\nimport { rtPrefix } from \"../../utils/variables\";\n\nconst FilterPanel = (props) => {\n  /**\n   * Период с, по (день / месяц / год)\n   * Множественный выбор (дерево с галочками с поиском) (ajax / const)\n   * Множественный выбор (список с поиском) (ajax / const)\n   * Единственный выбор (список с поиском) (ajax / const)\n   */\n\n  const [filter, setFilter] = useState(props.defaultFilter);\n  // const [multiSelectObjects, setMultiSelectObjects] = useState([]);\n\n  const {\n    applyFilterTooltip,\n    applyFilterSize,\n    applyFilterRender,\n    borderStyle,\n    onChangeFilter,\n    onApplyFilter,\n    configFilter,\n    resetFilterRender,\n    resetFilterTooltip,\n    resetFilterSize\n  } = props;\n\n  useEffect(() => {\n    setFilter(props.defaultFilter);\n  }, []);\n\n  const _onChangeData = (name, value) => {\n    // console.log(\"FilterPanel -> onChangeData\", name, value);\n    let _filter = { ...filter };\n    if (value === null) {\n      delete _filter[name];\n    } else {\n      _filter = { ..._filter, ...{ [name]: value } };\n    }\n    // console.log(\"onChangeData:\", _filter);\n    setFilter(_filter);\n    onChangeFilter(_filter);\n  };\n\n  const _applyFilter = () => {\n    // console.log(\"_applyFilter:\", filter);\n    onApplyFilter(filter);\n  };\n  const _resetFilter = () => {\n    // console.log(\"_resetFilter:\", props.defaultFilter);\n    setFilter(props.defaultFilter);\n    onChangeFilter(props.defaultFilter);\n    onApplyFilter(props.defaultFilter);\n    // setMultiSelectObjects([]);\n  };\n\n  // const _onChangeObjects = (name, value) => {\n  // \tlet _multiSelectObjects = {...multiSelectObjects};\n  // \tif (value === null) {\n  // \t\tdelete _multiSelectObjects[name];\n  // \t} else {\n  // \t\t_multiSelectObjects = {..._multiSelectObjects, ...{[name]: value}};\n  // \t}\n  // \t// console.log(\"onChangeData:\", _filter);\n  // \tsetMultiSelectObjects(_multiSelectObjects);\n  // };\n  const getPanelCls = () => {\n    let cls = [`${rtPrefix}-filter-panel`];\n    cls.push(`border-${borderStyle}`);\n    if (configFilter.findIndex((item) => !!item.title) === -1)\n      cls.push(`${rtPrefix}-filter-panel-no-title`);\n    return cls.join(\" \");\n  };\n\n  return (\n    <React.Fragment>\n      {configFilter && configFilter.length ? (\n        <div className={getPanelCls()}>\n          {configFilter.map((item, index) => {\n            // console.log(\"item.defaultRows\", item.defaultRows);\n            let cls = [`${rtPrefix}-filter-panel-item`];\n            item.className && cls.push(item.className);\n            switch (item.componentType) {\n              case \"DateRange\":\n                return (\n                  <DateRange\n                    key={index}\n                    {...item}\n                    className={cls.join(\" \")}\n                    defaultValueStart={\n                      filter[item.nameStart]\n                        ? filter[item.nameStart]\n                        : null\n                    }\n                    defaultValueEnd={\n                      filter[item.nameEnd]\n                        ? filter[item.nameEnd]\n                        : null\n                    }\n                    onChange={_onChangeData}\n                    valueStart={filter[item.nameStart]}\n                    valueEnd={filter[item.nameEnd]}\n                  />\n                );\n              case \"SingleDate\":\n                return (\n                  <SingleDate\n                    key={index}\n                    {...item}\n                    className={cls.join(\" \")}\n                    dateFormat={\n                      item.dateFormat\n                        ? item.dateFormat\n                        : undefined\n                    }\n                    defaultValue={\n                      filter[item.name]\n                        ? filter[item.name]\n                        : null\n                    }\n                    onChange={_onChangeData}\n                    value={filter[item.name]}\n                  />\n                );\n              case \"MultiSelect\":\n              case \"SingleSelect\":\n                return (\n                  <Select\n                    key={index}\n                    {...item}\n                    type={item.componentType}\n                    defaultSelectedRowKeys={\n                      filter[item.name]\n                        ? filter[item.name]\n                        : null\n                    }\n                    selectedRowKeys={filter[item.name] ? filter[item.name] : []}\n                    className={cls.join(\" \")}\n                    onChangeKeys={_onChangeData}\n                    defaultValue={\n                      filter[item.name]\n                        ? filter[item.name]\n                        : null\n                    }\n                    value={filter[item.name]}\n                  />\n                );\n              case \"Custom\":\n                return (\n                  <React.Fragment key={index}>\n                    {\n                      item.render({\n                        onChange: _onChangeData,\n                        defaultValue: filter[item.name]\n                          ? filter[item.name]\n                          : null,\n                        value: filter[item.name]\n                      })\n                    }\n                  </React.Fragment>);\n              default:\n                return null;\n            }\n          })}\n          <Tooltip title={applyFilterTooltip}>\n            <Button\n              type='primary'\n              size={applyFilterSize}\n              style={{ marginLeft: \"auto\" }}\n              onClick={_applyFilter}\n            >\n              {applyFilterRender}\n            </Button>\n          </Tooltip>\n          <Tooltip title={resetFilterTooltip}>\n            <Button\n              size={resetFilterSize}\n              style={{ marginLeft: \"10px\" }}\n              onClick={_resetFilter}\n            >\n              {resetFilterRender}\n            </Button>\n          </Tooltip>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\nFilterPanel.propTypes = {\n\n  /** Тест Tooltip для кнопки \"Применить фильтр\" */\n  applyFilterTooltip: PropTypes.string,\n\n  /** Размер кнопки \"Применить фильтр\" ['small', 'middle', 'large'] */\n  applyFilterSize: PropTypes.oneOf([\"small\", \"middle\", \"large\"]),\n\n  /** Строка / функция / элемент для отображения в кнопке \"Применить фильтр\" */\n  applyFilterRender: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.string\n  ]),\n\n  /** Тип бордера панели (по умолчанию 'none')\n   * ['all', 'none', 'top', 'left', 'bottom', 'right', 'top-bottom', 'left-right'] */\n  borderStyle: PropTypes.oneOf([\n    \"all\",\n    \"none\",\n    \"top\",\n    \"left\",\n    \"bottom\",\n    \"right\",\n    \"top-bottom\",\n    \"left-right\"\n  ]),\n\n  /** Объект фильтра по умолчанию */\n  defaultFilter: PropTypes.object,\n\n  /** Конфигурация панели фильтров */\n  configFilter: PropTypes.arrayOf(PropTypes.object),\n\n  /** Событие по кнопке выполнить фильтр */\n  onApplyFilter: PropTypes.func,\n\n  /** Событие по изменение объекта фильтра */\n  onChangeFilter: PropTypes.func,\n\n  /** Тест Tooltip для кнопки \"Сбросить фильтр\" */\n  resetFilterTooltip: PropTypes.string,\n\n  /** Размер кнопки \"Сбросить фильтр\" ['small', 'middle', 'large'] */\n  resetFilterSize: PropTypes.oneOf([\"small\", \"middle\", \"large\"]),\n\n  /** Строка / функция / элемент для отображения в кнопке \"Сбросить фильтр\" */\n  resetFilterRender: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.string\n  ])\n};\n\nFilterPanel.defaultProps = {\n  applyFilterTooltip: \"Применить фильтр\",\n  applyFilterSize: \"middle\",\n  applyFilterRender: \"Применить\",\n  borderStyle: \"none\",\n  defaultFilter: {},\n  configFilter: [],\n  onApplyFilter: noop,\n  onChangeFilter: noop,\n  resetFilterTooltip: \"Сбросить фильтр\",\n  resetFilterSize: \"middle\",\n  resetFilterRender: \"Сбросить\"\n};\n\nexport default FilterPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {CloseCircleOutlined} from '@ant-design/icons';\nimport {rtPrefix} from '../../../utils/variables';\n\nconst SelectionList = (props) => {\n\tconst {selectedRowObjects, rowRender, onClickDropSelect} = props;\n\n\t// console.log(\"SelectionList typeof -> \", typeof(rowRender));\n\treturn (\n\t\t<div className={`${rtPrefix}-table-selected-rows`}>\n\t\t\t{selectedRowObjects && selectedRowObjects.length > 0 ? (\n\t\t\t\t<ul>\n\t\t\t\t\t{selectedRowObjects.map((item, index) => (\n\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t{/*{(typeof(rowRender) === 'string') ? <div>{item[rowRender]}</div> : rowRender }*/}\n\t\t\t\t\t\t\t{typeof rowRender === 'function' ? (\n\t\t\t\t\t\t\t\trowRender({rowData: item, rowIndex: index})\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>{item[rowRender]}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<div onClick={() => onClickDropSelect(item)}>\n\t\t\t\t\t\t\t\t<CloseCircleOutlined />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t) : (\n\t\t\t\t<div>Нет выбранных записей</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nSelectionList.propTypes = {\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { rowData, rowIndex }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n\t/** Список выделенных объектов */\n\tselectedRowObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Событие удаления элемента */\n\tonClickDropSelect: PropTypes.func.isRequired,\n};\n\nSelectionList.defaultProps = {};\n\nexport default SelectionList;\n","import React, {useRef, forwardRef, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {notification} from 'antd';\nimport SortOrder from 'react-base-table/lib/SortOrder';\nimport BaseTable, {AutoResizer, callOrReturn, Column} from 'react-base-table';\nimport {empty, overlay} from './defaultSettings';\nimport SelectionHead from '../Table/Selectable/SelectionHead';\nimport SelectionCell, {parentAnalysis} from '../Table/Selectable/SelectionCell';\nimport CommandPanel from '../CommandPanel/CommandPanel';\nimport FilterPanel from '../FilterPanel/FilterPanel';\nimport SelectionList from '../Table/SelectionList/SelectionList';\nimport {rtPrefix} from '../../utils/variables';\nimport {\n\tflatten,\n\tgenerateUUID,\n\tgetTableRowKeys,\n\tfindNodeByRowKey,\n\tnoop,\n\tgetTableRowObjects, notificationError\n} from \"../../utils/baseUtils\";\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../../redux/rtd.actions\";\nimport FormItems from \"../Form/FormItems\";\n\nconst Table = forwardRef((props, ref) => {\n\t/** Состояние первоначалной настройки компонента*/\n\tconst [mounted, setMounted] = useState(false);\n\t/** Наличие на сервере еще данных */\n\tconst [hasMore, setHasMore] = useState(true);\n\t/** Индикатор загрузки данных */\n\tconst [loading, setLoading] = useState(false);\n\n\t/** Indoor control */\n\tconst [_rows, _setRows] = useState([]);\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n\tconst [_searchValue, setSearchValue] = useState({});\n\tconst [_filter, setFilter] = useState(false);\n\tconst [_sortBy, setSortBy] = useState(false);\n\n\t/** Selectable States */\n\tconst [selectAll, setSelectAll] = useState(false);\n\n\t/** Tree States */\n\tconst [_indeterminateRowKeys, setIndeterminateRowKeys] = useState([]);\n    const [_expandedRowKeys, setExpandedRowKeys] = useState([]);\n\n    const [_totalCountRows, setTotalCountRows] = useState(0);\n\n    const [_footerShow, _setFooterShow] = useState(false);\n\n    const tableRef = useRef();\n\n\tconst {\n\t\t/** Def values */\n\t\tdefaultRows,\n\t\tdefaultSelectedRowKeys,\n\t\tdefaultSearchValue,\n\t\tdefaultFilter,\n\t\tdefaultSortBy,\n\n\t\t/** Outdoor control */\n\t\trows,\n\t\tsetRows,\n\t\tselectedRowKeys,\n\t\tsearchValue,\n\t\tfilter,\n\t\tsortBy,\n\n\t\t/** Required */\n\t\tcolumns,\n\t\ttype,\n\n\t\t/** Base Props */\n\t\tautoDeleteRows,\n\t\trowKey,\n\n\t\t/** View Props */\n\t\tempty,\n\t\tfixWidthColumn,\n\t\tfooterHeight,\n\t\tfooterShow,\n        footerTitles,\n\t\t// footerProps,\n\t\theaderHeight,\n\t\trowHeight,\n\t\tzebraStyle,\n\t\trowRenderer,\n\t\testimatedRowHeight,\n\n\t\t/** Load Data Props */\n\t\tloadThreshold,\n\t\tpageSize,\n\t\trequestLoadRows,\n        requestLoadCount,\n\t\tsearchParamName,\n\n\t\t/** Selectable Props */\n\t\tselectable,\n\n\t\t/** Tree Props */\n\t\tnodeAssociated,\n\t\texpandColumnKey,\n\t\texpandParentKey,\n\t\texpandLazyLoad,\n\t\texpandDefaultAll,\n\n\t\t/** Events */\n\t\tonRowClick,\n\t\tonRowDoubleClick,\n\t\tonRowExpand,\n\t\tonSelectedRowsChange,\n\t\tonExpandedRowsChange,\n\n\t\t/** SELECTED PANEL */\n\t\tshowSelection,\n\t\trowRenderShowSelection,\n\n\t\t/** REDUX PROPS */\n\t\tdispatchPath,\n\t\tsubscribe,\n\t} = props;\n\n\t// console.log('props.commandPanelProps => ', props.commandPanelProps);\n\tconst commandPanelProps = {\n\t\t...CommandPanel.defaultProps,\n\t\t...props.commandPanelProps,\n\t};\n\tconst filterPanelProps = {\n\t\t...FilterPanel.defaultProps,\n\t\t...props.filterPanelProps,\n\t};\n\n\tconst footerProps = {\n\t\t...Table.defaultProps.footerProps,\n\t\t...props.footerProps,\n\t};\n\n\tconst selectedDispatchPath = dispatchPath && `${dispatchPath}.selected`;\n\tconst rowsDispatchPath = dispatchPath && `${dispatchPath}.rows`;\n\n\n\tuseEffect(() => {\n        // console.log(\"Инициализация дефолтных значений \");\n        // console.log(\"Инициализация дефолтных значений defaultSelectedRowKeys > \", defaultSelectedRowKeys);\n\n\t\t// Инициализация дефолтных значений\n\t\t// _setRows(defaultRows);\n\t\t_setRowsHandler(defaultRows);\n\t\tsetSelectedRowKeys(defaultSelectedRowKeys);\n\t\tsetSearchValue(defaultSearchValue);\n\t\tsetFilter(defaultFilter);\n\t\tsetSortBy(defaultSortBy);\n\t\tsetSelectAll(\n\t\t\tdefaultRows.length > 0 &&\n\t\t\t\tdefaultRows.length === defaultSelectedRowKeys.length\n\t\t);\n\t\t// Определение нужно ли отображать подвал\n\t\t_setFooterShow(\n\t\t\t(footerProps.showElements.length ||\n\t\t\tfooterProps.leftCustomSideElement ||\n\t\t\tfooterProps.centerCustomSideElement ||\n\t\t\tfooterProps.rightCustomSideElement));\n\n\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t// Открытие всех нод\n\t\t\tif (expandDefaultAll)\n\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\tflatten(getTableRowKeys(defaultRows, rowKey))\n\t\t\t\t);\n\t\t\t// Установка квадратиков на нужных нодах\n\t\t\tif (defaultSelectedRowKeys && defaultSelectedRowKeys.length > 0) {\n\t\t\t\tlet flatRows = flatten(getTableRowKeys(defaultRows, rowKey));\n\t\t\t\tlet selectedRow = flatRows.filter((item) =>\n\t\t\t\t\tdefaultSelectedRowKeys.includes(item[rowKey])\n\t\t\t\t);\n\t\t\t\tlet _indeterminateRowKeys = [];\n\t\t\t\tselectedRow.forEach((item) => {\n\t\t\t\t\tconst [ss, ii] = parentAnalysis({\n\t\t\t\t\t\trowData: item,\n\t\t\t\t\t\trowKey,\n\t\t\t\t\t\tparentKey: expandParentKey,\n\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t\tnodeAssociated,\n\t\t\t\t\t\ttreeData: defaultRows,\n\t\t\t\t\t\tselectedRowKeys: defaultSelectedRowKeys,\n\t\t\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t\t\t\t});\n\t\t\t\t\t_indeterminateRowKeys.push(...ii);\n\t\t\t\t});\n\t\t\t\tsetIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\n\t\t\t}\n\t\t}\n\n\t\tif (type !== 'localSide') {\n\t\t\t_dataProcessing({\n\t\t\t\tsortBy: defaultSortBy,\n\t\t\t\tfilter: defaultFilter,\n\t\t\t\tsearchLine: defaultSearchValue,\n\t\t\t\treload: true,\n\t\t\t});\n\t\t}\n\t\t// console.log(\"Table => props \", props);\n\t\tsetMounted(true);\n\t\tif (ref && typeof ref === 'function') ref({reloadData});\n\t\telse if (ref && typeof ref === 'object') ref.current = {reloadData};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (type === 'localSide') {\n\t\t\t// console.log(\"Control useEffect => \", rows, selectedRowKeys, searchValue, filter, sortBy);\n\t\t\t// _setRows(rows);\n\t\t\t_setRowsHandler(rows);\n\t\t\tsetSelectedRowKeys(selectedRowKeys);\n\t\t\tsetSearchValue(searchValue);\n\t\t\tsetFilter(filter);\n\t\t\tsetSortBy(sortBy);\n\t\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t\t// Открытие всех нод\n\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\tsetExpandedRowKeys(flatten(getTableRowKeys(rows, rowKey)));\n\t\t\t}\n\t\t}\n    }, [rows, selectedRowKeys, searchValue, filter, sortBy]);\n\n\t/** Подписка на изменение props[subscribe.name] в сторе */\n\tuseEffect( () => {\n\t\tif(subscribe.name) {\n\t\t\t// console.log(\"Table => useEffect => subscribe.value \", props[subscribe.name]);\n\t\t\tsubscribe.onChange && subscribe.onChange({value: props[subscribe.name], setReloadTable: reloadData});\n\t\t}\n\t}, [props[subscribe.name]]);\n\n\n\t/** BASE FUNCTIONS */\n\tconst _setRowsHandler = (rows) => {\n\t\t_setRows(rows);\n\t\trowsDispatch(rows);\n\t};\n\tconst setRowsHandler = (rows) => {\n\t\tsetRows(rows);\n\t\trowsDispatch(rows);\n\t};\n\tconst rowsDispatch = (rows) => {\n\t\trowsDispatchPath && props.setDateStore && props.setDateStore(rowsDispatchPath, rows);\n\t};\n\n\tconst reloadData = ({sortBy, filter, searchValue}) => {\n\t\t// console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\n        if(props.value && props.value.length > 0)\n            setSelectedRowKeys(props.value.map(item => item[rowKey]));\n        else\n            setSelectedRowKeys([]);\n\t\t// setSelectedRowKeys([]);\n\t\tif(sortBy) setSortBy(sortBy);\n\t\tif(filter) setFilter(filter);\n\t\tif(searchValue) setSearchValue(searchValue);\n\t\t_dataProcessing({\n\t\t\tsortBy: sortBy ? sortBy : _sortBy,\n\t\t\tfilter: filter ? filter : _filter,\n\t\t\tsearchLine: searchValue ? searchValue : _searchValue,\n\t\t\treload: true,\n\t\t});\n        // console.log(\"reloadData loading \", loading);\n    };\n\n\tconst _dataProcessing = (params) => {\n\t\t// console.log('_dataProcessing', params);\n\t\tconst {sortBy, filter, searchLine, expandRow, reload} = params;\n\t\tswitch (type) {\n\t\t\tcase 'infinity':\n\t\t\tcase 'serverSide':\n\t\t\t\tif ((hasMore || reload) && !loading) {\n\t\t\t\t\tsetLoading(true);\n\t\t\t\t\tconst pageNum = reload\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: Math.floor(_rows.length / pageSize);\n\t\t\t\t\tconst params = {\n\t\t\t\t\t\tpage: pageNum,\n\t\t\t\t\t\tsize: pageSize,\n\t\t\t\t\t\tsort:\n\t\t\t\t\t\t\tsortBy && sortBy.key\n\t\t\t\t\t\t\t\t? sortBy.key + ',' + sortBy.order\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t};\n\t\t\t\t\tconst dataQuery = {\n                        ...filter,\n                        ...(searchLine\n                            ? {[searchParamName]: searchLine}\n                            : null),\n                    };\n\t\t\t\t\t// console.log('dataQuery', dataQuery);\n\n                    if(type === 'infinity' && reload && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad) {\n                        requestLoadCount({\n                            params,\n                            data: dataQuery,\n                        })\n                            .then((response) => {\n                                // console.log(\"infinity then response\", response);\n                                // const result = response.data;\n                                setTotalCountRows(response.data);\n                            })\n\t\t\t\t\t\t\t.catch(error =>\n\t\t\t\t\t\t\t\tnotificationError(error, 'Ошибка получения количества записей по фильтру') );\n                    }\n\n                    // console.log('requestLoadRows => ', typeof requestLoadRows);\n                    // if(typeof requestLoadRows !== 'function'){\n                    //     setLoading(false);\n                    // }\n                    requestLoadRows({\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tdata: dataQuery,\n\t\t\t\t\t})\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\t\t\tconst result = response.data;\n\t\t\t\t\t\t\t// Если иерархия и ленивая, то ищим кому добавть полученные записи\n\t\t\t\t\t\t\tif (!!expandColumnKey && expandLazyLoad) {\n\t\t\t\t\t\t\t\t// lastExpandRow//, setLastExpandRow\n\t\t\t\t\t\t\t\t// console.log('!!expandColumnKey && expandLazyLoad', result);\n\t\t\t\t\t\t\t\tif (pageNum === 0) {\n\t\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t\t{[rowKey]: generateUUID()},\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t// _setRows(result);\n\t\t\t\t\t\t\t\t\t_setRowsHandler(result);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlet newRows = [..._rows];\n\t\t\t\t\t\t\t\t\t// (data, rowKey, rowValue)\n\t\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t\t{[rowKey]: generateUUID()},\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tlet node = findNodeByRowKey(\n\t\t\t\t\t\t\t\t\t\tnewRows,\n\t\t\t\t\t\t\t\t\t\trowKey,\n\t\t\t\t\t\t\t\t\t\texpandRow[rowKey]\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tnode.children = result;\n\t\t\t\t\t\t\t\t\t// console.log('newRows -> ', newRows);\n\t\t\t\t\t\t\t\t\t// _setRows(newRows);\n\t\t\t\t\t\t\t\t\t_setRowsHandler(newRows);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (result && result.length < pageSize) {\n\t\t\t\t\t\t\t\t\tsetHasMore(false);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetHasMore(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpageNum === 0\n\t\t\t\t\t\t\t\t\t? _setRowsHandler(result) // _setRows\n\t\t\t\t\t\t\t\t\t: _setRowsHandler(_rows.concat(result)); // _setRows\n\n\t\t\t\t\t\t\t\t// console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\n\t\t\t\t\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\t\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\t\t\t\t\t\tflatten(getTableRowKeys(result, rowKey))\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t\t\t\t\t_setRowsHandler(_rows); // _setRows\n\t\t\t\t\t\t\t// setHasMore(false);\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t// case 'serverSide':\n\t\t\t// \tsetLoading(true);\n\t\t\t// \tbreak;\n\t\t\tcase 'localSide':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t/** Событие выделение одной строки в режиме без галочек */\n\tconst _rowEventHandlers = {\n\t\tonClick: ({rowData, rowIndex, rowKey, event}) => {\n\t\t\tif (!selectable) {\n\t\t\t\t// if (_selectedRowKeys.includes(rowKey)) {\n\t\t\t\t//     setSelectedRowKeys([]);\n\t\t\t\t//     // setSelectedRow([]);\n\t\t\t\t//     // setSelectedRowObjects([]);\n\t\t\t\t//     onRowClick({\n\t\t\t\t//         selected: false,\n\t\t\t\t//         rowData,\n\t\t\t\t//         rowIndex,\n\t\t\t\t//         rowKey,\n\t\t\t\t//     });\n\t\t\t\t//     onSelectedRowsChange([]);\n\t\t\t\t// } else {\n\t\t\t\t// console.log('_rowEventHandlers -> onClick', rowKey, rowIndex);\n\t\t\t\tconst newRowObject = {\n\t\t\t\t\trowData: {...rowData},\n\t\t\t\t\trowIndex: rowIndex,\n\t\t\t\t\trowKey: rowKey,\n\t\t\t\t};\n\t\t\t\t// if(type !== 'localSide')\n\t\t\t\tsetSelectedRowKeys([rowKey]);\n\t\t\t\t// setSelectedRow(newRowObject);\n\t\t\t\t// setSelectedRowObjects([newRowObject]);\n\t\t\t\tselectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, rowData);\n\t\t\t\tonRowClick({\n\t\t\t\t\tselected: true,\n\t\t\t\t\t...newRowObject,\n\t\t\t\t});\n\t\t\t\tonSelectedRowsChange([rowKey], [rowData]);\n\t\t\t\t// }\n\t\t\t}\n\t\t},\n\t\tonDoubleClick: ({rowData, rowIndex, rowKey}) => {\n\t\t\t// console.log('onDoubleClick', rowData, rowIndex, rowKey);\n\t\t\tonRowDoubleClick({rowData, rowIndex, rowKey});\n\t\t},\n\t\t// onContextMenu: console.log('context menu'),\n\t\t// onMouseEnter: console.log('mouse enter'),\n\t\t// onMouseLeave: console.log('mouse leave'),\n\t};\n\n\t/** Событие при сортировке */\n\tconst _onColumnSort = (sortBy) => {\n\t\t// console.log(\"sortBy\", sortBy);\n\t\ttableRef.current.scrollToRow(0, 'auto');\n\t\tsetSortBy(sortBy);\n\n\t\t// Для серверной сортировки - сбросить выделение\n\t\tif (type !== 'localSide') {\n\t\t\tsetSelectedRowKeys([]);\n\t\t}\n\t\tconst loadParams = {\n\t\t\tsortBy: sortBy,\n\t\t\tfilter: _filter,\n\t\t\tsearchLine: _searchValue,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t};\n\n\t/** Получение колонок таблицы */\n\tconst _getColumns = () => {\n\t\tlet _columns = [...columns];\n\n\t\t/** Создаем колонку с галочками (если надо) */\n\t\tif (selectable) {\n\t\t\tconst selectColumn = {\n\t\t\t\tkey: '__selection__',\n\t\t\t\theaderRenderer: SelectionHead,\n\t\t\t\tcellRenderer: SelectionCell,\n\t\t\t\twidth: 40,\n\t\t\t\tflexShrink: 0,\n\t\t\t\tresizable: false,\n\t\t\t\tfrozen: 'left',\n\t\t\t\trowKey: rowKey,\n\t\t\t\tparentKey: expandParentKey,\n\t\t\t\tselectedRowKeys: _selectedRowKeys,\n\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t\t\tnodeAssociated: nodeAssociated,\n\t\t\t\tonChange: _onChangeSelectHandler,\n\t\t\t\tselectAll: selectAll,\n\t\t\t\tonSelectAll: _onSelectAllHandler,\n\t\t\t};\n\t\t\t_columns.unshift(selectColumn);\n\t\t}\n\t\treturn _columns;\n\t};\n\n\t/** VIEW FUNCTIONS */\n\n\tconst _footer = (\n\t\t<React.Fragment>\n\t\t\t{_footerShow ? (\n\t\t\t\t\t<React.Fragment>\n                        {/*className={'BaseTable__footer__counter'}>*/}\n\t\t\t\t\t\t<div key={'footer-left-custom-side'} className={'left-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.leftCustomSideElement ? <FormItems items={footerProps.leftCustomSideElement} /> : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-center-custom-side'} className={'center-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.centerCustomSideElement ? <FormItems items={footerProps.centerCustomSideElement} /> : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-right-custom-side'} className={'right-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.rightCustomSideElement ? <FormItems items={footerProps.rightCustomSideElement} /> : null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{selectable ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('selected')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.selectedTitle} {_selectedRowKeys.length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('loaded')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.loadedTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{footerProps.showElements.includes('total')\n\t\t\t\t\t\t\t? type === 'infinity' && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad\n\t\t\t\t\t\t\t\t? <span>{footerProps.totalTitle} {_totalCountRows}</span>\n\t\t\t\t\t\t\t\t: <span>{footerProps.totalTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t: null}\n\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n\n\t/** Событие при рендере для стилизации */\n\tconst _rowClassName = ({rowData, rowIndex}) => {\n\t\tconst {rowClassName} = props;\n\t\treturn [\n\t\t\trowClassName,\n\t\t\t_selectedRowKeys.includes(rowData[rowKey]) && 'row-selected',\n\t\t\tzebraStyle ? (rowIndex % 2 === 0 ? 'even' : 'odd') : '',\n\t\t\t'bordered'\n\t\t].join(' ')\n\t};\n\n\t/** LOAD DATA FUNCTIONS */\n\tconst onEndReached = () => {\n\t\tlet selectAll;\n\t\tconst selectLength = _selectedRowKeys.length;\n\t\tif (selectLength === 0) selectAll = false;\n\t\telse if (selectLength > 0) selectAll = null;\n\n\t\tsetSelectAll(selectAll);\n\n\t\tif (type === 'infinity') {\n\t\t\tconst loadParams = {\n\t\t\t\tsortBy: _sortBy,\n\t\t\t\tfilter: _filter,\n\t\t\t\tsearchLine: _searchValue,\n\t\t\t\treload: false,\n\t\t\t};\n\t\t\t_dataProcessing(loadParams);\n\t\t}\n\t};\n\n\t/** SELECTABLE FUNCTIONS */\n\n\t/** Событие при изменении галочки одной строки */\n\tconst _onChangeSelectHandler = ({\n\t\tselected,\n\t\t_selectedRow,\n\t\t_selectAll,\n\t\t_selectedRowKeys,\n\t\t_selectedRowObjects,\n\t\t_indeterminateRowKeys,\n\t}) => {\n\t\tsetSelectedRowKeys(_selectedRowKeys);\n\t\tsetIndeterminateRowKeys(_indeterminateRowKeys);\n\t\tsetSelectAll(_selectAll);\n\t\t// setSelectedRow(_selectedRow);\n\n\t\t// let newSelectedObjects = [];\n\t\t// if (selected) {\n\t\t// \tif (!!expandColumnKey)\n\t\t// \t\tnewSelectedObjects = flatten(\n\t\t// \t\t\tgetTableRowObjects(rows, rowKey)\n\t\t// \t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]));\n\t\t// \telse\n\t\t// \t\tnewSelectedObjects = selectedRowObjects.concat([\n\t\t// \t\t\t_selectedRow.rowData,\n\t\t// \t\t]);\n\t\t// \t// setSelectedRowObjects(newSelectedObjects);\n\t\t// } else {\n\t\t// \tnewSelectedObjects = selectedRowObjects.filter(\n\t\t// \t\t(item) => item[rowKey] !== _selectedRow.rowData[rowKey]\n\t\t// \t);\n\t\t// \t// setSelectedRowObjects(newSelectedObjects);\n\t\t// }\n\t\t// console.log(\"_handleSelectChange\", props);\n\t\t// dispatchPath && props.setTableSelectedRow && props.setTableSelectedRow(dispatchPath, _selectedRow.rowData);\n\t\tselectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, _selectedRowObjects);\n\t\tonRowClick({\n\t\t\tselected,\n\t\t\trowData: _selectedRow.rowData,\n\t\t\trowIndex: _selectedRow.rowIndex,\n\t\t\trowKey,\n\t\t});\n\t\tonSelectedRowsChange(_selectedRowKeys, _selectedRowObjects);\n\t};\n\n\t/** Событие при изменении галочки \"Выделить все\" */\n\tconst _onSelectAllHandler = ({selected, rowKeys, rowObjects}) => {\n\t\tconst selectedKeys = selected ? rowKeys : [];\n\t\tsetSelectedRowKeys(selectedKeys);\n\t\tsetIndeterminateRowKeys([]);\n\t\tsetSelectAll(selected);\n\t\tselectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, selected ? rowObjects : []);\n\t\t// setSelectedRowObjects(rows);\n\t\t// console.log(\"_handleSelectAll\", selectedKeys);\n\t\tonSelectedRowsChange(selectedKeys, rowObjects);\n\t};\n\n\t/** TREE FUNCTIONS */\n\n\t/** Анализ дерева на пердмет квадратиков\n\t * Нужно для выделения по умолчанию свернутых элементов */\n\t// const _postLoadTreeAnalysis = () => {\n\t//     if (!!expandColumnKey && !expandLazyLoad) {\n\t//         let _indeterminateRowKeys = [];\n\t//         // console.log(\"mounted->selectedRowObjects: \", selectedRowObjects);\n\t//         selectedRowObjects.map((item) => {\n\t//             const [ss, ii] = parentAnalysis({\n\t//                 rowData: item,\n\t//                 rowKey,\n\t//                 parentKey: expandParentKey,\n\t//                 checked: true,\n\t//                 nodeAssociated,\n\t//                 treeData: _rows,\n\t//                 selectedRowKeys: _selectedRowKeys,\n\t//                 indeterminateRowKeys: _indeterminateRowKeys,\n\t//             });\n\t//             _indeterminateRowKeys.push(...ii);\n\t//         });\n\t//         setIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\n\t//     }\n\t// }\n\n\tconst _onExpandedRowsChange = (expandedRowKeys) => {\n\t\t// console.log(\"_onExpandedRowsChange\", expandedRowKeys);\n\t\tonExpandedRowsChange(expandedRowKeys);\n\t};\n\tconst _onRowExpand = ({expanded, rowData, rowIndex, rowKey}) => {\n\t\t// console.log(\"_onRowExpand\", rowData, expanded, rowIndex, rowKey);\n\t\tif (expanded) {\n\t\t\tsetExpandedRowKeys([..._expandedRowKeys, rowKey]);\n\n\t\t\tif (expandLazyLoad) {\n\t\t\t\tconst loadParams = {\n\t\t\t\t\tsortBy: _sortBy,\n\t\t\t\t\tfilter: {..._filter, [expandParentKey]: rowKey},\n\t\t\t\t\tsearchLine: _searchValue,\n\t\t\t\t\treload: false,\n\t\t\t\t\texpandRow: rowData,\n\t\t\t\t};\n\t\t\t\t// _callPropsOnLoad(loadParams);\n\t\t\t\t_dataProcessing(loadParams);\n\t\t\t}\n\t\t} else {\n\t\t\tlet expandedRowKeys = [..._expandedRowKeys];\n\t\t\tlet allChildKeys = flatten(\n\t\t\t\tgetTableRowKeys(rowData.children, props.rowKey)\n\t\t\t);\n\t\t\tallChildKeys.push(rowKey);\n\t\t\t// console.log('allChildKeys', allChildKeys);\n\t\t\tsetExpandedRowKeys(\n\t\t\t\texpandedRowKeys.filter((item) => !allChildKeys.includes(item))\n\t\t\t);\n\t\t}\n\t\tonRowExpand({expanded, rowData, rowIndex, rowKey});\n\t};\n\n\t/** COMMAND PANEL FUNCTIONS */\n\n\tconst _getDisabledElementsOfCommandPanel = () => {\n\t\t// console.log('commandPanelProps', commandPanelProps);\n\t\tlet _disabledElements = [...commandPanelProps.disabledElements];\n\t\tif (type === 'infinity') {\n\t\t\t_disabledElements.push('up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => infinity');\n        }\n\t\tif (selectable && _selectedRowKeys.length > 1) {\n\t\t\t_disabledElements.push('addAsCopy', 'edit', 'up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => selectable');\n        }\n\t\tif (_selectedRowKeys.length === 0) {\n\t\t\t_disabledElements.push('addAsCopy', 'edit', 'delete', 'up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => NO select');\n        }\n\t\t// if (expandColumnKey) {\n\t\t\t//|| !selectedRow) {\n\t\t\t// _disabledElements.push('up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => expandColumnKey');\n        // }\n        // console.log('_getDisabledElementsOfCommandPanel => ', _disabledElements, _selectedRowKeys);\n\n        return [...new Set(_disabledElements)];\n\t};\n\n\tconst _onClickAddAsCopy = (event) => {\n\t\t// console.log(\"_onClickAddAsCopy\", selectedRow);\n\t\tcommandPanelProps.onClickAddAsCopy(\n\t\t\tevent,\n\t\t\tfindNodeByRowKey(_rows, rowKey, _selectedRowKeys[0])\n\t\t);\n\t};\n\n\tconst _onClickEdit = (event) => {\n\t\t// console.log(\"_onClickEdit\", selectedRow);\n\t\tcommandPanelProps.onClickEdit(event, {\n\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t});\n\t\t// props.onClickEdit(event, selectedRow);\n\t};\n\n\tconst _onClickDelete = (event) => {\n\t\t// console.log(\"_onClickDelete\", autoDeleteRows, selectedRowKeys);\n\t\tif (autoDeleteRows) {\n\t\t\tif (type === 'localSide') {\n\t\t\t\tsetRowsHandler(\n\t\t\t\t\t_rows.filter(\n\t\t\t\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey])\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t_setRowsHandler(\n\t\t\t\t\t_rows.filter(\n\t\t\t\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey])\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tsetSelectedRowKeys([]);\n\t\t}\n\t\tcommandPanelProps.onClickDelete(event, _selectedRowKeys);\n\t};\n\n\tconst loop = (data, key, callback) => {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tif (data[i][rowKey] === key) {\n\t\t\t\t// console.log(`Selected => index: [${i}], path: [${data[i].path}]`, data);\n\t\t\t\treturn callback(data[i], i, data);\n\t\t\t} else {\n\t\t\t\t// console.log(`Other => index: [${i}], path: [${data[i].path}]`);\n\t\t\t}\n\t\t\tif (data[i].children) {\n\t\t\t\tloop(data[i].children, key, callback);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst _onClickUp = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index - 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data);\n\t\t\tcommandPanelProps.onClickUp(event, {\n\t\t\t\trowIndex: newRowIndex,\n\t\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t}, data);\n\t\t})\n\t};\n\n\tconst _onClickDown = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index + 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data);\n\t\t\tcommandPanelProps.onClickDown(event, {\n\t\t\t\trowIndex: newRowIndex,\n\t\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t}, data);\n\t\t})\n\t};\n\n\tconst _getNewIndexRow = (oldIndex, newIndex) =>\n\t\tnewIndex >= 0 && newIndex < _rows.length ? newIndex : oldIndex;\n\n\tconst _changeIndexRow = (oldIndex, newIndex, arr, data) => {\n\t\tif (newIndex >= 0 && newIndex < arr.length) {\n\t\t\t// let arr = [..._rows]; // Копируем массив\n\t\t\tconst item = arr.splice(oldIndex, 1); // Удаляем элемент со старого места\n\t\t\t// console.log('_changeIndexRow => ',item);\n\t\t\tarr.splice(newIndex > 0 ? newIndex : 0, 0, item[0]); // Ставим элемент на новое место\n\t\t\t// console.log(\"_changeIndexRow\", item[0]);\n\t\t\tif (type === 'localSide') {\n\t\t\t\tsetRowsHandler(data);\n\t\t\t} else {\n\t\t\t\t_setRowsHandler(data);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst _onSearch = (searchLine, e) => {\n        e.preventDefault();\n\t\t// console.log(\"_onSearch\", searchLine);\n        tableRef.current.scrollToRow(0, 'auto');\n\t\tsetSearchValue(searchLine);\n\t\tconst loadParams = {\n\t\t\tsortBy: _sortBy,\n\t\t\tfilter: _filter,\n\t\t\tsearchLine: searchLine,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t\tcommandPanelProps.onSearch(searchLine);\n\t};\n\n\t/** FILTER PANEL FUNCTIONS */\n\n\tconst _onChangeFilter = (filter) => {\n\t\t// console.log('_onChangeFilter', filter);\n\t\tsetHasMore(true);\n\t\tsetFilter(filter);\n\t\tfilterPanelProps.onChangeFilter(filter);\n\t};\n\tconst _onApplyFilter = (filter) => {\n\t\t// console.log('_onApplyFilter', filter);\n\t\tconst loadParams = {\n\t\t\tsortBy: _sortBy,\n\t\t\tfilter: filter,\n\t\t\tsearchLine: _searchValue,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t\tfilterPanelProps.onApplyFilter(filter);\n\t};\n\n\t/** SELECTED PANEL */\n\n\tconst _onClickDropSelectHandler = (dropObject) => {\n\t\tconst newSelectedKeys = _selectedRowKeys.filter(\n\t\t\t(item) => item !== dropObject[rowKey]\n\t\t);\n\t\tsetSelectedRowKeys(newSelectedKeys);\n\t\tonSelectedRowsChange(newSelectedKeys);\n\t};\n\n\t// const rowProps = {\n\t//     // tagName: 'button',\n\t//     // onClick: e => {\n\t//     //     e.preventDefault();\n\t//     //     e.stopPropagation();\n\t//     //     console.log(`You clicked row onClick`)\n\t//     // },\n\t//     onDoubleClick: e => {\n\t//         e.preventDefault();\n\t//         e.stopPropagation();\n\t//         console.log(`You clicked row onDoubleClick`)\n\t//     }\n\t// };\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`${rtPrefix}-table`}\n\t\t\tstyle={{width: '100%', height: '100%'}}\n\t\t>\n\t\t\t<div className={`${rtPrefix}-table-top-panel`}>\n\t\t\t\t<CommandPanel\n\t\t\t\t\t{...commandPanelProps}\n\t\t\t\t\tdefaultValueSearch={defaultSearchValue}\n\t\t\t\t\tdisabledElements={_getDisabledElementsOfCommandPanel()}\n\t\t\t\t\tonClickAddAsCopy={_onClickAddAsCopy}\n\t\t\t\t\tonClickDelete={_onClickDelete}\n\t\t\t\t\tonClickDown={_onClickDown}\n\t\t\t\t\tonClickEdit={_onClickEdit}\n\t\t\t\t\tonClickUp={_onClickUp}\n\t\t\t\t\tonSearch={_onSearch}\n\t\t\t\t/>\n\t\t\t\t{/*{!filter ? (*/}\n\t\t\t\t<FilterPanel\n\t\t\t\t\t{...filterPanelProps}\n\t\t\t\t\tdefaultFilter={defaultFilter}\n\t\t\t\t\tonChangeFilter={_onChangeFilter}\n\t\t\t\t\tonApplyFilter={_onApplyFilter}\n\t\t\t\t/>\n\t\t\t\t{/*) : null}*/}\n\t\t\t</div>\n\t\t\t<div className={`${rtPrefix}-baseTable`}>\n\t\t\t\t<AutoResizer>\n\t\t\t\t\t{({width, height}) => (\n\t\t\t\t\t\t<BaseTable\n\t\t\t\t\t\t\tref={tableRef}\n\t\t\t\t\t\t\t/** Required */\n\t\t\t\t\t\t\tcolumns={_getColumns()}\n\t\t\t\t\t\t\tdata={_rows}\n\t\t\t\t\t\t\t/** Control Props */\n\t\t\t\t\t\t\tsortBy={_sortBy}\n\t\t\t\t\t\t\t/** Base Props */\n\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\trowKey={rowKey}\n\t\t\t\t\t\t\t// rowProps={rowProps}\n\n\t\t\t\t\t\t\t/** View Props */\n\t\t\t\t\t\t\trowClassName={_rowClassName}\n\t\t\t\t\t\t\temptyRenderer={empty}\n\t\t\t\t\t\t\tfixed={fixWidthColumn}\n\t\t\t\t\t\t\tfooterHeight={_footerShow ? footerProps.height : 0}\n\t\t\t\t\t\t\theaderHeight={headerHeight}\n\t\t\t\t\t\t\trowHeight={rowHeight}\n\t\t\t\t\t\t\toverlayRenderer={loading ? overlay : null}\n\t\t\t\t\t\t\tfooterRenderer={_footer}\n\t\t\t\t\t\t\trowRenderer={rowRenderer}\n\t\t\t\t\t\t\testimatedRowHeight={estimatedRowHeight}\n\t\t\t\t\t\t\t/** Load Data Props */\n\t\t\t\t\t\t\tonEndReachedThreshold={loadThreshold}\n\t\t\t\t\t\t\tonEndReached={\n\t\t\t\t\t\t\t\ttype === 'infinity' ? onEndReached : undefined\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t/** Tree Props */\n\t\t\t\t\t\t\texpandColumnKey={expandColumnKey}\n\t\t\t\t\t\t\texpandedRowKeys={_expandedRowKeys}\n\t\t\t\t\t\t\t/** Events */\n\t\t\t\t\t\t\tonColumnSort={_onColumnSort}\n\t\t\t\t\t\t\trowEventHandlers={_rowEventHandlers}\n\t\t\t\t\t\t\tonExpandedRowsChange={_onExpandedRowsChange}\n\t\t\t\t\t\t\tonRowExpand={_onRowExpand}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</AutoResizer>\n\t\t\t</div>\n\t\t\t{showSelection && selectable && !expandColumnKey ? (\n\t\t\t\t<SelectionList\n\t\t\t\t\tonClickDropSelect={_onClickDropSelectHandler}\n\t\t\t\t\tselectedRowObjects={flatten(\n\t\t\t\t\t\tgetTableRowObjects(_rows, rowKey)\n\t\t\t\t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]))}\n\t\t\t\t\trowRender={rowRenderShowSelection}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</div>\n\t);\n});\n\nTable.propTypes = {\n\t/**\n\t * REQUIRED\n\t * */\n\n\t/** Столбцы таблицы */\n\tcolumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Тип таблицы\n\t * **infinity** - загрузка данных по скроллу. Фильтрация, сортировка и поиск через сервер.\n\t * **serverSide** - первичная загрузка таблицы с сервера. Фильтрация, сортировка и поиск через сервер. Lazy Load для дерева тоже тут.\n\t * **localSide** - полностью локальная таблица. Фильтрация, сортировка и поиск через локальный rows */\n\ttype: PropTypes.oneOf(['infinity', 'serverSide', 'localSide']).isRequired,\n\n\t/** Объект со свойствами Command Panel */\n\tcommandPanelProps: PropTypes.object,\n\n\t/** Объект со свойствами Filter Panel */\n\tfilterPanelProps: PropTypes.object,\n\n\t/**\n\t * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n\t * */\n\n\t/** Строки по умолчанию */\n\tdefaultRows: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Ключи выделенных по умолчанию строк */\n\tdefaultSelectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска по умолчанию строк */\n\tdefaultSearchValue: PropTypes.string,\n\n\t/** Объект фильтрации по умолчанию */\n\tdefaultFilter: PropTypes.object,\n\n\t/** Сортировка по умолчанию */\n\tdefaultSortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n\t * */\n\n\t/** Строки таблицы. Используется для контроля таблицы из вне. */\n\trows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Функция задания строк таблицы. */\n    setRows: PropTypes.func,\n\n\t/** Выделенные строки таблицы. */\n\tselectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Объект фильтрации */\n\tfilter: PropTypes.object,\n\n\t/** Объект сортировки */\n\tsortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * BASE PROPS\n\t * */\n\n\t/** Автоудаление строк из таблицы по кнопке в командной панели*/\n\tautoDeleteRows: PropTypes.bool,\n\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/**\n\t * VIEW PROPS\n\t * */\n\n\t/** Вывод когда нет данных */\n\tempty: PropTypes.element,\n\n\t/** Отображение загрузки данных */\n\toverlay: PropTypes.element,\n\n\t/** Фиксированная ширина столбцов. Появится боковой скрол */\n\tfixWidthColumn: PropTypes.bool,\n\n\t/** Высота подвала */\n\tfooterHeight: PropTypes.number,\n\n\t/** Отображать ли подвал */\n\tfooterShow: PropTypes.bool,\n\n    /** Заголовки футтера */\n    footerTitles: PropTypes.shape({\n\t\t/** Заголовок выделенных элементов */\n        selectedRows: PropTypes.string,\n\t\t/** Заголовок загруженных элементов */\n        loadedRows: PropTypes.string,\n\t\t/** Заголовок всего элементов */\n\t\ttotalRows: PropTypes.string,\n    }),\n\n\tfooterProps: PropTypes.shape({\n\n\t\t/** Высота подвала */\n\t\theight: PropTypes.number,\n\n\t\t/** Массив элементов футтера, которые надо отобразить\n\t\t * ['selected', 'loaded', 'total'] */\n\t\tshowElements: PropTypes.arrayOf(PropTypes.string),\n\n\t\t/** Заколовок для кол-ва выбранных объектов */\n\t\tselectedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва загруженны объектов */\n\t\tloadedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва всего объектов */\n\t\ttotalTitle: PropTypes.string,\n\n\t\t/** Левый кастомный элемент командной панели */\n\t\tleftCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/** Центральный кастомный элемент командной панели */\n\t\tcenterCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/** Правый кастомный элемент командной панели */\n\t\trightCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\t}),\n\n\t/** Высота заголовка таблицы */\n\theaderHeight: PropTypes.number,\n\n\t/** Высота строки таблицы */\n\trowHeight: PropTypes.number,\n\n\t/** Custom row renderer\n\t * Параметры - ({ isScrolling, cells, columns, rowData, rowIndex, depth }) */\n\trowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n\t/** Строки будут в зебро-стиле */\n\tzebraStyle: PropTypes.bool,\n\n\t/**\n\t * LOAD DATA PROPS\n\t * */\n\n\t/** Порог в пикселях для вызова _onLoad.\n\t * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n\tloadThreshold: PropTypes.number,\n\n\t/** Размер страницы */\n\tpageSize: PropTypes.number,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\t/**\n\t * SELECTABLE PROPS\n\t * */\n\n\t/** Таблица с возможностью выбора строки */\n\tselectable: PropTypes.bool,\n\n\t/**\n\t * TREE PROPS\n\t * */\n\n\t/** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\n\tnodeAssociated: PropTypes.bool,\n\n\t/** Ключ колонки по которой строить иерархию */\n\texpandColumnKey: PropTypes.string,\n\n\t/** Открыть по умолчанию вложенность до уровня N или 'All' */\n\texpandDefaultAll: PropTypes.bool,\n\n\t/** Загружать ноды иерархии по одной */\n\texpandLazyLoad: PropTypes.bool,\n\n\t/** Поле в котором хранится ссылка на родителя */\n\texpandParentKey: PropTypes.string,\n\n\t/**\n\t * EVENTS\n\t * */\n\n\t/** Событие при клике на строку (только при selectable = false)\n\t * Параметр - ({selected, rowData, rowIndex}) */\n\tonRowClick: PropTypes.func,\n\n\t/** Событие при двойном клике на строку.\n\t * Параметр - ({rowData, rowIndex, rowKey}) */\n\tonRowDoubleClick: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * Парметры - ({ expanded, rowData, rowIndex, rowKey }) */\n\tonRowExpand: PropTypes.func,\n\n\t/** Событие при выборе строки.\n\t * Параметр - массив выбранных строе (только rowKey) */\n\tonSelectedRowsChange: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * Парметры - (expandedRowKeys) - массив ключей открытых нод */\n\tonExpandedRowsChange: PropTypes.func,\n\n\t/** SELECTED PANEL */\n\n\t/** Отображать ли панель выбранных элементов */\n\tshowSelection: PropTypes.bool,\n\n\t/** Строка или функция для отображения элементов списка выбранных\n\t * Строка - имя поля\n\t * Функция - рендер строк.\n\t * `({ rowData, rowIndex }) => { return <Component> }` */\n\trowRenderShowSelection: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.string,\n\t]),\n\n\t/** Путь в сторе куда класть выбранную строку таблицы */\n\tdispatchPath: PropTypes.string,\n\n\t/** Объект для подписки на изменения в STORE */\n\tsubscribe: PropTypes.object,\n};\n\nTable.defaultProps = {\n\tdefaultRows: [],\n\tdefaultSelectedRowKeys: [],\n\tdefaultSearchValue: '',\n\tdefaultFilter: {},\n\tdefaultSortBy: {},\n\n\trows: [],\n\tselectedRowKeys: [],\n\tsearchValue: '',\n\tfilter: {},\n\tsortBy: {},\n\n\tautoDeleteRows: true,\n\trowKey: 'id',\n\n\tempty: empty,\n\toverlay: overlay,\n\tfixWidthColumn: false,\n\tfooterHeight: 30,\n\tfooterShow: false,\n    footerTitles: {\n        selectedRows: 'Выделено:',\n        loadedRows: 'Загружено записей:',\n        totalRows: 'Всего записей:',\n    },\n\tfooterProps: {\n\t\theight: 30,\n\t\tshowElements: [],\n\t\tselectedTitle: 'Выделено:',\n\t\tloadedTitle: 'Загружено записей:',\n\t\ttotalTitle: 'Всего записей:',\n\t\tleftCustomSideElement: null,\n\t\tcenterCustomSideElement: null,\n\t\trightCustomSideElement: null\n\t},\n\theaderHeight: 30,\n\trowHeight: 30,\n\tzebraStyle: false,\n\n\tloadThreshold: 300,\n\tpageSize: 50,\n\trequestLoadRows: noop,\n    requestLoadCount: noop,\n\tsearchParamName: 'searchLine',\n\n\tselectable: false,\n\n\tnodeAssociated: true,\n\texpandColumnKey: undefined,\n\texpandDefaultAll: true,\n\texpandLazyLoad: false,\n\texpandParentKey: 'parentId',\n\n\tonRowClick: noop,\n\tonRowDoubleClick: noop,\n\tonRowExpand: noop,\n\tonSelectedRowsChange: noop,\n\tonExpandedRowsChange: noop,\n\n\tshowSelection: false,\n\n\tsubscribe: {},\n};\n\nconst mapStateToProps = (store, ownProps) => {\n\tconst {subscribe} = ownProps;\n\tif(subscribe){\n\t\tconst {name, path} = subscribe;\n\t\tif(name && path)\n\t\t\treturn { [name]: objectPath.get(store, path) };\n\t}\n\n\treturn {};\n};\nconst mapDispatchToProps = (dispatch) =>\n\tbindActionCreators({ setDateStore: setDateStore}, dispatch);\n\n// const mapStateToProps = (store, ownProps) => {\n//     // console.log(\"mapStateToProps -> store\", store);\n//     // const {match , section} = ownProps;\n//     // const { path } = match;\n//     // const rows = store.table[path] && store.table[path][section] ? store.table[path][section].rows : [];\n//     // console.log(\"mapStateToProps -> rows\", rows);\n//     return { store: store };\n// };\n// const mapDispatchToProps = (dispatch, ownProps) => {\n//     // console.log(\"mapDispatchToProps -> ownProps\", ownProps);\n//     // const {match , section} = ownProps;\n//     // const { path } = match;\n//     // initTableStore(path, section);\n//     return bindActionCreators(\n//         {\n//             initTableStore,\n//             setRows,\n//         },\n//         dispatch\n//     );\n// };\n//\n// export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\n\n/**\n * @deprecated [#1] since version 0.0.54 [#2].\n * */\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\n","import React, {useEffect, useState, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { flatten, getTableRowKeys, noop, notificationError } from \"../../utils/baseUtils\";\nimport {rtPrefix} from '../../utils/variables';\nimport {Button, Typography} from 'antd';\nimport { DownOutlined, UpOutlined, CloseCircleFilled } from '@ant-design/icons'\nimport Table from '../Table/Table';\nimport { setDateStore } from \"../../../redux/rtd.actions\";\nconst {Paragraph} = Typography;\n\nconst Select = (props) => {\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n\tconst [_selectedRowData, _setSelectedRowData] = useState(null);\n\tconst [isSelectOpened, setIsSelectOpened] = useState(false);\n\tconst [isClickInSelect, setIsClickInSelect] = useState(false);\n\n\tconst {\n\t\tname,\n\t\trowRender,\n        className,\n\t\ttype,\n\t\ttitle,\n\t\tplaceholder,\n        selectedRowKeys,\n\t\t// searchable,\n        size,\n\t\twidthControl,\n\t\twidthPopup,\n\t\theightPopup,\n\n\t\tonChangeKeys,\n        defaultValue,\n        value,\n\n\t\t/** Table Props */\n\t\tdefaultSelectedRowKeys,\n\t\trowKey,\n\t\texpandColumnKey,\n\t\tshowSelection,\n\t\trequestLoadRows,\n\t\trequestLoadDefault,\n        commandPanelProps,\n\t\trows,\n\t\tdispatchPath,\n\t} = props;\n\n\tconst selectedDispatchPath = dispatchPath && `${dispatchPath}.selected`;\n\tconst searchable = commandPanelProps && commandPanelProps.showElements && commandPanelProps.showElements.includes('search');\n\tconst node = useRef(null);\n\n\tconst setSelectedRowData = (rowData) => {\n\t\tselectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, rowData);\n\t\t_setSelectedRowData(rowData);\n\t}\n\n\tconst loadSelectedObject = ({selectedRowKeys}) => {\n        if(selectedRowKeys) {\n            let _selectedRowKeys;\n\t\t\tif(Array.isArray(selectedRowKeys)) {\n\t\t\t\tsetSelectedRowKeys(selectedRowKeys);\n\t\t\t\t_selectedRowKeys = selectedRowKeys\n\t\t\t}\n            else {\n            \tsetSelectedRowKeys([selectedRowKeys]);\n\t\t\t\t_selectedRowKeys = [selectedRowKeys]\n\t\t\t}\n\n\t\t\t// console.log(\"setSelectedRowKeys[70] -> \", _selectedRowKeys);\n\n\t\t\tconst request = requestLoadDefault\n                ? requestLoadDefault\n                : requestLoadRows;\n\n            if (!!request && !rows && _selectedRowKeys.length > 0) {\n                // console.log('defaultSelectedRowKeys ', defaultSelectedRowKeys, defaultSelectedRowKeys.length);\n                request({\n                    data: {\n                        [rowKey]:  _selectedRowKeys, //defaultSelectedRowKeys,\n                    },\n                })\n                    .then((response) => {\n                        let result = response.data;\n\t\t\t\t\t\t// console.log(\"setSelectedRowData[84] => \", response.data);\n\t\t\t\t\t\tif (result.length > 0) setSelectedRowData(result[0]);\n                    })\n\t\t\t\t\t.catch(error => notificationError(error, 'Ошибка загрузки данных в Select') );\n\n            } else if (rows && _selectedRowKeys && type === 'SingleSelect') {\n            \tlet srk = _selectedRowKeys[0];\n\t\t\t\t// if(Array.isArray(selectedRowKeys) && selectedRowKeys.length > 0)\n\t\t\t\t// \tsrk = selectedRowKeys[0];\n            \t// else\n\t\t\t\t// \tsrk = selectedRowKeys;\n\n                const findRow = rows.find((row) => row[rowKey] === srk);\n                // console.log(\"setSelectedRowData[98] => \", findRow, rows, srk);\n                setSelectedRowData(findRow);\n            } else {\n                setSelectedRowData(null);\n            }\n        }\n\t};\n\n\tuseEffect(() => {\n        loadSelectedObject({selectedRowKeys: defaultSelectedRowKeys});\n\t\twindow.addEventListener('mousedown', handleMouseClick, false);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('mousedown', handleMouseClick, false);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// console.log(\"selectedRowKeys\", selectedRowKeys);\n        loadSelectedObject({selectedRowKeys: selectedRowKeys});\n    }, [selectedRowKeys]);\n\n\tuseEffect(() => {\n\t\tif(_selectedRowKeys !== undefined && _selectedRowData === undefined){\n\t\t\t// console.log(\"useEffect rows\", _selectedRowKeys, _selectedRowData, rows);\n\t\t\tloadSelectedObject({selectedRowKeys: _selectedRowKeys});\n\t\t}\n\t}, [rows])\n\n\tuseEffect(() => {\n\t\t// console.log(\"isClickInSelect \", isClickInSelect);\n\t\t// console.log(\"isSelectOpened \", isSelectOpened);\n\t\tif(!isClickInSelect && isSelectOpened)\n\t\t\tonClosePopup();\n\t}, [isClickInSelect]);\n\n\t// useEffect(() => {\n\t// \t// console.log(\"setSelectedRowData[117] => \", props.value, props.defaultValue);\n\t// }, [props])\n\n\tconst columns = [\n\t\t{\n\t\t\tkey: rowKey,\n\t\t\ttitle: title,\n\t\t\tdataKey: rowKey,\n\t\t\twidth: 500,\n\t\t\tcellRenderer:\n\t\t\t\ttypeof rowRender === 'function'\n\t\t\t\t\t? rowRender\n\t\t\t\t\t: ({rowData}) => <div className={'rt-table-cell'}>{rowData[rowRender]}</div>,\n\t\t},\n\t];\n\n\tconst _getHeadCls = () => {\n\t    let cls = [`${rtPrefix}-select-header`];\n\n\t    if(isSelectOpened)\n            cls.push('opened');\n\n\t    if(_selectedRowKeys && _selectedRowKeys.length > 0)\n\t        cls.push('selected');\n\n\t    switch (size) {\n            case 'small':\n                cls.push(`${rtPrefix}-select-header-sm`);\n                break;\n            case 'large':\n                cls.push(`${rtPrefix}-select-header-lg`);\n                break;\n            default: break;\n        }\n\n\t    return cls.join(' ');\n    };\n\n\tconst _getHeadText = () => {\n\t\tif (type === 'SingleSelect') {\n\t\t\t\tif(_selectedRowData)\n\t\t\t\t\tif(typeof rowRender === 'function')\n\t\t\t\t\t\treturn rowRender({rowData: _selectedRowData});\n\t\t\t\t\telse\n\t\t\t\t\t\treturn `${_selectedRowData[rowRender]}`;\n\t\t\t\telse\n\t\t\t\t\treturn `${placeholder}`;\n\t\t} else {\n\t\t\treturn _selectedRowKeys.length > 0\n\t\t\t\t? `Выбрано: ${_selectedRowKeys.length}`\n\t\t\t\t: `${placeholder}`;\n\t\t}\n\t};\n\n    const _getPopupCls = () => {\n    \t// console.log('_getPopupCls _selectedRowKeys => ', _selectedRowKeys);\n        let cls = [`${rtPrefix}-select-popup`];\n\n        if(title)\n            cls.push(`${rtPrefix}-select-popup-with-title`);\n\n        return cls.join(' ');\n    };\n\tconst _getPopupStyle = () => {\n\t\t// if (heightPopup)\n\t\t// \treturn {height: `${heightPopup}px`, width: `${widthPopup}px`};\n\n\t\tlet height = {};\n\t\tlet defRowsLen = 0;\n\n\t\tif (!requestLoadRows && rows)\n\t\t\tif (expandColumnKey)\n\t\t\t\tdefRowsLen = flatten(getTableRowKeys(rows, rowKey)).length;\n\t\t\telse defRowsLen = rows.length;\n\n\t\t// console.log('_getPopupStyle', defRowsLen);\n\t\tif (defRowsLen && defRowsLen > 0) {\n\t\t\theight =\n\t\t\t\tdefRowsLen * 30 + // Кол-во строк * высоту строки\n\t\t\t\t(searchable ? 46 : 0) + // Размер поисковой строки или 0\n\t\t\t\t(type === 'MultiSelect' ? 65 : 0) + // Размер футтера (30) + размер кнопки 35 или 0\n\t\t\t\t(showSelection ? 200 : 0) + // Размер панели выбранных элементов или 0\n\t\t\t\t22; // Паддинги и бордер\n\t\t\t// console.log('heightPopup', height);\n\t\t\tif (height > heightPopup) height = `${heightPopup}px`;\n\t\t\telse height = `${height}px`;\n\t\t} else {\n\t\t\t// console.log(\"heightPopup\", heightPopup);\n\t\t\theight = `${heightPopup}px`;\n\t\t}\n\n\t\t// console.log(\"heightPopup, widthPopup\", heightPopup, widthPopup);\n\t\treturn {height, width: `${widthPopup}px`};\n\t};\n\n\tconst getEvents = () => {\n\t\treturn (commandPanelProps && commandPanelProps.systemBtnProps && Object.keys(commandPanelProps.systemBtnProps)) || [];\n\t};\n\n\tconst _onChange = (selectedKeys) => {\n\t\t// console.log('_onChange [176]', selectedKeys);\n\t\tsetSelectedRowKeys(selectedKeys);\n\t\t// setSelectedRowData(selectedObjects);\n\t\tonChangeKeys(name, selectedKeys.length ? selectedKeys : null);\n\t\t// onChangeObjects(name, selectedObjects.length ? selectedObjects : null);\n\t\t// setCountSelect(selectedKeys.length);\n\t\tif (type === 'SingleSelect') {\n\t\t\tsetIsSelectOpened(false);\n\t\t}\n\t};\n\n\tconst _SingleSelectRow = ({selected, rowData, rowIndex}) => {\n\t\t// console.log(\"_SingleSelectRow => \", rowData);\n\t\tsetSelectedRowData(rowData);\n\t\t// selected ? setSingleSelectRowData(rowData) : setSingleSelectRowData({})\n\t};\n\n\tconst handleMouseClick = (e) => {\n\t\tnode && node.current && setIsClickInSelect(node.current.contains(e.target))\n\t};\n\n\tconst onClosePopup  = () => {\n\t\tsetIsSelectOpened(false);\n\t};\n\n\tconst onOpenPopup = () => {\n\t\tif(!isSelectOpened)\n\t\t\tsetIsSelectOpened(true);\n\t\telse\n\t\t\tsetIsSelectOpened(false);\n\t};\n\n\tconst onClickClear = () => {\n\t\t// console.log(\"delete Selected\");\n\t\tsetSelectedRowData(null);\n\t\t_onChange([]);\n\t};\n\n\treturn (\n\t\t<div\n            className={`${rtPrefix}-select ${className ? className : ''}`}\n\t\t\tref={node}\n\t\t>\n\t\t\t{title ? <div className={'title'}>{title}</div> : null}\n\t\t\t<div\n\t\t\t\tclassName={_getHeadCls()}\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: widthControl === 0 ? '100%' : `${widthControl}px`,\n\t\t\t\t}}\n\n\t\t\t>\n\t\t\t\t<div className={`${rtPrefix}-select-selector`}\n\t\t\t\t\t // onFocus={ () => {setIsSelectOpened(true)} }\n\t\t\t\t\t onClick={ onOpenPopup }\n\t\t\t\t>\n\t\t\t\t\t<Paragraph ellipsis> {_getHeadText()} </Paragraph>\n\t\t\t\t</div>\n                {isSelectOpened ? <UpOutlined onClick={ onOpenPopup } className={`${rtPrefix}-select-header-icon`} /> : <DownOutlined onClick={ onOpenPopup } className={`${rtPrefix}-select-header-icon`}/> }\n\t\t\t\t{/*<Button shape=\"circle\" icon={<CloseCircleFilled />} onClick={() => console.log(\"delete Selected\")} className={`${rtPrefix}-select-header-clear`} />*/}\n\t\t\t\t{_selectedRowKeys.length > 0 ? <CloseCircleFilled onClick={onClickClear} className={`${rtPrefix}-select-header-clear`}/> : null }\n\t\t\t</div>\n\n\t\t\t{isSelectOpened ? (\n\t\t\t\t<div className={_getPopupCls()} style={_getPopupStyle()}>\n\t\t\t\t\t<Table\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t\tcommandPanelProps={{\n\t\t\t\t\t\t\t...props.commandPanelProps,\n\t\t\t\t\t\t\tshowElements: getEvents(),// getShowElements(),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdefaultSelectedRowKeys={_selectedRowKeys}\n                        selectedRowKeys={_selectedRowKeys}\n\t\t\t\t\t\theaderHeight={0}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\ttype={!!requestLoadRows ? 'serverSide' : 'localSide'}\n\t\t\t\t\t\t// showElements={searchable ? ['search'] : undefined}\n\t\t\t\t\t\tselectable={type === 'MultiSelect'}\n\t\t\t\t\t\tfooterShow={type === 'MultiSelect'}\n\t\t\t\t\t\tshowSelection={showSelection}\n\t\t\t\t\t\trowRenderShowSelection={rowRender}\n\t\t\t\t\t\tonRowClick={_SingleSelectRow}\n\t\t\t\t\t\tonSelectedRowsChange={_onChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{type === 'MultiSelect' ? (\n\t\t\t\t\t\t<div className={'close-panel'}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={() => setIsSelectOpened(false)}\n\t\t\t\t\t\t\t\tsize={'small'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tOk\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\nSelect.propTypes = {\n\t/** Имя параметра селекта (вернется в onChangeKeys и onChangeObjects) */\n\tname: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.number,\n\t\tPropTypes.arrayOf(\n\t\t\tPropTypes.oneOfType(\n\t\t\t\t[PropTypes.string, PropTypes.number]\n\t\t\t)\n\t\t)]).isRequired,\n\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { rowData, rowIndex }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n\t\t.isRequired,\n\n\t/** Тип селекта (SingleSelect и MultiSelect) */\n\ttype: PropTypes.oneOf(['SingleSelect', 'MultiSelect']).isRequired,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Заголовок фильтра */\n\ttitle: PropTypes.string,\n\n\t/** Строка, когда ничего не выбрано */\n\tplaceholder: PropTypes.string,\n\n\t/** Запрос на загрузку дефолтных данных */\n\trequestLoadDefault: PropTypes.func,\n\n    /** Массив выбранных значений */\n    selectedRowKeys: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n\n    /** Размер селектора ['small', 'middle', 'large'] */\n    size: PropTypes.oneOf(['small', 'middle', 'large']),\n\n\t// /** Показывать ли поисковую строку */\n\t// searchable: PropTypes.bool,\n\n\t/** Ширина поля выбора в пикселях */\n\twidthControl: PropTypes.number,\n\n\t/** Ширина выпадающего меню */\n\twidthPopup: PropTypes.number,\n\n\t/** Высота выпадающего меню (по умолчанию считается сама) */\n\theightPopup: PropTypes.number,\n\n    /** Событие об изменении состояния селектора */\n\tonChangeKeys: PropTypes.func,\n\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/** Высота строки таблицы */\n\trowHeight: PropTypes.number,\n\n\t/** Строки будут в зебро-стиле */\n\tzebraStyle: PropTypes.bool,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadCount: PropTypes.func,\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\t/** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\n\tnodeAssociated: PropTypes.bool,\n\n\t/** Ключ колонки по которой строить иерархию */\n\texpandColumnKey: PropTypes.string,\n\n\t/** Открыть по умолчанию вложенность до уровня N или 'All' */\n\texpandDefaultAll: PropTypes.bool,\n\n\t/** Загружать ноды иерархии по одной */\n\texpandLazyLoad: PropTypes.bool,\n\n\t/** Поле в котором хранится ссылка на родителя */\n\texpandParentKey: PropTypes.string,\n};\n\nSelect.defaultProps = {\n\tonChangeKeys: noop,\n\t// onChangeObjects: noop,\n\tplaceholder: 'Выбрать',\n\t// searchable: false,\n    size: 'middle',\n\twidthControl: 110,\n\twidthPopup: 400,\n\theightPopup: 600,\n    rowKey: 'id',\n\trowHeight: 30,\n\tzebraStyle: false,\n\n\trequestLoadDefault: undefined,\n\trequestLoadRows: undefined,\n\trequestLoadCount: undefined,\n\tsearchValue: '',\n\tsearchParamName: 'searchLine',\n\n\tnodeAssociated: true,\n\texpandColumnKey: undefined,\n\texpandDefaultAll: true,\n\texpandLazyLoad: false,\n\texpandParentKey: 'parentId',\n};\nconst mapDispatchToProps = (dispatch) =>\n\tbindActionCreators({ setDateStore: setDateStore}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(Select);\n","import React, {forwardRef, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '../Table/Table';\nimport { notification, Typography } from \"antd\";\nimport { notificationError } from \"../../utils/baseUtils\";\n\nconst AdvancedTable = forwardRef((props, ref) => {\n\tconst [config, setConfig] = useState({});\n\n\tconst {\n\t\tconfigData,\n        customColumnProps,\n\t\tdefaultFilter,\n\t\texpandColumnKey,\n\t\texpandLazyLoad,\n\t\texpandParentKey,\n\t\tpageSize,\n\t\trowKey,\n\t\trequestLoadConfig,\n\t} = props;\n\n\tuseEffect(() => {\n        let cleanupFunction = false;\n        const loadData = async () => {\n            if (requestLoadConfig) {\n                // console.log('requestLoadConfig => ', typeof requestLoadConfig);\n                // console.log('requestLoadRows => ', typeof props.requestLoadRows);\n                requestLoadConfig()\n                    .then((response) => {\n                        // let result = response.data;\n                        // console.log('requestLoadConfig -> ', response.data);\n                        if(!cleanupFunction)\n                            setConfig(response.data);\n                    })\n                    .catch(error => notificationError(error, 'Ошибка получения конфигурации') );\n            } else {\n                if(!cleanupFunction)\n                    setConfig(configData);\n            }\n        };\n        loadData();\n        return () => cleanupFunction = true;\n\t}, []);\n\n\tconst columnsByConfig = () =>\n\t\tconfig &&\n\t\tconfig.fields &&\n\t\tconfig.fields.map((item) => {\n\n\t\t\tconst colProps =\n                customColumnProps &&\n                customColumnProps.find(\n                    (render) =>\n                        render.name === item.name || render.name === item.alias\n                );\n\t\t\treturn {\n\t\t\t\tkey: item.name,\n\t\t\t\ttitle: item.header ? item.header : item.name,\n\t\t\t\tdataKey: item.alias ? item.alias : item.name,\n\t\t\t\talign: item.align,\n\t\t\t\twidth: item.width,\n\t\t\t\tresizable: item.resizable,\n\t\t\t\tsortable: item.sortable,\n\t\t\t\thidden: !item.visible,\n\t\t\t\t// cellRenderer: cellR && cellR.cellRender,\n                ...colProps,\n                cellRenderer: (object) => {\n\t\t\t\t\tif (colProps && colProps.cellRenderer)\n\t\t\t\t\t\treturn <colProps.cellRenderer {...object}/>\n\t\t\t\t\t// return colProps.cellRenderer(object) ? colProps.cellRenderer(object) : '---';\n\t\t\t\t\telse\n\t\t\t\t\t\treturn object.cellData\n\t\t\t\t\t\t\t? <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>{object.cellData}</Typography.Text>\n\t\t\t\t\t\t\t: <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>---</Typography.Text> ;\n\t\t\t\t\t// return object.cellData ? object.cellData : '---';\n                },\n\t\t\t};\n\t\t});\n\n\tconst getDefaultFilter = () => {\n\t\tif (config && config.hierarchical && config.hierarchyLazyLoad) {\n\t\t\tconst parentKey = config.hierarchyField\n\t\t\t\t? config.hierarchyField.split('/')[1]\n\t\t\t\t: expandParentKey;\n\t\t\treturn {...defaultFilter, [parentKey]: null};\n\t\t} else return defaultFilter;\n\t};\n\n\tif (config && config.fields) {\n\t\t// console.log('AdvancedTable render table -> ', config);\n\t\treturn (\n\t\t\t<Table\n\t\t\t\t{...props}\n\t\t\t\tref={ref}\n\t\t\t\tcolumns={columnsByConfig()}\n\t\t\t\tdefaultFilter={getDefaultFilter()}\n\t\t\t\trowKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyField\n\t\t\t\t\t\t? config.hierarchyField.split('/')[0]\n\t\t\t\t\t\t: rowKey\n\t\t\t\t}\n\t\t\t\texpandParentKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyField\n\t\t\t\t\t\t? config.hierarchyField.split('/')[1]\n\t\t\t\t\t\t: expandParentKey\n\t\t\t\t}\n\t\t\t\texpandColumnKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyView\n\t\t\t\t\t\t? config.hierarchyView\n\t\t\t\t\t\t: expandColumnKey\n\t\t\t\t}\n\t\t\t\texpandLazyLoad={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyLazyLoad\n\t\t\t\t\t\t? config.hierarchyLazyLoad\n\t\t\t\t\t\t: expandLazyLoad\n\t\t\t\t}\n\t\t\t\tpageSize={config && config.hierarchical ? 1 : pageSize}\n\t\t\t/>\n\t\t);\n\t} else return null;\n});\n\nAdvancedTable.propTypes = {\n\t/** Функция запроса на получение конфига для таблицы */\n\trequestLoadConfig: PropTypes.func,\n\n\t/** Конфигурация внешнего вида таблицы */\n\tconfigData: PropTypes.shape({\n\t\thierarchical: PropTypes.bool,\n\t\thierarchyField: PropTypes.string,\n\t\thierarchyView: PropTypes.string,\n\t\thierarchyLazyLoad: PropTypes.bool,\n\t\tfields: PropTypes.arrayOf(\n\t\t\tPropTypes.shape({\n\t\t\t\tname: PropTypes.string,\n\t\t\t\talias: PropTypes.string,\n\t\t\t\theader: PropTypes.string,\n\t\t\t\tvisible: PropTypes.bool,\n\t\t\t\tresizable: PropTypes.bool,\n\t\t\t\tsortable: PropTypes.bool,\n\t\t\t\talign: PropTypes.oneOf(['left', 'center', 'right']),\n\t\t\t\twidth: PropTypes.number,\n\t\t\t})\n\t\t),\n\t}),\n\n\t/** Дополнительные пропсы для колонок */\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\n};\n\nAdvancedTable.defaultProps = {};\n\nexport default AdvancedTable;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormItems from \"./FormItems\";\nimport { Form as AntForm, notification } from \"antd\";\nimport { getObjectExcludedProps, noop, notificationError } from \"../../utils/baseUtils\";\nimport { rtPrefix } from \"../../utils/variables\";\n\nconst excludeProps = [\"noPadding\", \"scrollable\", \"header\", \"body\", \"footer\", \"loadInitData\", \"autoSaveForm\", \"requestSaveForm\", \"methodSaveForm\", \"processBeforeSaveForm\"];\n\n\nconst Form = (props) => {\n    const { loadInitData, header, body, footer,\n        autoSaveForm, requestSaveForm, methodSaveForm, processBeforeSaveForm } = props;\n\n    /** Состояние первоначалной настройки компонента*/\n    const [loaded, setLoaded] = useState(false);\n    const [antFormProps, setAntFormProps] = useState({});\n    const [initFormData, setInitFormData] = useState({});\n\n    useEffect(() => {\n        if (!loaded) {\n            if (loadInitData !== noop)\n                loadInitData(_setInitFormData);\n            else\n                setLoaded(true);\n        }\n    }, [loaded]);\n\n    useEffect(() => {\n        setAntFormProps(getObjectExcludedProps(props, excludeProps));\n        // console.log('antFormProps props => ', getObjectExcludedProps(props, excludeProps));\n    }, [props]);\n\n\n    const _setInitFormData = (data) => {\n        // console.log(\"Form loaded init data => \", data);\n        setInitFormData(data);\n        setLoaded(true);\n    };\n\n\n    let antForm;\n    if (props && props.form) {\n        antForm = props.form;\n    } else {\n        const [form] = AntForm.useForm();\n        antForm = form;\n    }\n\n    const getBodyCls = () => {\n        let cls = [`${rtPrefix}-form-body`];\n        props.noPadding && cls.push(`${rtPrefix}-form-body-no-padding`);\n        props.scrollable && cls.push(`${rtPrefix}-form-body-scrollable`);\n        return cls.join(\" \");\n    };\n\n    const onFinish = (rawValues) => {\n        const values = processBeforeSaveForm ? processBeforeSaveForm(rawValues) : rawValues;\n        console.log(`Success form [${props.name ? props.name : 'no name form'}]: `, values);\n        if (autoSaveForm && requestSaveForm) {\n            const saveObject = {\n                ...initFormData,\n                ...values,\n                // dateStart: getISO(values['dateStart'])\n            };\n            requestSaveForm({\n                method: methodSaveForm,\n                data: saveObject\n            })\n                .then(response => {\n                    notification.success({\n                        message: \"Сохранение прошло успешно\"\n                    });\n                    if (props.onFinish)\n                        props.onFinish(values);\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\n        } else if (props.onFinish)\n            props.onFinish(values);\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.error(\"Failed:\", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    return (\n        <React.Fragment>\n            {loaded ?\n                <AntForm\n                    form={antForm}\n                    {...antFormProps}\n                    className={`${antFormProps.className} ${rtPrefix}-form`}\n                    style={{ ...antFormProps.style, width: '100%', height: '100%' }}\n                    initialValues={{ ...antFormProps.initialValues, ...initFormData }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                >\n                    {header ? <div className={`${rtPrefix}-form-header`}><FormItems items={header}/></div> : null}\n                    <div className={getBodyCls()}><FormItems items={body}/></div>\n                    {footer ? <div className={`${rtPrefix}-form-footer`}><FormItems items={footer}/></div> : null}\n                </AntForm>\n                : null}\n        </React.Fragment>\n    );\n};\n\nForm.propTypes = {\n\n    /** Не делать отступы у формы от краев блока */\n    noPadding: PropTypes.bool,\n\n    /** scrollable\n     */\n    scrollable: PropTypes.bool,\n\n    /** Массив объектов для шапки формы. Как правило только заголовок. */\n    header: PropTypes.arrayOf(PropTypes.object),\n\n    /** Массив объектов для тела формы */\n    body: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n    /** Массив объектов для подвала формы. Как правило только кнопки \"Сохранить\" и \"Отмена\" */\n    footer: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ссылка на функцию загрузки значений по умолчанию\n     * (callBack) => callBack(initObject) */\n    loadInitData: PropTypes.func,\n\n    /** Производить ли автоматическое сохранение по параметрам requestSaveForm и methodSaveForm */\n    autoSaveForm: PropTypes.bool,\n\n    /** Запрос для автоматического сохранения формы */\n    requestSaveForm: PropTypes.func,\n\n    /** HTTP Метод, передаваемый в запрос сохранения */\n    methodSaveForm: PropTypes.string,\n\n    /** Функция обработки перед сохранением формы */\n    processBeforeSaveForm: PropTypes.func,\n};\n\nForm.defaultProps = {\n    noPadding: false,\n    scrollable: false,\n    loadInitData: noop,\n    autoSaveForm: true\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {getObjectExcludedProps} from '../../utils/baseUtils';\nimport Form from './Form';\nimport {Modal} from 'antd';\n\nconst excludeProps = ['type', 'initialValues', 'form'];\n\nconst FormModal = props => {\n\n    const {\n        modal,\n        selectedRow,\n        visible,\n        setVisible,\n        saveRow,\n    } = props;\n\n    const getDefaultFooterProps = () => {\n\n        let okText = '';\n        let cancelText = '';\n        let modalTitle = '';\n\n        switch (modal.type) {\n            case 'addOnServer':\n            case 'addGroupOnServer':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Сохранить на сервере';\n                break;\n            case 'addOnLocal':\n            case 'addGroupOnLocal':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Сохранить локально';\n                break;\n            case 'editOnServer':\n            case 'editGroupOnServer':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Измененить на сервере';\n                break;\n            case 'editOnLocal':\n            case 'editGroupOnLocal':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Изменение локально';\n                break;\n            case 'select':\n                okText = 'Добавить';\n                cancelText = 'Отмена';\n                modalTitle = 'Выбор';\n                break;\n            case 'viewGroup':\n            case 'viewObject':\n                okText = 'Закрыть';\n                modalTitle = 'Просмотр';\n                break;\n            default: break;\n        }\n\n        if(modal.okText)\n            okText = modal.okText;\n\n        if(modal.cancelText)\n            cancelText = modal.cancelText;\n\n        if(modal.title)\n            modalTitle = modal.title;\n\n        return {okText, cancelText, title: modalTitle, okType: 'primary'}\n    };\n\n    let modalProps = { ...getDefaultFooterProps(), ...getObjectExcludedProps(modal, excludeProps) };\n\n    const onFinish = values => {\n        // console.log('FormModal Success:', values, selectedRow);\n        let saveObj = {};\n        if(modal.type.startsWith('add'))\n            saveObj = {...values};\n        else\n            saveObj = {...selectedRow, ...values};\n\n        saveRow({type: modal.type, row: saveObj, requestSaveRow: modal.requestSaveRow});\n\n        if (modalProps.onOk) modalProps.onOk(values);\n        if (modalProps.onFinish) modalProps.onFinish(values);\n    };\n\n    const onFinishFailed = errorInfo => {\n        // console.log('FormModal Failed:', errorInfo);\n        console.error(\"FormModal fields failed: \", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    const _onCancelHandler = (e) => {\n        // setVisibleModals({ ...visibleModals, [modal.type]: false });\n        // form.resetFields();\n        setVisible(modal.type, false);\n        if (modalProps.onCancel) modalProps.onCancel(e)\n    };\n\n    const _onLoadInitData = (callBack) => {\n        // console.log(\"Modal => loadInitData\", selectedRow);\n        formConfig.loadInitData(callBack, selectedRow)\n    }\n\n    const defaultFooter = [\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.cancelText,\n                className: 'mr-8',\n                onClick: _onCancelHandler,\n                ...modalProps.cancelButtonProps\n            }\n        },\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.okText,\n                type: modalProps.okType,\n                htmlType: 'submit',\n                ...modalProps.okButtonProps\n            }\n        }\n    ];\n\n    const formConfig =  {\n        footer: defaultFooter,\n        ...modal.form\n    };\n    return (\n        <Modal\n            {...modalProps}\n            centered\n            destroyOnClose\n            visible={visible}\n            onCancel={_onCancelHandler}\n            bodyStyle={{padding: 0, ...modalProps.bodyStyle}}\n            footer={null}\n        >\n            <Form\n                {...formConfig}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                loadInitData={_onLoadInitData}\n            />\n        </Modal>\n    )\n};\n\nFormModal.propTypes = {\n    /** Объект модального окна */\n    modal: PropTypes.object,\n\n    /** Выделенная строка таблицы */\n    selectedRow: PropTypes.object,\n\n    /** Состояние видимости модалки */\n    visible: PropTypes.bool,\n\n    /** Задание состояния видимости модалки */\n    setVisible: PropTypes.func,\n\n    /** CallBack функция для сохранения данных */\n    saveRow: PropTypes.func,\n};\n\nexport default FormModal;\n","import React, {forwardRef, useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport SortOrder from 'react-base-table/lib/SortOrder';\nimport AdvancedTable from '../AdvancedTable/AdvancedTable';\nimport { generateUUID, getObjectExcludedProps, noop, notificationError } from \"../../utils/baseUtils\";\nimport FormModal from './FormModal';\nimport { notification as antNotification, notification } from \"antd\";\nimport { rtPrefix } from \"../../utils/variables\";\nimport { empty, overlay } from \"../Table/defaultSettings\";\n\n\nconst excludeProps = ['onChange', 'defaultValue', 'modals', 'events', 'history'];\n\nconst FormTable = forwardRef((props, ref) => {\n\n    /** Состояние первоначалной настройки компонента*/\n    const [loading, setLoading] = useState(false);\n\n    /** Состояние отображения модалок таблицы */\n    const [visibleModals, setVisibleModals] = useState({\n        addOnServer: false,\n        editOnServer: false,\n        addOnLocal: false,\n        editOnLocal: false,\n        addGroupOnServer: false,\n        editGroupOnServer: false,\n        addGroupOnLocal: false,\n        editGroupOnLocal: false,\n        select: false,\n        viewGroup: false,\n        viewObject: false});\n    const [tableRows, setTableRows] = useState([]);\n    const [tableSelectedRowKeys, setTableSelectedRowKeys] = useState([]);\n    const [tableSelectedRow, setTableSelectedRow] = useState({});\n\n    /** Ссылка на объект таблицы */\n    const [tableRef, setTableRef] = useState({});\n    const _setTableRef = (_ref) => {\n        setTableRef(_ref);\n        ref && ref(_ref)\n    };\n\n    const {\n        rowKey,\n        rowKeyType,\n        customFields,\n        modals,\n        isGroupKey,\n        history,\n\n        componentType,\n        name,\n\n        // Form.Item props\n        value,\n\n        // Requests\n        requestDeleteRow,\n\n        dataDeleteRow\n    } = props;\n    const cmdProps = props.commandPanelProps;\n\n    // let advancedTableProps = getObjectExcludedProps(props, excludeProps);\n\n    /** Аналог componentDidMounted */\n    useEffect(() => {\n        // Если таблица локальная, то пробуем загрузить исходные данные\n        if(!loading && props.type === 'localSide') {\n            let cleanupFunction = false;\n            setLoading(true);\n            const loadData = async () => {\n                if (!loading && props.requestLoadRows) {\n                    props.requestLoadRows({params: {page: 0, size: 1}, data: {}})\n                        .then((response) => {\n                            // console.log('FormTable -> requestLoadRows -> response', response);\n                            // console.log('FormTable -> requestLoadRows -> value', value);\n                            if (!cleanupFunction)\n                                _addRowsToLocalTable(response.data, value);\n                        })\n                        .catch(error => notificationError(error, 'Ошибка загрузки данных') );\n                }\n                // console.log('FormTable -> setMounted ', advancedTableProps.type);\n                setLoading(false);\n            };\n            loadData();\n            return () => cleanupFunction = true;\n        }\n    }, [props.type]);\n\n    useEffect(() => {\n        if(props.selectable) {\n            console.log(\"FormTable => useEffect => value: \", value);\n            if(value && value.length > 0)\n                setTableSelectedRowKeys(value.map(item => item[rowKey]));\n            else\n                setTableSelectedRowKeys([]);\n\n        }\n    }, [value]);\n\n    /** Получить список кнопок для Command Panel */\n    const getEvents = () => {\n        return (cmdProps && cmdProps.systemBtnProps && Object.keys(cmdProps.systemBtnProps)) || [];\n    };\n\n    /** Получить рендер модалок */\n    const getModals = () => {\n        return modals.map((modal, index) => {\n            return (\n                <FormModal\n                    key={index}\n                    modal={modal}\n                    selectedRow={tableSelectedRow}\n                    visible={visibleModals[modal.type]}\n                    setVisible={(type, value) => setVisibleModals({ ...visibleModals, [type]: value })}\n                    saveRow={_onSaveRow}\n                />\n            )\n\n        })\n    };\n\n    /** Проверка существования кнопки в Command Panel */\n    const isExistCmdBtn = (btnType) => (cmdProps && cmdProps.systemBtnProps && cmdProps.systemBtnProps[btnType]);\n\n    /** Проверка соответствия типа кнопки и события ? (params) === (props) */\n    const equalsActionTypeCmdBtn = (btnType, actionType) => {\n        if(isExistCmdBtn(btnType)) {\n            if(btnType === 'edit') {\n                const aTypes = actionType.split('/');\n                if(aTypes[0] === 'g') {\n                    return !!(cmdProps.systemBtnProps[btnType].actionType\n                        && cmdProps.systemBtnProps[btnType].actionType.length === 2\n                        && cmdProps.systemBtnProps[btnType].actionType[1] === aTypes[1]);\n                }\n                else if (aTypes[0] === 'i') {\n                    return !!(cmdProps.systemBtnProps[btnType].actionType\n                        && cmdProps.systemBtnProps[btnType].actionType.length === 2\n                        && cmdProps.systemBtnProps[btnType].actionType[0] === aTypes[1]);\n                }\n            } else {\n                return !!(cmdProps.systemBtnProps[btnType].actionType\n                    && cmdProps.systemBtnProps[btnType].actionType === actionType);\n            }\n        }\n        return false;\n    };\n\n    /** Command Panel Events */\n    /** Добавить */\n    const _onClickAddHandler = () => {\n        if(equalsActionTypeCmdBtn('add', 'modal')) {\n            // console.log(\"FormTable => _onClickAddHandler => modal\");\n            if (props.type !== 'localSide') {\n                setVisibleModals({...visibleModals, addOnServer: true});\n            } else {\n                if (modals && (modals.find(modal => modal.type === 'select') !== undefined)) {\n                    setVisibleModals({...visibleModals, select: true});\n                    // console.log(\"FormTable => _onClickAddHandler => select\", modals.find(modal => modal.type === 'select'));\n                } else {\n                    setVisibleModals({...visibleModals, addOnLocal: true});\n                    // console.log(\"FormTable => _onClickAddHandler => addOnLocal\"); location.pathname\n                }\n            }\n        } else if (equalsActionTypeCmdBtn('add', 'page')) {\n            history.push(`${history.location.pathname}/new`);\n        }\n    };\n\n    /** Добавить копированием */\n    const _onClickAddAsCopyHandler = (event, row) => {\n        _addRowToLocalTable(row);\n    };\n\n    /** Добавить группу */\n    const _onClickAddGroupHandler = () => {\n        if(equalsActionTypeCmdBtn('addGroup', 'modal')) {\n            // console.log(\"FormTable => _onClickAddGroupHandler => modal\");\n            if (props.type !== 'localSide')\n                setVisibleModals({...visibleModals, addGroupOnServer: true});\n            else\n                setVisibleModals({...visibleModals, addGroupOnLocal: true});\n        } else if (equalsActionTypeCmdBtn('addGroup', 'page')) {\n            // console.log(\"FormTable => _onClickAddGroupHandler => page\");\n            history.push(`${history.location.pathname}/newGroup`);\n        }\n    };\n\n    /** Изменить */\n    const _onClickEditHandler = (event, {rowData}) => {\n        // console.log(\"FormTable -> _onClickEditHandler -> row \", rowData, props.type);\n        if (rowData[isGroupKey]) {\n            if (equalsActionTypeCmdBtn('edit', 'g/modal')) {\n                // console.log(\"FormTable => _onClickEditHandler => g/modal\");\n                if (props.type !== 'localSide')\n                    setVisibleModals({...visibleModals, editGroupOnServer: true});\n                else\n                    setVisibleModals({...visibleModals, editGroupOnLocal: true});\n            } else if (equalsActionTypeCmdBtn('edit', 'g/page')) {\n                // console.log(\"FormTable => _onClickEditHandler => g/page\");\n                history.push(`${history.location.pathname}/${rowData[rowKey]}`);\n            }\n        } else {\n            if (equalsActionTypeCmdBtn('edit', 'i/modal')) {\n                // console.log(\"FormTable => _onClickEditHandler => i/modal\");\n                if (props.type !== 'localSide')\n                    setVisibleModals({...visibleModals, editOnServer: true});\n                else\n                    setVisibleModals({...visibleModals, editOnLocal: true});\n            } else if (equalsActionTypeCmdBtn('edit', 'i/page')) {\n                // console.log(\"FormTable => _onClickEditHandler => i/page\");\n                history.push(`${history.location.pathname}/${rowData[rowKey]}`);\n            }\n        }\n    };\n\n    /** Удалить */\n    const _onClickDelete = (event, _selectedRowKeys) => {\n        if(props.type === 'localSide') {\n            const _rows = tableRows.filter(\n                (item) => !_selectedRowKeys.includes(item[rowKey])\n            );\n            setTableRows(_rows);\n            _onChange(_rows);\n        } else {\n            if(_selectedRowKeys && _selectedRowKeys.length > 0 && requestDeleteRow){\n                const deleteData = _selectedRowKeys.map(item => { return {[rowKey]: item, ...dataDeleteRow} } );\n                requestDeleteRow({data: {deleteData: deleteData}})\n                    .then((response) => {\n                        antNotification.success({message: 'Успешное удаленение'});\n                        tableRef && tableRef.reloadData({});\n\n                    })\n                    .catch(error => {\n                        notificationError(error, 'Ошибка удаления записи');\n                        tableRef && tableRef.reloadData({});\n                    });\n            }\n        }\n        cmdProps.onClickDelete && cmdProps.onClickDelete(event, _selectedRowKeys);\n    };\n\n    /** Переместить вверх / вниз */\n    const _onClickUpHandler = (event, row, rows) => {\n        _onChange(rows);\n        cmdProps.onClickUp && cmdProps.onClickUp(event, row, rows);\n    };\n\n    const _onClickDownHandler = (event, row, rows) => {\n        _onChange(rows);\n        cmdProps.onClickDown && cmdProps.onClickDown(event, row, rows);\n    };\n\n    /** Modal Events */\n    const _onSaveRow = ({type, row, requestSaveRow}) => {\n        // console.log(\"FormTable -> _saveRow -> row \", row);\n        if(type === 'select') {\n            // Получить массив строк из таблицы в модальной форме\n            let selectRows = row[name];\n            // console.log(\"FormTable -> _onSaveRow -> row [0]\", row);\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [0]\", selectRows);\n\n            // Фильтрация выбранных строк, оставить только те которых еще нет в таблице\n            let saveRows = selectRows.filter((sRow) =>\n                tableRows.findIndex((tRow) => tRow[rowKey] === sRow[rowKey]) === -1\n            );\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [1]\", saveRows);\n            if (customFields)\n                // Фильтрация по пользовательским параметрам\n                saveRows = saveRows.filter((sRow) => {\n                    let isValid = true;\n                    customFields.forEach((field) => {\n                        // Валидация по пользовательской логике функции validate\n                        if(field.validate)\n                            isValid = field.validate(sRow, tableRows);\n\n                        // Создание или переобразование по пользовательской логике функции value\n                        if(field.value)\n                            sRow[field.name] = field.value(sRow, tableRows);\n                    });\n                    if(isValid)\n                        return sRow;\n                });\n            setVisibleModals({ ...visibleModals, [type]: false });\n            notification.success({\n                message: `Добавлено ${saveRows.length} строк`\n            });\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [2]\", saveRows);\n            _addRowsToLocalTable([...tableRows, ...saveRows]);\n        }\n        else {\n            let saveRow = {...row};\n            if(type.indexOf('Group') !== -1)\n                saveRow[isGroupKey] = true;\n            else\n                saveRow[isGroupKey] = false;\n            if (customFields)\n                customFields.forEach((field) => saveRow[field.name] = field.value(saveRow, tableRows));\n            switch (type) {\n                case 'addOnServer':\n                case 'editOnServer':\n                case 'addGroupOnServer':\n                case 'editGroupOnServer':\n                    _addRowToServerTable({requestSaveRow, type, saveRow});\n                    break;\n                case 'addOnLocal':\n                case 'addGroupOnLocal':\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    _addRowToLocalTable(saveRow);\n                    break;\n                case 'editOnLocal':\n                case 'editGroupOnLocal':\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    _editRowToLocalTable(saveRow);\n                    break;\n\n                //            addGroupOnServer: false,\n                //         editGroupOnServer: false,\n                //         addGroupOnLocal: false,\n                //         editGroupOnLocal: false,\n                // case 'select':\n                case 'viewGroup':\n                case 'viewObject':\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    break;\n            }\n            // console.log(\"Modal Events => type: \", type, itemName, componentType, saveRow);\n        }\n\n    };\n\n    const _addRowToLocalTable = (row) => {\n        let saveObj = {...row};\n        if(rowKeyType === 'uuid')\n            saveObj[rowKey] = generateUUID();\n\n        // console.log('_addRowToLocalTable', tableRows);\n        _addRowsToLocalTable([...tableRows, saveObj]);\n    };\n\n    const _editRowToLocalTable = (row) => {\n        let arr = [...tableRows];\n        const rowIndex = arr.findIndex(item => item[rowKey] === row[rowKey]);\n        arr.splice(rowIndex, 1, row);\n        setTableRows(arr);\n        setTableSelectedRow(row);\n        _onChange(arr);\n    };\n\n    const _addRowsToLocalTable = (rows, keys) => {\n        // console.log('FormTable -> _addRowsToLocalTable -> rows', rows, keys);\n        setTableRows(rows);\n        if(props.selectable)\n            _onChange(keys);\n        else\n            _onChange(rows);\n    };\n\n    const _addRowToServerTable = ({requestSaveRow, type, saveRow}) => {\n        if (requestSaveRow\n            && ['addOnServer', 'editOnServer', 'addGroupOnServer', 'editGroupOnServer'].includes(type)\n        ) {\n            const method = (type === 'addOnServer' || type === 'addGroupOnServer') ? 'POST' : 'PUT';\n            // console.log(\"Modal Events => type: \", type, itemName, componentType, saveRow);\n            requestSaveRow({\n                method,\n                data: saveRow,\n            })\n                .then(response => {\n                    notification.success({\n                        message: 'Сохранение прошло успешно'\n                    });\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    tableRef && tableRef.reloadData({ filter: props.defaultFilter});\n                    // ref && ref.current && ref.current.reloadData({ filter: props.defaultFilter});\n                    // console.log('_addRowToServerTable tableRef =>', tableRef);\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\n        }\n    };\n\n    const _onRowClick = ({selected, rowData, rowIndex, rowKey}) => {\n        if(!props.selectable) {\n            setTableSelectedRow(rowData);\n            setTableSelectedRowKeys([rowKey]);\n            if(componentType === 'SelectTable')\n                _onChange([rowData]);\n        }\n        props.onRowClick && props.onRowClick({selected, rowData, rowIndex, rowKey});\n    };\n\n    const _onRowDoubleClick = ({rowData, rowIndex, rowKey}) => {\n        if (rowData[isGroupKey]) {\n            setVisibleModals({...visibleModals, viewGroup: true});\n        } else {\n            setVisibleModals({...visibleModals, viewObject: true});\n        }\n        props.onRowDoubleClick && props.onRowDoubleClick({rowData, rowIndex, rowKey});\n    };\n\n    const _onSelectedRowsChange = (keys, rows) => {\n        // console.log(\"_onSelectedRowsChange\", keys, rows);\n        if(props.selectable) {\n            setTableSelectedRow(rows[0]);\n            setTableSelectedRowKeys(keys);\n            _onChange(rows);\n        }\n    };\n\n    const _onChange = (rows) => {\n        if(rows !== undefined)\n            props.onChange(rows);\n        else\n            props.onChange(tableRows);\n    };\n\n    const getTableCls = () => {\n        let cls = [`${rtPrefix}-form-table`];\n        if (props.className)\n            cls.push(props.className);\n        return cls.join(' ');\n    };\n\n    return (\n        <div className={getTableCls()} style={props.style} >\n            <AdvancedTable\n                ref={_setTableRef}\n                {...getObjectExcludedProps(props, excludeProps)}\n                rows={tableRows}\n                setRows={setTableRows}\n                // selectedRowKeys={tableSelectedRow[rowKey] ? [tableSelectedRow[rowKey]] : []}\n                selectedRowKeys={tableSelectedRowKeys}\n                onRowClick={_onRowClick}\n                onRowDoubleClick={_onRowDoubleClick}\n                onSelectedRowsChange={_onSelectedRowsChange}\n                autoDeleteRows={false}\n                commandPanelProps={{\n                    ...props.commandPanelProps,\n                    showElements: getEvents(),// getShowElements(),\n                    onClickAdd: _onClickAddHandler,\n                    onClickAddAsCopy: _onClickAddAsCopyHandler,\n                    onClickAddGroup: _onClickAddGroupHandler,\n                    onClickEdit: _onClickEditHandler,\n                    onClickDelete: _onClickDelete,\n                    onClickDown: _onClickDownHandler,\n                    onClickUp: _onClickUpHandler,\n                }}\n                filterPanelProps={{\n                    ...props.filterPanelProps,\n                    // onApplyFilter: (filter) => console.log('filter', filter)\n                }}\n            />\n            {modals && getModals()}\n        </div>\n    );\n});\n\nFormTable.propTypes = {\n    /** Объект со свойствами Command Panel */\n    commandPanelProps: PropTypes.object,\n\n    /** Объект со свойствами Filter Panel */\n    filterPanelProps: PropTypes.object,\n\n    /**\n     * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n     * */\n\n    /** Строки по умолчанию */\n    defaultRows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ключи выделенных по умолчанию строк */\n    defaultSelectedRowKeys: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n\n    /** Значение строки поиска по умолчанию строк */\n    defaultSearchValue: PropTypes.string,\n\n    /** Объект фильтрации по умолчанию */\n    defaultFilter: PropTypes.object,\n\n    /** Сортировка по умолчанию */\n    defaultSortBy: PropTypes.shape({\n        key: PropTypes.string,\n        order: PropTypes.oneOf([SortOrder.ASC, SortOrder.DESC]),\n    }),\n\n    /**\n     * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n     * */\n\n    /** Значение строки поиска */\n    searchValue: PropTypes.string,\n\n    /** Фильтр */\n    filter: PropTypes.object,\n\n    /** Объект сортировки ({ key: 'string', order: 'asc' }).\n     * key - поле по которому сотрировать,\n     * order - направление сортировки (\"asc\", \"desc\")\n     * */\n    sortBy: PropTypes.shape({\n        key: PropTypes.string,\n        order: PropTypes.oneOf([SortOrder.ASC, SortOrder.DESC]),\n    }),\n\n    /**\n     * BASE PROPS\n     * */\n\n    /** Автоудаление строк из таблицы по кнопке в командной панели*/\n    autoDeleteRows: PropTypes.bool,\n\n    /** Поле для уникальной идентификации строки */\n    rowKey: PropTypes.string,\n\n    /** Тип поля для уникальной идентификации строки */\n    rowKeyType: PropTypes.oneOf(['uuid', 'number']),\n\n    /**\n     * VIEW PROPS\n     * */\n\n    /** Вывод когда нет данных. JSX для заглушки \"Нет данных\".  */\n    empty: PropTypes.element,\n\n    /** Отображение загрузки данных. JSX для загрузки данных. */\n    overlay: PropTypes.element,\n\n    /** Фиксированная ширина столбцов. Появится боковой скрол */\n    fixWidthColumn: PropTypes.bool,\n\n    /** Высота подвала */\n    footerHeight: PropTypes.number,\n\n    /** Отображать ли подвал */\n    footerShow: PropTypes.bool,\n\n    /** Названия футтера */\n    footerTitles: PropTypes.shape({\n        selectedRows: PropTypes.string,\n        loadedRows: PropTypes.string,\n        totalRows: PropTypes.string,\n    }),\n\n    /** Высота заголовка таблицы */\n    headerHeight: PropTypes.number,\n\n    /** Высота строки таблицы */\n    rowHeight: PropTypes.number,\n\n    /** Custom row renderer\n     * Параметры - ({ isScrolling, cells, columns, rowData, rowIndex, depth }) */\n    rowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n    /** Строки будут в зебро-стиле */\n    zebraStyle: PropTypes.bool,\n\n    /**\n     * LOAD DATA PROPS\n     * */\n\n    /** Порог в пикселях для вызова _onLoad.\n     * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n    loadThreshold: PropTypes.number,\n\n    /** Размер страницы */\n    pageSize: PropTypes.number,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n    /** Имя параметра для поиска */\n    searchParamName: PropTypes.string,\n\n    /**\n     * SELECTABLE PROPS\n     * */\n\n    /** Таблица с возможностью выбора строки */\n    selectable: PropTypes.bool,\n\n    /**\n     * TREE PROPS\n     * */\n\n    /** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\n    nodeAssociated: PropTypes.bool,\n\n    /** Ключ колонки по которой строить иерархию */\n    expandColumnKey: PropTypes.string,\n\n    /** Открыть по умолчанию вложенность до уровня N или 'All' */\n    expandDefaultAll: PropTypes.bool,\n\n    /** Загружать ноды иерархии по одной */\n    expandLazyLoad: PropTypes.bool,\n\n    /** Поле в котором хранится ссылка на родителя */\n    expandParentKey: PropTypes.string,\n\n    /**\n     * EVENTS\n     * */\n\n    /** Событие при клике на строку (только при selectable = false)\n     * Параметр - ({selected, rowData, rowIndex}) */\n    onRowClick: PropTypes.func,\n\n    /** Событие при двойном клике на строку.\n     * Параметр - ({rowData, rowIndex, rowKey}) */\n    onRowDoubleClick: PropTypes.func,\n\n    /** События при открытии / закрытии ноды\n     * Парметры - ({ expanded, rowData, rowIndex, rowKey }) */\n    onRowExpand: PropTypes.func,\n\n    /** Событие при выборе строки.\n     * Параметр - массив выбранных строе (только rowKey) */\n    onSelectedRowsChange: PropTypes.func,\n\n    /** События при открытии / закрытии ноды\n     * Парметры - (expandedRowKeys) - массив ключей открытых нод */\n    onExpandedRowsChange: PropTypes.func,\n\n    /** SELECTED PANEL */\n\n    /** Отображать ли панель выбранных элементов */\n    showSelection: PropTypes.bool,\n\n    /** Строка или функция для отображения элементов списка выбранных\n     * Строка - имя поля\n     * Функция - рендер строк.\n     * Параметры - ({ rowData, rowIndex }) */\n    rowRenderShowSelection: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.string,\n    ]),\n\n\n    /** Дополнительные пропсы для колонок */\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\n\n    /** Дополнительные поля и валидация в объекты таблицы */\n    customFields: PropTypes.arrayOf(PropTypes.object),\n\n    /** Модальные окна */\n    modals: PropTypes.arrayOf(PropTypes.object),\n\n    /** Событие об изменении объектов таблицы\n     * Параметр - (rows)*/\n    onChange: PropTypes.func,\n\n    /** implemented - только для (LocalTable + selectable) - Контроль значение из вне */\n    // value: PropTypes.arrayOf(PropTypes.object),\n\n    /** Not implemented - Задание значений по умолчанию */\n    defaultValue: PropTypes.arrayOf(PropTypes.object),\n\n    /** Классы стилей */\n    className: PropTypes.string,\n\n    /** Стили */\n    style: PropTypes.object,\n\n    /** Поле для идентификации группы */\n    isGroupKey: PropTypes.string,\n\n    /** Объект history для перемещения по путям */\n    history: PropTypes.object,\n\n    /** Функция запроса на получение конфига для таблицы */\n    requestLoadConfig: PropTypes.func,\n\n    /** Функция запроса на уделание данных */\n    requestDeleteRow: PropTypes.func,\n\n    /** Параметры объекта удаления */\n    dataDeleteRow: PropTypes.object,\n};\n\nFormTable.defaultProps = {\n    defaultRows: [],\n    defaultSelectedRowKeys: [],\n    defaultSearchValue: '',\n    defaultFilter: {},\n    defaultSortBy: {},\n\n    searchValue: '',\n    filter: {},\n    sortBy: {},\n\n    autoDeleteRows: true,\n    rowKey: 'id',\n\n    empty: empty,\n    overlay: overlay,\n    fixWidthColumn: false,\n    footerHeight: 30,\n    footerShow: false,\n    footerTitles: {\n        selectedRows: 'Выделено:',\n        loadedRows: 'Загружено записей:',\n        totalRows: 'Всего записей:',\n    },\n    headerHeight: 30,\n    rowHeight: 30,\n    zebraStyle: false,\n\n    loadThreshold: 300,\n    pageSize: 50,\n    requestLoadRows: noop,\n    requestLoadCount: noop,\n    searchParamName: 'searchLine',\n\n    selectable: false,\n\n    nodeAssociated: true,\n    expandColumnKey: undefined,\n    expandDefaultAll: true,\n    expandLazyLoad: false,\n    expandParentKey: 'parentId',\n\n    onRowClick: noop,\n    onRowDoubleClick: noop,\n    onRowExpand: noop,\n    onSelectedRowsChange: noop,\n    onExpandedRowsChange: noop,\n\n    showSelection: false,\n\n    rowKeyType: 'uuid',\n    onChange: noop,\n    isGroupKey: 'isGroup',\n};\n\nexport default FormTable;\n","import React, {useState, useEffect} from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../../redux/rtd.actions\";\nimport {getObjectExcludedProps} from '../../utils/baseUtils';\nimport moment from \"moment\";\nimport { Typography as AntTypography } from \"antd\";\nimport { getISO, toFormat } from \"../../utils/datesUtils\";\n\nexport const withStore = (Component, antFormItemProps) => {\n\n    const mapStateToProps = (store, ownProps) => {\n        const {subscribe} = ownProps;\n        if(subscribe){\n            const {name, path} = subscribe;\n            if(name && path)\n                return { [name]: objectPath.get(store, path) };\n        }\n\n        return {};\n    };\n    const mapDispatchToProps = (dispatch) =>\n        bindActionCreators({ setDateStore: setDateStore}, dispatch);\n\n    const defaultGetValueFromEvent = (valuePropName, event) => {\n        if (event && event.target && valuePropName in event.target) {\n            return event.target[valuePropName];\n        }\n        return event;\n    };\n\n    const defaultProps = {\n        trigger: 'onChange',\n        valuePropName: 'value',\n    };\n\n    const withStoreProps = { ...defaultProps, ...antFormItemProps };\n\n    return connect(mapStateToProps, mapDispatchToProps)( (props) => {\n\n        const {dispatchPath} = props;\n\n        const subscribe = props.subscribe ? props.subscribe : {};\n\n        const [subscribeProps, setSubscribeProps] = useState({});\n\n        const {trigger, getValueFromEvent, valuePropName} = withStoreProps;\n\n        const excludeProps = ['componentType', 'setDateStore', 'subscribe', subscribe.name, 'dispatchPath'];\n\n        const getValue = (...args) => {\n            let newValue;\n            if (getValueFromEvent) {\n                newValue = getValueFromEvent(...args);\n                // console.log(\"storeHOC => getValueFromEvent: \", newValue);\n            } else {\n                newValue = defaultGetValueFromEvent(valuePropName, ...args);\n                // console.log(\"storeHOC => defaultGetValueFromEvent: \", newValue);\n            }\n            return newValue;\n        };\n\n        /** Подписка на изменение props[subscribe.name] в сторе */\n        useEffect( () => {\n            if(subscribe.name) {\n                // console.log(\"storeHOC => subscribe: \", props[subscribe.name]);\n                subscribe.onChange && subscribe.onChange({value: props[subscribe.name], setSubscribeProps});\n            }\n            // console.log(\"Change Props[2]: \", props.subscribeЗф);\n        }, [props[subscribe.name]]);\n\n        useEffect(() => {\n            // dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, props.value);\n            if(dispatchPath) {\n                const newValue = props[valuePropName];\n                // console.log(\"storeHOC => dispatch: \", newValue);\n                dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, newValue);\n            }\n        }, [props]);\n\n        useEffect(() => {\n            if(subscribeProps.value) {\n                // console.log('subscribeProps.value => ', subscribeProps.value);\n                props[trigger] && props[trigger](subscribeProps.value);\n            }\n        }, [subscribeProps.value]);\n\n        const onChange = (...args) => {\n            // const newValue = getValue(...args);\n            // dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, newValue);\n            props[trigger] && props[trigger](...args);\n        };\n\n        const childProps = getObjectExcludedProps(props, excludeProps);\n        return <Component {...childProps} {...subscribeProps} {...{[trigger]: onChange }}/>\n    })\n};\n\n\nexport const DatePickerHOC = (Component) => {\n    return props => {\n        // console.log(\"DatePickerHOC => \", props);\n        if(props.value){\n            if(typeof props.value === 'string'){\n                // console.log(\"DatePickerHOC => onChange => string\");\n                props.onChange(moment(props.value), props.value);\n            }\n            // else {\n            // \tconsole.log(\"DatePickerHOC => onChange => moment\");\n            // \tprops.onChange(props.value, props.format ? toFormat(props.value,props.format) : getISO(props.value));\n            // }\n        }\n        const value = props.value ? (typeof props.value === 'string' ? moment(props.value) : props.value) : null;\n        return <Component {...props} value={value} />\n    };\n};\n\nexport const TypographyTitle = (props) =>\n    <AntTypography.Title {...props}> {props.label || props.value} </AntTypography.Title>;\n\nexport const TypographyText = (props) =>\n    <AntTypography.Text {...props}> {props.label || props.value} </AntTypography.Text>;\n\nexport const TypographyDate = (props) => {\n    const {label, value, format } = props;\n    const _value = value ? (format ? toFormat(value, format) : getISO(value)) : null;\n    return <AntTypography.Text {...props}> {label || _value} </AntTypography.Text>;\n}\n","const getTitle = (type, element) => {\n    if(element === 'Group')\n        if(type === 'edit')\n            return 'Изменение папки';\n        else\n            return 'Создание папки';\n    else\n        return 'Изменение файла';\n};\n\nconst Modal = (type, element, requestSaveRow, processBeforeSaveForm, parentLoadHandler, requestLoadRows) => {\n    // console.log(\"FolderModal\", type, requestSaveRow, processBeforeSaveForm, parentLoadHandler, requestLoadRows);\n    let selectedRow;\n    return {\n        type: `${type}${element}OnServer`,\n        title: getTitle(type, element),\n        requestSaveRow: requestSaveRow,\n        width: 500,\n        // bodyStyle: {height: 650},\n        form: {\n            name: 'FileManagerModalModal',\n            labelCol: {span: 8},\n            wrapperCol: {span: 16},\n            processBeforeSaveForm: (rawValues) => processBeforeSaveForm(rawValues, type, element),\n            loadInitData: (callBack, row) => {\n                selectedRow = row;\n                callBack(type === 'edit' ? row : null);\n            },\n            body: [\n                {\n                    componentType: 'Item',\n                    label: 'Наименование',\n                    name: 'name',\n                    rules: [\n                        {\n                            message: `Заполните наименование`,\n                            required: true,\n                        },\n                    ],\n                    child: {componentType: 'Input'},\n                },\n                type === 'edit'\n                    ? {\n                        componentType: 'Item',\n                        label: 'Родитель',\n                        name: 'parentId',\n                        child: {\n                            componentType: 'SingleSelect',\n                            widthControl: 0,\n                            heightPopup: 300,\n                            expandColumnKey: 'id',\n                            rowRender: 'name',\n                            nodeAssociated: false,\n                            expandDefaultAll: true,\n                            // (info) аналогично ({params, data})\n                            // Но поскольку тут раскрывать объект не нужно, мы можем просто передать его дальше\n                            requestLoadRows: (info) => parentLoadHandler(type, selectedRow, info),\n                            requestLoadDefault: requestLoadRows,\n                        },\n                    }\n                    : {},\n            ],\n        },\n    };\n};\n\nexport const AddFolderModal = (...args) => Modal('add', 'Group', ...args);\nexport const EditFolderModal = (...args) => Modal('edit', 'Group', ...args);\nexport const EditFileModal = (...args) => Modal('edit', '', ...args);\n\n","import {notification} from 'antd';\n\nexport const copyTextToClipboard = text => {\n\tif (!navigator.clipboard) {\n\t\tfallbackCopyTextToClipboard(text);\n\t\treturn;\n\t}\n\tnavigator.clipboard.writeText(text).then(\n\t\tfunction() {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'success',\n\t\t\t\t'Успешно',\n\t\t\t\t`[${text}] успешно копирован в буфер обмена`\n\t\t\t);\n\t\t},\n\t\tfunction(err) {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'error',\n\t\t\t\t'Ошибка',\n\t\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\n\t\t\t);\n\t\t}\n\t);\n};\n\nconst fallbackCopyTextToClipboard = text => {\n\tlet textArea = document.createElement('textarea');\n\ttextArea.value = text;\n\n\t// Avoid scrolling to bottom\n\ttextArea.style.top = '0';\n\ttextArea.style.left = '0';\n\ttextArea.style.position = 'fixed';\n\n\tdocument.body.appendChild(textArea);\n\ttextArea.focus();\n\ttextArea.select();\n\n\ttry {\n\t\tlet successful = document.execCommand('copy');\n\t\tif (successful) {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'success',\n\t\t\t\t'Успешно',\n\t\t\t\t`[${text}] успешно копирован в буфер обмена`\n\t\t\t);\n\t\t} else {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'error',\n\t\t\t\t'Ошибка',\n\t\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\n\t\t\t);\n\t\t}\n\t} catch (err) {\n\t\topenNotificationWithIcon(\n\t\t\t'error',\n\t\t\t'Ошибка',\n\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\n\t\t);\n\t}\n\tdocument.body.removeChild(textArea);\n};\n\nconst openNotificationWithIcon = (type, title, msg) => {\n\tnotification[type]({\n\t\tmessage: title,\n\t\tdescription: msg\n\t});\n};\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormTable from \"../Form/FormTable\";\nimport {Button, Upload, notification as antNotification, Spin, Typography, Tooltip} from 'antd';\nimport {\n    HomeOutlined,\n    RollbackOutlined,\n    FolderFilled,\n    FileOutlined,\n    PlusOutlined,\n    LoadingOutlined,\n    FileWordOutlined,\n    FileExcelOutlined,\n    FileImageOutlined,\n    FileMarkdownOutlined,\n    FilePdfOutlined,\n    FilePptOutlined,\n    FileTextOutlined,\n    FileZipOutlined,\n    CopyOutlined\n} from '@ant-design/icons';\nimport { AddFolderModal, EditFileModal, EditFolderModal } from \"./AddFolderModal\";\nimport { rtPrefix } from \"../../utils/variables\";\nimport { toDDMMYYYYHHMMSS } from \"../../utils/datesUtils\";\nimport { copyTextToClipboard } from \"../../utils/clipboardUtils\";\nimport { notificationError } from \"../../utils/baseUtils\";\n\nconst FileManager = props => {\n\n    const {\n        rowKey,\n        isGroupKey,\n        expandParentKey\n    } = props;\n\n    const [tableRef, setTableRef] = useState({});\n    const _setTableRef = (ref) => setTableRef(ref);\n\n    // const tableRef = React.createRef();\n\n    const [breadcrumb, setBreadcrumb] = useState([{[rowKey]: null, name: <HomeOutlined />}]);\n    const [tableFilter, setTableFilter] = useState({deleted: false, [expandParentKey]: null});\n\n\n\n    /**\n     * TABLE EVENTS\n     */\n\n    // Down to folder OR download file\n    const _onRowDoubleClick = ({rowData, rowIndex, rowKey}) => {\n        if(rowData.isGroup) {\n            loadTable([...breadcrumb, rowData], { [expandParentKey]: rowKey });\n        } else {\n            props.requestDownloadFile(rowKey)\n        }\n        props.onRowDoubleClick && props.onRowDoubleClick({rowData, rowIndex, rowKey});\n    };\n\n    // Jump to folder\n    const _onClickBreadcrumb = (parentId, index) => {\n        loadTable(breadcrumb.slice(0, index), {[expandParentKey]: parentId})\n    };\n\n    // Up to folder\n    const _onClickBack = () => {\n        if(breadcrumb.length > 1) {\n            const newBreadcrumb = breadcrumb.slice(0, breadcrumb.length - 1);\n            // setBreadcrumb(newBreadcrumb);\n            // tableRef && tableRef.reloadData({ filter: { parentId: newBreadcrumb[newBreadcrumb.length - 1].id } });\n            loadTable(newBreadcrumb, { [expandParentKey]: newBreadcrumb[newBreadcrumb.length - 1][rowKey] })\n        }\n    };\n\n    // Delete folder OR file\n    const _onClickDelete = (event, _selectedRowKeys) => {\n        if(_selectedRowKeys && _selectedRowKeys.length > 0){\n            props.requestDeleteRow({data: {[rowKey]: _selectedRowKeys[0], deleted: true}})\n                .then((response) => {\n                    antNotification.success({message: 'Файл успешно удален'});\n                    tableRef && tableRef.reloadData({filter: tableFilter});\n                })\n                .catch(error => {\n                    notificationError(error, 'Ошибка удаления файла');\n                    tableRef && tableRef.reloadData({filter: tableFilter});\n                });\n        }\n    };\n\n    /**\n     * TABLE FUNCs\n     */\n    const loadTable = (breadcrumb, filter) => {\n        setBreadcrumb(breadcrumb);\n        const newFilter = {...tableFilter, ...filter};\n        setTableFilter(newFilter);\n        tableRef && tableRef.reloadData({filter: newFilter});\n    };\n\n\n    /**\n     * MODAL FUNCs\n     */\n    const processBeforeSaveModal = (rawValues, type, element) => {\n        let values = {...rawValues};\n        if(type === 'add')\n            values[expandParentKey] = breadcrumb[breadcrumb.length - 1][rowKey];\n\n        if(element === 'Group')\n            values.extension = 'dir';\n        // console.log(\"FileManager values =>\", values);\n        return values;\n    };\n\n    const parentLoadHandler = (type, selectedRow, {params, data}) => {\n        let newData = {...data, [isGroupKey]: true};\n        if (type === 'edit') newData.owner = selectedRow && selectedRow[rowKey];\n        return props.requestLoadParent({ params, data: newData, });\n    };\n\n    // const _onChangeViewDeleted = (checked) => {\n    //     const newFilter = {...tableFilter, deleted: checked };//? undefined : checked};\n    //     setTableFilter(newFilter);\n    //     tableRef && tableRef.reloadData({filter: newFilter});\n    // };\n\n    // console.log(\"EditFolderModal\", EditFolderModal(props.requestSaveRow, processBeforeSaveForm));\n\n\n    /**\n     * UPLOAD FUNCs\n     */\n\n    const _uploadFile = (file) => {\n        // console.log('beforeUpload fileList => ', fileList);\n        notification(file, 'loading');\n        if (props.requestUploadFile) {\n            props.requestUploadFile({ file: file, [expandParentKey]: breadcrumb[breadcrumb.length - 1][rowKey] })\n                .then((response) => {\n                    notification(file, 'success');\n                    tableRef && tableRef.reloadData({ filter: tableFilter });\n                })\n                .catch(() => {\n                    notification(file, 'error');\n                    tableRef && tableRef.reloadData({ filter: tableFilter });\n                });\n        }\n        return false;\n    };\n\n    const notification = (file, type) => {\n        const notifProps = {\n            key: file.uid,\n            duration: type === 'loading' ? 0 : 5,\n            icon: type === 'loading'\n                ? <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n                : null,\n            message: <span>Загрузка файла: <Typography.Text code>{file.name}</Typography.Text></span>\n        };\n        switch (type) {\n            case 'loading':\n                antNotification.info(notifProps);\n                break;\n            case 'success':\n                antNotification.success(notifProps);\n                break;\n            case 'error':\n                antNotification.error(notifProps);\n                break;\n            case 'close':\n                antNotification.close(file.uid);\n                break;\n            default:\n                break;\n        }\n    };\n\n    /**\n     * RENDER PARAMS\n     */\n    const customColumnProps = [\n        {\n            name: 'dateCreate',\n            cellRenderer: ({cellData}) => toDDMMYYYYHHMMSS(cellData),\n        },\n        {\n            name: 'dateUpdate',\n            cellRenderer: ({cellData}) => toDDMMYYYYHHMMSS(cellData),\n        },\n        {\n            name: 'path',\n            cellRenderer: ({rowData}) =>\n                rowData[isGroupKey] ? null\n                    :\n                <Tooltip title=\"Скопировать путь к файлу\">\n                    <CopyOutlined onClick={() => copyTextToClipboard(props.pathDownloadFile(rowData[rowKey]))}/>\n                </Tooltip>,\n        },\n        {\n            name: 'name',\n            cellRenderer: ({rowData}) => {\n                const styleDiv = {display: 'flex', alignItems: 'center'};\n                let Icon;\n                let styleIcon = {marginRight: '10px', fontSize: '16px'};\n                switch (rowData.extension) {\n                    case 'dir':\n                        Icon = FolderFilled;\n                        styleIcon.color = '#3a88c9';\n                        break;\n                    case 'doc':\n                    case 'docm':\n                    case 'docx':\n                    case 'dot':\n                    case 'dotx':\n                        Icon = FileWordOutlined;\n                        styleIcon.color = '#185abc';\n                        break;\n                    case 'xlm':\n                    case 'xls':\n                    case 'xlsm':\n                    case 'xlt':\n                    case 'xltm':\n                    case 'xltx':\n                    case 'xlsx':\n                        Icon = FileExcelOutlined;\n                        styleIcon.color = '#1f7244';\n                        break;\n                    case 'png':\n                    case 'jpg':\n                    case 'jpeg':\n                    case 'tiff':\n                    case 'bmp':\n                    case 'ico':\n                    case 'gif':\n                    case 'svg':\n                        Icon = FileImageOutlined;\n                        break;\n                    case 'markdown':\n                    case 'md':\n                        Icon = FileMarkdownOutlined;\n                        styleIcon.color = '#175987';\n                        break;\n                    case 'pdf':\n                        Icon = FilePdfOutlined;\n                        styleIcon.color = '#bd1f07';\n                        break;\n                    case 'ppt':\n                        Icon = FilePptOutlined;\n                        styleIcon.color = '#be5239';\n                        break;\n                    case 'txt':\n                        Icon = FileTextOutlined;\n                        break;\n                    case 'zip':\n                        Icon = FileZipOutlined;\n                        break;\n                    default:\n                        Icon = FileOutlined;\n                }\n\n\n                return (\n                    <div style={styleDiv}>\n                        {/*{rowData.isGroup*/}\n                        {/*    ? <FolderFilled style={{ marginRight: '10px', color: '#3a88c9'}}/>*/}\n                        {/*    : <FileOutlined style={{ marginRight: '10px' }}/>*/}\n                        {/*}*/}\n                        <Icon style={styleIcon}/>\n                        {rowData.name}\n                    </div>\n                );\n            },\n        }\n    ];\n\n    const uploadProps = {\n        multiple: true,\n        showUploadList: false,\n        beforeUpload: _uploadFile\n    };\n\n    const uploadRender = () => {\n        return (\n            <Upload {...uploadProps}>\n                <Button icon={<PlusOutlined />}/>\n            </Upload>\n        )\n    };\n\n    const breadcrumbRender = () => {\n        return (\n            <span className={`${rtPrefix}-file-manager-breadcrumb ml-8`}>\n                {breadcrumb.map((item, index) =>\n                    <span\n                        key={item[rowKey]}\n                        // type=\"text\"\n                        className={`${rtPrefix}-file-manager-breadcrumb-btn`}\n                        onClick={() => _onClickBreadcrumb(item[rowKey], index + 1)}\n                    >\n                        <span>/</span><span>{item.name}</span>\n                    </span>\n                )}\n            </span>\n        )\n    };\n\n    return (\n        <FormTable\n            {...props}\n            ref={_setTableRef}\n            type={'serverSide'}\n            componentType={'FilesTable'}\n            onRowDoubleClick={_onRowDoubleClick}\n            defaultFilter={tableFilter}\n            customColumnProps={customColumnProps}\n            commandPanelProps={{\n                ...props.commandPanelProps,\n                onClickDelete: _onClickDelete,\n                systemBtnProps: {\n                    add: {\n                        actionType: 'modal',\n                        tooltip: 'Загрузить файл(ы)',\n                        render: uploadRender\n                    },\n                    addGroup: {actionType: 'modal', tooltip: 'Создать папку'},\n                    edit: {actionType: ['modal', 'modal']},\n                    delete: {}\n                },\n                leftCustomSideElement: [\n                    {\n                        componentType: 'Item',\n                        child: {\n                            componentType: 'Button',\n                            icon: <RollbackOutlined />,\n                            label: 'Back',\n                            className: 'ml-4',\n                            disabled: (breadcrumb.length === 1),\n                            onClick: _onClickBack\n                        }\n                    },\n                    {\n                        componentType: 'Item',\n                        child: {\n                            componentType: 'Custom',\n                            render: breadcrumbRender\n                        }\n                    }\n                ],\n                // rightCustomSideElement: [\n                //     {\n                //         componentType: 'Item',\n                //         label: 'View deleted',\n                //         className: 'mb-0',\n                //         child: {\n                //             componentType: 'Switch',\n                //             checked: tableFilter.deleted,\n                //             onChange: _onChangeViewDeleted\n                //         }\n                //     },\n                // ]\n            }}\n            modals={[\n                AddFolderModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows),\n                EditFolderModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows),\n                EditFileModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows)\n            ]}\n        />\n    );\n};\n\nFileManager.propTypes = {\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция запроса на получение конфига для таблицы */\n    requestLoadConfig: PropTypes.func,\n};\n\nFileManager.defaultProps = {\n    rowKey: 'id',\n    isGroupKey: 'isGroup',\n    expandParentKey: 'parentId',\n};\n\nexport default FileManager;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport FormModal from \"../Form/FormModal\";\nimport { notification, Button} from \"antd\";\nimport { notificationError } from \"../../utils/baseUtils\";\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../../redux/rtd.actions\";\n\nconst Modal = props => {\n\n    const {buttonProps, modalConfig, modalData, dispatchPath} = props;\n\n    const [visible, setVisible] = useState(false);\n    const [_modalData, _setModalData] = useState({});\n    const [_buttonProps, setButtonProps] = useState({});\n\n    const subscribe = props.subscribe ? props.subscribe : {};\n\n    const setModalData = (value) => {\n        // console.log(\"setModalData: \", value);\n        _setModalData && _setModalData(value);\n    }\n\n    useEffect(() => {\n        _setModalData(modalData);\n    }, []);\n\n    /** Подписка на изменение props[subscribe.name] в сторе */\n    useEffect( () => {\n        if(subscribe.name) {\n            // console.log(\"Modal => subscribe: \", props[subscribe.name]);\n            subscribe.onChange && subscribe.onChange({value: props[subscribe.name], setModalData, setButtonProps});\n        }\n        // console.log(\"Change Props[2]: \", props.subscribeЗф);\n    }, [props[subscribe.name]]);\n\n    const _onOpenModal = () => {\n        // console.log(\"Modal => _modalData: \", _modalData);\n        setVisible(true)\n    }\n\n    const _onCloseModal = () => {\n        setVisible(false)\n    }\n\n    const _onSaveRow = ({type, row, requestSaveRow}) => {\n        dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, row);\n\n        if (requestSaveRow\n            && ['addOnServer', 'editOnServer', 'addGroupOnServer', 'editGroupOnServer'].includes(type)\n        ) {\n            const method = (type === 'addOnServer' || type === 'addGroupOnServer') ? 'POST' : 'PUT';\n            // console.log(\"Modal Events => type: \", type, method, row, _modalData);\n            requestSaveRow({\n                method,\n                data: row,\n            })\n                .then(response => {\n                    notification.success({\n                        message: 'Сохранение прошло успешно'\n                    });\n                    _onCloseModal();\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении'));\n        } else _onCloseModal();\n    };\n\n    return (\n        <React.Fragment>\n            <Button\n                type=\"primary\"\n                {...buttonProps}\n                {..._buttonProps}\n                onClick={_onOpenModal}\n            >{buttonProps && buttonProps.label}</Button>\n            <FormModal\n                modal={modalConfig}\n                selectedRow={_modalData}\n                visible={visible}\n                setVisible={_onCloseModal}\n                saveRow={_onSaveRow}\n            />\n        </React.Fragment>\n    )\n};\n\nModal.propTypes = {\n\n    /** Свойства [Button](https://ant.design/components/button/) из Ant Design\n     * Добавлено свойство `label` с типом `ReactNode` или `string` для формирования контента кнопки*/\n    buttonProps: PropTypes.object,\n\n    /** Объект модального окна. Стандартная конфигурация. */\n    modalConfig: PropTypes.object,\n\n    /** Данные для модального окна */\n    modalData: PropTypes.object,\n\n    /** Путь в сторе куда класть данных окна после закрытия */\n    dispatchPath: PropTypes.string,\n\n    /** Объект для подписки на изменения в STORE */\n    subscribe: PropTypes.object,\n};\n\nconst mapStateToProps = (store, ownProps) => {\n    const {subscribe} = ownProps;\n    if(subscribe){\n        const {name, path} = subscribe;\n        if(name && path)\n            return { [name]: objectPath.get(store, path) };\n    }\n    return {};\n};\nconst mapDispatchToProps = (dispatch) =>\n    bindActionCreators( { setDateStore: setDateStore, }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Select from '../Select/Select';\nimport {\n\tInput,\n\tInputNumber,\n\tForm as AntForm,\n\tButton,\n\tCheckbox,\n\tSwitch,\n\tDatePicker,\n\tRadio,\n    Divider,\n} from 'antd';\nimport { getObjectExcludedProps, getValueFromMultiSelect, getValueFromSingleSelect } from \"../../utils/baseUtils\";\nimport FormTable from './FormTable';\n// import Typography from './Typography';\nimport { withStore, DatePickerHOC, TypographyTitle, TypographyText, TypographyDate } from \"./HOCs\";\nimport FileManager from \"../FileManager/FileManager\";\nimport Modal from \"../Modal/Modal\";\n\nconst excludeProps = ['child', 'componentType', 'field'];\nconst noAntItemTypes = ['Title', 'Text', 'Divider', 'Button', 'LocalTable', 'ServerTable', 'InfinityTable'];\n\nconst FormItem = (props) => {\n\n\tconst {child, field} = props;\n\tlet antFormItemProps = getObjectExcludedProps(props, excludeProps);\n\n\t// Если тип элемента Select -> добавить доп свойства к Form.Item\n    if (child && child.componentType && (child.componentType === 'SingleSelect' || child.componentType === 'MultiSelect')) {\n        antFormItemProps.valuePropName = 'defaultSelectedRowKeys';\n        antFormItemProps.getValueFromEvent = child.componentType === 'SingleSelect' ? getValueFromSingleSelect : getValueFromMultiSelect;\n        antFormItemProps.trigger = 'onChangeKeys';\n    } else if (child && child.componentType && child.componentType === 'SelectTable') {\n        // antFormItemProps.getValueFromEvent = getValueFromSelectTable;\n        // antFormItemProps.trigger = 'onRowClick';\n    }\n\n\t// console.log('FormItem props => ', props);\n\n\tconst getItem = () => {\n\t\tif (child) {\n\t\t    // const childProps = getObjectExcludedProps(child, ['componentType']);\n\t\t\tconst childProps = {...child};\n            // console.log('FormItem childProps => ', childProps);\n\t\t\tlet Component;\n\t\t\tlet placeholder;\n            switch (child.componentType) {\n\t\t\t\tcase 'Button':\n\t\t\t\t\tComponent = withStore(Button, antFormItemProps);\n\t\t\t\t\t// console.log('Props field => ', field);\n\t\t\t\t\tconst onClick = (e) => childProps.onClick && childProps.onClick(e, field);\n\t\t\t\t\treturn (<Component {...childProps} onClick={onClick}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'Title':\n\t\t\t\t\tComponent = withStore(TypographyTitle, antFormItemProps);\n\t\t\t\t\treturn (<Component {...child} componentType={child.componentType}/>);\n\t\t\t\tcase 'Text':\n\t\t\t\t\tComponent = withStore(TypographyText, antFormItemProps);\n\t\t\t\t\treturn (<Component {...child} componentType/>);\n\t\t\t\tcase 'Divider':\n\t\t\t\t\tComponent = withStore(Divider, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'Checkbox':\n\t\t\t\t\tComponent = withStore(Checkbox, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'DatePicker':\n\t\t\t\t\tComponent = withStore(DatePickerHOC(DatePicker), antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Выберите дату';\n\t\t\t\t\tconst style = {width: '100%', ...(childProps && childProps.style)};\n\t\t\t\t\treturn (<Component{...childProps} style={style} placeholder={placeholder}/>);\n\t\t\t\tcase 'DateText':\n\t\t\t\t\tComponent = withStore(TypographyDate, antFormItemProps);\n\t\t\t\t\treturn (<Component {...child} />);\n\t\t\t\tcase 'Input':\n\t\t\t\t\tComponent = withStore(Input, antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите значение';\n\t\t\t\t\treturn (<Component {...childProps} placeholder={placeholder} />);\n\t\t\t\tcase 'TextArea':\n\t\t\t\t\tComponent = withStore(Input.TextArea, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps} />);\n\t\t\t\tcase 'Password':\n\t\t\t\t\tComponent = withStore(Input.Password, antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите пароль';\n\t\t\t\t\treturn (<Component {...childProps} placeholder={placeholder}/>);\n\t\t\t\tcase 'InputNumber':\n\t\t\t\t\tComponent = withStore(InputNumber, antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите значение';\n\t\t\t\t\treturn (<Component {...childProps} style={{width: '100%'}} placeholder={placeholder}/>);\n\t\t\t\tcase 'Radio':\n\t\t\t\t\tComponent = withStore(Radio, antFormItemProps);\n\t\t\t\t\treturn <Component {...childProps}>{childProps && childProps.label}</Component>;\n\t\t\t\tcase 'RadioButton':\n\t\t\t\t\tComponent = withStore(Radio.Button, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'Switch':\n\t\t\t\t\tComponent = withStore(Switch, antFormItemProps);\n\t\t\t\t\treturn <Component {...childProps} />;\n                case \"RadioGroup\":\n                    Component = withStore(Radio.Group, antFormItemProps);\n                    return (<Component {...childProps} />);\n\t\t\t\tcase 'SingleSelect':\n                case 'MultiSelect':\n\t\t\t\t\treturn <Select {...childProps} type={child.componentType} name={antFormItemProps.name}/>;\n\t\t\t\t\t//'infinity', 'serverSide', 'localSide'\n                case 'InfinityTable':\n                    childProps.type = 'infinity';\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\n                case 'ServerTable':\n                    childProps.type = 'serverSide';\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\n                case 'LocalTable':\n                    childProps.type = 'localSide';\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\n                case 'SelectTable':\n\t\t\t\t\tchildProps.type = 'localSide';\n\t\t\t\t\treturn <FormTable {...childProps} name={props.name} componentType={child.componentType} /> ;\n\t\t\t\tcase 'FileManager':\n\t\t\t\t\treturn <FileManager {...childProps} name={props.name} />;\n\t\t\t\tcase 'Modal':\n\t\t\t\t\treturn <Modal {...childProps} name={props.name} />;\n\t\t\t\tcase 'Custom':\n\t\t\t\t\tComponent = withStore(child.render, antFormItemProps);\n\t\t\t\t\treturn <Component {...childProps}/>;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t};\n\n    if(!antFormItemProps.label)\n        return <AntForm.Item {...antFormItemProps} noStyle>{getItem()}</AntForm.Item>;\n    else\n        return <AntForm.Item {...antFormItemProps}>{getItem()}</AntForm.Item>;\n};\n\nFormItem.propTypes = {\n\tchild: PropTypes.object.isRequired\n};\n\nexport default FormItem;\n","import React from 'react';\nimport {rtPrefix} from '../../utils/variables';\nimport PropTypes from \"prop-types\";\n\nconst Layout = props => {\n\n    let itemProps = {};\n    Object.keys(props).forEach((key) =>\n        key !== 'children' ? (itemProps[key] = props[key]) : null\n    );\n\n    const getCls = () => {\n        let cls = [`${rtPrefix}-layout`];\n        itemProps.className && cls.push(itemProps.className);\n        return cls.join(' ');\n    };\n\n    return (\n        <div {...itemProps} className={getCls()}>\n            {props.children}\n        </div>\n    );\n};\n\nLayout.propTypes = {\n    /** Строка класса */\n    className: PropTypes.string,\n\n    /** Объект стиля */\n    style: PropTypes.object,\n};\n\nexport default Layout;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormItem from \"./FormItem\";\nimport Layout from \"../Layout/Layout\";\nimport { Row, Col, Tabs, Radio, Form as AntForm, Input, Space } from \"antd\";\nimport { getObjectExcludedProps } from \"../../utils/baseUtils\";\n\nconst excludeProps = [\"children\", \"componentType\"];\n\nconst FormItems = (props) => {\n    const { items } = props;\n\n    // console.log('FormItems props => ', props);\n\n    const getItems = (data, antFormListParams) => {\n\n        return (data && data.map((item, index) => {\n            let itemProps = getObjectExcludedProps(item, excludeProps);\n            // console.log('FormItems index => ', index);\n\n            switch (item.componentType) {\n                case \"Row\":\n                    return (\n                        <Row key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Row>\n                    );\n                case \"Col\":\n                    return (\n                        <Col key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Col>\n                    );\n                case \"Layout\":\n                    return (\n                        <Layout key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Layout>\n                    );\n                case \"Tabs\":\n                    return (\n                        <Tabs key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Tabs>\n                    );\n                case \"TabPane\":\n                    return (\n                        <Tabs.TabPane key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Tabs.TabPane>\n                    );\n                case \"RadioGroup\":\n                    return (\n                        <Radio.Group key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Radio.Group>\n                    );\n                case \"Item\":\n                    let _item = { ...item };\n                    let _key = index;\n                    if (antFormListParams && antFormListParams.field) {\n                        if (_item.name) {\n                            if (Array.isArray(_item.name)) {\n                                _item.name = [antFormListParams.field.name, ..._item.name];\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\n                            } else {\n                                _item.name = [antFormListParams.field.name, _item.name];\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\n                            }\n                        }\n                    }\n                    // console.log('_item ', _item.name);\n                    return <FormItem key={`${_key}`} {..._item} field={{ ...antFormListParams }}/>;\n                case \"ListItems\":\n                    return (\n                        <AntForm.List key={index} {...itemProps}>\n                            {(fields, operation) => {\n                                const param = { fields: [...fields], operation: { ...operation } };\n                                return getItems(item.children, param);\n                            }}\n                        </AntForm.List>\n                    );\n                case \"ListItem\":\n                    // console.log('antFormListParams => ', antFormListParams);\n                    return (\n                        <div key={index}>\n                            {antFormListParams && antFormListParams.fields && antFormListParams.fields.map((field, fIndex) => {\n                                // console.log('index field.key', index, field);\n                                const param = { field: { ...field }, ...antFormListParams };\n                                return <div key={field.key}>{getItems(item.children, param)} </div>;\n                            })}\n                        </div>\n                    );\n\n\n                default:\n                    return null;\n            }\n        })) || null;\n    };\n\n    return getItems(items);\n};\n\nFormItems.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default FormItems;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {noop} from '../../utils/baseUtils';\nimport {rtPrefix} from '../../utils/variables';\nimport {Input, Tooltip, Popconfirm, Modal, Button} from 'antd';\nimport {\n\tPlusOutlined,\n\tCopyOutlined,\n\tFolderAddOutlined,\n\tDeleteOutlined,\n\tEditOutlined,\n\tArrowUpOutlined,\n\tArrowDownOutlined,\n\tSettingOutlined,\n\tFilterOutlined,\n\tExclamationCircleOutlined,\n} from '@ant-design/icons';\nimport FormItems from \"../Form/FormItems\";\nconst {confirm} = Modal;\n\nconst CommandPanel = (props) => {\n\tconst {\n\t\tborderStyle,\n\t\tdefaultValueSearch,\n\t\tdeleteConfirm,\n\t\tdeleteConfirmType,\n\t\tdeleteConfirmTitle,\n\t\tdeleteConfirmDescription,\n\t\tonClickAdd,\n\t\tonClickAddAsCopy,\n\t\tonClickAddGroup,\n\t\tonClickDelete,\n\t\tonClickEdit,\n\t\tonClickUp,\n\t\tonClickDown,\n\t\tonSearch,\n\t\tshowElements,\n        systemBtnProps,\n\t\tdisabledElements,\n\t\tleftCustomSideElement,\n\t\tcenterCustomSideElement,\n\t\trightCustomSideElement,\n\t} = props;\n\n    const defaultSystemBtnProps = {\n        add: {\n            tooltip: 'Добавить',\n            onClick: onClickAdd,\n            icon: <PlusOutlined />\n        },\n        addAsCopy: {\n            tooltip: 'Добавить копированием',\n            onClick: onClickAddAsCopy,\n            icon: <CopyOutlined />\n        },\n        addGroup: {\n            tooltip: 'Добавить группу',\n            onClick: onClickAddGroup,\n            icon: <FolderAddOutlined />\n        },\n        edit: {\n            tooltip: 'Изменить',\n            onClick: onClickEdit,\n            icon: <EditOutlined />\n        },\n        delete: {\n            tooltip: 'Удалить',\n            icon: <DeleteOutlined />\n        },\n        up: {\n            tooltip: 'Переместить вверх',\n            onClick: onClickUp,\n            icon: <ArrowUpOutlined />\n        },\n        down: {\n            tooltip: 'Переместить вниз',\n            onClick: onClickDown,\n            icon: <ArrowDownOutlined />\n        },\n\t\tsearch: {\n\t\t\tplaceholder: 'Поиск',\n\t\t\tonSearch: onSearch,\n\t\t},\n        settings: {\n            tooltip: 'Настройки таблицы',\n            tooltipPlacement: 'topRight',\n            onClick: () => {},\n            icon: <SettingOutlined />\n        },\n        filter: {\n            tooltip: 'Настройки фильтров',\n            tooltipPlacement: 'topRight',\n            onClick: () => {},\n            icon: <FilterOutlined />\n        }\n    };\n\n\tconst _onClickDelete = (event) => {\n\t\tif (deleteConfirmType === 'Modal') {\n\t\t\tdeleteButtonModalConfirm();\n\t\t} else {\n\t\t\tonClickDelete(event);\n\t\t}\n\t};\n\n\tconst deleteButtonPopupConfirm = () => {\n\t\treturn (\n\t\t\t<Popconfirm\n\t\t\t\tplacement='top'\n\t\t\t\ttitle={deleteConfirmDescription}\n\t\t\t\tonConfirm={onClickDelete}\n\t\t\t\tokText='Да'\n\t\t\t\tcancelText='Нет'\n\t\t\t>\n\t\t\t\t{renderDeleteBtn(false)}\n\t\t\t</Popconfirm>\n\t\t);\n\t};\n\n    const deleteButtonModalConfirm = () => {\n\t\tconfirm({\n\t\t\ttitle: deleteConfirmTitle,\n\t\t\ticon: <ExclamationCircleOutlined />,\n\t\t\tcontent: deleteConfirmDescription,\n\t\t\tcentered: true,\n\t\t\tokText: 'Ок',\n\t\t\tcancelText: 'Отмена',\n\t\t\tonOk() {\n\t\t\t\tonClickDelete();\n\t\t\t},\n\t\t});\n\t};\n\n    const renderDeleteBtn = (withOnClick) => {\n        const genProps = {...defaultSystemBtnProps['all'], ...systemBtnProps['all']};\n        const btnProps = {...defaultSystemBtnProps['delete'], ...systemBtnProps['delete']};\n\n        return (\n            <Tooltip title={btnProps.tooltip}>\n                <Button\n                    {...genProps}\n                    className={`${rtPrefix}-btn`}\n                    icon={btnProps.icon}\n                    onClick={withOnClick ? _onClickDelete : null}\n                    disabled={disabledElements.includes('delete')}\n                />\n            </Tooltip>\n        );\n    };\n\n    const renderBtn = (type) => {\n        const genProps = {...defaultSystemBtnProps['all'], ...systemBtnProps['all']};\n        const btnProps = {...defaultSystemBtnProps[type], ...systemBtnProps[type]};\n\n        if(showElements.includes(type)) {\n            if(btnProps.render)\n                return btnProps.render({\n                    disabled: disabledElements.includes(type),\n                    onClick: btnProps.onClick,\n\t\t\t\t\tonSearch: btnProps.onSearch\n\t\t\t\t});\n             else\n             \tif (type === 'search')\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Input.Search\n\t\t\t\t\t\t\tdisabled={disabledElements.includes(type)}\n\t\t\t\t\t\t\tdefaultValue={defaultValueSearch}\n\t\t\t\t\t\t\tplaceholder={btnProps.placeholder}\n\t\t\t\t\t\t\tonSearch={btnProps.onSearch}\n\t\t\t\t\t\t\tclassName={'search'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\telse\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Tooltip title={btnProps.tooltip} placement={btnProps.tooltipPlacement ? btnProps.tooltipPlacement : 'top'}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t{...genProps}\n\t\t\t\t\t\t\t\tclassName={`${rtPrefix}-btn`}\n\t\t\t\t\t\t\t\ticon={btnProps.icon}\n\t\t\t\t\t\t\t\tonClick={btnProps.onClick}\n\t\t\t\t\t\t\t\tdisabled={disabledElements.includes(type)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t)\n        }\n        else\n            return null\n    };\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{showElements.length ||\n\t\t\tleftCustomSideElement ||\n\t\t\tcenterCustomSideElement ||\n\t\t\trightCustomSideElement ? (\n\t\t\t\t<div\n\t\t\t\t\tclassName={`${rtPrefix}-command-panel border-${borderStyle}`}\n\t\t\t\t>\n\t\t\t\t\t<div className={'left-system-side'}>\n                        {renderBtn('add')}\n                        {renderBtn('addAsCopy')}\n                        {renderBtn('addGroup')}\n                        {renderBtn('edit')}\n\n\t\t\t\t\t\t{showElements.includes('delete')\n\t\t\t\t\t\t\t? deleteConfirm\n\t\t\t\t\t\t\t\t? deleteConfirmType === 'Popup'\n\t\t\t\t\t\t\t\t\t? deleteButtonPopupConfirm()\n\t\t\t\t\t\t\t\t\t: renderDeleteBtn(true)\n\t\t\t\t\t\t\t\t: renderDeleteBtn(true)\n\t\t\t\t\t\t\t: null}\n\n                        {renderBtn('up')}\n                        {renderBtn('down')}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'left-custom-side'}>\n\t\t\t\t\t\t{leftCustomSideElement ? <FormItems items={leftCustomSideElement} /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'center-custom-side'}>\n\t\t\t\t\t\t{centerCustomSideElement ? <FormItems items={centerCustomSideElement} /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'right-custom-side'}>\n\t\t\t\t\t\t{rightCustomSideElement ? <FormItems items={rightCustomSideElement} /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'right-system-side'}>\n\t\t\t\t\t\t{renderBtn('search')}\n                        {renderBtn('settings')}\n                        {renderBtn('filter')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n};\n\nCommandPanel.propTypes = {\n\t/** Центральный кастомный элемент командной панели */\n\tcenterCustomSideElement: PropTypes.arrayOf(PropTypes.object), // PropTypes.element,\n\n\t/** Тип бордера панели (по умолчанию 'bottom')\n\t * ['all', 'none', 'top', 'left', 'bottom', 'right', 'top-bottom', 'left-right'] */\n\tborderStyle: PropTypes.oneOf([\n\t\t'all',\n\t\t'none',\n\t\t'top',\n\t\t'left',\n\t\t'bottom',\n\t\t'right',\n\t\t'top-bottom',\n\t\t'left-right',\n\t]),\n\n\t/** Значение по умолчанию для строки поиска */\n\tdefaultValueSearch: PropTypes.string,\n\n\t/** Нужно ли делать подтверждение на кнопке удалить */\n\tdeleteConfirm: PropTypes.bool,\n\n\t/** Тип подтверждения удаления 'Popup' / 'Modal' */\n\tdeleteConfirmType: PropTypes.oneOf(['Popup', 'Modal']),\n\n\t/** Текст подтверждения на удаление элемента */\n\tdeleteConfirmTitle: PropTypes.string,\n\n\t/** Текст подтверждения на удаление элемента */\n\tdeleteConfirmDescription: PropTypes.string,\n\n\t/** Массив элементов командной панели для блокировки\n     ['add', 'addAsCopy', 'addGroup', 'delete', 'edit', 'up', 'down', 'search', 'settings', 'filter'] */\n\tdisabledElements: PropTypes.arrayOf(PropTypes.string),\n\n\t/** Левый кастомный элемент командной панели */\n\tleftCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Событие при нажатии на кнопку \"Добавить\" */\n\tonClickAdd: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Добавить копированием\" */\n\tonClickAddAsCopy: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Добавить группу\" */\n\tonClickAddGroup: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Удалить\" */\n\tonClickDelete: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Переместить вниз\" */\n\tonClickDown: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Изменить\" */\n\tonClickEdit: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Переместить вверх\" */\n\tonClickUp: PropTypes.func,\n\n\t/** Событие при поиске */\n\tonSearch: PropTypes.func,\n\n\t/** Правый кастомный элемент командной панели */\n\trightCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Массив элементов командной панели, которые надо отобразить\n     ['add', 'addAsCopy', 'addGroup', 'delete', 'edit', 'up', 'down', 'search', 'settings', 'filter'] */\n\tshowElements: PropTypes.arrayOf(PropTypes.string),\n\n    /** Объект кастомизации системных кнопок\n     { [btnType]: { tooltip: <String>, icon: <Icon />, render: ({disabled, onClick}) => <Component /> } } */\n    systemBtnProps: PropTypes.object\n};\n\nCommandPanel.defaultProps = {\n\tcenterCustomSideElement: null,\n\tborderStyle: 'bottom',\n\tdefaultValueSearch: undefined,\n\tdeleteConfirm: true,\n\tdeleteConfirmType: 'Modal',\n\tdeleteConfirmTitle: 'Подтвержение удаления',\n\tdeleteConfirmDescription: 'Вы действительно хотите удалить?',\n\tdisabledElements: [],\n\tleftCustomSideElement: null,\n\tonClickAdd: noop,\n\tonClickAddAsCopy: noop,\n\tonClickAddGroup: noop,\n\tonClickDelete: noop,\n\tonClickEdit: noop,\n\tonClickUp: noop,\n\tonClickDown: noop,\n\tonSearch: noop,\n\trightCustomSideElement: null,\n\tshowElements: [],\n    systemBtnProps: {},\n};\nexport default CommandPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '../Table/Table';\n\n/**\n * ### Список / Дерево.\n */\nconst List = (props) => {\n\tconst {rowKey, rowRender, title} = props;\n\n\tconst columns = [\n\t\t{\n\t\t\tkey: rowKey,\n\t\t\ttitle: title,\n\t\t\tdataKey: rowKey,\n\t\t\twidth: 500,\n\t\t\tcellRenderer:\n\t\t\t\ttypeof rowRender === 'function'\n\t\t\t\t\t? rowRender\n\t\t\t\t\t: ({rowData}) => <div>{rowData[rowRender]}</div>,\n\t\t},\n\t];\n\treturn <Table {...props} columns={columns} headerHeight={title ? 30 : 0} />;\n};\n\nList.propTypes = {\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { cellData, columns, column, columnIndex, rowData, rowIndex, container, isScrolling }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n\t/** Заголовок списка (по умолчанию скрыт)*/\n\ttitle: PropTypes.string,\n};\n\nList.defaultProps = {\n\trowKey: 'id',\n\trowRender: 'id',\n\ttitle: undefined,\n};\n\nexport default List;\n","import objectPath from 'object-path';\nimport {actionTypes} from './rtd.action.types';\n\nconst rtdReducer = (state = {}, action) => {\n    switch (action.type) {\n        case actionTypes.INIT_STORE: {\n            const {path} = action.payload;\n            // console.log(\"INIT_TABLE_STORE: \", path);\n            let newState = {...state};\n            objectPath.set(newState, path, {});\n            return newState;\n        }\n        case actionTypes.SET_DATA_STORE: {\n            const {path, row} = action.payload;\n\n            let newState = {...state};\n            objectPath.set(newState, path, row); // obj.a is now {}\n\n            console.log(\"Store change: \", path, row);\n            // console.group(\"Store\");\n            // console.log(\"Store: \", newState);\n            // console.log(\"New Data: \", path, row);\n            // console.groupEnd();\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\nexport default rtdReducer;\n","import { notification } from \"antd\";\nimport { notificationError } from \"./baseUtils\";\n\nexport const executeRequest = (request) => (options) => request(options)\n    .then(response => {\n        notification.success({\n            message: \"Сохранение прошло успешно\"\n        });\n    })\n    .catch(error => notificationError(error, 'Ошибка при сохранении') );","import {classic, declarative} from './components/declarative';\n\nconst components = { Form: classic.Form };\n\nexport {components, classic, declarative}\n\n/** deprecated */\n// Базовые копоненты\nexport {default as CommandPanel} from './components/deprecated/CommandPanel/CommandPanel';\nexport {default as FilterPanel} from './components/deprecated/FilterPanel/FilterPanel';\nexport {default as Table} from './components/deprecated/Table/Table';\nexport {default as AdvancedTable} from './components/deprecated/AdvancedTable/AdvancedTable';\nexport {default as List} from './components/deprecated/List/List';\nexport {default as Select} from './components/deprecated/Select/Select';\nexport {default as SingleDate} from './components/deprecated/SingleDate/SingleDate';\nexport {default as DateRange} from './components/deprecated/DateRange/DateRange';\n\n// Компоненты формы\nexport {default as Form} from './components/deprecated/Form/Form';\nexport {default as FileManager} from './components/deprecated/FileManager/FileManager';\nexport {default as Modal} from './components/deprecated/Modal/Modal';\n\n// Store\nexport { default as rtdReducer} from './redux/rtd.reducer';\nexport {setDateStore} from './redux/rtd.actions';\n\n// Utils\nexport {notificationError} from './components/utils/baseUtils'\nexport { executeRequest } from \"./components/utils/api\";\nexport * from './components/utils/datesUtils';\n\n\n\n\n"],"names":["APP_TIME_OFFSET","getMomentFromStringByFormat","date","format","moment","utcOffset","getMomentWithOffset","getMomentWithOffsetTruncateDay","startOf","toFormat","dateString","mom","isValid","toDDMMYYYYdot","toDDMMYYYYdotAltDashDash","toDDMMYYYYHHMMSS","toDDMMYYYYdash","getISO","toISOString","types","INIT_STORE","SET_DATA_STORE","setDateStore","path","row","type","actionTypes","payload","noop","flatten","arrayOfArrays","reduce","flattened","item","concat","Array","isArray","getTableRowObjects","data","rowKeys","map","children","length","getTableRowKeys","rowKey","findNodeByRowKey","rowValue","node","i","_findNodeByRowKey","currentNode","value","currentChild","result","generateUUID","replace","c","crypto","getRandomValues","Uint8Array","toString","getValueFromSingleSelect","name","keys","getValueFromMultiSelect","getObjectExcludedProps","object","exclude","returnObject","Object","forEach","key","includes","undefined","notificationError","error","message","response","console","status","errorDescription","description","dispatchToStore","dispatch","extraData","timestamp","useMounted","React","useState","isMounted","setIsMounted","useEffect","withStore","Component","antFormItemProps","mapStateToProps","store","ownProps","subscribe","state","objectPath","get","dispatchExtraData","mapDispatchToProps","bindActionCreators","defaultProps","trigger","valuePropName","withStoreProps","connect","props","componentType","subscribeProps","setSubscribeProps","excludeProps","onChange","_value","trim","_onSearch","searchLine","e","preventDefault","childProps","onSearchProps","onSearch","rtPrefix","DatePicker","style","width","TypographyDate","label","Button","onClick","field","renderClassicWithLabel","Custom","renderClassic","render","FormHeader","FormBody","cls","noPadding","push","scrollable","join","FormFooter","TabPane","className","FormItem","child","renderClassicByName","itemProps","propTypes","PropTypes","isRequired","FormItems","items","getItems","antFormListParams","index","_item","_key","fieldKey","fields","operation","param","fIndex","renderDeclarativeByName","arrayOf","Form","loadInitData","header","body","footer","autoSaveForm","requestSaveForm","methodSaveForm","processBeforeSaveForm","loaded","setLoaded","antFormProps","setAntFormProps","initFormData","setInitFormData","_setInitFormData","antForm","form","_Form","useForm","getBodyCls","onFinish","rawValues","values","saveObject","log","method","then","success","catch","onFinishFailed","errorInfo","Header","Footer","height","initialValues","bool","func","string","Layout","getCls","Switcher","_setValue","empty","overlay","LoadingOutlined","fontSize","SelectionHead","column","container","onSelectAll","selectedRowKeys","selectAll","_handleChange","rowObjects","filter","totalLength","selectLength","checked","selected","getRowChildren","findBrothers","selfItem","parentKey","arr","parentAnalysis","rowData","nodeAssociated","treeData","indeterminateRowKeys","_selectedRowKeys","_indeterminateRowKeys","currentRowData","parentExist","lastTypeSelect","typeSelect","nextSquare","indeterminateBrothers","selectedBrothers","allBrothers","indexOf","splice","indexS","indexI","onChangeSelectionCell","rowIndex","rows","rowChildren","element","Set","_selectedRowObjects","_selectedRow","_selectAll","SelectionCell","det","SelectionList","selectedRowObjects","rowRender","onClickDropSelect","CloseCircleOutlined","oneOfType","Table","forwardRef","ref","hasMore","setHasMore","loading","setLoading","_rows","_setRows","setSelectedRowKeys","_searchValue","setSearchValue","_filter","setFilter","_sortBy","setSortBy","setSelectAll","setIndeterminateRowKeys","_expandedRowKeys","setExpandedRowKeys","_footerShow","_setFooterShow","_totalCountRows","setTotalCountRows","tableRef","useRef","columns","infinityMode","editMode","defaultRows","defaultSelectedRowKeys","defaultSearchValue","defaultFilter","defaultSortBy","setRows","searchValue","sortBy","customFields","fixWidthColumn","headerHeight","rowHeight","rowRenderer","zebraStyle","estimatedRowHeight","rowBordered","loadThreshold","pageSize","requestLoadRows","requestLoadCount","searchParamName","selectable","expandColumnKey","expandDefaultAll","expandLazyLoad","expandParentKey","onRowClick","onRowDoubleClick","onRowExpand","onSelectedRowsChange","onExpandedRowsChange","showSelection","rowRenderShowSelection","dispatchPath","footerProps","selectedDispatchPath","rowsDispatchPath","rowDoubleClickDispatchPath","_setRowsHandler","_setSelectedRowsHandler","setFilterHandler","showElements","leftCustomSideElement","centerCustomSideElement","rightCustomSideElement","flatRows","selectedRow","ii","_dataProcessing","reload","reloadData","current","onChangeObject","reloadTable","addRows","_addRows","addRow","_addRow","addRowAsCopy","_addRowAsCopy","editRow","_editRow","removeRow","_removeRow","moveUpRow","_moveUpRow","moveDownRow","_moveDownRow","_setSubscribeProps","rowsDispatch","selectedKeys","selectedObjects","selectedDispatch","rowDoubleClickDispatch","onTableEventsDispatch","nameEvent","dp","appendParams","scrollToRow","__sortBy","__filter","__searchValue","params","expandRow","pageNum","Math","floor","page","size","sort","order","dataQuery","newRows","_onRowClick","_rowSelectAfterClick","_onRowDoubleClick","newRowObject","_getSelectionColumnProps","_rowEventHandlers","onDoubleClick","_onColumnSort","loadParams","_footer","selectedTitle","loadedTitle","totalTitle","_rowClassName","rowClassName","onEndReached","_onChangeSelectHandler","_onSelectAllHandler","_getColumns","selectColumn","headerRenderer","cellRenderer","flexShrink","resizable","frozen","_onExpandedRowsChange","expandedRowKeys","_onRowExpand","expanded","allChildKeys","loop","callback","saveRows","sRow","validate","_localRows","_row","event","newRowIndex","_getNewIndexRow","_changeIndexRow","oldIndex","newIndex","_onClickDropSelectHandler","dropObject","newSelectedKeys","BaseTable","number","shape","oneOf","customColumnProps","cellBordered","requestLoadConfig","ConfigLoader","tableConfig","setTableConfig","cleanupFunction","loadData","configParser","r","config","_columns","colProps","find","alias","title","dataKey","align","sortable","hidden","visible","headerClassName","cellData","_defaultFilter","hierarchical","hierarchyLazyLoad","hierarchyField","split","hierarchyView","Select","optionConverter","options","widthControl","mode","_hasMore","_setHasMore","_loading","_setLoading","_options","_setOptions","isEndReached","setIsEndReached","_setSortBy","_setFilter","_setSearchValue","_isSelectAll","_setIsSelectAll","_loadOptions","preValue","getPageNum","getSort","getSearchValue","requestOptions","option","onScroll","scrollTopMax","nativeEvent","target","scrollTop","_onChangeSelectAll","optionsValues","_onChange","getSelectAllCls","omittedValues","CheckOutlined","menu","disabled","TreeSelect","_treeData","_setTreeData","_optionConverter","serverModalTypes","localModalTypes","allModalTypes","getDefaultFooterProps","modal","okText","cancelText","modalTitle","okType","Modal","buttonProps","toolTipProps","modalConfig","modalData","modalProps","setVisible","_modalData","_setModalData","_buttonProps","setButtonProps","setModalData","openModal","_onOpenModal","closeModal","_onCloseModal","onFinishHandler","saveObj","startsWith","requestSaveRow","onOk","onFinishFailedHandler","loadInitDataHandler","callBack","formConfig","_onCancelHandler","onCancel","defaultFooter","cancelButtonProps","htmlType","okButtonProps","padding","bodyStyle","requestUploadFile","dataObject","onCompletedUpload","onFailedUpload","uploadProps","UploadFile","_uploadFile","file","notification","notifProps","uid","duration","icon","info","close","defaultUploadProps","multiple","showUploadList","beforeUpload","CloudUploadOutlined","renderClassicWithComponentType","componentName","classic","renderDeclarative","renderFormItemComponent","componentProps","Item","noStyle","ComponentClassic","StoreComponent","ComponentClassicWithLabel","ComponentClassicWithPlaceholder","placeholder","_placeholder","ComponentClassicWithOutStore","classicComponents","RtForm","FormList","List","Space","Row","Col","RtLayout","Tabs","RtTabPane","withComponentType","RtButton","Title","_Typography","Text","Divider","Checkbox","RtDatePicker","DateText","Input","Search","_Input","TextArea","Password","InputNumber","Switch","RadioGroup","_Radio","Group","RtSelect","RtTreeSelect","RtTable","RtModal","RtSwitcher","RtUploadFile","obj","declarative","DateRange","mounted","setMounted","startValue","setStartValue","endValue","setEndValue","nameStart","nameEnd","dateFormat","valueStart","valueEnd","showTime","defaultValueStart","defaultValueEnd","disabledStartDate","valueOf","disabledEndDate","onStartChange","onEndChange","locale","SingleDate","setValue","defaultValue","_onChangePicker","FilterPanel","applyFilterTooltip","applyFilterSize","applyFilterRender","borderStyle","onChangeFilter","onApplyFilter","configFilter","resetFilterRender","resetFilterTooltip","resetFilterSize","_onChangeData","_applyFilter","_resetFilter","getPanelCls","findIndex","marginLeft","autoDeleteRows","footerHeight","footerShow","footerTitles","commandPanelProps","CommandPanel","filterPanelProps","setReloadTable","setRowsHandler","unshift","_getDisabledElementsOfCommandPanel","_disabledElements","disabledElements","_onClickAddAsCopy","onClickAddAsCopy","_onClickEdit","onClickEdit","_onClickDelete","onClickDelete","_onClickUp","onClickUp","_onClickDown","onClickDown","_onChangeFilter","_onApplyFilter","selectedRows","loadedRows","totalRows","Paragraph","_selectedRowData","_setSelectedRowData","isSelectOpened","setIsSelectOpened","isClickInSelect","setIsClickInSelect","widthPopup","heightPopup","onChangeKeys","requestLoadDefault","searchable","setSelectedRowData","loadSelectedObject","request","srk","findRow","window","addEventListener","handleMouseClick","removeEventListener","onClosePopup","_getHeadCls","_getHeadText","_getPopupCls","_getPopupStyle","defRowsLen","getEvents","systemBtnProps","_SingleSelectRow","contains","onOpenPopup","onClickClear","UpOutlined","DownOutlined","CloseCircleFilled","AdvancedTable","setConfig","configData","columnsByConfig","getDefaultFilter","FormModal","saveRow","_onLoadInitData","FormTable","addOnServer","editOnServer","addOnLocal","editOnLocal","addGroupOnServer","editGroupOnServer","addGroupOnLocal","editGroupOnLocal","select","viewGroup","viewObject","visibleModals","setVisibleModals","tableRows","setTableRows","tableSelectedRowKeys","setTableSelectedRowKeys","tableSelectedRow","setTableSelectedRow","setTableRef","_setTableRef","_ref","rowKeyType","modals","isGroupKey","history","requestDeleteRow","dataDeleteRow","cmdProps","_addRowsToLocalTable","getModals","_onSaveRow","isExistCmdBtn","btnType","equalsActionTypeCmdBtn","actionType","aTypes","_onClickAddHandler","location","pathname","_onClickAddAsCopyHandler","_addRowToLocalTable","_onClickAddGroupHandler","_onClickEditHandler","deleteData","_onClickUpHandler","_onClickDownHandler","selectRows","tRow","_addRowToServerTable","_editRowToLocalTable","_onSelectedRowsChange","getTableCls","onClickAdd","onClickAddGroup","SortOrder","ASC","DESC","getValueFromEvent","newValue","DatePickerHOC","TypographyTitle","TypographyText","getTitle","parentLoadHandler","labelCol","span","wrapperCol","rules","required","AddFolderModal","args","EditFolderModal","EditFileModal","copyTextToClipboard","navigator","clipboard","fallbackCopyTextToClipboard","text","writeText","openNotificationWithIcon","err","textArea","document","createElement","top","left","position","appendChild","focus","successful","execCommand","removeChild","msg","FileManager","HomeOutlined","breadcrumb","setBreadcrumb","deleted","tableFilter","setTableFilter","isGroup","loadTable","requestDownloadFile","_onClickBreadcrumb","parentId","slice","_onClickBack","newBreadcrumb","newFilter","processBeforeSaveModal","extension","newData","owner","requestLoadParent","CopyOutlined","pathDownloadFile","styleDiv","display","alignItems","Icon","styleIcon","marginRight","FolderFilled","color","FileWordOutlined","FileExcelOutlined","FileImageOutlined","FileMarkdownOutlined","FilePdfOutlined","FilePptOutlined","FileTextOutlined","FileZipOutlined","FileOutlined","uploadRender","PlusOutlined","breadcrumbRender","add","tooltip","addGroup","edit","delete","RollbackOutlined","getItem","confirm","defaultValueSearch","deleteConfirm","deleteConfirmType","deleteConfirmTitle","deleteConfirmDescription","defaultSystemBtnProps","addAsCopy","FolderAddOutlined","EditOutlined","DeleteOutlined","up","ArrowUpOutlined","down","ArrowDownOutlined","search","settings","tooltipPlacement","SettingOutlined","FilterOutlined","deleteButtonModalConfirm","deleteButtonPopupConfirm","renderDeleteBtn","ExclamationCircleOutlined","content","centered","withOnClick","genProps","btnProps","renderBtn","rtdReducer","action","newState","set","executeRequest","components"],"mappings":"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"}