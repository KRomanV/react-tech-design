{"version":3,"file":"index.js","sources":["../src/components/utils/datesUtils.js","../src/redux/rtd.action.types.js","../src/redux/rtd.actions.js","../src/components/utils/baseUtils.js","../src/components/Base/withStore.js","../src/components/utils/variables.js","../src/components/Base/index.js","../src/components/Form/FormItem.js","../src/components/Form/FormItems.js","../src/components/Form/Form.js","../src/components/Layout/Layout.js","../src/components/Switcher/Switcher.js","../src/components/Table/ReactBaseTable/defaultSettings.js","../src/components/Table/ReactBaseTable/Selectable/SelectionHead.js","../src/components/Table/ReactBaseTable/Selectable/SelectionCell.js","../src/components/Table/ReactBaseTable/SelectionList/SelectionList.js","../src/components/Table/ReactBaseTable/Table.js","../src/components/Table/ReactBaseTable/ConfigLoader.js","../node_modules/react-window/dist/index.esm.js","../src/components/Table/AntTable/HeaderCell.js","../src/components/Table/AntTable/HeaderRow.js","../src/components/Table/AntTable/BodyCell.js","../src/components/Table/AntTable/Table.js","../src/components/Table/AntTable/ConfigLoader.js","../src/components/Select/Select.js","../src/components/TreeSelect/TreeSelect.js","../src/components/Modal/Modal.js","../src/components/UploadFile/UploadFile.js","../src/components/declarative.js","../src/components/deprecated/Table/defaultSettings.js","../src/components/deprecated/Table/Selectable/SelectionHead.js","../src/components/deprecated/Table/Selectable/SelectionCell.js","../src/components/deprecated/DateRange/DateRange.js","../src/components/deprecated/SingleDate/SingleDate.js","../src/components/deprecated/FilterPanel/FilterPanel.js","../src/components/deprecated/Table/SelectionList/SelectionList.js","../src/components/deprecated/Table/Table.js","../src/components/deprecated/Select/Select.js","../src/components/deprecated/AdvancedTable/AdvancedTable.js","../src/components/deprecated/Form/Form.js","../src/components/deprecated/Form/FormModal.js","../src/components/deprecated/Form/FormTable.js","../src/components/deprecated/Form/HOCs.js","../src/components/deprecated/FileManager/AddFolderModal.js","../src/components/utils/clipboardUtils.js","../src/components/deprecated/FileManager/FileManager.js","../src/components/deprecated/Modal/Modal.js","../src/components/deprecated/Form/FormItem.js","../src/components/deprecated/Layout/Layout.js","../src/components/deprecated/Form/FormItems.js","../src/components/deprecated/CommandPanel/CommandPanel.js","../src/components/deprecated/List/List.js","../src/components/deprecated/index.js","../src/redux/rtd.reducer.js","../src/components/utils/api.js","../src/index.js"],"sourcesContent":["import moment from 'moment';\n\nexport const APP_TIME_OFFSET = 3;\n\nexport const getMomentFromStringByFormat = (date, format) =>\n\tdate ? moment(date, format).utcOffset(APP_TIME_OFFSET) : null;\n\n// export const getMomentWithOffset = (date) =>\n// \tmoment(date).utcOffset(APP_TIME_OFFSET);\nexport const getMomentWithOffset = (date) => moment(date).format();\n\nexport const getMomentWithOffsetTruncateDay = (date) =>\n\tmoment(date).startOf('day')\n\t\t// .hours(0)\n\t\t// .minutes(0)\n\t\t// .seconds(0)\n\t\t// .milliseconds(0)\n\t\t.format();\n\n\nexport const toFormat = (dateString, format) => {\n\tif (!dateString) {\n\t\treturn '';\n\t}\n\tconst mom = moment(dateString);\n\treturn mom.isValid() ? mom.format(format) : dateString;\n};\n\nexport const toDDMMYYYYdot = (dateString) => toFormat(dateString, 'DD.MM.YYYY');\n\nexport const toDDMMYYYYdotAltDashDash = (dateString) =>\n\ttoDDMMYYYYdot(dateString) || '--';\n\nexport const toDDMMYYYYHHMMSS = (dateString) =>\n\ttoFormat(dateString, 'DD.MM.YYYY HH:mm:ss') || '--';\n\nexport const toDDMMYYYYdash = (dateString) =>\n\ttoFormat(dateString, 'DD-MM-YYYY');\n\nexport const getISO = (date) =>\n\tmoment(date).utcOffset(APP_TIME_OFFSET).toISOString();\n","const types =\n{\n    INIT_STORE: 'INIT_STORE',\n    SET_DATA_STORE: 'SET_DATA_STORE',\n};\n\nexport {types as actionTypes};\n","import {actionTypes} from './rtd.action.types';\n\nexport const initStore = (path) => ({\n    type: actionTypes.INIT_STORE,\n    payload: {path}\n});\n\nexport const setDateStore = (path, row) => ({\n    type: actionTypes.SET_DATA_STORE,\n    payload: {path, row}\n});\n","import React from 'react';\nimport {notification} from 'antd';\nimport moment from \"moment\";\n\nexport const noop = () => {};\n\nexport const flatten = (arrayOfArrays) =>\n\tarrayOfArrays.reduce(\n\t\t(flattened, item) =>\n\t\t\tflattened.concat(Array.isArray(item) ? flatten(item) : [item]),\n\t\t[]\n\t);\n\nexport const getTableRowObjects = (data) => {\n\tconst rowKeys = data.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item, getTableRowObjects(item.children)];\n\t\t}\n\t\treturn item;\n\t});\n\treturn rowKeys;\n};\n\nexport const getTableRowKeys = (data, rowKey) => {\n\tconst rowKeys = data.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item[rowKey], getTableRowKeys(item.children, rowKey)];\n\t\t}\n\t\treturn item[rowKey];\n\t});\n\treturn rowKeys;\n};\n\nexport const findNodeByRowKey = (data, rowKey, rowValue) => {\n\tlet node = {};\n\tlet item = {};\n\tfor (let i = 0; i < data.length; i++) {\n\t\titem = _findNodeByRowKey(data[i], rowKey, rowValue);\n\t\tif (item !== false) return item;\n\t}\n\treturn node;\n};\n\nconst _findNodeByRowKey = (currentNode, rowKey, value) => {\n\tlet i, currentChild, result;\n\n\tif (value === currentNode[rowKey]) {\n\t\treturn currentNode;\n\t} else {\n\t\tif (currentNode.children) {\n\t\t\tfor (i = 0; i < currentNode.children.length; i += 1) {\n\t\t\t\tcurrentChild = currentNode.children[i];\n\t\t\t\tresult = _findNodeByRowKey(currentChild, rowKey, value);\n\t\t\t\tif (result !== false) return result;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n};\n\nexport const generateUUID = () => {\n\treturn ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n\t\t(\n\t\t\tc ^\n\t\t\t(crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n\t\t).toString(16)\n\t);\n};\n\n\nexport const getValueFromSingleSelect = (name, keys) => (keys && keys.length > 0) ? keys[0] : null;\n\nexport const getValueFromMultiSelect = (name, keys) => (keys && keys.length > 0) ? keys : null;\n\nexport const getValueFromSelectTable = (rows) => {\n    if (rows && rows.length > 0) return rows[0];\n    else return null;\n};\n\nexport const getObjectExcludedProps = (object, exclude) => {\n    let returnObject = {};\n    Object.keys(object).forEach((key) =>\n        !exclude.includes(key) ? (returnObject[key] = object[key]) : undefined // было null\n    );\n    return returnObject;\n};\n\nexport const notificationError = (error, message) => {\n\tif (error.response) {\n\t\tconsole.error(error.response.status, error.response.data);\n\t\tconst errorDescription = (error.response.data && error.response.data.error)\n\t\t\t? error.response.data.error\n\t\t\t: \"Нет описания ошибки\";\n\t\tnotification.error({\n\t\t\tmessage: `[${error.response.status}] ${message}`,\n\t\t\tdescription: errorDescription,\n\t\t});\n\t} else {\n\t\tconsole.error(error);\n\t\tnotification.error({\n\t\t\tmessage: 'Не удалось детектировать ошибку. См. console.error',\n\t\t});\n\t}\n};\n\nexport const dispatchToStore = ({dispatch, setDateStore, value, extraData}) => {\n\tif(dispatch.path) {\n\t\t// console.log(\"storeHOC => dispatchToStore\", dispatch, setDateStore);\n\t\tif(dispatch.type === 'event')\n\t\t\tsetDateStore && setDateStore(dispatch.path,  {\n\t\t\t\ttimestamp: moment(),\n\t\t\t\t// type: dispatch.type,\n\t\t\t\tvalue: value,\n\t\t\t\textraData: extraData\n\t\t\t});\n\t\telse\n\t\t\tsetDateStore && setDateStore(dispatch.path, value);\n\t}\n}\n\nexport function useMounted() {\n\tconst [isMounted, setIsMounted] = React.useState(false)\n\n\tReact.useEffect(() => {\n\t\tsetIsMounted(true)\n\t}, [])\n\treturn isMounted\n}\n\nexport const getSortBy = (clientSortBy, serverSortBy, dataIndex) => {\n\tif (clientSortBy && clientSortBy.key === dataIndex) {\n\t\treturn [\n\t\t\tclientSortBy,\n\t\t\tclientSortBy.order === \"asc\" ? \"ascend\" : \"descend\"\n\t\t];\n\t} else if (serverSortBy) {\n\t\treturn [\n\t\t\t{ key: dataIndex, order: serverSortBy },\n\t\t\tserverSortBy === \"asc\" ? \"ascend\" : \"descend\"\n\t\t];\n\t} else\n\t\treturn [undefined, undefined];\n};\n","import React, {useState, useEffect} from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../redux/rtd.actions\";\nimport { dispatchToStore, getObjectExcludedProps, useMounted } from \"../utils/baseUtils\";\n\nexport const withStore = (Component, antFormItemProps) => {\n\n    const mapStateToProps = (store, ownProps) => {\n        const {subscribe, dispatch} = ownProps;\n        let state = {};\n        if(subscribe && subscribe.length > 0){\n            subscribe.forEach(item => {\n                const {name, path, extraData} = item;\n                if(name && path)\n                    state[name] = objectPath.get(store, path);\n                if(name && extraData)\n                    state[`${name}ExtraData`] = objectPath.get(store, extraData);\n            })\n        }\n        if(dispatch && dispatch.extraData) {\n            // console.log('subscribe to ', dispatch.extraData)\n            state.dispatchExtraData = objectPath.get(store, dispatch.extraData);\n        }\n\n        return state;\n    };\n    const mapDispatchToProps = (dispatch) =>\n        bindActionCreators({ setDateStore: setDateStore}, dispatch);\n\n    const defaultProps = {\n        trigger: 'onChange',\n        valuePropName: 'value',\n    };\n\n    const withStoreProps = { ...defaultProps, ...antFormItemProps };\n\n    return connect(mapStateToProps, mapDispatchToProps)( (props) => {\n\n        const {componentType, setDateStore, dispatchExtraData} = props;\n\n        // Объект подписки на стор\n        const subscribe = props.subscribe ? props.subscribe : [];\n\n        // Объект публикации в стор\n        const dispatch = props.dispatch ? props.dispatch : {};\n\n        const [subscribeProps, setSubscribeProps] = useState({});\n\n        const {trigger, valuePropName} = withStoreProps;\n\n        const excludeProps = ['componentType', 'setDateStore', 'subscribe', ...subscribe.map(item => item.name), 'dispatch', 'dispatchExtraData']; // ...subscribe.map(item => item.name),\n\n        const isMounted = useMounted()\n\n        /** Подписка на изменение props[subscribe.name] в сторе */\n        subscribe.map(item => {\n            return useEffect( () => {\n                // console.log(\"withStore subscribe: \", item.name, item.withMount);\n                if((item.withMount || isMounted) && item.name) {\n                    // console.log(\"storeHOC => subscribe: \", props[subscribe.name]);\n                    item.onChange && item.onChange({\n                        value: props[item.name],\n                        extraData: props[`${item.name}ExtraData`],\n                        setSubscribeProps: setSubscribePropsHandler});\n                }\n                // console.log(\"Change Props[2]: \", props.subscribeЗф);\n            }, [props[item.name]]);\n        })\n\n        /** Подписка на изменение props и отправка данных в стор */\n        useEffect(() => {\n            let _value = props[valuePropName];\n            // console.log(`storeHOC => `, _value);\n            // if (_value === null || _value === undefined || (typeof _value === 'string' && _value.trim() === ''))\n            //     _value = undefined;\n            if (componentType !== 'Button' && componentType !== 'Search')\n                dispatchToStore({ dispatch, setDateStore, value: _value });\n        }, [props[valuePropName]]);\n\n        /** Подписка на изменение subscribeProps.value и отправка данных в props[trigger] (как правило это onChange) */\n        // useEffect(() => {\n        //     if(isMounted) {\n        //         console.log('onChange subscribeProps.value => ', subscribeProps.value);\n        //         props[trigger] && props[trigger](subscribeProps.value);\n        //     }\n        // }, [subscribeProps.value]);\n\n        const setSubscribePropsHandler = (_subscribeProps) => {\n            // console.log('onChange setSubscribePropsHandler => ', value);\n            setSubscribeProps((prevState) => ({ ...prevState, ..._subscribeProps }));\n            if(_subscribeProps && objectPath.has(_subscribeProps, valuePropName)) {\n                const value = _subscribeProps[valuePropName]\n                // console.log('setSubscribePropsHandler => ', componentType, value);\n                if(componentType === 'Search')\n                    _searchDispatchToStore(value)\n\n                props[trigger] && props[trigger](value);\n            }\n        }\n\n        const onChange = (...args) => {\n            // console.log('withStore [trigger] ',  props[trigger], args)\n            if(componentType === 'Button')\n                dispatchToStore({dispatch, setDateStore, value: args[0], extraData: dispatchExtraData});\n\n            if(subscribeProps && objectPath.has(subscribeProps, valuePropName)) {\n                const _subscribeProps = {...subscribeProps}\n                objectPath.del(_subscribeProps, valuePropName);\n                // console.log('onClear subscribeProps[valuePropName] => ', _subscribeProps);\n                setSubscribeProps(_subscribeProps)\n            }\n\n            props[trigger] && props[trigger](...args);\n        };\n\n        const _onSearch = (searchLine, e) => {\n            e.preventDefault();\n            // console.log(\"_onSearch\", searchLine);\n            _searchDispatchToStore(searchLine)\n        };\n        const _searchDispatchToStore = (searchLine) =>\n          dispatchToStore({dispatch, setDateStore, value: searchLine, extraData: dispatchExtraData});\n\n        const childProps = getObjectExcludedProps(props, excludeProps);\n        const onSearchProps = (componentType === 'Search') ? {onSearch: _onSearch} : {}\n        // console.log(`storeHOC Component => `, componentType, Component);\n        return (\n            <Component\n                {...childProps}\n                {...subscribeProps}\n                {...{[trigger]: onChange}}\n                {...onSearchProps}\n            >{props.children}</Component>\n        )\n    })\n};\n","export const rtPrefix = 'rt';\n","import React, {useEffect} from \"react\";\nimport moment from \"moment\";\nimport {\n    Button as AntButton,\n    DatePicker as AntDatePicker,\n    TimePicker as AntTimePicker,\n    Typography as AntTypography,\n    Tabs as AntTabs,\n} from \"antd\";\nimport { getISO, toFormat } from \"../utils/datesUtils\";\nimport {withStore} from \"./withStore\";\nimport { rtPrefix } from \"../utils/variables\";\nimport { renderClassic, renderClassicWithLabel } from \"../declarative\";\n\n/** Компонент выбора даты */\nconst DatePicker = (props) => {\n    return <DateTimePicker Component={AntDatePicker} {...props}/>\n};\n\nconst TimePicker = (props) => {\n    return <DateTimePicker Component={AntTimePicker} {...props}/>\n};\nconst DateTimePicker = (props) => {\n    const {Component, value, onChange, ...restProps} = props;\n\n    useEffect(() => {\n        // console.log(\"DatePickerHOC => onChange => string\");\n        value && typeof value === 'string' && onChange(moment(value), value);\n    }, [])\n\n    const _value = value ? (typeof value === 'string' ? moment(value) : value) : undefined;\n    const style = {width: '100%', ...(props && props.style)};\n    // console.log(\"DatePickerHOC value => \", value);\n    return <Component {...restProps} style={style} value={_value} onChange={onChange}/>\n}\n\n/** Компонент вывода даты в текстовом виде */\nconst TypographyDate = (props) => {\n    const {label, value, format } = props;\n    const _value = value ? (format ? toFormat(value, format) : getISO(value)) : undefined;\n    return <AntTypography.Text {...props}> {label || _value} </AntTypography.Text>;\n}\n\n/** Компонент кнопки со всеми пропрами AntButton */\nconst Button = (props) => {\n    const Component = withStore(AntButton, { trigger: 'onClick' });\n    // console.log('Props classic field renderClassic => ', props.field);\n    // const onClick = (e) => childProps.onClick && childProps.onClick(e, field);\n    const onClick = (e) => props.onClick && props.onClick(e, props.field);\n    return renderClassicWithLabel(Component)({...props, onClick: onClick})\n}\n\n/** Custom компонент */\nconst Custom = (props) => {\n    const {children} = props\n    let childNode = null;\n    let childProps = null;\n\n    if (Array.isArray(children)) {\n        console.warn('Custom component: `children` is array. Don\\'t render component')\n        return null;\n    } else if(props.render) {\n        // console.log('childNode = props.render')\n        childNode = props.render;\n        childProps = { ...props, componentType: 'Custom' };\n        return renderClassic(childNode)(childProps)\n    } else if(React.isValidElement(children)) {\n        // console.log('childNode = children')\n        childProps = { ...children.props, ...props, componentType: 'Custom' };\n        return  React.cloneElement(children, childProps);\n    } else {\n        console.warn('Custom component: not exist valid render')\n        return null;\n    }\n}\n\n/** Компонент заголовка формы */\nconst FormHeader = (props) => {\n    return <div className={`${rtPrefix}-form-header`}>{props.children}</div>\n}\n\n/** Компонент тела формы */\nconst FormBody = (props) => {\n    let cls = [`${rtPrefix}-form-body`];\n    props.noPadding && cls.push(`${rtPrefix}-form-body-no-padding`);\n    props.scrollable && cls.push(`${rtPrefix}-form-body-scrollable`);\n    return <div className={cls.join(\" \")}>{props.children}</div>\n}\n\n/** Компонент подвала формы */\nconst FormFooter = (props) => {\n    return <div className={`${rtPrefix}-form-footer`}>{props.children}</div>\n}\n\nconst TabPane = (props) => {\n    let cls = [];\n    props.className && cls.push(props.className);\n    props.scrollable && cls.push(`${rtPrefix}-tabs-tabpane-scrollable`);\n    return <AntTabs.TabPane {...props} className={cls.join(\" \")}>{props.children}</AntTabs.TabPane>\n}\n\n\nexport {\n    DatePicker,\n    TimePicker,\n    TypographyDate,\n    Button,\n    Custom,\n    FormHeader,\n    FormBody,\n    FormFooter,\n    TabPane,\n    withStore\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getObjectExcludedProps } from \"../utils/baseUtils\";\nimport {renderClassicByName} from \"../declarative\";\nconst excludeProps = ['child', 'componentType', 'field'];\nconst FormItem = (props) => {\n\n\tconst {child, field} = props;\n\tlet antFormItemProps = getObjectExcludedProps(props, excludeProps);\n\tif (child)\n\t\treturn renderClassicByName(child.componentType)\n\t\t\t({itemProps: {...antFormItemProps}, ...child, field})\n\telse\n\t\treturn null;\n};\n\nFormItem.propTypes = {\n\tchild: PropTypes.object.isRequired\n};\n\nexport default FormItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormItem from \"./FormItem\";\nimport { Form as AntForm } from \"antd\";\nimport { getObjectExcludedProps } from \"../utils/baseUtils\";\nimport { renderDeclarativeByName } from \"../declarative\";\n\nconst excludeProps = [\"children\", \"componentType\"];\n\nconst FormItems = (props) => {\n    const { items } = props;\n\n    // console.log('FormItems props => ', props);\n\n    const getItems = (data, antFormListParams) => {\n\n        return (data && data.map((item, index) => {\n            let itemProps = getObjectExcludedProps(item, excludeProps);\n            // console.log('FormItems index => ', index);\n\n            switch (item.componentType) {\n                case \"Item\":\n                    let _item = { ...item };\n                    let _key = index;\n                    if (antFormListParams && antFormListParams.field) {\n                        if (_item.name) {\n                            if (Array.isArray(_item.name)) {\n                                _item.name = [antFormListParams.field.name, ..._item.name];\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\n                            } else {\n                                _item.name = [antFormListParams.field.name, _item.name];\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\n                            }\n                        }\n                    }\n                    // console.log('_item ', _item.name);\n                    return <FormItem key={`${_key}`} {..._item} field={{ ...antFormListParams }}/>;\n                case \"ListItems\":\n                    return (\n                        <AntForm.List key={index} {...itemProps}>\n                            {(fields, operation) => {\n                                const param = { fields: [...fields], operation: { ...operation } };\n                                return getItems(item.children, param);\n                            }}\n                        </AntForm.List>\n                    );\n                case \"ListItem\":\n                    // console.log('antFormListParams => ', antFormListParams);\n                    return (\n                        <div key={index}>\n                            {antFormListParams && antFormListParams.fields && antFormListParams.fields.map((field, fIndex) => {\n                                // console.log('index field.key', index, field);\n                                const param = { field: { ...field }, ...antFormListParams };\n                                return <div key={field.key}>{getItems(item.children, param)} </div>;\n                            })}\n                        </div>\n                    );\n                default:\n                    return renderDeclarativeByName(item.componentType)({ key: index, ...itemProps })(getItems(item.children, antFormListParams))\n            }\n        })) || null;\n    };\n\n    return getItems(items);\n};\n\nFormItems.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default FormItems;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport FormItems from \"./FormItems\";\nimport { Form as AntForm, notification } from \"antd\";\nimport { dispatchToStore, getObjectExcludedProps, noop, notificationError } from \"../utils/baseUtils\";\nimport { rtPrefix } from \"../utils/variables\";\nimport { setDateStore } from \"../../redux/rtd.actions\";\n\nconst excludeProps = [\n    \"dispatch\",\n    \"setDateStore\",\n    \"componentType\",\n    \"noPadding\",\n    \"scrollable\",\n    \"header\",\n    \"body\",\n    \"footer\",\n    \"loadInitData\",\n    \"requestSaveForm\",\n    \"methodSaveForm\",\n    \"processBeforeSaveForm\"\n];\n\n/** Компонент формы */\nconst Form = (props) => {\n    const {\n        dispatch,\n        setDateStore,\n        loadInitData,\n        header,\n        body,\n        footer,\n        requestSaveForm,\n        methodSaveForm,\n        processBeforeSaveForm\n    } = props;\n\n    /** Состояние первоначалной настройки компонента*/\n    const [loaded, setLoaded] = useState(false);\n    const [antFormProps, setAntFormProps] = useState({});\n    const [initFormData, setInitFormData] = useState({});\n\n    useEffect(() => {\n        if (!loaded) {\n            if (loadInitData !== noop)\n                loadInitData(_setInitFormData);\n            else\n                setLoaded(true);\n        }\n    }, [loaded]);\n\n    useEffect(() => {\n        setAntFormProps(getObjectExcludedProps(props, excludeProps));\n        // console.log('antFormProps props => ', getObjectExcludedProps(props, excludeProps));\n    }, [props]);\n\n\n    const _setInitFormData = (data) => {\n        // console.log(\"Form loaded init data => \", data);\n        setInitFormData(data);\n        setLoaded(true);\n    };\n\n\n    let antForm;\n    if (props && props.form) {\n        antForm = props.form;\n    } else {\n        const [form] = AntForm.useForm();\n        antForm = form;\n    }\n\n    const getBodyCls = () => {\n        let cls = [`${rtPrefix}-form-body`];\n        props.noPadding && cls.push(`${rtPrefix}-form-body-no-padding`);\n        props.scrollable && cls.push(`${rtPrefix}-form-body-scrollable`);\n        return cls.join(\" \");\n    };\n\n    const onFinish = (rawValues) => {\n        const values = processBeforeSaveForm ? processBeforeSaveForm(rawValues) : rawValues;\n        // console.log(`Success form [${props.name ? props.name : 'no name form'}]: `, values);\n        const saveObject = {\n            ...initFormData,\n            ...values,\n        };\n        console.log(`Success form [${props.name ? props.name : 'no name form'}]: `, saveObject);\n        if (requestSaveForm && methodSaveForm) {\n            requestSaveForm({\n                method: methodSaveForm,\n                data: saveObject\n            })\n                .then(response => {\n                    notification.success({\n                        message: \"Сохранение прошло успешно\"\n                    });\n                    props.onFinish && props.onFinish(saveObject, response.data);\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\n        } else if (props.onFinish)\n            props.onFinish(saveObject);\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.error(\"Failed:\", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    const Header = (header) => <div className={`${rtPrefix}-form-header`}><FormItems items={header}/></div>\n    const Footer = (footer) => <div className={`${rtPrefix}-form-footer`}><FormItems items={footer}/></div>\n\n    return (\n        <React.Fragment>\n            {loaded\n                ? <AntForm\n                    form={antForm}\n                    {...antFormProps}\n                    className={`${antFormProps.className} ${rtPrefix}-form`}\n                    style={{ ...antFormProps.style, width: '100%', height: '100%' }}\n                    initialValues={{ ...antFormProps.initialValues, ...initFormData }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    onFieldsChange={(changedFields, allFields) => {\n                        const values = antForm.getFieldsValue();\n                        // console.log('dispatchToStore => ', dispatch, values);\n                        dispatch && dispatchToStore({ dispatch, setDateStore, value: values })}\n                    }\n                >\n                    <React.Fragment>\n                        {header ? Header(header) : null}\n                        {body ? <div className={getBodyCls()}><FormItems items={body}/></div> : null}\n                        {props.children}\n                        {footer ? Footer(footer) : null}\n                    </React.Fragment>\n                </AntForm>\n                : null}\n        </React.Fragment>\n    );\n};\n\nForm.propTypes = {\n\n    /** Не делать отступы у формы от краев блока. **Only config Form** */\n    noPadding: PropTypes.bool,\n\n    /** Разрешит скролл внтри формы. **Only config Form** */\n    scrollable: PropTypes.bool,\n\n    /** Массив объектов для шапки формы. Как правило только заголовок. */\n    header: PropTypes.arrayOf(PropTypes.object),\n\n    /** Массив объектов для тела формы */\n    body: PropTypes.arrayOf(PropTypes.object),\n\n    /** Массив объектов для подвала формы. Как правило только кнопки \"Сохранить\" и \"Отмена\" */\n    footer: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ссылка на функцию загрузки значений по умолчанию\n     * `(callBack) => callBack(initObject)` */\n    loadInitData: PropTypes.func,\n\n    /** Запрос для автоматического сохранения формы */\n    requestSaveForm: PropTypes.func,\n\n    /** HTTP Метод, передаваемый в запрос сохранения */\n    methodSaveForm: PropTypes.string,\n\n    /** Функция обработки перед сохранением формы */\n    processBeforeSaveForm: PropTypes.func\n};\n\nForm.defaultProps = {\n    noPadding: false,\n    scrollable: false,\n    loadInitData: noop,\n    methodSaveForm: 'POST'\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators({ setDateStore: setDateStore}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import React from 'react';\nimport {rtPrefix} from '../utils/variables';\n\n/** Компонент обертка со всеми пропрами div */\nconst Layout = props => {\n\n    const getCls = () => {\n        let cls = [`${rtPrefix}-layout`];\n        props.className && cls.push(props.className);\n        return cls.join(' ');\n    };\n\n    return (\n        <div {...props} className={getCls()}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Layout;\n","import React, {useState, useEffect} from 'react';\n\nconst Switcher = props => {\n\n    const { value } = props;\n\n    const [_value, _setValue] = useState(0);\n\n    useEffect(() => {\n        if(value !== undefined && value < props.children.length) {\n            _setValue(value);\n        }\n    }, [value])\n\n    return (props.children[_value]);\n};\n\n\nexport default Switcher;\n","import {Spin} from 'antd';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport React from 'react';\n\nexport const empty = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<span>Нет данных</span>{' '}\n\t</div>\n);\n\nexport const overlay = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<Spin\n\t\t\ttip='Загрузка...'\n\t\t\tindicator={<LoadingOutlined style={{fontSize: 24}} spin />}\n\t\t/>{' '}\n\t</div>\n);\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport { flatten, getTableRowKeys, getTableRowObjects } from \"../../../utils/baseUtils\";\n\nconst SelectionHead = (props) => {\n\tconst {column, container} = props;\n\tconst {rowKey, onSelectAll, selectedRowKeys, selectAll} = column;\n\n\tconst _handleChange = (e) => {\n\t\tconst rowKeys = flatten(getTableRowKeys(container.props.data, column.rowKey));\n\t\tconst rowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => rowKeys.includes(item[rowKey]));\n\t\tconst totalLength = rowKeys.length;\n\t\tconst selectLength = selectedRowKeys.length;\n\t\tconst checked = !(totalLength === selectLength);\n\n\t\t// const newRowKeys = container.props.data.map((item) => { return item[column.rowKey] });\n\t\tonSelectAll({selected: checked, rowKeys: rowKeys, rowObjects: rowObjects});\n\t};\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={selectAll === null}\n\t\t\tonChange={_handleChange}\n\t\t\tchecked={selectAll}\n\t\t/>\n\t);\n};\n\nexport default SelectionHead;\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport {\n\tflatten,\n\tgetTableRowKeys,\n\tfindNodeByRowKey, getTableRowObjects\n} from \"../../../utils/baseUtils\";\n\nconst getRowChildren = (data, rowKey) =>\n\tdata.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item[rowKey], getRowChildren(item.children, rowKey)];\n\t\t}\n\t\treturn item[rowKey];\n\t});\n\nconst findBrothers = (data, selfItem, rowKey, parentKey, rowKeys = null) => {\n\tlet arr = [];\n\tdata.forEach((item) => {\n\t\tif (\n\t\t\titem[parentKey] &&\n\t\t\titem[parentKey] === selfItem[parentKey] &&\n\t\t\titem[rowKey] !== selfItem[rowKey]\n\t\t) {\n\t\t\tif (rowKeys !== null) {\n\t\t\t\tif (rowKeys.includes(item[rowKey])) {\n\t\t\t\t\tarr.push(item[rowKey]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tarr.push(item[rowKey]);\n\t\t\t}\n\t\t} else if (item.children && item.children.length) {\n\t\t\tarr.push(\n\t\t\t\tfindBrothers(\n\t\t\t\t\titem.children,\n\t\t\t\t\tselfItem,\n\t\t\t\t\trowKey,\n\t\t\t\t\tparentKey,\n\t\t\t\t\trowKeys\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\treturn arr;\n};\n\nexport const parentAnalysis = ({\n\trowData,\n\trowKey,\n\tparentKey,\n\tchecked,\n\tnodeAssociated,\n\ttreeData,\n\tselectedRowKeys,\n\tindeterminateRowKeys,\n}) => {\n\tlet _selectedRowKeys = [...selectedRowKeys];\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\tlet currentRowData = rowData;\n\tlet parentExist = !!currentRowData[parentKey];\n\tlet lastTypeSelect = checked ? 'checked' : 'square';\n\tlet typeSelect = '';\n\tlet nextSquare = false;\n\n\t/** Пока есть родитель */\n\twhile (parentExist && nodeAssociated) {\n\t\tconst indeterminateBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_indeterminateRowKeys\n\t\t\t)\n\t\t);\n\t\tconst selectedBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_selectedRowKeys\n\t\t\t)\n\t\t);\n\t\tconst allBrothers = flatten(\n\t\t\tfindBrothers(treeData, currentRowData, rowKey, parentKey)\n\t\t);\n\n\t\tif (checked) {\n\t\t\tif (\n\t\t\t\tlastTypeSelect === 'checked' &&\n\t\t\t\tselectedBrothers.length === allBrothers.length\n\t\t\t)\n\t\t\t\ttypeSelect = 'checked';\n\t\t\telse typeSelect = 'square';\n\t\t} else {\n\t\t\tif (\n\t\t\t\t!checked &&\n\t\t\t\t!nextSquare &&\n\t\t\t\t(selectedBrothers.length || indeterminateBrothers.length)\n\t\t\t)\n\t\t\t\tnextSquare = true;\n\t\t\tif (nextSquare) typeSelect = 'square';\n\t\t\telse typeSelect = 'none';\n\t\t}\n\n\t\t// console.log(\"allBrothers \", allBrothers);\n\t\t// console.log(\"findParentById \", treeData,\n\t\t//     rowKey,\n\t\t//     parentKey,\n\t\t//     currentRowData[parentKey]);\n\t\t//\n\t\t// console.log(\"findNodeByRowKey \", findNodeByRowKey(treeData, rowKey, currentRowData[parentKey]));\n\n\t\t// Найти родителя\n\t\tcurrentRowData = findNodeByRowKey(\n\t\t\ttreeData,\n\t\t\trowKey,\n\t\t\tcurrentRowData[parentKey]\n\t\t);\n\n\t\tif (typeSelect === 'checked') {\n\t\t\t// Выделить галкой\n\t\t\t// console.log(\"checked\");\n\t\t\tlastTypeSelect = 'checked';\n\t\t\tif (!_selectedRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_selectedRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _indeterminateRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _indeterminateRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'square') {\n\t\t\t// Выдлеить квадратом\n\t\t\t// console.log(\"square: \");\n\t\t\tlastTypeSelect = 'square';\n\t\t\tif (!_indeterminateRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_indeterminateRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _selectedRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'none') {\n\t\t\t// Снять выделение\n\t\t\t// console.log(\"none: \");\n\t\t\tlastTypeSelect = 'none';\n\t\t\tconst indexS = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (indexS > -1) _selectedRowKeys.splice(indexS, 1);\n\t\t\tconst indexI = _indeterminateRowKeys.indexOf(\n\t\t\t\tcurrentRowData[rowKey]\n\t\t\t);\n\t\t\tif (indexI > -1) _indeterminateRowKeys.splice(indexI, 1);\n\t\t}\n\n\t\tparentExist = !!currentRowData[parentKey];\n\t\t// parentExist = проверка наличия след родителя\n\t}\n\n\treturn [_selectedRowKeys, _indeterminateRowKeys];\n};\n\nexport const onChangeSelectionCell = (props) => {\n\tconst {rowData, rowIndex, column, rows, checked} = props;\n\tconst {\n\t\trowKey,\n\t\tparentKey,\n\t\tnodeAssociated,\n\t\tselectedRowKeys,\n\t\tindeterminateRowKeys,\n\t\tonChange\n\t} = column;\n\n\t// const rowKeys = flatten(getTableRowKeys([rowData], column.rowKey));\n\t// const totalLength = container.props.data.length;\n\t// const checked = e.target.checked;\n\t// const currentRowKey = {[rowKey]: rowData[rowKey], checked};\n\t// console.log(\"_handleChange: \", container);\n\n\tlet _selectedRowKeys = [...selectedRowKeys];\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\t/** Обработка себя, поиск детей, выделение / снятие их */\n\tlet rowChildren = [];\n\tif (checked) {\n\t\tif (rowData.children && nodeAssociated)\n\t\t\trowChildren = flatten(getRowChildren(rowData.children, rowKey));\n\n\t\t_selectedRowKeys = _selectedRowKeys\n\t\t\t.concat([rowData[rowKey]])\n\t\t\t.concat(rowChildren);\n\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t(element) =>\n\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t!rowChildren.includes(element)\n\t\t);\n\t} else {\n\t\tif (rowData.children && nodeAssociated)\n\t\t\trowChildren = flatten(\n\t\t\t\tgetRowChildren(rowData.children, rowKey, false)\n\t\t\t);\n\n\t\t_selectedRowKeys = _selectedRowKeys.filter(\n\t\t\t(element) =>\n\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t!rowChildren.includes(element)\n\t\t);\n\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t(element) =>\n\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t!rowChildren.includes(element)\n\t\t);\n\t}\n\n\t[_selectedRowKeys, _indeterminateRowKeys] = parentAnalysis({\n\t\trowData,\n\t\trowKey,\n\t\tparentKey,\n\t\tchecked,\n\t\tnodeAssociated,\n\t\ttreeData: rows,\n\t\tselectedRowKeys: _selectedRowKeys,\n\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t});\n\n\tconst keys = [...new Set(_selectedRowKeys)];\n\tconst _selectedRowObjects = flatten(getTableRowObjects(rows, rowKey)).filter((item) => keys.includes(item[rowKey]));\n\t//return [...new Set(_disabledElements)]\n\t// onChange({ selected: checked, totalLength, rowData, rowIndex });\n\n\t/** Выясняем новое состояние галочки \"Выделить все\" */\n\tlet selectAll;\n\tconst selectLength = keys.length;\n\tconst totalLength = flatten(\n\t\tgetTableRowKeys(rows, column.rowKey)\n\t).length;\n\n\tif (selectLength === 0) selectAll = false;\n\telse if (totalLength === selectLength) selectAll = true;\n\telse if (totalLength !== selectLength) selectAll = null;\n\n\n\n\tonChange({\n\t\tselected: checked,\n\t\t_selectedRow: {\n\t\t\trowData: {...rowData},\n\t\t\trowIndex: rowIndex,\n\t\t\trowKey: rowKey,\n\t\t},\n\t\t_selectAll: selectAll,\n\t\t_selectedRowKeys: keys, //[...new Set(_selectedRowKeys)],\n\t\t_selectedRowObjects: _selectedRowObjects,\n\t\t_indeterminateRowKeys: [...new Set(_indeterminateRowKeys)],\n\t});\n\n\t// let uniqIds = {};\n\t// onChange({selected: checked, rowKeys: rowKeys.filter(obj => !uniqIds[obj[rowKey]] && (uniqIds[obj[rowKey]] = true)) });\n};\n\nconst SelectionCell = (props) => {\n\n\tconst {rowData, column} = props;\n\tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\n\tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\n\tconst checked = selectedRowKeys.includes(rowData[rowKey]);\n\n\t// React.useEffect(() => {\n\t// \tconsole.log(\"selectionCell\", props);\n\t// }, [props]);\n\n\tconst _onChangeHandler = (checked) => {\n\t\tconst {rowData, rowIndex, column, container} = props;\n\t\tonChangeSelectionCell({\n\t\t\trowData, rowIndex, column, rows: container.props.data, checked\n\t\t})\n\t}\n\n\treturn (\n\t\t\t<Checkbox\n\t\t\t\tindeterminate={det}\n\t\t\t\t// onChange={(e) => _onChangeHandler(e.target.checked)}\n\t\t\t\tchecked={checked}\n\t\t\t/>\n\t);\n};\n\nexport default SelectionCell;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {CloseCircleOutlined} from '@ant-design/icons';\nimport {rtPrefix} from '../../../utils/variables';\n\nconst SelectionList = (props) => {\n\tconst {selectedRowObjects, rowRender, onClickDropSelect} = props;\n\n\t// console.log(\"SelectionList typeof -> \", typeof(rowRender));\n\treturn (\n\t\t<div className={`${rtPrefix}-table-selected-rows`}>\n\t\t\t{selectedRowObjects && selectedRowObjects.length > 0 ? (\n\t\t\t\t<ul>\n\t\t\t\t\t{selectedRowObjects.map((item, index) => (\n\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t{/*{(typeof(rowRender) === 'string') ? <div>{item[rowRender]}</div> : rowRender }*/}\n\t\t\t\t\t\t\t{typeof rowRender === 'function' ? (\n\t\t\t\t\t\t\t\trowRender({rowData: item, rowIndex: index})\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>{item[rowRender]}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<div onClick={() => onClickDropSelect(item)}>\n\t\t\t\t\t\t\t\t<CloseCircleOutlined />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t) : (\n\t\t\t\t<div>Нет выбранных записей</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nSelectionList.propTypes = {\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { rowData, rowIndex }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n\t/** Список выделенных объектов */\n\tselectedRowObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Событие удаления элемента */\n\tonClickDropSelect: PropTypes.func.isRequired,\n};\n\nSelectionList.defaultProps = {};\n\nexport default SelectionList;\n","import React, {useRef, forwardRef, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport BaseTable, {AutoResizer} from 'react-base-table';\nimport {empty, overlay} from './defaultSettings';\nimport SelectionHead from './Selectable/SelectionHead';\nimport SelectionCell, {parentAnalysis, onChangeSelectionCell} from './Selectable/SelectionCell';\nimport SelectionList from './SelectionList/SelectionList';\nimport {rtPrefix} from '../../utils/variables';\nimport {\n\tflatten,\n\tgenerateUUID,\n\tgetTableRowKeys,\n\tfindNodeByRowKey,\n\tnoop,\n\tgetTableRowObjects, notificationError, useMounted\n} from \"../../utils/baseUtils\";\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../../redux/rtd.actions\";\nimport FormItems from \"../../Form/FormItems\";\nimport moment from \"moment\";\n\n/** Компонент таблицы */\nconst Table = forwardRef((props, ref) => {\n\n\t/** LOADING AND INFINITY MODE STATES */\n\t/** Наличие на сервере еще данных */\n\tconst [hasMore, setHasMore] = useState(true);\n\t/** Индикатор загрузки данных */\n\tconst [loading, setLoading] = useState(false);\n\n\t/** TABLE STATES */\n\t/** Колонки таблицы */\n\t// const [_columns, _setColumns] = useState([]);\n\t/** Строки таблицы */\n\tconst [_rows, _setRows] = useState([]);\n\t/** Ключи выделенных строк */\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n\t/** Значение строки поиска */\n\tconst [_searchValue, setSearchValue] = useState('');\n\t/** Объект фильтра */\n\tconst [_filter, setFilter] = useState({});\n\t/** Объект соритировки */\n\tconst [_sortBy, setSortBy] = useState({});\n\t/** Состояние selectAll галочки */\n\tconst [selectAll, setSelectAll] = useState(false);\n\n\t/** TREE STATES */\n\t/** Ключи строк с кубиками при selectable = true */\n\tconst [_indeterminateRowKeys, setIndeterminateRowKeys] = useState([]);\n\t/** Ключи раскрытых строк при selectable = true */\n\tconst [_expandedRowKeys, setExpandedRowKeys] = useState([]);\n\n\t/** FOOTER STATES */\n\t/** Отображать ли footer */\n\tconst [_footerShow, _setFooterShow] = useState(false);\n\t/** Всего строк по фильтру в таблице */\n    const [_totalCountRows, setTotalCountRows] = useState(0);\n\n\n\tconst [subscribeProps, setSubscribeProps] = useState({});\n\n\tconst tableRef = useRef();\n\n\tconst isMounted = useMounted()\n\n\tconst {\n\t\t/** Required */\n\t\tcolumns,\n\t\t// type,\n\t\tinfinityMode,\n\t\teditMode, // need Props.types\n\n\t\t/** Def values */\n\t\tdefaultRows,\n\t\tdefaultSelectedRowKeys,\n\t\tdefaultSearchValue,\n\t\tdefaultFilter,\n\t\tdefaultSortBy,\n\n\t\t/** Outdoor control */\n\t\trows,\n\t\tsetRows, // ???\n\t\tselectedRowKeys,\n\t\tsearchValue,\n\t\tfilter,\n\t\tsortBy,\n\n\t\t/** Base Props */\n\t\trowKey,\n\t\tcustomFields,\n\n\t\t/** View Props */\n\t\tempty,\n\t\toverlay,\n\t\tfixWidthColumn,\n\t\t// footerProps,\n\t\theaderHeight,\n\t\trowHeight,\n\t\trowRenderer,\n\t\tzebraStyle,\n\t\testimatedRowHeight,\n\t\t// cellBordered, // need Props.types\n\t\trowBordered,  // need Props.types\n\n\t\t/** Load Data Props */\n\t\tloadThreshold,\n\t\tpageSize,\n\t\trequestLoadRows,\n\t\trequestLoadCount,\n\t\tsearchParamName,\n\n\t\t/** Selectable Props */\n\t\tselectable,\n\n\t\t/** Tree Props */\n\t\tnodeAssociated,\n\t\texpandColumnKey,\n\t\texpandDefaultAll,\n\t\texpandLazyLoad,\n\t\texpandParentKey,\n\n\t\t/** Events */\n\t\tonRowClick,\n\t\tonRowDoubleClick,\n\t\tonRowExpand,\n\t\tonSelectedRowsChange,\n\t\tonExpandedRowsChange,\n\n\t\t/** SELECTED PANEL */\n\t\tshowSelection,\n\t\trowRenderShowSelection,\n\n\t\t/** REDUX PROPS */\n\t\tdispatchPath,\n\t\tdispatch,\n\t\tsubscribe,\n\n\t\tvalue,\n\t\tonChange,\n\t} = {...props, ...subscribeProps};\n\n\tconst footerProps = {\n\t\t...Table.defaultProps.footerProps,\n\t\t...props.footerProps,\n\t};\n\n\tconst selectedDispatchPath = dispatch && dispatch.path\n\t\t? `${dispatch.path}.selected`\n\t\t: dispatchPath && `${dispatchPath}.selected`;\n\tconst rowsDispatchPath = dispatch && dispatch.path\n\t\t? `${dispatch.path}.rows`\n\t\t: dispatchPath && `${dispatchPath}.rows`;\n\n\tuseEffect(() => {\n        // console.log(\"Инициализация дефолтных значений \", selectColumn, columns);\n        // console.log(\"Инициализация дефолтных значений defaultSelectedRowKeys > \", defaultSelectedRowKeys);\n\n\t\t// Инициализация дефолтных значений\n\t\t// _setRows(defaultRows);\n\t\tif(defaultRows.length > 0) _setRowsHandler(defaultRows);\n\t\telse if(rows.length > 0) _setRowsHandler(rows);\n\t\t// setSelectedRowKeys(defaultSelectedRowKeys);\n\t\t_setSelectedRowsHandler(defaultSelectedRowKeys,undefined, defaultRows)\n\t\tsetSearchValue(defaultSearchValue);\n\t\tsetFilterHandler(defaultFilter);\n\t\tsetSortBy(defaultSortBy);\n\t\tsetSelectAll(\n\t\t\tdefaultRows.length > 0 &&\n\t\t\t\tdefaultRows.length === defaultSelectedRowKeys.length\n\t\t);\n\t\t// Определение нужно ли отображать подвал\n\t\t_setFooterShow(\n\t\t\t(footerProps.showElements.length ||\n\t\t\tfooterProps.leftCustomSideElement ||\n\t\t\tfooterProps.centerCustomSideElement ||\n\t\t\tfooterProps.rightCustomSideElement));\n\n\t\t// Only tree table\n\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t// Открытие всех нод\n\t\t\tif (expandDefaultAll)\n\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\tflatten(getTableRowKeys(defaultRows, rowKey))\n\t\t\t\t);\n\t\t\t// Установка квадратиков на нужных нодах\n\t\t\tif (defaultSelectedRowKeys && defaultSelectedRowKeys.length > 0) {\n\t\t\t\tlet flatRows = flatten(getTableRowKeys(defaultRows, rowKey));\n\t\t\t\tlet selectedRow = flatRows.filter((item) =>\n\t\t\t\t\tdefaultSelectedRowKeys.includes(item[rowKey])\n\t\t\t\t);\n\t\t\t\tlet _indeterminateRowKeys = [];\n\t\t\t\tselectedRow.forEach((item) => {\n\t\t\t\t\tconst [ss, ii] = parentAnalysis({\n\t\t\t\t\t\trowData: item,\n\t\t\t\t\t\trowKey,\n\t\t\t\t\t\tparentKey: expandParentKey,\n\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t\tnodeAssociated,\n\t\t\t\t\t\ttreeData: defaultRows,\n\t\t\t\t\t\tselectedRowKeys: defaultSelectedRowKeys,\n\t\t\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t\t\t\t});\n\t\t\t\t\t_indeterminateRowKeys.push(...ii);\n\t\t\t\t});\n\t\t\t\tsetIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\n\t\t\t}\n\t\t}\n\n\t\t// if (type !== 'localSide') {\n\t\t_dataProcessing({\n\t\t\tsortBy: defaultSortBy,\n\t\t\tfilter: defaultFilter,\n\t\t\tsearchLine: defaultSearchValue,\n\t\t\treload: true,\n\t\t});\n\t\t// }\n\t\t// console.log(\"Table => useEffect start \");\n\t\t// setMounted(true);\n\t\tif (ref && typeof ref === 'function') ref({reloadData});\n\t\telse if (ref && typeof ref === 'object') ref.current = {reloadData};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif(isMounted) {\n\t\t\t// console.log('useEffect rows');\n\t\t\t_setRowsHandler(rows);\n\t\t\t// setSelectedRowKeys(selectedRowKeys);\n\t\t\t_setSelectedRowsHandler(selectedRowKeys, undefined, rows);\n\t\t\tsetSearchValue(searchValue);\n\t\t\tsetFilterHandler(filter);\n\t\t\tsetSortBy(sortBy);\n\t\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t\t// Открытие всех нод\n\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\tsetExpandedRowKeys(flatten(getTableRowKeys(rows, rowKey)));\n\t\t\t}\n\t\t}\n    }, [rows, selectedRowKeys, searchValue, filter, sortBy]);\n\n\tuseEffect(() => {\n\t\t// console.log('useEffect editMode');\n\t\t_setSelectedRowsHandler([], [])\n\t}, [editMode])\n\n\tuseEffect(() => {\n\t\t// console.log('useEffect value');\n\t\t_setRowsHandler(value)\n\t}, [value])\n\n\t/** Подписка на изменение props[subscribe.name] в сторе */\n\tsubscribe.map(item => {\n\t\treturn useEffect( () => {\n\t\t\tif((item.withMount || isMounted) && item.name) {\n\t\t\t\t// console.log(\"Table => useEffect => [%s] \", item.name, props[item.name]);\n\t\t\t\tlet extraData = {};\n\t\t\t\tif (item.extraData) {\n\t\t\t\t\tif (typeof item.extraData === 'object')\n\t\t\t\t\t\tObject.keys(item.extraData).forEach((key) => extraData[key] = props[`${item.name}.extraData.${key}`]);\n\t\t\t\t\telse\n\t\t\t\t\t\textraData = props[`${item.name}ExtraData`];\n\t\t\t\t}\n\t\t\t\tconst onChangeObject = {\n\t\t\t\t\tvalue: props[item.name],\n\t\t\t\t\textraData: extraData, //props[`${item.name}ExtraData`],\n\t\t\t\t\treloadTable: reloadData,\n\t\t\t\t\taddRows: _addRows,\n\t\t\t\t\taddRow: _addRow,\n\t\t\t\t\taddRowAsCopy: _addRowAsCopy,\n\t\t\t\t\teditRow: _editRow,\n\t\t\t\t\tremoveRow: _removeRow,\n\t\t\t\t\tmoveUpRow: _moveUpRow,\n\t\t\t\t\tmoveDownRow: _moveDownRow,\n\t\t\t\t\tsetSubscribeProps: _setSubscribeProps,\n\t\t\t\t}\n\t\t\t\titem.onChange && item.onChange(onChangeObject);\n\t\t\t}\n\t\t}, [props[item.name]]);\n\t})\n\n\t/** BASE FUNCTIONS */\n\n\tconst _setSubscribeProps = (props) => {\n\t\t// setTimeout(() => {\n\t\t// \tconsole.log('_setSubscribeProps');\n\t\tsetSubscribeProps({...subscribeProps, ...props});\n\t\t// }, 2000)\n\t}\n\n\tconst _setLoadedRowsHandler = (rows) => {\n\t\t_setRowsHandler(rows)\n\t\tonChange && onChange(rows)\n\t};\n\tconst _setRowsHandler = (rows) => {\n\t\t// console.log('_setRowsHandler onChange');\n\t\t_setRows(rows);\n\t\tsetRows(rows);\n\t\trowsDispatch(rows);\n\t};\n\n\tconst _setSelectedRowsHandler = (selectedKeys = [], selectedObjects = undefined, rows = []) => {\n\t\t// console.log('_setSelectedRowsHandler => ', selectedKeys)\n\t\tsetSelectedRowKeys(selectedKeys);\n\t\tif(selectedKeys.length === 0)\n\t\t\tif (selectable)\n\t\t\t\tselectedDispatch([]);\n\t\t\telse\n\t\t\t\tselectedDispatch(undefined);\n\t\telse if(selectedKeys.length > 0 && !selectedObjects)\n\t\t\tif (selectable)\n\t\t\t\tselectedDispatch (flatten( getTableRowObjects(rows, rowKey) ).filter((item) => selectedKeys.includes(item[rowKey])))\n\t\t\telse\n\t\t\t\tselectedDispatch (findNodeByRowKey(rows, rowKey, selectedKeys[0]))\n\t\telse\n\t\t\tselectedDispatch(selectedObjects);\n\t}\n\n\tconst rowsDispatch = (rows) => {\n\t\trowsDispatchPath && props.setDateStore && props.setDateStore(rowsDispatchPath, rows);\n\t};\n\n\tconst selectedDispatch = (data) => {\n\t\tselectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, data);\n\t}\n\n\tconst onTableEventsDispatch = (nameEvent, value) => {\n\t\tconst dp = dispatch && dispatch.path\n\t\t\t? `${dispatch.path}.events.${nameEvent}`\n\t\t\t: dispatchPath && `${dispatchPath}.events.${nameEvent}`;\n\n\t\tdp && props.setDateStore && props.setDateStore(dp, {\n\t\t\ttimestamp: moment(),\n\t\t\tvalue: value\n\t\t});\n\t\t// console.log('onTableEventsDispatch onChange');\n\t\tArray.isArray(value) && onChange && onChange(value)\n\t}\n\n\tconst setFilterHandler = (filter) => {\n\t\t// console.log('setFilterHandler => ', filter);\n\t\tsetFilter(filter);\n\t}\n\n\tconst reloadData = ({sortBy, filter, searchValue}, appendParams) => {\n\t\t// console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\n\t\ttableRef.current && tableRef.current.scrollToRow(0, 'auto');\n\t\tif(props.value && props.value.length > 0)\n\t\t\t_setSelectedRowsHandler(props.value.map(item => item[rowKey]), props.value);\n\t\telse\n\t\t\t_setSelectedRowsHandler()\n\n\t\tconst __sortBy = appendParams ? (sortBy ? sortBy : _sortBy) : sortBy;\n\t\tconst __filter = appendParams ? {..._filter, ...filter} : filter;\n\t\tconst __searchValue = appendParams ? (searchValue ? searchValue : _searchValue) : searchValue;\n\t\tsetSortBy(__sortBy);\n\t\tsetFilterHandler(__filter);\n\t\tsetSearchValue(__searchValue);\n\t\t_dataProcessing({\n\t\t\tsortBy: __sortBy,\n\t\t\tfilter: __filter,\n\t\t\tsearchLine: __searchValue,\n\t\t\treload: true,\n\t\t});\n        // console.log(\"reloadData loading \", loading);\n    };\n\n\tconst _dataProcessing = (params) => {\n\t\t// console.log('_dataProcessing', params);\n\t\tconst {sortBy, filter, searchLine, expandRow, reload} = params;\n\t\tif ((hasMore || reload) && !loading) {\n\t\t\tsetLoading(true);\n\t\t\tconst pageNum = reload\n\t\t\t\t? 0\n\t\t\t\t: Math.floor(_rows.length / pageSize);\n\t\t\tconst params = {\n\t\t\t\tpage: pageNum,\n\t\t\t\tsize: pageSize,\n\t\t\t\tsort:\n\t\t\t\t\tsortBy && sortBy.key\n\t\t\t\t\t\t? sortBy.key + ',' + sortBy.order\n\t\t\t\t\t\t: null,\n\t\t\t};\n\t\t\tconst dataQuery = {\n\t\t\t\t...filter,\n\t\t\t\t...(searchLine\n\t\t\t\t\t? {[searchParamName]: searchLine}\n\t\t\t\t\t: null),\n\t\t\t};\n\t\t\t// console.log('dataQuery', dataQuery);\n\n\t\t\tif(infinityMode && reload && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad) {\n\t\t\t\trequestLoadCount({\n\t\t\t\t\tparams,\n\t\t\t\t\tdata: dataQuery,\n\t\t\t\t})\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\t\t// const result = response.data;\n\t\t\t\t\t\tsetTotalCountRows(response.data);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error =>\n\t\t\t\t\t\tnotificationError(error, 'Ошибка получения количества записей по фильтру') );\n\t\t\t}\n\n\t\t\t// console.log('requestLoadRows => ', typeof requestLoadRows);\n\t\t\t// if(typeof requestLoadRows !== 'function'){\n\t\t\t//     setLoading(false);\n\t\t\t// }\n\t\t\tif(requestLoadRows) {\n\t\t\t\trequestLoadRows({\n\t\t\t\t\tparams,\n\t\t\t\t\tdata: dataQuery,\n\t\t\t\t})\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\t\tconst result = response.data;\n\t\t\t\t\t\t// Если иерархия и ленивая, то ищим кому добавть полученные записи\n\t\t\t\t\t\tif (!!expandColumnKey && expandLazyLoad) {\n\t\t\t\t\t\t\t// lastExpandRow//, setLastExpandRow\n\t\t\t\t\t\t\t// console.log('!!expandColumnKey && expandLazyLoad', result);\n\t\t\t\t\t\t\tif (pageNum === 0) {\n\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t{ [rowKey]: generateUUID() },\n\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t// _setRows(result);\n\t\t\t\t\t\t\t\t_setLoadedRowsHandler(result);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlet newRows = [..._rows];\n\t\t\t\t\t\t\t\t// (data, rowKey, rowValue)\n\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t{ [rowKey]: generateUUID() },\n\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tlet node = findNodeByRowKey(\n\t\t\t\t\t\t\t\t\tnewRows,\n\t\t\t\t\t\t\t\t\trowKey,\n\t\t\t\t\t\t\t\t\texpandRow[rowKey]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tnode.children = result;\n\t\t\t\t\t\t\t\t// console.log('newRows -> ', newRows);\n\t\t\t\t\t\t\t\t// _setRows(newRows);\n\t\t\t\t\t\t\t\t_setLoadedRowsHandler(newRows);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (result && result.length < pageSize) {\n\t\t\t\t\t\t\t\tsetHasMore(false);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetHasMore(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpageNum === 0\n\t\t\t\t\t\t\t\t? _setLoadedRowsHandler(result) // _setRows\n\t\t\t\t\t\t\t\t: _setLoadedRowsHandler(_rows.concat(result)); // _setRows\n\n\t\t\t\t\t\t\t// console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\n\t\t\t\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\t\t\t\t\tflatten(getTableRowKeys(result, rowKey))\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t\t\t\t_setLoadedRowsHandler(_rows); // _setRows\n\t\t\t\t\t\t// setHasMore(false);\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t});\n\t\t\t} else setLoading(false);\n\t\t}\n\t};\n\n\t/** Событие выделение одной строки в режиме без галочек */\n\tconst useSimpleAndDoubleClick = (actionSimpleClick, actionDoubleClick, delay = 200) => {\n\t\tconst [click, setClick] = useState(0);\n\t\tconst [data, setData] = useState(undefined);\n\t\tuseEffect(() => {\n\t\t\tconst timer = setTimeout(() => {\n\t\t\t\t// simple click\n\t\t\t\tif (click === 1) actionSimpleClick(data);\n\t\t\t\tsetClick(0);\n\t\t\t}, delay);\n\t\t\tif (click === 2) actionDoubleClick(data);\n\t\t\treturn () => clearTimeout(timer);\n\t\t}, [click]);\n\t\treturn (_data) => {setClick(prev => prev + 1); setData(() => _data);}\n\t}\n\n\tlet timer;\n\tconst simpleAndDoubleClick = (actionSimpleClick, actionDoubleClick, data) => (event) => {\n\t\tclearTimeout(timer);\n\t\tif (event.detail === 1) {\n\t\t\t// console.log('actionSimpleClick', data)\n\t\t\ttimer = setTimeout(() => actionSimpleClick(data), 200)\n\t\t} else if (event.detail === 2) {\n\t\t\t// console.log('actionDoubleClick', data)\n\t\t\tactionDoubleClick(data)\n\t\t}\n\t}\n\n\tconst _onRowClick = ({rowData, rowIndex, rowKey}) => {\n\t\t// console.log('actionSimpleClick')\n\t\tonTableEventsDispatch('onRowClick', rowData)\n\t\t_rowSelectAfterClick({rowData, rowIndex, rowKey, onClick: onRowClick})\n\t}\n\tconst _onRowDoubleClick = ({rowData, rowIndex, rowKey}) => {\n\t\t// console.log('onDoubleClick', rowData, rowIndex, rowKey);\n\t\t// console.log('actionDoubleClick')\n\t\t// rowDoubleClickDispatch(rowData);\n\t\tonTableEventsDispatch('onRowDoubleClick', rowData)\n\t\t_rowSelectAfterClick({rowData, rowIndex, rowKey, onClick: onRowDoubleClick})\n\t}\n\n\tconst _rowSelectAfterClick = ({rowData, rowIndex, rowKey, onClick}) => {\n\t\tconst checked = !_selectedRowKeys.includes(rowKey);\n\t\tconst newRowObject = {\n\t\t\trowData: {...rowData},\n\t\t\trowIndex: rowIndex,\n\t\t\trowKey: rowKey,\n\t\t};\n\t\tif (!selectable) {\n\t\t\t// console.log('_rowEventHandlers -> onClick', rowKey, rowIndex);\n\t\t\t// console.log('q onRowClick => ', rowData)\n\t\t\t// if(_selectedRowKeys)\n\t\t\tif(checked && !editMode)\n\t\t\t\t_setSelectedRowsHandler([rowKey], rowData);\n\t\t\tonSelectedRowsChange([rowKey], [rowData]);\n\t\t} else {\n\t\t\tonChangeSelectionCell({\n\t\t\t\t...newRowObject,\n\t\t\t\tcolumn: _getSelectionColumnProps(),\n\t\t\t\trows: _rows,\n\t\t\t\tchecked: checked,\n\t\t\t})\n\t\t}\n\t\tonClick && onClick({ selected: checked, ...newRowObject });\n\t}\n\n\tconst _rowEventHandlers = {\n\t\tonClick: _onRowClick,\n\t\tonDoubleClick: _onRowDoubleClick,\n\n\t\t// onClick: useSimpleAndDoubleClick(_onRowClick, _onRowDoubleClick),\n\t\t// onClick: simpleAndDoubleClick(_onRowClick, _onRowDoubleClick),\n\n\t\t// onDoubleClick: console.log('onDoubleClick'),\n\t\t// onContextMenu: console.log('context menu'),\n\t\t// onMouseEnter: console.log('mouse enter'),\n\t\t// onMouseLeave: console.log('mouse leave'),\n\t};\n\n\n\t/** Событие при сортировке */\n\tconst _onColumnSort = (sortBy) => {\n\t\t// console.log(\"sortBy\", sortBy);\n\t\ttableRef.current.scrollToRow(0, 'auto');\n\t\tlet localSortBy = _sortBy.order === 'desc' ? {} : sortBy;\n\t\tsetSortBy(localSortBy);\n\n\t\t// Для серверной сортировки - сбросить выделение\n\t\t// if (type !== 'localSide') {\n\t\t// setSelectedRowKeys([]);\n\t\t_setSelectedRowsHandler();\n\t\t// }\n\t\tconst loadParams = {\n\t\t\tsortBy: localSortBy,\n\t\t\tfilter: _filter,\n\t\t\tsearchLine: _searchValue,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t};\n\n\t/** VIEW FUNCTIONS */\n\n\n\tconst _footer = (\n\t\t<React.Fragment>\n\t\t\t{_footerShow ? (\n\t\t\t\t\t<React.Fragment>\n                        {/*className={'BaseTable__footer__counter'}>*/}\n\t\t\t\t\t\t<div key={'footer-left-custom-side'} className={'left-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.leftCustomSideElement\n\t\t\t\t\t\t\t\t? Array.isArray(footerProps.leftCustomSideElement)\n\t\t\t\t\t\t\t\t\t? <FormItems items={footerProps.leftCustomSideElement} />\n\t\t\t\t\t\t\t\t\t: <footerProps.leftCustomSideElement/>\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-center-custom-side'} className={'center-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.centerCustomSideElement\n\t\t\t\t\t\t\t\t? Array.isArray(footerProps.centerCustomSideElement)\n\t\t\t\t\t\t\t\t\t? <FormItems items={footerProps.centerCustomSideElement} />\n\t\t\t\t\t\t\t\t\t: <footerProps.centerCustomSideElement/>\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-right-custom-side'} className={'right-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.rightCustomSideElement\n\t\t\t\t\t\t\t\t? Array.isArray(footerProps.rightCustomSideElement)\n\t\t\t\t\t\t\t\t\t? <FormItems items={footerProps.rightCustomSideElement} />\n\t\t\t\t\t\t\t\t\t: <footerProps.rightCustomSideElement/>\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{selectable ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('selected')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.selectedTitle} {_selectedRowKeys.length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('loaded')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.loadedTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{footerProps.showElements.includes('total')\n\t\t\t\t\t\t\t? infinityMode && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad\n\t\t\t\t\t\t\t\t? <span>{footerProps.totalTitle} {_totalCountRows}</span>\n\t\t\t\t\t\t\t\t: <span>{footerProps.totalTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t: null}\n\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n\n\t/** Событие при рендере для стилизации */\n\tconst _rowClassName = ({rowData, rowIndex}) => {\n\t\tconst {rowClassName} = props;\n\t\treturn [\n\t\t\trowClassName,\n\t\t\t_selectedRowKeys.includes(rowData[rowKey]) && 'row-selected',\n\t\t\tzebraStyle ? (rowIndex % 2 === 0 ? 'even' : 'odd') : '',\n\t\t\trowBordered ? 'bordered' : ''\n\t\t].join(' ')\n\t};\n\n\t// const _cellProps = () => ({ className: [cellBordered ? 'cellBordered' : ''].join(' ')})\n\n\tconst _rowRenderer = (props) => {\n\t\tconst { cells, rowData, rowIndex } = props;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\theight: '100%'\n\t\t\t\t}}\n\t\t\t\tonClick={(e) =>\n\t\t\t\tsimpleAndDoubleClick(_onRowClick, _onRowDoubleClick, {rowData, rowIndex, rowKey: rowData[rowKey]})(e)}\n\t\t\t>\n\t\t\t\t{cells}\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst _rowProps = ({ columns, rowData, rowIndex }) => ({\n\t\tonClick: (e) =>\n\t\tsimpleAndDoubleClick(_onRowClick, _onRowDoubleClick, {rowData, rowIndex, rowKey: rowData[rowKey]})(e)\n\n})\n\n\t/** LOAD DATA FUNCTIONS */\n\tconst onEndReached = () => {\n\t\tlet selectAll;\n\t\tconst selectLength = _selectedRowKeys.length;\n\t\tif (selectLength === 0) selectAll = false;\n\t\telse if (selectLength > 0) selectAll = null;\n\n\t\tsetSelectAll(selectAll);\n\t\t// console.log('_filter', _filter);\n\n\t\tif (infinityMode) {\n\t\t\tconst loadParams = {\n\t\t\t\tsortBy: _sortBy,\n\t\t\t\tfilter: _filter,\n\t\t\t\tsearchLine: _searchValue,\n\t\t\t\treload: false,\n\t\t\t};\n\t\t\t_dataProcessing(loadParams);\n\t\t}\n\t};\n\n\t/** SELECTABLE FUNCTIONS */\n\n\t/** Событие при изменении галочки одной строки */\n\tconst _onChangeSelectHandler = ({\n\t\tselected,\n\t\t_selectedRow,\n\t\t_selectAll,\n\t\t_selectedRowKeys,\n\t\t_selectedRowObjects,\n\t\t_indeterminateRowKeys,\n\t}) => {\n\t\t// console.group(\"_onChangeSelectHandler\", _selectedRowKeys);\n\t\t// console.log(\"_selectedRowKeys\", _selectedRowKeys);\n\t\t// console.log(\"_indeterminateRowKeys\", _indeterminateRowKeys);\n\t\t// console.log(\"_selectAll\", _selectAll);\n\t\t// console.groupEnd();\n\n\t\t// setSelectedRowKeys(_selectedRowKeys);\n\t\t// selectedDispatch(_selectedRowObjects);\n\t\t_setSelectedRowsHandler(_selectedRowKeys, _selectedRowObjects)\n\t\tsetIndeterminateRowKeys(_indeterminateRowKeys);\n\t\tsetSelectAll(_selectAll);\n\t\tonSelectedRowsChange(_selectedRowKeys, _selectedRowObjects);\n\t};\n\n\t/** Событие при изменении галочки \"Выделить все\" */\n\tconst _onSelectAllHandler = ({selected, rowKeys, rowObjects}) => {\n\t\tconst selectedKeys = selected ? rowKeys : [];\n\t\t// setSelectedRowKeys(selectedKeys);\n\t\t// selectedDispatch(selected ? rowObjects : []);\n\t\t_setSelectedRowsHandler(selectedKeys, selected ? rowObjects : [])\n\t\tsetIndeterminateRowKeys([]);\n\t\tsetSelectAll(selected);\n\t\t// setSelectedRowObjects(rows);\n\t\t// console.log(\"_handleSelectAll\", selectedKeys);\n\t\tonSelectedRowsChange(selectedKeys, rowObjects);\n\t};\n\t//\n\t// const SelectionCell = (props) => {\n\t// \tconst {rowData, column} = props;\n\t// \tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\n\t// \tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\n\t// \tconst checked = selectedRowKeys.includes(rowData[rowKey]);\n\t// \tReact.useEffect(() => {\n\t// \t\tconsole.log(\"selectionCell\", props);\n\t// \t}, []);\n\t//\n\t// \tconst _handleChange = (checked) => {\n\t// \t\tconsole.log(\"_handleChange\", checked);\n\t// \t}\n\t//\n\t// \treturn (\n\t// \t\t<Checkbox\n\t// \t\t\tindeterminate={det}\n\t// \t\t\tonChange={(e) => _handleChange(e.target.checked)}\n\t// \t\t\tchecked={checked}\n\t// \t\t/>\n\t// \t);\n\t// };\n\n\tconst _getSelectionColumnProps = () => ({\n\t\trowKey: rowKey,\n\t\tparentKey: expandParentKey,\n\t\tnodeAssociated: nodeAssociated,\n\t\tselectedRowKeys: _selectedRowKeys,\n\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\tonChange: _onChangeSelectHandler,\n\t})\n\n\tconst _getColumns = () => {\n\t\tconst selectColumn = {\n\t\t\tkey: '__selection__',\n\t\t\theaderRenderer: SelectionHead,\n\t\t\tcellRenderer: <SelectionCell/>,\n\t\t\twidth: 40,\n\t\t\tflexShrink: 0,\n\t\t\tresizable: false,\n\t\t\tfrozen: 'left',\n\t\t\tselectAll: selectAll,\n\t\t\tonSelectAll: _onSelectAllHandler,\n\t\t\t..._getSelectionColumnProps()\n\t\t};\n\t\treturn selectable ? [selectColumn, ...columns] : [...columns];\n\t}\n\n\n\n\t/** TREE FUNCTIONS */\n\n\tconst _onExpandedRowsChange = (expandedRowKeys) => {\n\t\t// console.log(\"_onExpandedRowsChange\", expandedRowKeys);\n\t\tonExpandedRowsChange(expandedRowKeys);\n\t};\n\tconst _onRowExpand = ({expanded, rowData, rowIndex, rowKey}) => {\n\t\t// console.log(\"_onRowExpand\", rowData, expanded, rowIndex, rowKey);\n\t\tif (expanded) {\n\t\t\tsetExpandedRowKeys([..._expandedRowKeys, rowKey]);\n\n\t\t\tif (expandLazyLoad) {\n\t\t\t\tconst loadParams = {\n\t\t\t\t\tsortBy: _sortBy,\n\t\t\t\t\tfilter: {..._filter, [expandParentKey]: rowKey},\n\t\t\t\t\tsearchLine: _searchValue,\n\t\t\t\t\treload: false,\n\t\t\t\t\texpandRow: rowData,\n\t\t\t\t};\n\t\t\t\t// _callPropsOnLoad(loadParams);\n\t\t\t\t_dataProcessing(loadParams);\n\t\t\t}\n\t\t} else {\n\t\t\tlet expandedRowKeys = [..._expandedRowKeys];\n\t\t\tlet allChildKeys = flatten(\n\t\t\t\tgetTableRowKeys(rowData.children, props.rowKey)\n\t\t\t);\n\t\t\tallChildKeys.push(rowKey);\n\t\t\t// console.log('allChildKeys', allChildKeys);\n\t\t\tsetExpandedRowKeys(\n\t\t\t\texpandedRowKeys.filter((item) => !allChildKeys.includes(item))\n\t\t\t);\n\t\t}\n\t\tonRowExpand({expanded, rowData, rowIndex, rowKey});\n\t};\n\n\n\t/** ROW CHANGE FUNCTIONS */\n\n\t/**\n\t * Find row by key\n\t * @param data - table rows\n\t * @param key - key row for find\n\t * @param callback - function for return result\n\t */\n\tconst loop = (data, key, callback) => {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tif (data[i][rowKey] === key) {\n\t\t\t\t// console.log(`Selected => index: [${i}], path: [${data[i].path}]`, data);\n\t\t\t\treturn callback(data[i], i, data);\n\t\t\t} else {\n\t\t\t\t// console.log(`Other => index: [${i}], path: [${data[i].path}]`);\n\t\t\t}\n\t\t\tif (data[i].children) {\n\t\t\t\tloop(data[i].children, key, callback);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst _addRows = (rows) => {\n\t\tlet saveRows = [...rows];\n\t\tif (customFields)\n\t\t\t// Фильтрация по пользовательским параметрам\n\t\t\tsaveRows = saveRows.filter((sRow) => {\n\t\t\t\tlet isValid = [];\n\t\t\t\tcustomFields.forEach((field) => {\n\t\t\t\t\t// Валидация по пользовательской логике функции validate\n\t\t\t\t\tif(field.validate)\n\t\t\t\t\t\tisValid.push(field.validate(sRow, _rows));\n\n\t\t\t\t\t// Создание или переобразование по пользовательской логике функции value\n\t\t\t\t\tif(field.value)\n\t\t\t\t\t\tsRow[field.name] = field.value(sRow, _rows);\n\t\t\t\t});\n\t\t\t\t// console.log('_addRows isValid', isValid);\n\t\t\t\tif(!isValid.includes(false))\n\t\t\t\t\treturn sRow;\n\t\t\t});\n\t\tconst _localRows = [..._rows, ...saveRows]\n\t\t_setRowsHandler(_localRows);\n\t\tonTableEventsDispatch('onAddRows', _localRows);\n\t}\n\n\tconst _addRow = (row) => {\n\t\tlet _row = {...row}\n\t\tlet isValid = true;\n\t\tif (customFields) {\n\t\t\tlet validations = [];\n\t\t\tcustomFields.forEach((field) => {\n\t\t\t\tif(field.validate)\n\t\t\t\t\tvalidations.push(field.validate(_row, _rows));\n\n\t\t\t\tif(field.value)\n\t\t\t\t\t_row[field.name] = field.value(_row, _rows)\n\t\t\t});\n\t\t\tisValid = !validations.includes(false)\n\t\t}\n\t\tif(isValid) {\n\t\t\tconst _localRows = [..._rows, _row]\n\t\t\t_setRowsHandler(_localRows);\n\t\t\tonTableEventsDispatch('onAddRow', _localRows);\n\t\t}\n\n\t}\n\n\tconst _addRowAsCopy = () => {\n\t\t// console.log(\"_onClickAddAsCopy\", selectedRow);\n\t\tconst _localRows = [..._rows, findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0])]\n\t\t_setRowsHandler(_localRows);\n\t\tonTableEventsDispatch('onAddRowAsCopy', _localRows);\n\n\t};\n\n\tconst _editRow = (row) => {\n\t\t// console.log(\"_onClickEdit\", selectedRow);\n\t\tconst data = [..._rows];\n\t\tconst key = row[rowKey];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tdata[index] = row;\n\t\t\t_setRowsHandler(data);\n\t\t\t// selectedDispatch(row)\n\t\t\t_setSelectedRowsHandler(_selectedRowKeys, undefined, data);\n\t\t\tonTableEventsDispatch('onEditRow', data);\n\n\t\t\t// setSelectedRowKeys([]);\n\t\t})\n\t\t// props.onClickEdit(event, selectedRow);\n\t};\n\n\tconst _removeRow = (event) => {\n\t\t// console.log(\"_onClickDelete\", autoDeleteRows, selectedRowKeys);\n\t\tconst _localRows = _rows.filter(\n\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey]) )\n\t\t_setRowsHandler(_localRows);\n\t\t_setSelectedRowsHandler();\n\t\tonTableEventsDispatch('onRemoveRow', _localRows);\n\n\t\t// setSelectedRowKeys([]);\n\t\t// if (selectable)\n\t\t// \tselectedDispatch([]);\n\t\t// else\n\t\t// \tselectedDispatch(undefined);\n\t\t// commandPanelProps.onClickDelete(event, _selectedRowKeys);\n\t};\n\n\t// const _moveUpRow\n\n\tconst _moveUpRow = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index - 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data, 'onMoveUpRow');\n\t\t\t// commandPanelProps.onClickUp(event, {\n\t\t\t// \trowIndex: newRowIndex,\n\t\t\t// \trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t// }, data);\n\t\t})\n\t};\n\n\tconst _moveDownRow = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index + 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data, 'onMoveDownRow');\n\t\t\t// commandPanelProps.onClickDown(event, {\n\t\t\t// \trowIndex: newRowIndex,\n\t\t\t// \trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t// }, data);\n\t\t})\n\t};\n\n\tconst _getNewIndexRow = (oldIndex, newIndex) =>\n\t\tnewIndex >= 0 && newIndex < _rows.length ? newIndex : oldIndex;\n\n\tconst _changeIndexRow = (oldIndex, newIndex, arr, data, nameEvent) => {\n\t\tif (newIndex >= 0 && newIndex < arr.length) {\n\t\t\t// let arr = [..._rows]; // Копируем массив\n\t\t\tconst item = arr.splice(oldIndex, 1); // Удаляем элемент со старого места\n\t\t\t// console.log('_changeIndexRow => ',item);\n\t\t\tarr.splice(newIndex > 0 ? newIndex : 0, 0, item[0]); // Ставим элемент на новое место\n\t\t\t// console.log(\"_changeIndexRow\", item[0]);\n\t\t\t_setRowsHandler(data);\n\t\t\tonTableEventsDispatch(nameEvent, data);\n\n\t\t}\n\t};\n\n\t// const _onSearch = (searchLine, e) => {\n\t// \te.preventDefault();\n\t// \t// console.log(\"_onSearch\", searchLine);\n\t// \ttableRef.current.scrollToRow(0, 'auto');\n\t// \tsetSearchValue(searchLine);\n\t// \tconst loadParams = {\n\t// \t\tsortBy: _sortBy,\n\t// \t\tfilter: _filter,\n\t// \t\tsearchLine: searchLine,\n\t// \t\treload: true,\n\t// \t};\n\t// \t_dataProcessing(loadParams);\n\t// \tcommandPanelProps.onSearch(searchLine);\n\t// };\n\n\t/** SELECTED PANEL */\n\tconst _onClickDropSelectHandler = (dropObject) => {\n\t\tconst newSelectedKeys = _selectedRowKeys.filter(\n\t\t\t(item) => item !== dropObject[rowKey]\n\t\t);\n\t\t// setSelectedRowKeys(newSelectedKeys);\n\t\t_setSelectedRowsHandler(newSelectedKeys, undefined, _rows);\n\t\tsetSelectAll((newSelectedKeys.length === 0 ? false : null));\n\t\tonSelectedRowsChange(newSelectedKeys);\n\t};\n\n\treturn (\n\t\t<div className={`${rtPrefix}-table`}>\n\t\t\t<div className={`${rtPrefix}-baseTable`}>\n\t\t\t\t<AutoResizer>\n\t\t\t\t\t{({width, height}) => (\n\t\t\t\t\t\t<BaseTable\n\t\t\t\t\t\t\tref={tableRef}\n\t\t\t\t\t\t\t/** Required */\n\t\t\t\t\t\t\tcolumns={_getColumns()}\n\t\t\t\t\t\t\tdata={_rows}\n\t\t\t\t\t\t\t/** Control Props */\n\t\t\t\t\t\t\tsortBy={_sortBy}\n\t\t\t\t\t\t\t/** Base Props */\n\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\trowKey={rowKey}\n\t\t\t\t\t\t\t// rowProps={rowProps}\n\n\t\t\t\t\t\t\t/** View Props */\n\t\t\t\t\t\t\trowClassName={_rowClassName}\n\t\t\t\t\t\t\temptyRenderer={empty}\n\t\t\t\t\t\t\tfixed={fixWidthColumn}\n\t\t\t\t\t\t\tfooterHeight={_footerShow ? footerProps.height : 0}\n\t\t\t\t\t\t\theaderHeight={headerHeight}\n\t\t\t\t\t\t\trowHeight={rowHeight}\n\t\t\t\t\t\t\toverlayRenderer={loading ? overlay : null}\n\t\t\t\t\t\t\tfooterRenderer={_footer}\n\t\t\t\t\t\t\trowRenderer={rowRenderer}\n\t\t\t\t\t\t\t// rowProps={_rowProps}\n\t\t\t\t\t\t\t// cellProps={_cellProps}\n\t\t\t\t\t\t\testimatedRowHeight={estimatedRowHeight}\n\t\t\t\t\t\t\t/** Load Data Props */\n\t\t\t\t\t\t\tonEndReachedThreshold={loadThreshold}\n\t\t\t\t\t\t\tonEndReached={infinityMode ? onEndReached : undefined}\n\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t/** Tree Props */\n\t\t\t\t\t\t\texpandColumnKey={expandColumnKey}\n\t\t\t\t\t\t\texpandedRowKeys={_expandedRowKeys}\n\t\t\t\t\t\t\t/** Events */\n\t\t\t\t\t\t\tonColumnSort={_onColumnSort}\n\t\t\t\t\t\t\trowEventHandlers={_rowEventHandlers}\n\t\t\t\t\t\t\tonExpandedRowsChange={_onExpandedRowsChange}\n\t\t\t\t\t\t\tonRowExpand={_onRowExpand}\n\t\t\t\t\t\t\teditMode={editMode}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</AutoResizer>\n\t\t\t</div>\n\t\t\t{showSelection && selectable && !expandColumnKey ? (\n\t\t\t\t<SelectionList\n\t\t\t\t\tonClickDropSelect={_onClickDropSelectHandler}\n\t\t\t\t\tselectedRowObjects={flatten(\n\t\t\t\t\t\tgetTableRowObjects(_rows, rowKey)\n\t\t\t\t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]))}\n\t\t\t\t\trowRender={rowRenderShowSelection}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</div>\n\t);\n});\n\nTable.propTypes = {\n\t/**\n\t * REQUIRED\n\t * */\n\n\t/** Столбцы таблицы */\n\tcolumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Режим загрузки данных по скроллу */\n\tinfinityMode: PropTypes.bool,\n\n\t/**\n\t * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n\t * */\n\n\t/** Строки по умолчанию */\n\tdefaultRows: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Ключи выделенных по умолчанию строк */\n\tdefaultSelectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска по умолчанию строк */\n\tdefaultSearchValue: PropTypes.string,\n\n\t/** Объект фильтрации по умолчанию */\n\tdefaultFilter: PropTypes.object,\n\n\t/** Сортировка по умолчанию */\n\tdefaultSortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n\t * */\n\n\t/** Строки таблицы. Используется для контроля таблицы из вне. */\n\trows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Функция задания строк таблицы. */\n    setRows: PropTypes.func,\n\n\t/** Выделенные строки таблицы. */\n\tselectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Объект фильтрации */\n\tfilter: PropTypes.object,\n\n\t/** Объект сортировки */\n\tsortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * BASE PROPS\n\t * */\n\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\n\t/** Дополнительные поля и валидация в объекты таблицы\n\t * Данный параметр (props) осуществляет дополнительную обработку объекта таблицы после закрытия модалки, но перед добавлением в таблицу.\n\t * Можно как изменить существующие поля объекта, так и добавить новые поля объекта.\n\t * `customFields` - массив объектов для дополнения или изменения полей объектов таблицы\n\t * ```json\n\t * [\n\t * \t{\n\t * \t\tname: <String>,\n\t * \t\tvalue: <func>,\n\t * \t\tvalidate: <func>\n\t * \t}\n\t * ]\n\t * ```\n\t * `name` – Имя параметра в объекте\n\t * `value` – Функция формирования значения - `(row, rows) => { return {} }`\n\t * `validate` – Функция проверки значения - `(row, rows) => { return <Bool> }`\n\t * Параметра **validate** работает **только** для модельного окна тип `select`.\n\t * Validate можно наложить на любое кол-во полей объекта и если хотя бы один `validate` === `false`, то исключает строку из добавления.\n\t */\n\tcustomFields: PropTypes.arrayOf(PropTypes.object),\n\n\t/**\n\t * Данный параметр (props) позволяет добавить или переопределить пропсы для колонок, которые заданы конфигурацией на сервере\n\t * `customColumnProps` - массив объектов `props` к `columns`. Один объект описывает доп. параметры для одной колонки\n\t * ```json\n\t * [\n\t * \t{\n\t * \t\tname: <String>,\n\t * \t\tcellRenderer: <func>,\n\t * \t\t...advancedColProps\n\t * \t}\n\t * ]\n\t * ```\n\t * `name` – key колонки к которой надо применить дополнительные пропсы\n\t * `cellRenderer` – `({ cellData, columns, column, columnIndex, rowData, rowIndex, container, isScrolling }) => return <ReactNode>`\n\t * `advancedColProps` – подолнительные свойства колонок тут -> [Column](https://autodesk.github.io/react-base-table/api/column)\n\t */\n\tcustomColumnProps: PropTypes.arrayOf(PropTypes.object),\n\n\t/**\n\t * VIEW PROPS\n\t * */\n\n\t/** Вывод когда нет данных */\n\tempty: PropTypes.element,\n\n\t/** Отображение загрузки данных */\n\toverlay: PropTypes.element,\n\n\t/** Фиксированная ширина столбцов. Появится боковой скрол */\n\tfixWidthColumn: PropTypes.bool,\n\n\tfooterProps: PropTypes.shape({\n\n\t\t/** Высота подвала */\n\t\theight: PropTypes.number,\n\n\t\t/** Массив элементов футтера, которые надо отобразить\n\t\t * ['selected', 'loaded', 'total'] */\n\t\tshowElements: PropTypes.arrayOf(PropTypes.string),\n\n\t\t/** Заколовок для кол-ва выбранных объектов */\n\t\tselectedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва загруженны объектов */\n\t\tloadedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва всего объектов */\n\t\ttotalTitle: PropTypes.string,\n\n\t\t/** Левый кастомный элемент командной панели */\n\t\tleftCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\n\t\t/** Центральный кастомный элемент командной панели */\n\t\tcenterCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\n\t\t/** Правый кастомный элемент командной панели */\n\t\trightCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\t}),\n\n\t/** Высота заголовка таблицы */\n\theaderHeight: PropTypes.number,\n\n\t/** Высота строки таблицы */\n\trowHeight: PropTypes.number,\n\n\t/** Custom row renderer\n\t * Параметры - `({ isScrolling, cells, columns, rowData, rowIndex, depth })` */\n\trowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n\t/** Строки будут в зебро-стиле */\n\tzebraStyle: PropTypes.bool,\n\n\t/** Высота расширения */\n\testimatedRowHeight: PropTypes.number,\n\n\t/** Отображать ли разделители ячеек в строке */\n\tcellBordered: PropTypes.bool,\n\n\t/** Отобрадать ли разделители строк */\n\trowBordered: PropTypes.bool,\n\n\t/**\n\t * LOAD DATA PROPS\n\t * */\n\n\t/** Порог в пикселях для вызова _onLoad.\n\t * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n\tloadThreshold: PropTypes.number,\n\n\t/** Размер страницы */\n\tpageSize: PropTypes.number,\n\n\t/** Функция запроса для конфигурации */\n\trequestLoadConfig: PropTypes.func,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\t/**\n\t * SELECTABLE PROPS\n\t * */\n\n\t/** Таблица с возможностью выбора строки */\n\tselectable: PropTypes.bool,\n\n\t/**\n\t * TREE PROPS\n\t * */\n\n\t/** Родительский узел и дочерние узлы связаны (Работает только при `selectable`) */\n\tnodeAssociated: PropTypes.bool,\n\n\t/** Ключ колонки по которой строить иерархию */\n\texpandColumnKey: PropTypes.string,\n\n\t/** Открыть по умолчанию вложенность до уровня N или 'All' */\n\texpandDefaultAll: PropTypes.bool,\n\n\t/** Загружать ноды иерархии по одной */\n\texpandLazyLoad: PropTypes.bool,\n\n\t/** Поле в котором хранится ссылка на родителя */\n\texpandParentKey: PropTypes.string,\n\n\t/**\n\t * EVENTS\n\t * */\n\n\t/** Событие при клике на строку (только при `selectable` = `false`)\n\t * `({selected, rowData, rowIndex}) => {}` */\n\tonRowClick: PropTypes.func,\n\n\t/** Событие при двойном клике на строку.\n\t * `({rowData, rowIndex, rowKey}) => {}` */\n\tonRowDoubleClick: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * `({ expanded, rowData, rowIndex, rowKey }) => {}` */\n\tonRowExpand: PropTypes.func,\n\n\t/** Событие при выборе строки.\n\t * `([rowKeys], [rowDatas]) => {}` */\n\tonSelectedRowsChange: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * `(expandedRowKeys) => {}` - массив ключей открытых нод */\n\tonExpandedRowsChange: PropTypes.func,\n\n\t/** SELECTED PANEL */\n\n\t/** Отображать ли панель выбранных элементов */\n\tshowSelection: PropTypes.bool,\n\n\t/** Строка или функция для отображения элементов списка выбранных\n\t * Строка - имя поля\n\t * Функция - рендер строк.\n\t * `({ rowData, rowIndex }) => { return <Component> }` */\n\trowRenderShowSelection: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.string,\n\t]),\n\n\t/** Путь в сторе куда класть выбранную строку таблицы */\n\tdispatchPath: PropTypes.string,\n\n\t/** Объект для подписки на изменения в STORE */\n\tsubscribe: PropTypes.arrayOf(PropTypes.object),\n};\n\nTable.defaultProps = {\n\tinfinityMode: false,\n\teditMode: false,\n\tdefaultRows: [],\n\tdefaultSelectedRowKeys: [],\n\tdefaultSearchValue: '',\n\tdefaultFilter: {},\n\tdefaultSortBy: {},\n\n\trows: [],\n\tsetRows: noop,\n\tselectedRowKeys: [],\n\tsearchValue: '',\n\tfilter: {},\n\tsortBy: {},\n\n\trowKey: 'id',\n\n\tempty: empty,\n\toverlay: overlay,\n\tfixWidthColumn: false,\n\tfooterProps: {\n\t\theight: 30,\n\t\tshowElements: [],\n\t\tselectedTitle: 'Выделено:',\n\t\tloadedTitle: 'Загружено записей:',\n\t\ttotalTitle: 'Всего записей:',\n\t\tleftCustomSideElement: null,\n\t\tcenterCustomSideElement: null,\n\t\trightCustomSideElement: null\n\t},\n\theaderHeight: 36,\n\trowHeight: 36,\n\tzebraStyle: false,\n\testimatedRowHeight: undefined,\n\tcellBordered: false,\n\trowBordered: true,\n\n\tloadThreshold: 300,\n\tpageSize: 50,\n\trequestLoadRows: undefined,\n    requestLoadCount: noop,\n\tsearchParamName: 'searchLine',\n\n\tselectable: false,\n\n\tnodeAssociated: true,\n\texpandColumnKey: undefined,\n\texpandDefaultAll: true,\n\texpandLazyLoad: false,\n\texpandParentKey: 'parentId',\n\n\tonRowClick: noop,\n\tonRowDoubleClick: noop,\n\tonRowExpand: noop,\n\tonSelectedRowsChange: noop,\n\tonExpandedRowsChange: noop,\n\n\tshowSelection: false,\n\n\tdispatchPath: undefined,\n\tsubscribe: [],\n};\n\nconst mapStateToProps = (store, ownProps) => {\n\tconst {subscribe} = ownProps;\n\tlet state = {};\n\tif(subscribe && subscribe.length > 0){\n\t\tsubscribe.forEach(item => {\n\t\t\tconst {name, path, extraData} = item;\n\t\t\tif(name && path)\n\t\t\t\tstate[name] = objectPath.get(store, path);\n\t\t\tif(name && extraData)\n\t\t\t\tif(typeof extraData === 'object')\n\t\t\t\t\tObject.keys(extraData).forEach( (key) => state[`${name}.extraData.${key}`] = objectPath.get(store, extraData[key]) );\n\t\t\t\telse\n\t\t\t\t\tstate[`${name}ExtraData`] = objectPath.get(store, extraData);\n\t\t})\n\t}\n\treturn state;\n};\nconst mapDispatchToProps = (dispatch) =>\n\tbindActionCreators({ setDateStore: setDateStore}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\n","import React, {useEffect, useState} from \"react\";\nimport { getSortBy, noop, notificationError } from \"../../utils/baseUtils\";\nimport Table from \"./Table\";\nimport { Typography } from \"antd\";\n\nconst defaultProps = {\n    defaultFilter: {},\n    rowKey: 'id',\n    pageSize: 50,\n    requestLoadConfig: noop,\n    expandColumnKey: undefined,\n    expandLazyLoad: false,\n    expandParentKey: 'parentId',\n    customColumnProps: [],\n};\n\nconst ConfigLoader = props => {\n\n    /** Конфигурация таблицы */\n    const [tableConfig, setTableConfig] = useState(undefined);\n\n    const {\n        defaultSortBy,\n        defaultFilter,\n        rowKey,\n        pageSize,\n        requestLoadConfig,\n        expandColumnKey,\n        expandLazyLoad,\n        expandParentKey,\n        customColumnProps,\n        cellBordered,\n    } = {...defaultProps, ...props};\n\n    useEffect(() => {\n        let cleanupFunction = false;\n        const loadData = async () => {\n            if (requestLoadConfig) {\n                // console.log('requestLoadConfig => ', typeof requestLoadConfig);\n                // console.log('requestLoadRows => ', typeof props.requestLoadRows);\n                requestLoadConfig()\n                    .then((response) => {\n                        // let result = response.data;\n                        // console.log('requestLoadConfig -> ', response.data);\n                        if(!cleanupFunction) {\n                            // setTableConfig(response.data);\n                            configParser(response.data);\n                        }\n                    })\n                    .catch(error => notificationError(error, 'Ошибка получения конфигурации') );\n            }\n        };\n        loadData().then(r => r);\n        return () => cleanupFunction = true;\n    }, []);\n\n    const configParser = (config) => {\n        // Массив колонок\n        let _columns = [];\n        // Сортировка по умолчанию\n        let _defaultSorter = [];\n\n        config && config.fields && config.fields.forEach((item) => {\n            const colProps = customColumnProps &&\n                customColumnProps.find((render) =>\n                    render.name === item.name || render.name === item.alias);\n\n            // Индекс или имя поля в данных\n            const dataIndex = (item.alias ? item.alias : item.name);\n\n            if (_defaultSorter.length === 0 || _defaultSorter[1] === undefined)\n                _defaultSorter = getSortBy(defaultSortBy, item.defaultSort, dataIndex);\n\n            _columns.push({\n                key: dataIndex,\n                title: item.header ? item.header : item.name,\n                dataKey: dataIndex,\n                align: item.align,\n                width: item.width,\n                resizable: item.resizable,\n                sortable: item.sortable,\n                hidden: !item.visible,\n                className: [cellBordered ? 'bordered' : ''].join(' '),\n                headerClassName: [cellBordered ? 'bordered' : ''].join(' '),\n                // cellRenderer: cellR && cellR.cellRender,\n                ...colProps,\n                cellRenderer: (object) => {\n                    if (colProps && colProps.cellRenderer)\n                        return <colProps.cellRenderer {...object}/>\n                        // return colProps.cellRenderer(object) ? colProps.cellRenderer(object) : '---';\n                    else\n                        return object.cellData\n                            ? <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>{object.cellData}</Typography.Text>\n                            : <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>---</Typography.Text> ;\n                        // return object.cellData ? object.cellData : '---';\n                },\n            });\n        });\n\n        let _defaultFilter;\n        if (config && config.hierarchical && config.hierarchyLazyLoad) {\n            const parentKey = config.hierarchyField\n                ? config.hierarchyField.split('/')[1]\n                : expandParentKey;\n            _defaultFilter =  {...defaultFilter, [parentKey]: null};\n        } else _defaultFilter = defaultFilter;\n\n\n        setTableConfig({\n            columns: _columns,\n            defaultSortBy: _defaultSorter[0],\n            defaultFilter: _defaultFilter,\n            rowKey:\n                config && config.hierarchical && config.hierarchyField\n                    ? config.hierarchyField.split('/')[0]\n                    : rowKey,\n            expandParentKey:\n                config && config.hierarchical && config.hierarchyField\n                    ? config.hierarchyField.split('/')[1]\n                    : expandParentKey,\n            expandColumnKey:\n                config && config.hierarchical && config.hierarchyView\n                    ? config.hierarchyView\n                    : expandColumnKey,\n            expandLazyLoad:\n                config && config.hierarchical && config.hierarchyLazyLoad\n                    ? config.hierarchyLazyLoad\n                    : expandLazyLoad,\n            pageSize: config && config.hierarchical ? 1 : pageSize,\n        });\n    }\n\n    if(tableConfig)\n        return ( <Table {...props} {...tableConfig} /> );\n    else\n        return null\n};\n\nexport default ConfigLoader;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\nvar hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\nvar now = hasNativePerformanceNow ? function () {\n  return performance.now();\n} : function () {\n  return Date.now();\n};\nfunction cancelTimeout(timeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\nfunction requestTimeout(callback, delay) {\n  var start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  var timeoutID = {\n    id: requestAnimationFrame(tick)\n  };\n  return timeoutID;\n}\n\nvar size = -1; // This utility copied from \"dom-helpers\" package.\n\nfunction getScrollbarSize(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (size === -1 || recalculate) {\n    var div = document.createElement('div');\n    var style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n    document.body.appendChild(div);\n    size = div.offsetWidth - div.clientWidth;\n    document.body.removeChild(div);\n  }\n\n  return size;\n}\nvar cachedRTLResult = null; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\n\nfunction getRTLOffsetType(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (cachedRTLResult === null || recalculate) {\n    var outerDiv = document.createElement('div');\n    var outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n    var innerDiv = document.createElement('div');\n    var innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n    outerDiv.appendChild(innerDiv);\n    document.body.appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    document.body.removeChild(outerDiv);\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nvar defaultItemKey = function defaultItemKey(_ref) {\n  var columnIndex = _ref.columnIndex,\n      data = _ref.data,\n      rowIndex = _ref.rowIndex;\n  return rowIndex + \":\" + columnIndex;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsOverscanCount = null;\nvar devWarningsOverscanRowsColumnsCount = null;\nvar devWarningsTagName = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount =\n    /*#__PURE__*/\n    new WeakSet();\n    devWarningsOverscanRowsColumnsCount =\n    /*#__PURE__*/\n    new WeakSet();\n    devWarningsTagName =\n    /*#__PURE__*/\n    new WeakSet();\n  }\n}\n\nfunction createGridComponent(_ref2) {\n  var _class, _temp;\n\n  var getColumnOffset = _ref2.getColumnOffset,\n      getColumnStartIndexForOffset = _ref2.getColumnStartIndexForOffset,\n      getColumnStopIndexForStartIndex = _ref2.getColumnStopIndexForStartIndex,\n      getColumnWidth = _ref2.getColumnWidth,\n      getEstimatedTotalHeight = _ref2.getEstimatedTotalHeight,\n      getEstimatedTotalWidth = _ref2.getEstimatedTotalWidth,\n      getOffsetForColumnAndAlignment = _ref2.getOffsetForColumnAndAlignment,\n      getOffsetForRowAndAlignment = _ref2.getOffsetForRowAndAlignment,\n      getRowHeight = _ref2.getRowHeight,\n      getRowOffset = _ref2.getRowOffset,\n      getRowStartIndexForOffset = _ref2.getRowStartIndexForOffset,\n      getRowStopIndexForStartIndex = _ref2.getRowStopIndexForStartIndex,\n      initInstanceProps = _ref2.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref2.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref2.validateProps;\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_PureComponent) {\n    _inheritsLoose(Grid, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function Grid(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_assertThisInitialized(_this)));\n      _this._resetIsScrollingTimeoutId = null;\n      _this._outerRef = void 0;\n      _this.state = {\n        instance: _assertThisInitialized(_assertThisInitialized(_this)),\n        isScrolling: false,\n        horizontalScrollDirection: 'forward',\n        scrollLeft: typeof _this.props.initialScrollLeft === 'number' ? _this.props.initialScrollLeft : 0,\n        scrollTop: typeof _this.props.initialScrollTop === 'number' ? _this.props.initialScrollTop : 0,\n        scrollUpdateWasRequested: false,\n        verticalScrollDirection: 'forward'\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanColumnStartIndex, overscanColumnStopIndex, overscanRowStartIndex, overscanRowStopIndex, visibleColumnStartIndex, visibleColumnStopIndex, visibleRowStartIndex, visibleRowStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanColumnStartIndex: overscanColumnStartIndex,\n          overscanColumnStopIndex: overscanColumnStopIndex,\n          overscanRowStartIndex: overscanRowStartIndex,\n          overscanRowStopIndex: overscanRowStopIndex,\n          visibleColumnStartIndex: visibleColumnStartIndex,\n          visibleColumnStopIndex: visibleColumnStopIndex,\n          visibleRowStartIndex: visibleRowStartIndex,\n          visibleRowStopIndex: visibleRowStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollLeft, scrollTop, horizontalScrollDirection, verticalScrollDirection, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          horizontalScrollDirection: horizontalScrollDirection,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          verticalScrollDirection: verticalScrollDirection,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (rowIndex, columnIndex) {\n        var _this$props = _this.props,\n            columnWidth = _this$props.columnWidth,\n            direction = _this$props.direction,\n            rowHeight = _this$props.rowHeight;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && columnWidth, shouldResetStyleCacheOnItemSizeChange && direction, shouldResetStyleCacheOnItemSizeChange && rowHeight);\n\n        var key = rowIndex + \":\" + columnIndex;\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(key)) {\n          style = itemStyleCache[key];\n        } else {\n          var _offset = getColumnOffset(_this.props, columnIndex, _this._instanceProps);\n\n          var isRtl = direction === 'rtl';\n          itemStyleCache[key] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : _offset,\n            right: isRtl ? _offset : undefined,\n            top: getRowOffset(_this.props, rowIndex, _this._instanceProps),\n            height: getRowHeight(_this.props, rowIndex, _this._instanceProps),\n            width: getColumnWidth(_this.props, columnIndex, _this._instanceProps)\n          };\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScroll = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientHeight = _event$currentTarget.clientHeight,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollTop = _event$currentTarget.scrollTop,\n            scrollHeight = _event$currentTarget.scrollHeight,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n\n          var calculatedScrollLeft = scrollLeft;\n\n          if (direction === 'rtl') {\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                calculatedScrollLeft = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          calculatedScrollLeft = Math.max(0, Math.min(calculatedScrollLeft, scrollWidth - clientWidth));\n          var calculatedScrollTop = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n            scrollLeft: calculatedScrollLeft,\n            scrollTop: calculatedScrollTop,\n            verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1);\n        });\n      };\n\n      return _this;\n    }\n\n    Grid.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = Grid.prototype;\n\n    _proto.scrollTo = function scrollTo(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(function (prevState) {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward'\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(_ref4) {\n      var _ref4$align = _ref4.align,\n          align = _ref4$align === void 0 ? 'auto' : _ref4$align,\n          columnIndex = _ref4.columnIndex,\n          rowIndex = _ref4.rowIndex;\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          height = _this$props2.height,\n          rowCount = _this$props2.rowCount,\n          width = _this$props2.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n      var scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps); // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n\n      var horizontalScrollbarSize = estimatedTotalWidth > width ? scrollbarSize : 0;\n      var verticalScrollbarSize = estimatedTotalHeight > height ? scrollbarSize : 0;\n      this.scrollTo({\n        scrollLeft: columnIndex !== undefined ? getOffsetForColumnAndAlignment(this.props, columnIndex, align, scrollLeft, this._instanceProps, verticalScrollbarSize) : scrollLeft,\n        scrollTop: rowIndex !== undefined ? getOffsetForRowAndAlignment(this.props, rowIndex, align, scrollTop, this._instanceProps, horizontalScrollbarSize) : scrollTop\n      });\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n          initialScrollLeft = _this$props3.initialScrollLeft,\n          initialScrollTop = _this$props3.initialScrollTop;\n\n      if (this._outerRef != null) {\n        var outerRef = this._outerRef;\n\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var direction = this.props.direction;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollTop = _this$state2.scrollTop,\n          scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        var outerRef = this._outerRef;\n\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n\n            default:\n              var clientWidth = outerRef.clientWidth,\n                  scrollWidth = outerRef.scrollWidth;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          columnCount = _this$props4.columnCount,\n          direction = _this$props4.direction,\n          height = _this$props4.height,\n          innerRef = _this$props4.innerRef,\n          innerElementType = _this$props4.innerElementType,\n          innerTagName = _this$props4.innerTagName,\n          itemData = _this$props4.itemData,\n          _this$props4$itemKey = _this$props4.itemKey,\n          itemKey = _this$props4$itemKey === void 0 ? defaultItemKey : _this$props4$itemKey,\n          outerElementType = _this$props4.outerElementType,\n          outerTagName = _this$props4.outerTagName,\n          rowCount = _this$props4.rowCount,\n          style = _this$props4.style,\n          useIsScrolling = _this$props4.useIsScrolling,\n          width = _this$props4.width;\n      var isScrolling = this.state.isScrolling;\n\n      var _this$_getHorizontalR = this._getHorizontalRangeToRender(),\n          columnStartIndex = _this$_getHorizontalR[0],\n          columnStopIndex = _this$_getHorizontalR[1];\n\n      var _this$_getVerticalRan = this._getVerticalRangeToRender(),\n          rowStartIndex = _this$_getVerticalRan[0],\n          rowStopIndex = _this$_getVerticalRan[1];\n\n      var items = [];\n\n      if (columnCount > 0 && rowCount) {\n        for (var _rowIndex = rowStartIndex; _rowIndex <= rowStopIndex; _rowIndex++) {\n          for (var _columnIndex = columnStartIndex; _columnIndex <= columnStopIndex; _columnIndex++) {\n            items.push(createElement(children, {\n              columnIndex: _columnIndex,\n              data: itemData,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              key: itemKey({\n                columnIndex: _columnIndex,\n                data: itemData,\n                rowIndex: _rowIndex\n              }),\n              rowIndex: _rowIndex,\n              style: this._getItemStyle(_rowIndex, _columnIndex)\n            }));\n          }\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: this._onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: estimatedTotalHeight,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: estimatedTotalWidth\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      var _this$props5 = this.props,\n          columnCount = _this$props5.columnCount,\n          onItemsRendered = _this$props5.onItemsRendered,\n          onScroll = _this$props5.onScroll,\n          rowCount = _this$props5.rowCount;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          var _this$_getHorizontalR2 = this._getHorizontalRangeToRender(),\n              _overscanColumnStartIndex = _this$_getHorizontalR2[0],\n              _overscanColumnStopIndex = _this$_getHorizontalR2[1],\n              _visibleColumnStartIndex = _this$_getHorizontalR2[2],\n              _visibleColumnStopIndex = _this$_getHorizontalR2[3];\n\n          var _this$_getVerticalRan2 = this._getVerticalRangeToRender(),\n              _overscanRowStartIndex = _this$_getVerticalRan2[0],\n              _overscanRowStopIndex = _this$_getVerticalRan2[1],\n              _visibleRowStartIndex = _this$_getVerticalRan2[2],\n              _visibleRowStopIndex = _this$_getVerticalRan2[3];\n\n          this._callOnItemsRendered(_overscanColumnStartIndex, _overscanColumnStopIndex, _overscanRowStartIndex, _overscanRowStopIndex, _visibleColumnStartIndex, _visibleColumnStopIndex, _visibleRowStartIndex, _visibleRowStopIndex);\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        var _this$state3 = this.state,\n            _horizontalScrollDirection = _this$state3.horizontalScrollDirection,\n            _scrollLeft = _this$state3.scrollLeft,\n            _scrollTop = _this$state3.scrollTop,\n            _scrollUpdateWasRequested = _this$state3.scrollUpdateWasRequested,\n            _verticalScrollDirection = _this$state3.verticalScrollDirection;\n\n        this._callOnScroll(_scrollLeft, _scrollTop, _horizontalScrollDirection, _verticalScrollDirection, _scrollUpdateWasRequested);\n      }\n    }; // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n\n\n    _proto._getHorizontalRangeToRender = function _getHorizontalRangeToRender() {\n      var _this$props6 = this.props,\n          columnCount = _this$props6.columnCount,\n          overscanColumnCount = _this$props6.overscanColumnCount,\n          overscanColumnsCount = _this$props6.overscanColumnsCount,\n          overscanCount = _this$props6.overscanCount,\n          rowCount = _this$props6.rowCount;\n      var _this$state4 = this.state,\n          horizontalScrollDirection = _this$state4.horizontalScrollDirection,\n          isScrolling = _this$state4.isScrolling,\n          scrollLeft = _this$state4.scrollLeft;\n      var overscanCountResolved = overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getColumnStartIndexForOffset(this.props, scrollLeft, this._instanceProps);\n      var stopIndex = getColumnStopIndexForStartIndex(this.props, startIndex, scrollLeft, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || horizontalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || horizontalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    _proto._getVerticalRangeToRender = function _getVerticalRangeToRender() {\n      var _this$props7 = this.props,\n          columnCount = _this$props7.columnCount,\n          overscanCount = _this$props7.overscanCount,\n          overscanRowCount = _this$props7.overscanRowCount,\n          overscanRowsCount = _this$props7.overscanRowsCount,\n          rowCount = _this$props7.rowCount;\n      var _this$state5 = this.state,\n          isScrolling = _this$state5.isScrolling,\n          verticalScrollDirection = _this$state5.verticalScrollDirection,\n          scrollTop = _this$state5.scrollTop;\n      var overscanCountResolved = overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getRowStartIndexForOffset(this.props, scrollTop, this._instanceProps);\n      var stopIndex = getRowStopIndexForStartIndex(this.props, startIndex, scrollTop, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || verticalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || verticalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return Grid;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    useIsScrolling: false\n  }, _temp;\n}\n\nvar validateSharedProps = function validateSharedProps(_ref5, _ref6) {\n  var children = _ref5.children,\n      direction = _ref5.direction,\n      height = _ref5.height,\n      innerTagName = _ref5.innerTagName,\n      outerTagName = _ref5.outerTagName,\n      overscanColumnsCount = _ref5.overscanColumnsCount,\n      overscanCount = _ref5.overscanCount,\n      overscanRowsCount = _ref5.overscanRowsCount,\n      width = _ref5.width;\n  var instance = _ref6.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn('The overscanCount prop has been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (typeof overscanColumnsCount === 'number' || typeof overscanRowsCount === 'number') {\n      if (devWarningsOverscanRowsColumnsCount && !devWarningsOverscanRowsColumnsCount.has(instance)) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn('The overscanColumnsCount and overscanRowsCount props have been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    if (typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Grids must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    }\n\n    if (typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Grids must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\nvar getEstimatedTotalHeight = function getEstimatedTotalHeight(_ref, _ref2) {\n  var rowCount = _ref.rowCount;\n  var rowMetadataMap = _ref2.rowMetadataMap,\n      estimatedRowHeight = _ref2.estimatedRowHeight,\n      lastMeasuredRowIndex = _ref2.lastMeasuredRowIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredRowIndex >= rowCount) {\n    lastMeasuredRowIndex = rowCount - 1;\n  }\n\n  if (lastMeasuredRowIndex >= 0) {\n    var itemMetadata = rowMetadataMap[lastMeasuredRowIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = rowCount - lastMeasuredRowIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedRowHeight;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getEstimatedTotalWidth = function getEstimatedTotalWidth(_ref3, _ref4) {\n  var columnCount = _ref3.columnCount;\n  var columnMetadataMap = _ref4.columnMetadataMap,\n      estimatedColumnWidth = _ref4.estimatedColumnWidth,\n      lastMeasuredColumnIndex = _ref4.lastMeasuredColumnIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredColumnIndex >= columnCount) {\n    lastMeasuredColumnIndex = columnCount - 1;\n  }\n\n  if (lastMeasuredColumnIndex >= 0) {\n    var itemMetadata = columnMetadataMap[lastMeasuredColumnIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = columnCount - lastMeasuredColumnIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedColumnWidth;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getItemMetadata = function getItemMetadata(itemType, props, index, instanceProps) {\n  var itemMetadataMap, itemSize, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    itemSize = props.columnWidth;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    itemSize = props.rowHeight;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    if (itemType === 'column') {\n      instanceProps.lastMeasuredColumnIndex = index;\n    } else {\n      instanceProps.lastMeasuredRowIndex = index;\n    }\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem = function findNearestItem(itemType, props, instanceProps, offset) {\n  var itemMetadataMap, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(itemType, props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(itemType, props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch = function findNearestItemBinarySearch(itemType, props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata(itemType, props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch = function findNearestItemExponentialSearch(itemType, props, instanceProps, index, offset) {\n  var itemCount = itemType === 'column' ? props.columnCount : props.rowCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata(itemType, props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(itemType, props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getOffsetForIndexAndAlignment = function getOffsetForIndexAndAlignment(itemType, props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n  var size = itemType === 'column' ? props.width : props.height;\n  var itemMetadata = getItemMetadata(itemType, props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n  // To ensure it reflects actual measurements instead of just estimates.\n\n  var estimatedTotalSize = itemType === 'column' ? getEstimatedTotalWidth(props, instanceProps) : getEstimatedTotalHeight(props, instanceProps);\n  var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n  var minOffset = Math.max(0, itemMetadata.offset - size + scrollbarSize + itemMetadata.size);\n\n  if (align === 'smart') {\n    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n      align = 'auto';\n    } else {\n      align = 'center';\n    }\n  }\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n    case 'auto':\n    default:\n      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n        return scrollOffset;\n      } else if (minOffset > maxOffset) {\n        // Because we only take into account the scrollbar size when calculating minOffset\n        // this value can be larger than maxOffset when at the end of the list\n        return minOffset;\n      } else if (scrollOffset < minOffset) {\n        return minOffset;\n      } else {\n        return maxOffset;\n      }\n\n  }\n};\n\nvar VariableSizeGrid =\n/*#__PURE__*/\ncreateGridComponent({\n  getColumnOffset: function getColumnOffset(props, index, instanceProps) {\n    return getItemMetadata('column', props, index, instanceProps).offset;\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(props, scrollLeft, instanceProps) {\n    return findNearestItem('column', props, instanceProps, scrollLeft);\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(props, startIndex, scrollLeft, instanceProps) {\n    var columnCount = props.columnCount,\n        width = props.width;\n    var itemMetadata = getItemMetadata('column', props, startIndex, instanceProps);\n    var maxOffset = scrollLeft + width;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < columnCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('column', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  getColumnWidth: function getColumnWidth(props, index, instanceProps) {\n    return instanceProps.columnMetadataMap[index].size;\n  },\n  getEstimatedTotalHeight: getEstimatedTotalHeight,\n  getEstimatedTotalWidth: getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('column', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('row', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getRowOffset: function getRowOffset(props, index, instanceProps) {\n    return getItemMetadata('row', props, index, instanceProps).offset;\n  },\n  getRowHeight: function getRowHeight(props, index, instanceProps) {\n    return instanceProps.rowMetadataMap[index].size;\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(props, scrollTop, instanceProps) {\n    return findNearestItem('row', props, instanceProps, scrollTop);\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(props, startIndex, scrollTop, instanceProps) {\n    var rowCount = props.rowCount,\n        height = props.height;\n    var itemMetadata = getItemMetadata('row', props, startIndex, instanceProps);\n    var maxOffset = scrollTop + height;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < rowCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('row', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref5 = props,\n        estimatedColumnWidth = _ref5.estimatedColumnWidth,\n        estimatedRowHeight = _ref5.estimatedRowHeight;\n    var instanceProps = {\n      columnMetadataMap: {},\n      estimatedColumnWidth: estimatedColumnWidth || DEFAULT_ESTIMATED_ITEM_SIZE,\n      estimatedRowHeight: estimatedRowHeight || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredColumnIndex: -1,\n      lastMeasuredRowIndex: -1,\n      rowMetadataMap: {}\n    };\n\n    instance.resetAfterColumnIndex = function (columnIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        columnIndex: columnIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterRowIndex = function (rowIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        rowIndex: rowIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterIndices = function (_ref6) {\n      var columnIndex = _ref6.columnIndex,\n          rowIndex = _ref6.rowIndex,\n          _ref6$shouldForceUpda = _ref6.shouldForceUpdate,\n          shouldForceUpdate = _ref6$shouldForceUpda === void 0 ? true : _ref6$shouldForceUpda;\n\n      if (typeof columnIndex === 'number') {\n        instanceProps.lastMeasuredColumnIndex = Math.min(instanceProps.lastMeasuredColumnIndex, columnIndex - 1);\n      }\n\n      if (typeof rowIndex === 'number') {\n        instanceProps.lastMeasuredRowIndex = Math.min(instanceProps.lastMeasuredRowIndex, rowIndex - 1);\n      } // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref7) {\n    var columnWidth = _ref7.columnWidth,\n        rowHeight = _ref7.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'function') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      } else if (typeof rowHeight !== 'function') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL$1 = 150;\n\nvar defaultItemKey$1 = function defaultItemKey(index, data) {\n  return index;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsDirection = null;\nvar devWarningsTagName$1 = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection =\n    /*#__PURE__*/\n    new WeakSet();\n    devWarningsTagName$1 =\n    /*#__PURE__*/\n    new WeakSet();\n  }\n}\n\nfunction createListComponent(_ref) {\n  var _class, _temp;\n\n  var getItemOffset = _ref.getItemOffset,\n      getEstimatedTotalSize = _ref.getEstimatedTotalSize,\n      getItemSize = _ref.getItemSize,\n      getOffsetForIndexAndAlignment = _ref.getOffsetForIndexAndAlignment,\n      getStartIndexForOffset = _ref.getStartIndexForOffset,\n      getStopIndexForStartIndex = _ref.getStopIndexForStartIndex,\n      initInstanceProps = _ref.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref.validateProps;\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_PureComponent) {\n    _inheritsLoose(List, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function List(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_assertThisInitialized(_this)));\n      _this._outerRef = void 0;\n      _this._resetIsScrollingTimeoutId = null;\n      _this.state = {\n        instance: _assertThisInitialized(_assertThisInitialized(_this)),\n        isScrolling: false,\n        scrollDirection: 'forward',\n        scrollOffset: typeof _this.props.initialScrollOffset === 'number' ? _this.props.initialScrollOffset : 0,\n        scrollUpdateWasRequested: false\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanStartIndex, overscanStopIndex, visibleStartIndex, visibleStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanStartIndex: overscanStartIndex,\n          overscanStopIndex: overscanStopIndex,\n          visibleStartIndex: visibleStartIndex,\n          visibleStopIndex: visibleStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollDirection, scrollOffset, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          scrollDirection: scrollDirection,\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (index) {\n        var _this$props = _this.props,\n            direction = _this$props.direction,\n            itemSize = _this$props.itemSize,\n            layout = _this$props.layout;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && itemSize, shouldResetStyleCacheOnItemSizeChange && layout, shouldResetStyleCacheOnItemSizeChange && direction);\n\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(index)) {\n          style = itemStyleCache[index];\n        } else {\n          var _offset = getItemOffset(_this.props, index, _this._instanceProps);\n\n          var size = getItemSize(_this.props, index, _this._instanceProps); // TODO Deprecate direction \"horizontal\"\n\n          var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n          var isRtl = direction === 'rtl';\n          var offsetHorizontal = isHorizontal ? _offset : 0;\n          itemStyleCache[index] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : offsetHorizontal,\n            right: isRtl ? offsetHorizontal : undefined,\n            top: !isHorizontal ? _offset : 0,\n            height: !isHorizontal ? size : '100%',\n            width: isHorizontal ? size : '100%'\n          };\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScrollHorizontal = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollLeft) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction;\n          var scrollOffset = scrollLeft;\n\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n            // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                scrollOffset = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                scrollOffset = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          scrollOffset = Math.max(0, Math.min(scrollOffset, scrollWidth - clientWidth));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollLeft ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._onScrollVertical = function (event) {\n        var _event$currentTarget2 = event.currentTarget,\n            clientHeight = _event$currentTarget2.clientHeight,\n            scrollHeight = _event$currentTarget2.scrollHeight,\n            scrollTop = _event$currentTarget2.scrollTop;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          var scrollOffset = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL$1);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1, null);\n        });\n      };\n\n      return _this;\n    }\n\n    List.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps$1(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = List.prototype;\n\n    _proto.scrollTo = function scrollTo(scrollOffset) {\n      scrollOffset = Math.max(0, scrollOffset);\n      this.setState(function (prevState) {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n\n        return {\n          scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(index, align) {\n      if (align === void 0) {\n        align = 'auto';\n      }\n\n      var itemCount = this.props.itemCount;\n      var scrollOffset = this.state.scrollOffset;\n      index = Math.max(0, Math.min(index, itemCount - 1));\n      this.scrollTo(getOffsetForIndexAndAlignment(this.props, index, align, scrollOffset, this._instanceProps));\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props2 = this.props,\n          direction = _this$props2.direction,\n          initialScrollOffset = _this$props2.initialScrollOffset,\n          layout = _this$props2.layout;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var _this$props3 = this.props,\n          direction = _this$props3.direction,\n          layout = _this$props3.layout;\n      var _this$state = this.state,\n          scrollOffset = _this$state.scrollOffset,\n          scrollUpdateWasRequested = _this$state.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n\n              default:\n                var clientWidth = outerRef.clientWidth,\n                    scrollWidth = outerRef.scrollWidth;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          direction = _this$props4.direction,\n          height = _this$props4.height,\n          innerRef = _this$props4.innerRef,\n          innerElementType = _this$props4.innerElementType,\n          innerTagName = _this$props4.innerTagName,\n          itemCount = _this$props4.itemCount,\n          itemData = _this$props4.itemData,\n          _this$props4$itemKey = _this$props4.itemKey,\n          itemKey = _this$props4$itemKey === void 0 ? defaultItemKey$1 : _this$props4$itemKey,\n          layout = _this$props4.layout,\n          outerElementType = _this$props4.outerElementType,\n          outerTagName = _this$props4.outerTagName,\n          style = _this$props4.style,\n          useIsScrolling = _this$props4.useIsScrolling,\n          width = _this$props4.width;\n      var isScrolling = this.state.isScrolling; // TODO Deprecate direction \"horizontal\"\n\n      var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n      var onScroll = isHorizontal ? this._onScrollHorizontal : this._onScrollVertical;\n\n      var _this$_getRangeToRend = this._getRangeToRender(),\n          startIndex = _this$_getRangeToRend[0],\n          stopIndex = _this$_getRangeToRend[1];\n\n      var items = [];\n\n      if (itemCount > 0) {\n        for (var _index = startIndex; _index <= stopIndex; _index++) {\n          items.push(createElement(children, {\n            data: itemData,\n            key: itemKey(_index, itemData),\n            index: _index,\n            isScrolling: useIsScrolling ? isScrolling : undefined,\n            style: this._getItemStyle(_index)\n          }));\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalSize = getEstimatedTotalSize(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: isHorizontal ? '100%' : estimatedTotalSize,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: isHorizontal ? estimatedTotalSize : '100%'\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        var itemCount = this.props.itemCount;\n\n        if (itemCount > 0) {\n          var _this$_getRangeToRend2 = this._getRangeToRender(),\n              _overscanStartIndex = _this$_getRangeToRend2[0],\n              _overscanStopIndex = _this$_getRangeToRend2[1],\n              _visibleStartIndex = _this$_getRangeToRend2[2],\n              _visibleStopIndex = _this$_getRangeToRend2[3];\n\n          this._callOnItemsRendered(_overscanStartIndex, _overscanStopIndex, _visibleStartIndex, _visibleStopIndex);\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        var _this$state2 = this.state,\n            _scrollDirection = _this$state2.scrollDirection,\n            _scrollOffset = _this$state2.scrollOffset,\n            _scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n        this._callOnScroll(_scrollDirection, _scrollOffset, _scrollUpdateWasRequested);\n      }\n    }; // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n\n\n    _proto._getRangeToRender = function _getRangeToRender() {\n      var _this$props5 = this.props,\n          itemCount = _this$props5.itemCount,\n          overscanCount = _this$props5.overscanCount;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollDirection = _this$state3.scrollDirection,\n          scrollOffset = _this$state3.scrollOffset;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getStartIndexForOffset(this.props, scrollOffset, this._instanceProps);\n      var stopIndex = getStopIndexForStartIndex(this.props, startIndex, scrollOffset, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || scrollDirection === 'backward' ? Math.max(1, overscanCount) : 1;\n      var overscanForward = !isScrolling || scrollDirection === 'forward' ? Math.max(1, overscanCount) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return List;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    layout: 'vertical',\n    overscanCount: 2,\n    useIsScrolling: false\n  }, _temp;\n} // NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nvar validateSharedProps$1 = function validateSharedProps(_ref2, _ref3) {\n  var children = _ref2.children,\n      direction = _ref2.direction,\n      height = _ref2.height,\n      layout = _ref2.layout,\n      innerTagName = _ref2.innerTagName,\n      outerTagName = _ref2.outerTagName,\n      width = _ref2.width;\n  var instance = _ref3.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName$1 && !devWarningsTagName$1.has(instance)) {\n        devWarningsTagName$1.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    } // TODO Deprecate direction \"horizontal\"\n\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn('The direction prop should be either \"ltr\" (default) or \"rtl\". ' + 'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.');\n        }\n\n        break;\n\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"layout\" prop has been specified. ' + 'Value should be either \"horizontal\" or \"vertical\". ' + (\"\\\"\" + layout + \"\\\" was specified.\"));\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Horizontal lists must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Vertical lists must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE$1 = 50;\n\nvar getItemMetadata$1 = function getItemMetadata(props, index, instanceProps) {\n  var _ref = props,\n      itemSize = _ref.itemSize;\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem$1 = function findNearestItem(props, instanceProps, offset) {\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch$1(props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch$1(props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch$1 = function findNearestItemBinarySearch(props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata$1(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch$1 = function findNearestItemExponentialSearch(props, instanceProps, index, offset) {\n  var itemCount = props.itemCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata$1(props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch$1(props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getEstimatedTotalSize = function getEstimatedTotalSize(_ref2, _ref3) {\n  var itemCount = _ref2.itemCount;\n  var itemMetadataMap = _ref3.itemMetadataMap,\n      estimatedItemSize = _ref3.estimatedItemSize,\n      lastMeasuredIndex = _ref3.lastMeasuredIndex;\n  var totalSizeOfMeasuredItems = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nvar VariableSizeList =\n/*#__PURE__*/\ncreateListComponent({\n  getItemOffset: function getItemOffset(props, index, instanceProps) {\n    return getItemMetadata$1(props, index, instanceProps).offset;\n  },\n  getItemSize: function getItemSize(props, index, instanceProps) {\n    return instanceProps.itemMetadataMap[index].size;\n  },\n  getEstimatedTotalSize: getEstimatedTotalSize,\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(props, index, align, scrollOffset, instanceProps) {\n    var direction = props.direction,\n        height = props.height,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n\n    var estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n    var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n    var minOffset = Math.max(0, itemMetadata.offset - size + itemMetadata.size);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(props, offset, instanceProps) {\n    return findNearestItem$1(props, instanceProps, offset);\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(props, startIndex, scrollOffset, instanceProps) {\n    var direction = props.direction,\n        height = props.height,\n        itemCount = props.itemCount,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, startIndex, instanceProps);\n    var maxOffset = scrollOffset + size;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata$1(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref4 = props,\n        estimatedItemSize = _ref4.estimatedItemSize;\n    var instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE$1,\n      lastMeasuredIndex: -1\n    };\n\n    instance.resetAfterIndex = function (index, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instanceProps.lastMeasuredIndex = Math.min(instanceProps.lastMeasuredIndex, index - 1); // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref5) {\n    var itemSize = _ref5.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeGrid =\n/*#__PURE__*/\ncreateGridComponent({\n  getColumnOffset: function getColumnOffset(_ref, index) {\n    var columnWidth = _ref.columnWidth;\n    return index * columnWidth;\n  },\n  getColumnWidth: function getColumnWidth(_ref2, index) {\n    var columnWidth = _ref2.columnWidth;\n    return columnWidth;\n  },\n  getRowOffset: function getRowOffset(_ref3, index) {\n    var rowHeight = _ref3.rowHeight;\n    return index * rowHeight;\n  },\n  getRowHeight: function getRowHeight(_ref4, index) {\n    var rowHeight = _ref4.rowHeight;\n    return rowHeight;\n  },\n  getEstimatedTotalHeight: function getEstimatedTotalHeight(_ref5) {\n    var rowCount = _ref5.rowCount,\n        rowHeight = _ref5.rowHeight;\n    return rowHeight * rowCount;\n  },\n  getEstimatedTotalWidth: function getEstimatedTotalWidth(_ref6) {\n    var columnCount = _ref6.columnCount,\n        columnWidth = _ref6.columnWidth;\n    return columnWidth * columnCount;\n  },\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(_ref7, columnIndex, align, scrollLeft, instanceProps, scrollbarSize) {\n    var columnCount = _ref7.columnCount,\n        columnWidth = _ref7.columnWidth,\n        width = _ref7.width;\n    var lastColumnOffset = Math.max(0, columnCount * columnWidth - width);\n    var maxOffset = Math.min(lastColumnOffset, columnIndex * columnWidth);\n    var minOffset = Math.max(0, columnIndex * columnWidth - width + scrollbarSize + columnWidth);\n\n    if (align === 'smart') {\n      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(width / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {\n          return lastColumnOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {\n          return scrollLeft;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollLeft < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(_ref8, rowIndex, align, scrollTop, instanceProps, scrollbarSize) {\n    var rowHeight = _ref8.rowHeight,\n        height = _ref8.height,\n        rowCount = _ref8.rowCount;\n    var lastRowOffset = Math.max(0, rowCount * rowHeight - height);\n    var maxOffset = Math.min(lastRowOffset, rowIndex * rowHeight);\n    var minOffset = Math.max(0, rowIndex * rowHeight - height + scrollbarSize + rowHeight);\n\n    if (align === 'smart') {\n      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(height / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {\n          return lastRowOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollTop >= minOffset && scrollTop <= maxOffset) {\n          return scrollTop;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollTop < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(_ref9, scrollLeft) {\n    var columnWidth = _ref9.columnWidth,\n        columnCount = _ref9.columnCount;\n    return Math.max(0, Math.min(columnCount - 1, Math.floor(scrollLeft / columnWidth)));\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(_ref10, startIndex, scrollLeft) {\n    var columnWidth = _ref10.columnWidth,\n        columnCount = _ref10.columnCount,\n        width = _ref10.width;\n    var left = startIndex * columnWidth;\n    var numVisibleColumns = Math.ceil((width + scrollLeft - left) / columnWidth);\n    return Math.max(0, Math.min(columnCount - 1, startIndex + numVisibleColumns - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(_ref11, scrollTop) {\n    var rowHeight = _ref11.rowHeight,\n        rowCount = _ref11.rowCount;\n    return Math.max(0, Math.min(rowCount - 1, Math.floor(scrollTop / rowHeight)));\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(_ref12, startIndex, scrollTop) {\n    var rowHeight = _ref12.rowHeight,\n        rowCount = _ref12.rowCount,\n        height = _ref12.height;\n    var top = startIndex * rowHeight;\n    var numVisibleRows = Math.ceil((height + scrollTop - top) / rowHeight);\n    return Math.max(0, Math.min(rowCount - 1, startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref13) {\n    var columnWidth = _ref13.columnWidth,\n        rowHeight = _ref13.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'number') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      }\n\n      if (typeof rowHeight !== 'number') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeList =\n/*#__PURE__*/\ncreateListComponent({\n  getItemOffset: function getItemOffset(_ref, index) {\n    var itemSize = _ref.itemSize;\n    return index * itemSize;\n  },\n  getItemSize: function getItemSize(_ref2, index) {\n    var itemSize = _ref2.itemSize;\n    return itemSize;\n  },\n  getEstimatedTotalSize: function getEstimatedTotalSize(_ref3) {\n    var itemCount = _ref3.itemCount,\n        itemSize = _ref3.itemSize;\n    return itemSize * itemCount;\n  },\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(_ref4, index, align, scrollOffset) {\n    var direction = _ref4.direction,\n        height = _ref4.height,\n        itemCount = _ref4.itemCount,\n        itemSize = _ref4.itemSize,\n        layout = _ref4.layout,\n        width = _ref4.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var lastItemOffset = Math.max(0, itemCount * itemSize - size);\n    var maxOffset = Math.min(lastItemOffset, index * itemSize);\n    var minOffset = Math.max(0, index * itemSize - size + itemSize);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        {\n          // \"Centered\" offset is usually the average of the min and max.\n          // But near the edges of the list, this doesn't hold true.\n          var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n          if (middleOffset < Math.ceil(size / 2)) {\n            return 0; // near the beginning\n          } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n            return lastItemOffset; // near the end\n          } else {\n            return middleOffset;\n          }\n        }\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(_ref5, offset) {\n    var itemCount = _ref5.itemCount,\n        itemSize = _ref5.itemSize;\n    return Math.max(0, Math.min(itemCount - 1, Math.floor(offset / itemSize)));\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(_ref6, startIndex, scrollOffset) {\n    var direction = _ref6.direction,\n        height = _ref6.height,\n        itemCount = _ref6.itemCount,\n        itemSize = _ref6.itemSize,\n        layout = _ref6.layout,\n        width = _ref6.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var offset = startIndex * itemSize;\n    var size = isHorizontal ? width : height;\n    var numVisibleItems = Math.ceil((size + scrollOffset - offset) / itemSize);\n    return Math.max(0, Math.min(itemCount - 1, startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref7) {\n    var itemSize = _ref7.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nfunction shallowDiffers(prev, next) {\n  for (var attribute in prev) {\n    if (!(attribute in next)) {\n      return true;\n    }\n  }\n\n  for (var _attribute in next) {\n    if (prev[_attribute] !== next[_attribute]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-api.html#reactmemo\n\nfunction areEqual(prevProps, nextProps) {\n  var prevStyle = prevProps.style,\n      prevRest = _objectWithoutPropertiesLoose(prevProps, [\"style\"]);\n\n  var nextStyle = nextProps.style,\n      nextRest = _objectWithoutPropertiesLoose(nextProps, [\"style\"]);\n\n  return !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest);\n}\n\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\n\nfunction shouldComponentUpdate(nextProps, nextState) {\n  return !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState);\n}\n\nexport { VariableSizeGrid, VariableSizeList, FixedSizeGrid, FixedSizeList, areEqual, shouldComponentUpdate };\n//# sourceMappingURL=index.esm.js.map\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ColumnResizer from \"react-base-table/lib/ColumnResizer\";\nimport { rtPrefix } from \"../../utils/variables\";\n\nconst HeaderCell = (props) => {\n    // console.log('HeaderCell => ', props);\n\n    const { column, onResize, ...restProps } = props;\n\n    if (!column)\n        return <th {...restProps} />;\n\n    const { width, resizable, headerRenderer } = column;\n\n    if (!width)\n        return <th {...restProps} />;\n\n    // if (headerRenderer) {\n    //     let childNode\n    //     if( typeof headerRenderer === 'function') {\n    //         childNode = headerRenderer()\n    //     }\n    //     else {\n    //         childNode = headerRenderer\n    //     }\n    //\n    //     return (\n    //         <th {...restProps}>\n    //             {childNode}\n    //             {resizable &&\n    //             <ColumnResizer\n    //                 className={`${rtPrefix}-column-resizer`}\n    //                 column={{ width: width, maxWidth: 1000 }}\n    //                 onResize={onResize}\n    //             />}\n    //         </th>\n    //     );\n    // } else {\n        return (\n            <th {...restProps}>\n                {restProps.children}\n                {resizable &&\n                <ColumnResizer\n                    className={`${rtPrefix}-column-resizer`}\n                    column={{ width: width, maxWidth: 1000 }}\n                    onResize={onResize}\n                />}\n            </th>\n        );\n    // }\n};\n\nHeaderCell.propTypes = {\n    onResize: PropTypes.func,\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    resizable: PropTypes.bool\n};\n\nexport default HeaderCell;\n","import React, {useRef, useEffect} from 'react';\nimport PropTypes from 'prop-types';\n\nconst HeaderRow =  props => {\n    const headerRowRef = useRef();\n    const {headerHeight, setHeaderHeight, ...restProps} = props;\n    useEffect(() => {\n\n        const newHeight = headerRowRef && headerRowRef.current && headerRowRef.current.clientHeight;\n        if(headerHeight !== newHeight) {\n            // console.log('Row height', newHeight) //clientHeight\n            setHeaderHeight(newHeight)\n        }\n    })\n    return (\n        <tr {...restProps} ref={headerRowRef}/>\n    );\n};\n\nHeaderRow.propTypes = {\n    headerHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    setHeaderHeight: PropTypes.func,\n}\n\nexport default HeaderRow;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst BodyCell = props => {\n\n  const {column, rowData, rowIndex, ...restProps} = props;\n\n  if(column && column.cellComponent) {\n    // console.log('BodyCell => ', restProps);\n    return (\n      <td {...restProps} style={{...restProps.style, padding: 0}}>\n        <column.cellComponent\n          column={column}\n          cellData={restProps.title}\n          rowData={rowData}\n          rowIndex={rowIndex}\n        />\n      </td>\n    )\n  } else {\n    return <td {...restProps}/>;\n  }\n\n};\n\nBodyCell.propTypes = {\n\n};\n\nexport default BodyCell;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { rtPrefix } from \"../../utils/variables\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { AutoResizer } from \"react-base-table\";\nimport { VariableSizeGrid as Grid } from 'react-window';\nimport {\n  findNodeByRowKey,\n  flatten,\n  getObjectExcludedProps, getTableRowKeys, getTableRowObjects, noop,\n  notificationError,\n  useMounted\n} from \"../../utils/baseUtils\";\nimport { Space, Table as AntTable } from \"antd\";\nimport { CaretDownOutlined, CaretRightOutlined, CaretUpOutlined } from \"@ant-design/icons\";\nimport { empty, overlay } from \"../ReactBaseTable/defaultSettings\";\nimport HeaderCell from \"./HeaderCell\";\nimport HeaderRow from \"./HeaderRow\";\nimport PropTypes from \"prop-types\";\nimport FormItems from \"../../Form/FormItems\";\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../../redux/rtd.actions\";\nimport moment from \"moment\";\nimport BodyCell from \"./BodyCell\";\n\nconst excludeProps = [\n  \"defaultRows\",\n  \"defaultSelectedRowKeys\",\n  \"defaultSearchValue\",\n  \"defaultFilter\",\n  \"defaultSortBy\",\n  \"rows\",\n  \"requestLoadRows\",\n  \"pageSize\",\n  \"searchParamName\",\n  \"onRowClick\",\n  \"onRowDoubleClick\",\n];\n\nconst Table = props => {\n  /** Индикатор загрузки данных */\n  const [loading, setLoading] = useState(false);\n\n  /** TABLE STATES */\n  /** Столбцы таблицы */\n  const [_columns, _setColumns] = useState([]);\n  /** Строки таблицы */\n  const [_rows, _setRows] = useState([]);\n  /** Ключи выделенных строк */\n  const [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n  /** Значение строки поиска */\n  const [_searchValue, setSearchValue] = useState(\"\");\n  /** Объект фильтра */\n  const [_filter, setFilter] = useState({});\n  /** Объект соритировки */\n  const [_sortBy, setSortBy] = useState({});\n\n  /** TREE STATES */\n  /** Ключи строк с кубиками при selectable = true */\n  // const [_indeterminateRowKeys, setIndeterminateRowKeys] = useState([]);\n  /** Ключи раскрытых строк при selectable = true */\n  const [_expandedRowKeys, setExpandedRowKeys] = useState([]);\n\n  /** FOOTER STATES */\n  /** Отображать ли footer */\n  const [_footerShow, _setFooterShow] = useState(false);\n  /** Всего строк по фильтру в таблице */\n  const [_totalCountRows, setTotalCountRows] = useState(0);\n\n  const [subscribeProps, setSubscribeProps] = useState({});\n\n  const [headerHeight, setHeaderHeight] = useState(0);\n\n  const isMounted = useMounted();\n\n  const {\n    /** Required */\n    columns,\n    // type,\n    // infinityMode, // no use\n    editMode, // need Props.types\n\n    /** Def values */\n    defaultRows,\n    // defaultSelectedRowKeys,\n    defaultSearchValue,\n    defaultFilter,\n    defaultSortBy,\n\n    /** Outdoor control */\n    rows,\n    // setRows, // ???\n    // selectedRowKeys,\n    // searchValue,\n    // filter,\n    // sortBy,\n\n    /** Base Props */\n    rowKey,\n    customFields,\n\n    /** View Props */\n    // empty,\n    // overlay,\n    // fixWidthColumn,\n    // footerProps,\n    // headerHeight,\n    // rowHeight,\n    // rowRenderer,\n    zebraStyle,\n    // estimatedRowHeight,\n    className,\n    style,\n    // cellBordered, // need Props.types\n    // rowBordered,  // need Props.types\n\n    /** Load Data Props */\n    pageSize,\n    requestLoadRows,\n    requestLoadCount,\n    searchParamName,\n\n    /** Selectable Props */\n    rowSelection,\n    selectable,\n\n    /** Tree Props */\n    expandable,\n    nodeAssociated,\n    expandColumnKey,\n    expandDefaultAll,\n    // expandLazyLoad, // no use\n    // expandParentKey, // no use\n\n    /** Events */\n    onRowClick,\n    onRowDoubleClick,\n    // onRowExpand,\n    // onSelectedRowsChange,\n    onExpandedRowsChange,\n\n    /** SELECTED PANEL */\n    // showSelection,\n    // rowRenderShowSelection,\n\n    /** REDUX PROPS */\n    dispatchPath,\n    dispatch,\n    subscribe,\n\n    value,\n    onChange\n  } = { ...props, ...subscribeProps };\n\n  const footerProps = {\n    ...Table.defaultProps.footerProps,\n    ...props.footerProps\n  };\n\n  const selectedDispatchPath = dispatch && dispatch.path\n      ? `${dispatch.path}.selected`\n      : dispatchPath && `${dispatchPath}.selected`;\n  const rowsDispatchPath = dispatch && dispatch.path\n      ? `${dispatch.path}.rows`\n      : dispatchPath && `${dispatchPath}.rows`;\n\n  useEffect(() => {\n    // console.log(\"Инициализация дефолтных значений \", selectColumn, columns);\n    // console.log(\"Инициализация дефолтных значений defaultSelectedRowKeys > \", defaultSelectedRowKeys);\n\n    // Инициализация дефолтных значений\n    // _setRows(defaultRows);\n    if (defaultRows.length > 0) _setRowsHandler(defaultRows);\n    else if (rows.length > 0) _setRowsHandler(rows);\n    setSearchValue(defaultSearchValue);\n    setFilter(defaultFilter);\n    setSortBy(defaultSortBy);\n\n    // Определение нужно ли отображать подвал\n    _setFooterShow(\n      (footerProps.showElements.length ||\n        footerProps.leftCustomSideElement ||\n        footerProps.centerCustomSideElement ||\n        footerProps.rightCustomSideElement));\n\n    _loadRows({\n      sortBy: defaultSortBy,\n      filter: defaultFilter,\n      searchLine: defaultSearchValue,\n      reload: true\n    });\n    // console.log(\"tableRef\", tableRef);\n  }, []);\n\n  useEffect(() => {\n    _setColumns(columns);\n  }, [columns]);\n\n  useEffect(() => {\n    if(value && Array.isArray(value))\n  \t  _setRowsHandler(value)\n  }, [value])\n\n  /** Подписка на изменение props[subscribe.name] в сторе */\n  subscribe.map(item => {\n    return useEffect(() => {\n      if ((item.withMount || isMounted) && item.name) {\n        // console.log(\"Table => useEffect => \", props); //item.name, props[item.name]\n        let extraData = {};\n        if (item.extraData) {\n          if (typeof item.extraData === 'object')\n            Object.keys(item.extraData).forEach((key) => extraData[key] = props[`${item.name}.extraData.${key}`]);\n          else\n            extraData = props[`${item.name}ExtraData`];\n        }\n        const onChangeObject = {\n          value: props[item.name],\n          extraData: extraData, //props[`${item.name}ExtraData`],\n          reloadTable: reloadData,\n          addRows: _addRows,\n          addRow: _addRow,\n          addRowAsCopy: _addRowAsCopy,\n          editRow: _editRow,\n          removeRow: _removeRow,\n          moveUpRow: _moveUpSelectedRow,\n          moveUpRowByKey: _moveUpRowByKey,\n          moveDownRow: _moveDownSelectedRow,\n          moveDownRowByKey: _moveDownRowByKey,\n          setSubscribeProps: _setSubscribeProps\n        };\n        item.onChange && item.onChange(onChangeObject);\n      }\n    }, [props[item.name]]);\n  });\n\n  /** BASE FUNCTIONS */\n  const _setSubscribeProps = (props) => {\n    setSubscribeProps({ ...subscribeProps, ...props });\n  };\n\n  const _setLoadedRowsHandler = (rows) => {\n    _setRowsHandler(rows);\n    onChange && onChange(rows);\n  };\n  const _setRowsHandler = (rows) => {\n    // console.log('_setRowsHandler onChange');\n    _setRows(rows);\n    // setRows(rows);\n    rowsDispatch(rows);\n  };\n\n  const _setSelectedRowsHandler = (selectedKeys = [], selectedObjects = undefined, rows = []) => {\n    // console.log('_setSelectedRowsHandler => ', selectedKeys)\n    if(!editMode) {\n      setSelectedRowKeys(selectedKeys);\n      if (selectedKeys.length === 0)\n        if (selectable)\n          selectedDispatch([]);\n        else\n          selectedDispatch(undefined);\n      else if (selectedKeys.length > 0 && !selectedObjects)\n        if (selectable)\n          selectedDispatch(flatten(getTableRowObjects(rows, rowKey)).filter((item) => selectedKeys.includes(item[rowKey])));\n        else\n          selectedDispatch(findNodeByRowKey(rows, rowKey, selectedKeys[0]));\n      else\n        selectedDispatch(selectedObjects);\n    }\n  };\n\n  const rowsDispatch = (rows) => {\n    rowsDispatchPath && props.setDateStore && props.setDateStore(rowsDispatchPath, rows);\n  };\n\n  const selectedDispatch = (data) => {\n    selectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, data);\n  };\n\n  const onTableEventsDispatch = (nameEvent, value) => {\n    const dp = dispatch && dispatch.path\n        ? `${dispatch.path}.events.${nameEvent}`\n        : dispatchPath && `${dispatchPath}.events.${nameEvent}`;\n\n    dp && props.setDateStore && props.setDateStore(dp, {\n      timestamp: moment(),\n      value: value\n    });\n    // console.log('onTableEventsDispatch onChange');\n    Array.isArray(value) && onChange && onChange(value);\n  };\n\n  const reloadData = ({ sortBy, filter, searchValue }, appendParams) => {\n    // console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\n    if (selectable && props.value && props.value.length > 0)\n      _setSelectedRowsHandler(props.value.map(item => item[rowKey]), props.value);\n    else\n      _setSelectedRowsHandler();\n\n    const __sortBy = appendParams ? (sortBy ? sortBy : _sortBy) : sortBy;\n    const __filter = appendParams ? { ..._filter, ...filter } : filter;\n    const __searchValue = appendParams ? (searchValue ? searchValue : _searchValue) : searchValue;\n    setSortBy(__sortBy);\n    setFilter(__filter);\n    setSearchValue(__searchValue);\n    // console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\n    _loadRows({\n      sortBy: __sortBy,\n      filter: __filter,\n      searchLine: __searchValue,\n      reload: true\n    });\n  };\n\n  const _loadRows = (params) => {\n    const { sortBy, filter, searchLine, expandRow, reload } = params;\n    if (!loading && requestLoadRows) {\n      setLoading(true);\n      const pageNum = 0;\n      const params = {\n        page: 0,\n        size: pageSize,\n        sort:\n          sortBy && sortBy.key\n            ? sortBy.key + \",\" + sortBy.order\n            : null\n      };\n      const dataQuery = {\n        ...filter,\n        ...(searchLine\n          ? { [searchParamName]: searchLine }\n          : null)\n      };\n      if(reload && requestLoadCount !== noop && !expandColumnKey) {\n        requestLoadCount({ params, data: dataQuery, })\n          .then((response) => {\n            // console.log(\"infinity then response\", response);\n            setTotalCountRows(response.data);\n          })\n          .catch(error =>\n            notificationError(error, 'Ошибка получения количества записей по фильтру') );\n      }\n      requestLoadRows({ params, data: dataQuery })\n        .then((response) => {\n          // console.log(\"infinity then response\", response);\n          const result = response.data;\n          _setLoadedRowsHandler(result); // _setRows\n\n          if (expandColumnKey) {\n            expandDefaultAll &&\n            setExpandedRowKeys(flatten(getTableRowKeys(result, rowKey)));\n          }\n\n          setLoading(false);\n        })\n        .catch((error) => {\n          notificationError(error, \"Ошибка загрузки данных\");\n          _setLoadedRowsHandler(_rows); // _setRows\n          // setHasMore(false);\n          setLoading(false);\n        });\n    }\n  };\n\n  const onChangeTable = (pagination, filters, sorter, extra) => {\n    // console.log('Table onChange', pagination, filters, sorter, extra)\n    switch (extra.action) {\n      case \"paginate\":\n        break;\n      case \"sort\":\n        onSort(sorter);\n        break;\n      case \"filter\":\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onSort = (sorter) => {\n    // console.log(\"Table onSort from RT\", sorter);\n    const sortBy = sorter.order\n      ? { key: sorter.field, order: sorter.order === \"ascend\" ? \"asc\" : \"desc\" }\n      : {};\n    setSortBy(sortBy);\n    _loadRows({\n      sortBy: sortBy,\n      filter: _filter,\n      searchLine: _searchValue,\n      reload: true\n    });\n  };\n\n  const _onRowClick = ({ rowData, rowIndex, rowKey }) => {\n    // console.log('onClick', onRowClick, rowData, rowIndex, rowKey)\n    // console.log('onClick', _selectedRowKeys)\n    onTableEventsDispatch(\"onRowClick\", rowData);\n    _rowSelectAfterClick({ rowData, rowIndex, rowKey, onClick: onRowClick });\n  };\n  const _onRowDoubleClick = ({ rowData, rowIndex, rowKey }) => {\n    // console.log('onDoubleClick', onRowDoubleClick, rowData, rowIndex, rowKey);\n    // console.log('actionDoubleClick')\n    onTableEventsDispatch(\"onRowDoubleClick\", rowData);\n    _rowSelectAfterClick({ rowData, rowIndex, rowKey, onClick: onRowDoubleClick });\n  };\n\n  const _rowSelectAfterClick = ({ rowData, rowIndex, rowKey, onClick }) => {\n    const checked = !_selectedRowKeys.includes(rowKey);\n    const newRowObject = {\n      rowData: { ...rowData },\n      rowIndex: rowIndex,\n      rowKey: rowKey\n    };\n    // _setSelectedRowsHandler([rowKey], rowData);\n    // if (!expandColumnKey) {\n    // setSelectedRowKeys([rowKey]);\n    if (selectable) {\n      // console.log('_rowSelectAfterClick ', checked);\n      if (checked && !expandColumnKey)\n        _setSelectedRowsHandler([..._selectedRowKeys, rowKey], undefined, _rows);\n      else {\n        // console.log('_rowSelectAfterClick', _selectedRowKeys.filter(row => row !== rowKey), rowKey);\n        _setSelectedRowsHandler(_selectedRowKeys.filter(row => row !== rowKey), undefined, _rows);\n      }\n\n    } else {\n      if(checked)\n        _setSelectedRowsHandler([rowKey], rowData);\n    }\n    // onSelectedRowsChange([rowKey], [rowData]);\n    console.log('onRowDoubleClick = ', onClick);\n    onClick && onClick({ selected: checked, ...newRowObject });\n  };\n\n  const onHeaderRowProps = () => ({ headerHeight, setHeaderHeight })\n\n  const onRowEvents = (rowData, rowIndex) => {\n    return {\n      onClick: event => _onRowClick({ rowData, rowIndex, rowKey: rowData[rowKey] }), // click row\n      onDoubleClick: event => _onRowDoubleClick({ rowData, rowIndex, rowKey: rowData[rowKey] }), // double click row\n      // onScroll: console.log\n      // onContextMenu: event => {}, // right button click row\n      // onMouseEnter: event => {}, // mouse enter row\n      // onMouseLeave: event => {}, // mouse leave row\n    };\n  };\n\n\n  const onResizeHandler = (index) => ({ key }, width) => {\n    // console.log('handleResize index ', index, width)\n    _setColumns((columns) => {\n      const nextColumns = [...columns];\n      nextColumns[index] = {\n        ...nextColumns[index],\n        width: width\n      };\n      return nextColumns;\n    });\n  };\n\n  /** Utile function\n   * Find row by key\n   * @param data - table rows\n   * @param key - key row for find\n   * @param callback - function for return result\n   */\n  const loop = (data, key, callback) => {\n    for (let i = 0; i < data.length; i++) {\n      if (data[i][rowKey] === key) {\n        // console.log(`Selected => index: [${i}], path: [${data[i].path}]`, data);\n        return callback(data[i], i, data);\n      } else {\n        // console.log(`Other => index: [${i}], path: [${data[i].path}]`);\n      }\n      if (data[i].children) {\n        loop(data[i].children, key, callback);\n      }\n    }\n  };\n\n  /** ROW CHANGE FUNCTIONS */\n  const _addRows = (rows) => {\n    let saveRows = [...rows];\n    if(!expandColumnKey)\n      saveRows = saveRows.map(row => { row.children = undefined; return row; });\n    if (customFields) {\n      // Фильтрация по пользовательским параметрам\n      saveRows = saveRows.filter((sRow) => {\n        let isValid = [];\n        customFields.forEach((field) => {\n          // Валидация по пользовательской логике функции validate\n          if (field.validate)\n            isValid.push(field.validate(sRow, _rows));\n\n          // Создание или переобразование по пользовательской логике функции value\n          if (field.value)\n            sRow[field.name] = field.value(sRow, _rows);\n        });\n        // console.log(\"_addRows isValid\", isValid);\n        if (!isValid.includes(false))\n          return sRow;\n      });\n    }\n    const _localRows = [..._rows, ...saveRows];\n    _setRowsHandler(_localRows);\n    onTableEventsDispatch(\"onAddRows\", _localRows);\n  };\n\n  const _addRow = (row) => {\n    let _row = { ...row };\n    if(!expandColumnKey)\n      _row.children = undefined;\n    let isValid = true;\n    if (customFields) {\n      let validations = [];\n      customFields.forEach((field) => {\n        if (field.validate)\n          validations.push(field.validate(_row, _rows));\n\n        if (field.value)\n          _row[field.name] = field.value(_row, _rows);\n      });\n      isValid = !validations.includes(false);\n    }\n    if (isValid) {\n      const _localRows = [..._rows, _row];\n      _setRowsHandler(_localRows);\n      onTableEventsDispatch(\"onAddRow\", _localRows);\n    }\n  };\n\n  const _addRowAsCopy = () => {\n    // console.log(\"_onClickAddAsCopy\", selectedRow);\n    const _localRows = [..._rows, findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0])];\n    _setRowsHandler(_localRows);\n    onTableEventsDispatch(\"onAddRowAsCopy\", _localRows);\n\n  };\n\n  const _editRow = (row) => {\n    // console.log(\"_onClickEdit\", selectedRow);\n    const data = [..._rows];\n    const key = row[rowKey];\n    loop(data, key, (item, index, arr) => {\n      data[index] = row;\n      _setRowsHandler(data);\n      _setSelectedRowsHandler(_selectedRowKeys, undefined, data);\n      onTableEventsDispatch(\"onEditRow\", data);\n    });\n  };\n\n  const _removeRow = (event) => {\n    // console.log(\"_onClickDelete\", autoDeleteRows, selectedRowKeys);\n    const _localRows = _rows.filter(\n      (item) => !_selectedRowKeys.includes(item[rowKey]));\n    _setRowsHandler(_localRows);\n    _setSelectedRowsHandler();\n    onTableEventsDispatch(\"onRemoveRow\", _localRows);\n  };\n\n  const _moveUpSelectedRow = () => {\n    _moveUpRowByKey(_selectedRowKeys[0])\n  }\n\n  const _moveUpRowByKey = (rowKey) => {\n    const data = [..._rows];\n    loop(data, rowKey, (item, index, arr) => {\n      const newRowIndex = _getNewIndexRow(index, index - 1);\n      _changeIndexRow(index, newRowIndex, arr, data, \"onMoveUpRow\");\n    });\n  };\n\n  const _moveDownSelectedRow = () => {\n    _moveDownRowByKey(_selectedRowKeys[0])\n  }\n\n  const _moveDownRowByKey = (rowKey) => {\n    const data = [..._rows];\n    loop(data, rowKey, (item, index, arr) => {\n      const newRowIndex = _getNewIndexRow(index, index + 1);\n      _changeIndexRow(index, newRowIndex, arr, data, \"onMoveDownRow\");\n    });\n  };\n\n  const _getNewIndexRow = (oldIndex, newIndex) =>\n    newIndex >= 0 && newIndex < _rows.length ? newIndex : oldIndex;\n\n  const _changeIndexRow = (oldIndex, newIndex, arr, data, nameEvent) => {\n    if (newIndex >= 0 && newIndex < arr.length) {\n      // let arr = [..._rows]; // Копируем массив\n      const item = arr.splice(oldIndex, 1); // Удаляем элемент со старого места\n      // console.log('_changeIndexRow => ',item);\n      arr.splice(newIndex > 0 ? newIndex : 0, 0, item[0]); // Ставим элемент на новое место\n      // console.log(\"_changeIndexRow\", item[0]);\n      _setRowsHandler(data);\n      onTableEventsDispatch(nameEvent, data);\n    }\n  };\n\n  /** TREE FUNCTIONS */\n  const _onExpandedRowsChange = (expandedRowKeys) => {\n    setExpandedRowKeys(expandedRowKeys);\n    onExpandedRowsChange(expandedRowKeys);\n  };\n\n  /** SELECTABLE FUNCTIONS */\n  const onChangeSelectedHandler = (selectedRowKeys, selectedRows) => {\n    // console.log(\"onChangeSelectedHandler\");\n    _setSelectedRowsHandler(selectedRowKeys, selectedRows);\n  };\n\n  const onSelectAllHandler = (selected, selectedRows, changeRows) => {\n    // console.log(\"onSelectAllHandler\");\n    const selectedKeys = selected ? selectedRows.map(row => row[rowKey]) : [];\n    _setSelectedRowsHandler(selectedKeys, selectedRows);\n  };\n\n  /** VIEW FUNCTIONS */\n  const _rowClassName = (rowData, rowIndex) => {\n    // const {rowClassName} = props;\n    return [\n      // rowClassName,\n      _selectedRowKeys.includes(rowData[rowKey]) && \"ant-table-row-selected\", //\n      zebraStyle ? (rowIndex % 2 === 0 ? \"even\" : \"odd\") : \"\"\n      // rowBordered ? 'bordered' : ''\n    ].join(\" \");\n  };\n\n  const ExpandIcon = ({ Icon, ...restProps }) =>\n    <span {...restProps} className={`${rtPrefix}-table-expand-icon`}><Icon /></span>;\n\n  const expandIconRender = ({ expanded, onExpand, record }) =>\n    record.children && record.children.length === 0\n      ? <ExpandIcon Icon={CaretUpOutlined} style={{ visibility: \"hidden\" }} />\n      : expanded\n      ? <ExpandIcon Icon={CaretDownOutlined} onClick={e => onExpand(record, e)} />\n      : <ExpandIcon Icon={CaretRightOutlined} onClick={e => onExpand(record, e)} />;\n\n  const _footer = (currentPageData) => {\n    // console.log('_footer => ', currentPageData);\n    return (\n      _footerShow ? (\n        <React.Fragment>\n          {/*className={'BaseTable__footer__counter'}>*/}\n          <div key={\"footer-left-custom-side\"} className={`${rtPrefix}-footer-left-custom-side`}>\n            {footerProps.leftCustomSideElement\n              ? Array.isArray(footerProps.leftCustomSideElement)\n                ? <FormItems items={footerProps.leftCustomSideElement} />\n                : <footerProps.leftCustomSideElement />\n              : null}\n          </div>\n          <div key={\"footer-center-custom-side\"} className={`${rtPrefix}-footer-center-custom-side`}>\n            {footerProps.centerCustomSideElement\n              ? Array.isArray(footerProps.centerCustomSideElement)\n                ? <FormItems items={footerProps.centerCustomSideElement} />\n                : <footerProps.centerCustomSideElement />\n              : null}\n          </div>\n          <div key={\"footer-right-custom-side\"} className={`${rtPrefix}-footer-right-custom-side`}>\n            {footerProps.rightCustomSideElement\n              ? Array.isArray(footerProps.rightCustomSideElement)\n                ? <FormItems items={footerProps.rightCustomSideElement} />\n                : <footerProps.rightCustomSideElement />\n              : null}\n          </div>\n          <div className={`${rtPrefix}-footer-right-system-side`}>\n            <Space>\n              {selectable ? (\n                <React.Fragment>\n                  {footerProps.showElements.includes(\"selected\")\n                    ? <span>{footerProps.selectedTitle} {_selectedRowKeys.length}</span>\n                    : null}\n                  {footerProps.showElements.includes(\"loaded\")\n                    ? <span>{footerProps.loadedTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n                    : null}\n                </React.Fragment>\n              ) : null}\n\n              {footerProps.showElements.includes(\"total\")\n                ? requestLoadCount !== noop && !expandColumnKey\n                  ? <span>{footerProps.totalTitle} {_totalCountRows}</span>\n                  : <span>{footerProps.totalTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n                : null}\n            </Space>\n          </div>\n        </React.Fragment>\n      ) : undefined\n    );\n  };\n\n  const getColumns = () => {\n    return _columns.map((col, index) => ({\n      ...col,\n      onHeaderCell: (column) =>\n        ({\n          column,\n          // resizable: column.resizable,\n          // width: column.width,\n          onResize: onResizeHandler(index)\n        })\n    }));\n  };\n\n  const restProps = getObjectExcludedProps(props, excludeProps);\n  const expandableProps = expandColumnKey\n    ? {\n      defaultExpandAllRows: expandDefaultAll,\n      expandIcon: expandIconRender,\n      ...expandable,\n      expandedRowKeys: _expandedRowKeys,\n      onExpandedRowsChange: _onExpandedRowsChange\n    } : {};\n\n  const rowSelectionProps = selectable\n    ? {\n      type: \"checkbox\",\n      fixed: true,\n      checkStrictly: !nodeAssociated,\n      selectedRowKeys: _selectedRowKeys,\n      onChange: onChangeSelectedHandler,\n      onSelectAll: onSelectAllHandler,\n      ...rowSelection\n    } : undefined;\n\n  return (\n    <div className={`${rtPrefix}-table ${className}`} style={style}>\n      <div className={`${rtPrefix}-baseTable`}>\n        <AutoResizer\n          // onResize={({ height, width }) => {setHeight(height); setWidth(width)} }\n        >\n          {({ height, width }) => (\n            <div style={{ width: width, height: height }}>\n              <AntTable\n                {...restProps}\n\n                /** Required */\n                columns={getColumns()}\n                dataSource={_rows}\n                // scroll={{ x: width, y: height - headerHeight }}\n                scroll={{ y: height - headerHeight }}\n                pagination={{ position: [\"none\", \"none\"], ...restProps.pagination, pageSize: _rows.length }}\n\n                /** Base Props */\n                loading={loading}\n\n                /** Tree Props */\n                expandable={{ ...expandableProps }}\n                /** Selection Props */\n                rowSelection={rowSelectionProps}\n\n                /** View Props */\n                rowClassName={_rowClassName}\n                footer={_footerShow ? _footer : undefined}\n                components={{\n\n                  header: {\n                    row: HeaderRow,\n                    cell: HeaderCell\n                  },\n                  body: {\n                    cell: BodyCell,\n                  }\n                }}\n\n                /** Events */\n                onChange={onChangeTable}\n                onHeaderRow={onHeaderRowProps}\n                onRow={onRowEvents}\n              />\n            </div>\n          )}\n        </AutoResizer>\n      </div>\n    </div>\n  );\n};\n\nTable.propTypes = {\n  /**\n   * REQUIRED\n   * */\n\n  /** Столбцы таблицы */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n  /** Режим загрузки данных по скроллу */\n  infinityMode: PropTypes.bool,\n\n  /**\n   * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n   * */\n\n  /** Строки по умолчанию */\n  defaultRows: PropTypes.arrayOf(PropTypes.object),\n\n  /** Ключи выделенных по умолчанию строк */\n  defaultSelectedRowKeys: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  ),\n\n  /** Значение строки поиска по умолчанию строк */\n  defaultSearchValue: PropTypes.string,\n\n  /** Объект фильтрации по умолчанию */\n  defaultFilter: PropTypes.object,\n\n  /** Сортировка по умолчанию */\n  defaultSortBy: PropTypes.shape({\n    /** Ключ поля для сортировки */\n    key: PropTypes.string,\n    /** Направление сортировки */\n    order: PropTypes.oneOf([\"asc\", \"desc\"])\n  }),\n\n  /**\n   * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n   * */\n\n  /** Строки таблицы. Используется для контроля таблицы из вне. */\n  rows: PropTypes.arrayOf(PropTypes.object),\n\n  /** Функция задания строк таблицы. */\n  setRows: PropTypes.func,\n\n  /** Выделенные строки таблицы. */\n  selectedRowKeys: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  ),\n\n  /** Значение строки поиска */\n  searchValue: PropTypes.string,\n\n  /** Объект фильтрации */\n  filter: PropTypes.object,\n\n  /** Объект сортировки */\n  sortBy: PropTypes.shape({\n    /** Ключ поля для сортировки */\n    key: PropTypes.string,\n    /** Направление сортировки */\n    order: PropTypes.oneOf([\"asc\", \"desc\"])\n  }),\n\n  /**\n   * BASE PROPS\n   * */\n\n  /** Поле для уникальной идентификации строки */\n  rowKey: PropTypes.string,\n\n\n  /** Дополнительные поля и валидация в объекты таблицы\n   * Данный параметр (props) осуществляет дополнительную обработку объекта таблицы после закрытия модалки, но перед добавлением в таблицу.\n   * Можно как изменить существующие поля объекта, так и добавить новые поля объекта.\n   * `customFields` - массив объектов для дополнения или изменения полей объектов таблицы\n   * ```json\n   * [\n   *  {\n   * \t\tname: <String>,\n   * \t\tvalue: <func>,\n   * \t\tvalidate: <func>\n   * \t}\n   * ]\n   * ```\n   * `name` – Имя параметра в объекте\n   * `value` – Функция формирования значения - `(row, rows) => { return {} }`\n   * `validate` – Функция проверки значения - `(row, rows) => { return <Bool> }`\n   * Параметра **validate** работает **только** для модельного окна тип `select`.\n   * Validate можно наложить на любое кол-во полей объекта и если хотя бы один `validate` === `false`, то исключает строку из добавления.\n   */\n  customFields: PropTypes.arrayOf(PropTypes.object),\n\n  /**\n   * Данный параметр (props) позволяет добавить или переопределить пропсы для колонок, которые заданы конфигурацией на сервере\n   * `customColumnProps` - массив объектов `props` к `columns`. Один объект описывает доп. параметры для одной колонки\n   * ```json\n   * [\n   *  {\n   * \t\tname: <String>,\n   * \t\tcellRenderer: <func>,\n   * \t\t...advancedColProps\n   * \t}\n   * ]\n   * ```\n   * `name` – key колонки к которой надо применить дополнительные пропсы\n   * `cellRenderer` – `({ cellData, columns, column, columnIndex, rowData, rowIndex, container, isScrolling }) => return <ReactNode>`\n   * `advancedColProps` – подолнительные свойства колонок тут -> [Column](https://autodesk.github.io/react-base-table/api/column)\n   */\n  customColumnProps: PropTypes.arrayOf(PropTypes.object),\n\n  /**\n   * VIEW PROPS\n   * */\n\n  /** Вывод когда нет данных */\n  empty: PropTypes.element,\n\n  /** Отображение загрузки данных */\n  overlay: PropTypes.element,\n\n  /** Фиксированная ширина столбцов. Появится боковой скрол */\n  fixWidthColumn: PropTypes.bool,\n\n  footerProps: PropTypes.shape({\n\n    /** Высота подвала */\n    height: PropTypes.number,\n\n    /** Массив элементов футтера, которые надо отобразить\n     * ['selected', 'loaded', 'total'] */\n    showElements: PropTypes.arrayOf(PropTypes.string),\n\n    /** Заколовок для кол-ва выбранных объектов */\n    selectedTitle: PropTypes.string,\n\n    /** Заколовок для кол-ва загруженны объектов */\n    loadedTitle: PropTypes.string,\n\n    /** Заколовок для кол-ва всего объектов */\n    totalTitle: PropTypes.string,\n\n    /** Левый кастомный элемент командной панели */\n    leftCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\n    /** Центральный кастомный элемент командной панели */\n    centerCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\n\n    /** Правый кастомный элемент командной панели */\n    rightCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)])\n  }),\n\n  /** Высота заголовка таблицы */\n  headerHeight: PropTypes.number,\n\n  /** Высота строки таблицы */\n  rowHeight: PropTypes.number,\n\n  /** Custom row renderer\n   * Параметры - `({ isScrolling, cells, columns, rowData, rowIndex, depth })` */\n  rowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n  /** Строки будут в зебро-стиле */\n  zebraStyle: PropTypes.bool,\n\n  /** Высота расширения */\n  estimatedRowHeight: PropTypes.number,\n\n  /** Отображать ли разделители ячеек в строке */\n  cellBordered: PropTypes.bool,\n\n  /** Отобрадать ли разделители строк */\n  rowBordered: PropTypes.bool,\n\n  /**\n   * LOAD DATA PROPS\n   * */\n\n  /** Порог в пикселях для вызова _onLoad.\n   * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n  loadThreshold: PropTypes.number,\n\n  /** Размер страницы */\n  pageSize: PropTypes.number,\n\n  /** Функция запроса для конфигурации */\n  requestLoadConfig: PropTypes.func,\n\n  /** Функция запроса для загрузки строк (данных) */\n  requestLoadRows: PropTypes.func,\n\n  /** Функция запроса для загрузки строк (данных) */\n  requestLoadCount: PropTypes.func,\n\n  /** Имя параметра для поиска */\n  searchParamName: PropTypes.string,\n\n  /**\n   * SELECTABLE PROPS\n   * */\n\n  /** Таблица с возможностью выбора строки */\n  selectable: PropTypes.bool,\n\n  /**\n   * TREE PROPS\n   * */\n\n  /** Родительский узел и дочерние узлы связаны (Работает только при `selectable`) */\n  nodeAssociated: PropTypes.bool,\n\n  /** Ключ колонки по которой строить иерархию */\n  expandColumnKey: PropTypes.string,\n\n  /** Открыть по умолчанию вложенность до уровня N или 'All' */\n  expandDefaultAll: PropTypes.bool,\n\n  /** Загружать ноды иерархии по одной */\n  expandLazyLoad: PropTypes.bool,\n\n  /** Поле в котором хранится ссылка на родителя */\n  expandParentKey: PropTypes.string,\n\n  /**\n   * EVENTS\n   * */\n\n  /** Событие при клике на строку (только при `selectable` = `false`)\n   * `({selected, rowData, rowIndex}) => {}` */\n  onRowClick: PropTypes.func,\n\n  /** Событие при двойном клике на строку.\n   * `({rowData, rowIndex, rowKey}) => {}` */\n  onRowDoubleClick: PropTypes.func,\n\n  /** События при открытии / закрытии ноды\n   * `({ expanded, rowData, rowIndex, rowKey }) => {}` */\n  onRowExpand: PropTypes.func,\n\n  /** Событие при выборе строки.\n   * `([rowKeys], [rowDatas]) => {}` */\n  onSelectedRowsChange: PropTypes.func,\n\n  /** События при открытии / закрытии ноды\n   * `(expandedRowKeys) => {}` - массив ключей открытых нод */\n  onExpandedRowsChange: PropTypes.func,\n\n  /** SELECTED PANEL */\n\n  /** Отображать ли панель выбранных элементов */\n  showSelection: PropTypes.bool,\n\n  /** Строка или функция для отображения элементов списка выбранных\n   * Строка - имя поля\n   * Функция - рендер строк.\n   * `({ rowData, rowIndex }) => { return <Component> }` */\n  rowRenderShowSelection: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string\n  ]),\n\n  /** Путь в сторе куда класть выбранную строку таблицы */\n  dispatchPath: PropTypes.string,\n\n  /** Объект для подписки на изменения в STORE */\n  subscribe: PropTypes.arrayOf(PropTypes.object)\n};\n\n\nTable.defaultProps = {\n  size: \"small\",\n  bordered: true,\n  infinityMode: false,\n  editMode: false,\n  defaultRows: [],\n  defaultSelectedRowKeys: [],\n  defaultSearchValue: \"\",\n  defaultFilter: {},\n  defaultSortBy: {},\n\n  rows: [],\n  setRows: noop,\n  selectedRowKeys: [],\n  searchValue: \"\",\n  filter: {},\n  sortBy: {},\n\n  rowKey: \"id\",\n\n  empty: empty,\n  overlay: overlay,\n  fixWidthColumn: false,\n  footerProps: {\n    height: 30,\n    showElements: [],\n    selectedTitle: \"Выделено:\",\n    loadedTitle: \"Загружено записей:\",\n    totalTitle: \"Всего записей:\",\n    leftCustomSideElement: null,\n    centerCustomSideElement: null,\n    rightCustomSideElement: null\n  },\n  headerHeight: 30,\n  rowHeight: 30,\n  zebraStyle: false,\n  estimatedRowHeight: undefined,\n  cellBordered: false,\n  rowBordered: true,\n  className: \"\",\n  style: {},\n\n  loadThreshold: 300,\n  pageSize: 50,\n  requestLoadRows: undefined,\n  requestLoadCount: noop,\n  searchParamName: \"searchLine\",\n\n  selectable: false,\n\n  nodeAssociated: true,\n  expandColumnKey: undefined,\n  expandDefaultAll: true,\n  expandLazyLoad: false,\n  expandParentKey: \"parentId\",\n\n  onRowClick: noop,\n  onRowDoubleClick: noop,\n  onRowExpand: noop,\n  onSelectedRowsChange: noop,\n  onExpandedRowsChange: noop,\n\n  showSelection: false,\n\n  dispatchPath: undefined,\n  subscribe: []\n};\n\nconst mapStateToProps = (store, ownProps) => {\n  const { subscribe } = ownProps;\n  let state = {};\n  if (subscribe && subscribe.length > 0) {\n    subscribe.forEach(item => {\n      const { name, path, extraData } = item;\n      if (name && path)\n        state[name] = objectPath.get(store, path);\n      if (name && extraData){\n        if(typeof extraData === 'object')\n          Object.keys(extraData).forEach( (key) => state[`${name}.extraData.${key}`] = objectPath.get(store, extraData[key]) );\n        else\n          state[`${name}ExtraData`] = objectPath.get(store, extraData);\n      }\n    });\n  }\n  return state;\n};\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators({ setDateStore: setDateStore }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\n\n","import React, { useEffect, useState } from \"react\";\nimport { getSortBy, noop, notificationError } from \"../../utils/baseUtils\";\nimport Table from \"./Table\";\n\nconst defaultProps = {\n    defaultFilter: {},\n    rowKey: \"id\",\n    pageSize: 50,\n    requestLoadConfig: noop,\n    expandColumnKey: undefined,\n    expandLazyLoad: false,\n    expandParentKey: \"parentId\",\n    customColumnProps: []\n};\n\nconst ConfigLoader = props => {\n\n    /** Конфигурация таблицы */\n    const [tableConfig, setTableConfig] = useState(undefined);\n\n    const {\n        defaultFilter,\n        defaultSortBy,\n        rowKey,\n        pageSize,\n        requestLoadConfig,\n        expandColumnKey,\n        // expandLazyLoad,\n        expandParentKey,\n        customColumnProps,\n        // cellBordered,\n        fixWidthColumn,\n        selectable\n    } = { ...defaultProps, ...props };\n\n    useEffect(() => {\n        let cleanupFunction = false;\n        const loadData = async () => {\n            if (requestLoadConfig) {\n                // console.log(\"requestLoadConfig => \", typeof requestLoadConfig);\n                // console.log(\"requestLoadRows => \", typeof props.requestLoadRows);\n                requestLoadConfig()\n                    .then((response) => {\n                        // let result = response.data;\n                        // console.log('requestLoadConfig -> ', response.data);\n                        if (!cleanupFunction) {\n                            // setTableConfig(response.data);\n                            configParser(response.data);\n                        }\n                    })\n                    .catch(error => notificationError(error, \"Ошибка получения конфигурации\"));\n            }\n        };\n        loadData().then(r => r);\n        return () => cleanupFunction = true;\n    }, [props]);\n\n    const configParser = (config) => {\n\n        // Массив колонок\n        let _columns = [];\n        // Сортировка по умолчанию\n        let _defaultSorter = [];\n        // Счетчик видимых полей\n        let visibleIndex = 0;\n        // Индекс колонки около которой ставить иконку дерева\n        let expandIconColumnIndex = -1;\n        // Ключ иерархии\n        let _expandColumnKey = config && config.hierarchical && config.hierarchyView\n            ? config.hierarchyView\n            : expandColumnKey;\n\n        config && config.fields && config.fields.forEach((item, index) => {\n            // console.log('configParser item => ', item);\n\n            // Дополнительные props колонок\n            const colProps = customColumnProps &&\n                customColumnProps.find((render) =>\n                    render.name === item.name || render.name === item.alias);\n\n            // Если поле не надо показывать, то след цикл\n            if (!item.visible || (colProps && colProps.hidden))\n                return;\n\n            // Индекс или имя поля в данных\n            const dataIndex = (item.alias ? item.alias : item.name);\n            // Сортировка по умолчанию\n            if (_defaultSorter.length === 0 || _defaultSorter[1] === undefined)\n                _defaultSorter = getSortBy(defaultSortBy, item.defaultSort, dataIndex);\n\n            // Ширина колонок\n            const widthCol = fixWidthColumn ? { width: item.width, maxWidth: 1000 } : {};\n            // Увеличить счетчик видимых полей\n            visibleIndex++;\n            // Проверка у этого ли поля ставить иконку дерева\n            if (_expandColumnKey === dataIndex)\n                expandIconColumnIndex = visibleIndex + (selectable ? 1 : -1);\n            // Формирование title колонки\n            let titleNode = colProps && colProps.headerRenderer\n                ? (typeof colProps.headerRenderer === \"function\" ? colProps.headerRenderer() : colProps.headerRenderer)\n                : (item.header ? item.header : item.name);\n\n            const column = {\n                key: dataIndex,\n                title: titleNode,\n                dataIndex: dataIndex,\n                align: item.align,\n                resizable: item.resizable,\n                sorter: item.sortable ? item.sortable : undefined,\n                ellipsis: true,\n                defaultSortOrder: _defaultSorter[1],\n                ...widthCol,\n                ...colProps\n            };\n            // Дополнительные props для компонента ячейки\n            column.onCell = (rowData, rowIndex) => ({ column, rowData, rowIndex });\n            // Рендер ячейки\n            column.render = (cellData, rowData, rowIndex) => {\n                if (colProps && colProps.cellRenderer)\n                    return <colProps.cellRenderer\n                        column={column}\n                        cellData={cellData}\n                        rowData={rowData}\n                        rowIndex={rowIndex} />;\n                else\n                    return item.typeData === \"json\" ? JSON.stringify(cellData) : cellData ? cellData : \"---\";\n            };\n            _columns.push(column);\n        });\n\n        let _defaultFilter;\n        if (config && config.hierarchical && config.hierarchyLazyLoad) {\n            const parentKey = config.hierarchyField\n                ? config.hierarchyField.split(\"/\")[1]\n                : expandParentKey;\n            _defaultFilter = { ...defaultFilter, [parentKey]: null };\n        } else _defaultFilter = defaultFilter;\n\n        // console.log('expandIconColumnIndex => ', _expandColumnKey, expandIconColumnIndex);\n        setTableConfig({\n            columns: _columns,\n            defaultSortBy: _defaultSorter[0],\n            defaultFilter: _defaultFilter,\n            rowKey:\n                config && config.hierarchical && config.hierarchyField\n                    ? config.hierarchyField.split(\"/\")[0]\n                    : rowKey,\n            // expandParentKey:\n            //     config && config.hierarchical && config.hierarchyField\n            //         ? config.hierarchyField.split('/')[1]\n            //         : expandParentKey,\n            expandColumnKey: _expandColumnKey,\n            expandable: { expandIconColumnIndex },\n            // expandLazyLoad:\n            //     config && config.hierarchical && config.hierarchyLazyLoad\n            //         ? config.hierarchyLazyLoad\n            //         : expandLazyLoad,\n            pageSize: config && config.hierarchical ? 1 : pageSize,\n        });\n    };\n\n    if (tableConfig)\n        return (<Table {...props} {...tableConfig} />);\n    else\n        return null;\n};\n\nexport default ConfigLoader;\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { notification, Select as AntSelect } from \"antd\";\nimport {\n\tgenerateUUID,\n\tgetObjectExcludedProps,\n\tnotificationError, useMounted\n} from \"../utils/baseUtils\";\n\nimport { CheckOutlined } from '@ant-design/icons';\n\nconst excludeProps = [\n\t'componentType',\n\t'defaultSortBy',\n\t'defaultFilter',\n\t'defaultSearchValue',\n\t'sortBy',\n\t'filter',\n\t'searchValue',\n\t'searchParamName',\n    'lostParamName',\n\t'infinityMode',\n\t'requestLoadRows',\n\t'optionConverter',\n\t'options',\n\t'widthControl',\n\t'pageSize'\n];\n\n/** Компонент выбора элемента(ов) из списка */\nconst Select = props => {\n\n\tconst {\n\t\t// Rt Props\n\t\tdefaultSortBy,\n\t\tdefaultFilter,\n\t\tdefaultSearchValue,\n\t\tsortBy,\n\t\tfilter,\n\t\tsearchValue,\n\t\tsearchParamName,\n\t\tlostParamName,\n\t\tinfinityMode,\n\t\trequestLoadRows,\n\t\toptionConverter,\n\t\toptions,\n\t\twidthControl,\n\t\tpageSize,\n\n\t\t// Ant Props\n\t\tmode,\n\t\tonChange,\n\t\tvalue,\n\t} = props;\n\n\t/** Наличие на сервере еще данных */\n\tconst [_hasMore, _setHasMore] = useState(true);\n\t/** Индикатор загрузки данных */\n\tconst [_loading, _setLoading] = useState(false);\n\t/** Опции селекта */\n\tconst [_options, _setOptions] = useState(options);\n\tconst [tmpOption, setTmpOption] = useState(undefined);\n\n\t/** Индикатор достижения низа окна */\n\tconst [isEndReached, setIsEndReached] = useState(false);\n\n\t/** Объект сортировки */\n\tconst [_sortBy, _setSortBy] = useState(undefined);\n\t/** Объект фильтрации */\n\tconst [_filter, _setFilter] = useState({});\n\t/** Строка поиска */\n\tconst [_searchValue, _setSearchValue] = useState(undefined);\n\n\t/** Состояние параметра выбрать все */\n\tconst [_isSelectAll, _setIsSelectAll] = useState(false);\n\n\tconst isMounted = useMounted()\n\n\tuseEffect(() => {\n\t\t_setSearchValue(defaultSearchValue);\n\t\t_loadOptions({\n\t\t\tsortBy: defaultSortBy,\n\t\t\tfilter: defaultFilter,\n\t\t\tsearchValue: defaultSearchValue,\n\t\t\treload: true,\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif(isMounted) {\n\t\t\t_setRowsHandler(options);\n\t\t}\n\t}, [options]);\n\n\tuseEffect(() => {\n\t\t// console.log(\"Change sortBy, filter, searchValue\", sortBy, filter, searchValue);\n\t\tif(isMounted) {\n\t\t\tconst __sortBy = sortBy ? sortBy : _sortBy;\n\t\t\tconst __filter = filter ? filter : _filter;\n\t\t\tconst __searchValue = searchValue ? searchValue : _searchValue;\n\t\t\t_setSortBy(__sortBy);\n\t\t\t_setFilter(__filter);\n\t\t\t_setSearchValue(__searchValue);\n\t\t\t_loadOptions({\n\t\t\t\tsortBy: __sortBy,\n\t\t\t\tfilter: __filter,\n\t\t\t\tsearchLine: __searchValue,\n\t\t\t\treload: true,\n\t\t\t});\n\t\t}\n\t}, [sortBy, filter, searchValue]);\n\n\tconst _setRowsHandler = (options) => {\n\t\t_setOptions(options);\n\t\t// console.log('Select _setRowsHandler value => ', options)\n\t\tif(mode === 'multiple') {\n\t\t\tif(Array.isArray(value))\n\t\t\t\tif(options.reduce((preValue, item) => value.includes(item.value) ? preValue + 1 : preValue, 0) === options.length)\n\t\t\t\t\t_setIsSelectAll(true);\n\t\t\t\telse\n\t\t\t\t\t_setIsSelectAll(false);\n\t\t\tonChange(value);\n\t\t} else {\n\t\t\tif(value && options && options.findIndex(option => option.value === value) === -1){\n\t\t\t\tconsole.log('Load tmpOption');\n\t\t\t\t_loadTmpOption();\n\t\t\t} else {\n\t\t\t\tconsole.log('Clear tmpOption');\n\t\t\t\tsetTmpOption(undefined)\n\t\t\t}\n\t\t}\n\t\t// setRows(rows);\n\t\t// rowsDispatch(rows);\n\t};\n\n\tconst getPageNum = (reload) =>\n\t\treload ? 0 : Math.floor(_options.length / pageSize);\n\n\tconst getSort = (sortBy) =>\n\t\tsortBy && sortBy.key ? sortBy.key + ',' + sortBy.order : null;\n\n\tconst getSearchValue = (searchValue) =>\n\t\tsearchValue ? {[searchParamName]: searchValue} : null\n\n\tconst _loadOptions = (params) => {\n\t\t// console.log('_dataProcessing', params);\n\t\tconst {sortBy, filter, searchValue, reload} = params;\n\t\tif ((_hasMore || reload) && !_loading && requestLoadRows) {\n\t\t\t_setLoading(true);\n\n\t\t\tconst requestOptions = {\n\t\t\t\tparams: {\n\t\t\t\t\tpage: getPageNum(reload),\n\t\t\t\t\tsize: pageSize,\n\t\t\t\t\tsort: getSort(sortBy)\n\t\t\t\t},\n\t\t\t\tdata: {\n\t\t\t\t\t...filter,\n\t\t\t\t\t...getSearchValue(searchValue)\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log('dataQuery', dataQuery);\n\n\t\t\trequestLoadRows(requestOptions)\n\t\t\t\t.then((response) => {\n\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\tconst result = response.data;\n\n\t\t\t\t\tif (result && result.length < pageSize) {\n\t\t\t\t\t\t_setHasMore(false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_setHasMore(true);\n\t\t\t\t\t\tsetIsEndReached(false);\n\t\t\t\t\t}\n\t\t\t\t\treload\n\t\t\t\t\t\t? _setRowsHandler(result.map(option => optionConverter(option))) // _setRows\n\t\t\t\t\t\t: _setRowsHandler(_options.concat(result.map(option => optionConverter(option)))); // _setRows\n\n\t\t\t\t\t// console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\n\n\t\t\t\t\t_setLoading(false);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t\t\t_setRowsHandler(_options); // _setRows\n\t\t\t\t\t// setHasMore(false);\n\t\t\t\t\t_setLoading(false);\n\t\t\t\t});\n\t\t}\n\t};\n\n\tconst _loadTmpOption = () => {\n\t\tif(requestLoadRows){\n\t\t\trequestLoadRows({params: {}, data: {[lostParamName]: value}})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tif(response.data){\n\t\t\t\t\t\tif(response.data.length === 1){\n\t\t\t\t\t\t\tsetTmpOption(optionConverter(response.data[0]))\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnotification.error({ message: `Ошибка загрузки потерянного элемента` });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t\t\tsetTmpOption(undefined)\n\t\t\t\t});\n\t\t}\n\t}\n\n\tconst onScroll = (event) => {\n\t\tlet scrollTopMax = event.nativeEvent.target.scrollTopMax\n\t\tlet scrollTop = event.nativeEvent.target.scrollTop//.body.scrollTop\n\n\t\tconst onEndReached = scrollTopMax - scrollTop;\n\n\t\tif(onEndReached < 300 && !isEndReached) {\n\t\t\t// console.log('Load Data');\n\t\t\tsetIsEndReached(true);\n\t\t\t_setSearchValue(defaultSearchValue);\n\t\t\tif(infinityMode){\n\t\t\t\t_loadOptions({\n\t\t\t\t\tsortBy: defaultSortBy,\n\t\t\t\t\tfilter: defaultFilter,\n\t\t\t\t\tsearchValue: defaultSearchValue,\n\t\t\t\t\treload: false,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// console.log(\"scrollTopMax / scrollTop\", scrollTopMax, scrollTop, onEndReached);\n\t\t// const lastScrollTop = this._scroll.scrxollTop;\n\t\t// if (args.scrollTop > lastScrollTop) this._maybeCallOnEndReached();\n\t}\n\n\tconst onSearch = (value) => {\n\t\t_setSearchValue(value);\n\t\t_loadOptions({\n\t\t\tsortBy: defaultSortBy,\n\t\t\tfilter: defaultFilter,\n\t\t\tsearchValue: value,\n\t\t\treload: true,\n\t\t});\n\t}\n\n\tconst _onChangeSelectAll = () => {\n\t\t// console.log(`_onChangeSelectAll`, _isSelectAll);\n\t\tif(mode === 'multiple') {\n\t\t\tif (_isSelectAll) {\n\t\t\t\tconst optionsValues = _options.map(item => item.value);\n\t\t\t\tonChange(value.filter(item => !optionsValues.includes(item)));\n\t\t\t\t_setIsSelectAll(false);\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(value) && value.length > 0)\n\t\t\t\t\tonChange([...new Set([...value, ..._options.map(item => item.value)])]);\n\t\t\t\telse\n\t\t\t\t\tonChange([...new Set([..._options.map(item => item.value)])]);\n\t\t\t\t_setIsSelectAll(true);\n\t\t\t}\n\t\t} else\n\t\t\tonChange(undefined);\n\t}\n    const _onChange = (value) => {\n        // console.log(`_onChange selected`, value);\n        if(Array.isArray(value))\n        \tif(_options.reduce((preValue, item) => value.includes(item.value) ? preValue + 1 : preValue, 0) === _options.length)\n        \t\t_setIsSelectAll(true);\n        \telse\n\t\t\t\t_setIsSelectAll(false);\n\n\t\tonChange(value);\n    }\n\n    const getSelectAllCls = () => {\n\t\tlet cls = ['ant-select-item', 'ant-select-item-option', 'ant-select-item-option-select-all'];\n\t\tif(_isSelectAll)\n\t\t\tcls.push('ant-select-item-option-selected');\n\t\treturn cls.join(' ');\n\t}\n\n\tconst childProps = getObjectExcludedProps(props, excludeProps);\n    return (\n\t\t<AntSelect\n\t\t\tshowArrow={true}\n\t\t\tshowSearch={true}\n\t\t\tallowClear={true}\n\t\t\tfilterOption={false}\n\t\t\tautoClearSearchValue={true}\n\n\t\t\t{...childProps}\n\n\t\t\tsearchValue={_searchValue}\n\t\t\tstyle={{ width: widthControl }}\n\t\t\t// listHeight={heightPopup}\n\t\t\t// defaultValue={['a10', 'c12']}\n\t\t\tonChange={_onChange}\n\t\t\tmaxTagCount={0}\n\t\t\tmaxTagPlaceholder={(omittedValues) => `Выбрано: ${omittedValues.length}`}\n\t\t\t// dropdownMatchSelectWidth={200}\n\t\t\t// listItemHeight={10} listHeight={250}\n\t\t\tonPopupScroll={onScroll}\n\t\t\tonSearch={onSearch}\n\t\t\tdropdownRender={menu => (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t{mode === 'multiple' ?\n\t\t\t\t\t\t<div className={getSelectAllCls()} onClick={_onChangeSelectAll}>\n\t\t\t\t\t\t\t<div className=\"ant-select-item-option-content\">\n\t\t\t\t\t\t\t\t<span>Выбрать все</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{_isSelectAll ?\n\t\t\t\t\t\t\t\t<span className=\"ant-select-item-option-state\"><CheckOutlined/></span> : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t\t{menu}\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t>\n    \t\t{_options && _options.map(({ label, value, className, disabled }, i) =>\n\t\t\t\t<AntSelect.Option key={i.toString(36) + i} value={value} className={className} disabled={disabled}>{label}</AntSelect.Option>)}\n\t\t\t{tmpOption &&\n\t\t\t\t<AntSelect.Option key={generateUUID()} value={tmpOption.value} className={tmpOption.className} disabled={tmpOption.disabled}>{tmpOption.label}</AntSelect.Option>}\n    \t</AntSelect>\n    );\n};\n\nSelect.propTypes = {\n\t/** Сортировка по умолчанию */\n\tdefaultSortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/** Объект фильтрации по умолчанию */\n\tdefaultFilter: PropTypes.object,\n\n\t/** Значение строки поиска по умолчанию строк */\n\tdefaultSearchValue: PropTypes.string,\n\n\t/** Сортировка */\n\tsortBy: PropTypes.object,\n\n\t/** Фильтр */\n\tfilter: PropTypes.object,\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\tlostParamName: PropTypes.string,\n\n\t/** Режим загружки по скроллу */\n\tinfinityMode: PropTypes.bool,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n\t/** Функция преобразования загруженных объектов в объекты для селекта.\n\t * Сигнатура `(option) => ({})`\n\t * Требоваеть вернуть объект с параметрам\n\t * `{ label: ReactNode, value: any, className: string, disabled: bool }`\n\t * ##### Example:\n\t * ``` JS\n\t * (option) => ({\n\t * \tlabel: (<span><MehOutlined />{option.name}</span>),\n\t * \tvalue: option.id,\n\t * \tclassName: 'some-class',\n\t * \tdisabled: false,\n\t * })\n\t * ```\n\t */\n\toptionConverter: PropTypes.func,\n\n\t/** Select options `[{ label, value, className, disabled }]` */\n\toptions: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Ширина поля выбора в пикселях */\n\twidthControl: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n\t/** Размер страницы */\n\tpageSize: PropTypes.number,\n};\n\nSelect.defaultProps = {\n\t// Rt Props\n\tdefaultSortBy: undefined,\n\tdefaultFilter: {},\n\tdefaultSearchValue: undefined,\n\tinfinityMode: false,\n\trequestLoadRows: undefined,\n\toptions: [],\n\twidthControl: '100%',\n\tpageSize: 50,\n\tsearchParamName: 'name',\n\tlostParamName: 'id',\n}\n\nexport default Select;\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TreeSelect as AntTreeSelect } from \"antd\";\nimport { getObjectExcludedProps, notificationError, useMounted } from \"../utils/baseUtils\";\n\nconst excludeProps = [\n    'componentType',\n    'defaultSortBy',\n    'defaultFilter',\n    'defaultSearchValue',\n    'sortBy',\n    'filter',\n    'searchValue',\n    'searchParamName',\n    'requestLoadRows',\n    'optionConverter',\n    'treeData'\n];\n\n/** Компонент выбора элемента(ов) из древовидного списка */\nconst TreeSelect = props => {\n\n    const {\n        // Rt Props\n        defaultSortBy,\n        defaultFilter,\n        defaultSearchValue,\n        sortBy,\n        filter,\n        searchValue,\n        searchParamName,\n        requestLoadRows,\n        optionConverter,\n        treeData,\n    } = props;\n    /** Индикатор загрузки данных */\n    const [_loading, _setLoading] = useState(false);\n    /** Опции селекта */\n    const [_treeData, _setTreeData] = useState(treeData);\n    /** Строка поиска */\n    const [_searchValue, _setSearchValue] = useState(undefined);\n\n    const isMounted = useMounted()\n\n    useEffect(() => {\n        _setSearchValue(defaultSearchValue);\n        _loadOptions({\n            sortBy: defaultSortBy,\n            filter: defaultFilter,\n            searchValue: defaultSearchValue,\n            reload: true,\n        });\n    }, []);\n\n    useEffect(() => {\n        // console.log(\"Change sortBy, filter, searchValue\", sortBy, filter, searchValue);\n        if(isMounted) {\n            _setSearchValue(searchValue);\n            _loadOptions({\n                sortBy: sortBy,\n                filter: filter,\n                searchLine: searchValue,\n                reload: true,\n            });\n        }\n    }, [sortBy, filter, searchValue]);\n\n    const onSearch = (value) => {\n        // console.log('TreeSelect onSearch => ', value);\n        _setSearchValue(value);\n        _loadOptions({\n            sortBy: defaultSortBy,\n            filter: defaultFilter,\n            searchValue: value,\n            reload: true,\n        });\n    }\n\n    const getSort = (sortBy) =>\n        sortBy && sortBy.key ? sortBy.key + ',' + sortBy.order : null;\n\n    const getSearchValue = (searchValue) =>\n        searchValue ? {[searchParamName]: searchValue} : null\n\n    const _optionConverter = (options) => {\n        if(Array.isArray(options))\n            return options.map(option => {\n                if(option.children && Array.isArray(option.children))\n                    option.children = _optionConverter(option.children)\n                return optionConverter(option)\n            })\n    }\n\n    const _loadOptions = (params) => {\n        const {sortBy, filter, searchValue} = params;\n        if (!_loading && requestLoadRows) {\n            _setLoading(true);\n            const requestOptions = {\n                params: {\n                    page: 0,\n                    size: 1,\n                    sort: getSort(sortBy)\n                },\n                data: {\n                    ...filter,\n                    ...getSearchValue(searchValue)\n                }\n            }\n            requestLoadRows(requestOptions)\n                .then((response) => {\n                    // console.log(\"infinity then response\", response);\n                    const result = response.data;\n                    _setTreeData(_optionConverter(result))\n                    _setLoading(false);\n                })\n                .catch((error) => {\n                    notificationError(error, 'Ошибка загрузки данных')\n                    // _setRowsHandler(_options); // _setRows\n                    // setHasMore(false);\n                    _setLoading(false);\n                });\n        }\n    }\n\n    const childProps = getObjectExcludedProps(props, excludeProps);\n    return (\n        <AntTreeSelect\n            showArrow={true}\n            showSearch={true}\n            allowClear={true}\n            filterTreeNode={false}\n            autoClearSearchValue={true}\n            treeDefaultExpandAll={true}\n\n            {...childProps}\n\n            searchValue={_searchValue}\n            onSearch={onSearch}\n            maxTagCount={0}\n            maxTagPlaceholder={(omittedValues) => `Выбрано: ${omittedValues.length}`}\n            treeData={_treeData}\n            // loadData={onLoadData}\n        />\n    );\n};\n\nTreeSelect.propTypes = {\n    /** Сортировка по умолчанию */\n    defaultSortBy: PropTypes.shape({\n        /** Ключ поля для сортировки */\n        key: PropTypes.string,\n        /** Направление сортировки */\n        order: PropTypes.oneOf(['asc', 'desc']),\n    }),\n\n    /** Объект фильтрации по умолчанию */\n    defaultFilter: PropTypes.object,\n\n    /** Значение строки поиска по умолчанию строк */\n    defaultSearchValue: PropTypes.string,\n\n    /** Сортировка */\n    sortBy: PropTypes.object,\n\n    /** Фильтр */\n    filter: PropTypes.object,\n\n    /** Значение строки поиска */\n    searchValue: PropTypes.string,\n\n    /** Имя параметра для поиска */\n    searchParamName: PropTypes.string,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция преобразования загруженных объектов в объекты для селекта.\n     * Сигнатура `(option) => ({})`\n     * Требоваеть вернуть объект с параметрам\n     * `{ label: ReactNode, value: any, children: any, checkable: bool, selectable: bool }`\n     * ##### Example:\n     * ``` JS\n     * (option) => ({\n     * \tlabel: (<span><MehOutlined />{option.name}</span>),\n     * \tvalue: option.id,\n     * \tchildren: option.children,\n     * \tcheckable: !option.isGroup,\n     * \tselectable: !option.isGroup,\n     * })\n     * ```*/\n    optionConverter: PropTypes.func.isRequired,\n\n    /** Select options `[{ label, value, children, checkable, selectable }]` */\n    options: PropTypes.arrayOf(PropTypes.object),\n};\n\nTreeSelect.defaultProps = {\n    // Rt Props\n    defaultSortBy: undefined,\n    defaultFilter: {},\n    defaultSearchValue: undefined,\n    requestLoadRows: undefined,\n    searchParamName: 'name'\n};\n\nexport default TreeSelect;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { notification, Button, Tooltip, Modal as AntModal} from \"antd\";\nimport { notificationError, dispatchToStore, useMounted, getObjectExcludedProps } from \"../utils/baseUtils\";\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../redux/rtd.actions\";\nimport Form from \"../Form/Form\";\n\nconst excludeProps = [\"buttonProps\", \"toolTipProps\", \"modalConfig\", \"modalData\", \"subscribe\", \"dispatch\"];\nconst modalTypes = ['save', 'select', 'view']\n\nconst defaultProps = {\n    subscribe: [],\n    dispatch: {},\n    methodSaveForm: 'POST'\n}\n\nconst getDefaultFooterProps = (modal) => {\n\n    let okText = '';\n    let cancelText = '';\n    let modalTitle = '';\n\n    switch (modal.type) {\n        case 'save':\n            okText = 'Сохранить';\n            cancelText = 'Отмена';\n            break;\n        case 'select':\n            okText = 'Добавить';\n            cancelText = 'Отмена';\n            break;\n        case 'view':\n            okText = 'Закрыть';\n            break;\n        default: break;\n    }\n\n    if(modal.okText)\n        okText = modal.okText;\n\n    if(modal.cancelText)\n        cancelText = modal.cancelText;\n\n    if(modal.title)\n        modalTitle = modal.title;\n\n    return {okText, cancelText, title: modalTitle, okType: 'primary'}\n};\n\n/**\n * Компонент модального окна\n */\nconst Modal = props => {\n\n    const {buttonProps, toolTipProps, modalConfig, modalData, subscribe, dispatch} = props;\n    const modalProps = { ...getDefaultFooterProps(modalConfig), ...getObjectExcludedProps(modalConfig, excludeProps) };\n\n    const [visible, setVisible] = useState(false);\n    const [_modalData, _setModalData] = useState({});\n    const [_buttonProps, setButtonProps] = useState({});\n\n    const isMounted = useMounted()\n\n    useEffect(() => {\n        _setModalData(modalData);\n    }, []);\n\n    /** Подписка на изменение props[subscribe.name] в сторе */\n    subscribe.map(item => {\n        return useEffect( () => {\n            // if(!isMounted && !item.name)\n            //     return;\n            if((item.withMount || isMounted) && item.name) {\n            // console.log(\"storeHOC => subscribe: \", props[subscribe.name]);\n                item.onChange && item.onChange({\n                    value: props[item.name],\n                    extraData: props[`${item.name}ExtraData`],\n                    setModalData,\n                    setButtonProps,\n                    openModal: _onOpenModal,\n                    closeModal: _onCloseModal\n                });\n            }\n            // console.log(\"Change Props[2]: \", props.subscribeЗф);\n        }, [props[item.name]]);\n    })\n\n    const setModalData = (value) => _setModalData && _setModalData(value);\n    const _onOpenModal = () => setVisible(true)\n    const _onCloseModal = () => setVisible(false)\n\n    const onFinishHandler = (values) => { //} {type, row, requestSaveRow}) => {\n        // console.log(\"Modal Events => before dispatchToStore: \", dispatch);\n        const saveObj = {..._modalData, ...values};\n\n        dispatchToStore({dispatch, setDateStore: props.setDateStore, value: saveObj});\n\n        if (modalProps.requestSaveForm && modalProps.methodSaveForm) {\n            // console.log(\"Modal Events => type: \", type, method, row, _modalData);\n            modalProps.requestSaveForm({\n                method: modalProps.methodSaveForm,\n                data: saveObj,\n            })\n                .then(response => {\n                    notification.success({\n                        message: 'Сохранение прошло успешно'\n                    });\n                    modalProps.onOk && modalProps.onOk(saveObj, response.data);\n                    modalProps.onFinish && modalProps.onFinish(saveObj, response.data);\n                    _onCloseModal();\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении'));\n        } else {\n            modalProps.onOk && modalProps.onOk(saveObj);\n            modalProps.onFinish && modalProps.onFinish(saveObj);\n            _onCloseModal();\n        }\n\n\n    };\n\n    const onFinishFailedHandler = (errorInfo) => {\n        // console.log('FormModal Failed:', errorInfo);\n        console.error(\"FormModal fields failed: \", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    const loadInitDataHandler = (callBack) =>\n        formConfig.loadInitData(callBack, _modalData)\n\n\n    const _onCancelHandler = (e) => {\n        // setVisibleModals({ ...visibleModals, [modal.type]: false });\n        // form.resetFields();\n        _onCloseModal()\n        if (modalProps.onCancel) modalProps.onCancel(e)\n    };\n\n    const defaultFooter = [\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.cancelText,\n                className: 'mr-8',\n                onClick: _onCancelHandler,\n                ...modalProps.cancelButtonProps\n            }\n        },\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.okText,\n                type: modalProps.okType,\n                htmlType: 'submit',\n                ...modalProps.okButtonProps\n            }\n        }\n    ];\n\n    const formConfig =  {\n        footer: defaultFooter,\n        loadInitData: (callBack, row) => callBack(row),\n        ...modalProps.form\n    };\n\n    return (\n        <React.Fragment>\n            <Tooltip {...toolTipProps}>\n                <Button\n                    type=\"primary\"\n                    {...buttonProps}\n                    {..._buttonProps}\n                    onClick={_onOpenModal}\n                >{buttonProps && buttonProps.label}</Button>\n            </Tooltip>\n            <AntModal\n                {...modalProps}\n                centered\n                destroyOnClose\n                visible={visible}\n                onCancel={_onCancelHandler}\n                bodyStyle={{padding: 0, ...modalProps.bodyStyle}}\n                footer={null}\n            >\n                <Form\n                    {...formConfig}\n                    onFinish={onFinishHandler}\n                    onFinishFailed={onFinishFailedHandler}\n                    loadInitData={loadInitDataHandler}\n                >{props.children}</Form>\n            </AntModal>\n        </React.Fragment>\n    )\n};\n\nModal.propTypes = {\n\n    /** Свойства [Button](https://ant.design/components/button/) из Ant Design\n     * Добавлено свойство `label` с типом `ReactNode` или `string` для формирования контента кнопки*/\n    buttonProps: PropTypes.object,\n\n    /** Объект модального окна. Стандартная конфигурация. */\n    modalConfig: PropTypes.shape({\n        /** Тип модального окна */\n        type: PropTypes.oneOf(modalTypes),\n\n        /** Запрос для автоматического сохранения формы */\n        requestSaveForm: PropTypes.func,\n\n        /** HTTP Метод, передаваемый в запрос сохранения */\n        methodSaveForm: PropTypes.string,\n\n        /** Пропсы формы.\n         * Если верстка через конфиги, то пропс body обязателен */\n        form: PropTypes.object\n    }),\n\n    /** Данные для модального окна */\n    modalData: PropTypes.object,\n\n    /** Путь в сторе куда класть данных окна после закрытия */\n    dispatch: PropTypes.object,\n\n    /** Объект для подписки на изменения в STORE.\n     * Параметры в `onChange`:\n     * * `value`: значение за которым ведется наблюдение,\n     * * `extraData`: дополнительные данные, передаваемые при срабатывании события\n     * * `setModalData`: функция задания объекта формы\n     * * `setButtonProps`: функция задания пропсов кнопке\n     * * `openModal`: функция открытия модального окна\n     * * `closeModal`: функция закрытия модального окна */\n    subscribe: PropTypes.arrayOf(PropTypes.object),\n};\n\nModal.defaultProps = defaultProps;\n\nconst mapStateToProps = (store, ownProps) => {\n    const {subscribe} = ownProps;\n    let state = {};\n    if(subscribe && subscribe.length > 0){\n        subscribe.forEach(item => {\n            const {name, path, extraData} = item;\n            if(name && path)\n                state[name] = objectPath.get(store, path);\n            if(name && extraData)\n                state[`${name}ExtraData`] = objectPath.get(store, extraData);\n        })\n    }\n    return state;\n};\nconst mapDispatchToProps = (dispatch) =>\n    bindActionCreators( { setDateStore: setDateStore, }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, notification as antNotification, Spin, Tooltip, Typography, Upload } from \"antd\";\nimport { LoadingOutlined, CloudUploadOutlined } from \"@ant-design/icons\";\nimport { noop } from \"../utils/baseUtils\";\n\n\nconst defaultProps = {\n    requestUploadFile: noop,\n    dataObject: {},\n    onCompletedUpload: noop,\n    onFailedUpload: noop,\n    uploadProps: {},\n    toolTipProps: {},\n    buttonProps: {}\n}\n\n/** Компонент загрузки файлов */\nconst UploadFile = props => {\n\n    const {\n        requestUploadFile,\n        dataObject,\n        onCompletedUpload,\n        onFailedUpload,\n        uploadProps,\n        toolTipProps,\n        buttonProps,\n    } = props\n\n    const _uploadFile = (file) => {\n        // console.log('beforeUpload dataObject => ', dataObject);\n        notification(file, 'loading');\n        if (requestUploadFile) {\n            requestUploadFile({ file: file, dataObject })\n                .then((response) => {\n                    notification(file, 'success');\n                })\n                .catch(() => {\n                    notification(file, 'error');\n                });\n        }\n        return false;\n    };\n    const notification = (file, type) => {\n        const notifProps = {\n            key: file.uid,\n            duration: type === 'loading' ? 0 : 5,\n            icon: type === 'loading'\n                ? <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n                : null,\n            message: <span>Загрузка файла: <Typography.Text code>{file.name}</Typography.Text></span>\n        };\n        switch (type) {\n            case 'loading':\n                antNotification.info(notifProps);\n                break;\n            case 'success':\n                antNotification.success(notifProps);\n                onCompletedUpload(file);\n                props.onChange(file);\n                break;\n            case 'error':\n                antNotification.error(notifProps);\n                onFailedUpload(file);\n                break;\n            case 'close':\n                antNotification.close(file.uid);\n                break;\n            default:\n                break;\n        }\n    };\n    const defaultUploadProps = {\n        multiple: true,\n        showUploadList: false,\n        beforeUpload: _uploadFile\n    };\n\n    return (\n        <Upload {...defaultUploadProps} {...uploadProps}>\n            <Tooltip {...toolTipProps}>\n                <Button\n                    icon={<CloudUploadOutlined />}\n                    {...buttonProps}\n                >{buttonProps && buttonProps.label}</Button>\n            </Tooltip>\n        </Upload>\n    );\n};\n\nUploadFile.propTypes = {\n    /** Функция запроса для отправки файла с данным на сервер */\n    requestUploadFile: PropTypes.func.isRequired,\n\n    /** Данные, прикрепляемые к файлу */\n    dataObject: PropTypes.object,\n\n    /** Функция, вызываемая при удачной загрузке файла */\n    onCompletedUpload: PropTypes.func,\n\n    /** Функция, вызываемая при НЕ удачной загрузке файла */\n    onFailedUpload: PropTypes.func,\n\n    /** Ant Props для [Upload](https://ant.design/components/upload/) компонента */\n    uploadProps: PropTypes.object,\n\n    /** Ant Props для [Tooltip](https://ant.design/components/tooltip/) компонента */\n    toolTipProps: PropTypes.object,\n\n    /** Ant Props для [Button](https://ant.design/components/button/) компонента */\n    buttonProps: PropTypes.object,\n};\n\nUploadFile.defaultProps = defaultProps\n\nexport default UploadFile;\n","import React from \"react\";\nimport {\n    DatePicker as RtDatePicker,\n    TimePicker as RtTimePicker,\n    TypographyDate,\n    Button as RtButton,\n    Custom,\n    FormHeader,\n    FormBody,\n    FormFooter,\n    TabPane as RtTabPane,\n    withStore\n} from \"./Base\";\nimport {\n    Form as AntForm,\n    Typography as AntTypography,\n    Radio as AntRadio,\n    Divider as AntDivider,\n    Checkbox as AntCheckbox,\n    Input as AntInput,\n    InputNumber as AntInputNumber,\n    Switch as AntSwitch,\n    Space as AntSpace,\n    Row as AntRow,\n    Col as AntCol,\n    Tabs as AntTabs,\n    List as AntList,\n    Transfer as AntTransfer,\n} from \"antd\";\nimport RtForm from \"./Form/Form\";\nimport RtLayout from \"./Layout/Layout\";\nimport RtSwitcher from './Switcher/Switcher';\nimport RtTable from \"./Table/ReactBaseTable/ConfigLoader\";\nimport AntTable from \"./Table/AntTable/ConfigLoader\";\nimport RtSelect from \"./Select/Select\";\nimport RtTreeSelect from './TreeSelect/TreeSelect'\nimport RtModal from \"./Modal/Modal\";\nimport RtUploadFile from \"./UploadFile/UploadFile\";\nimport { getObjectExcludedProps } from \"./utils/baseUtils\";\n\n/**\n * Renders\n */\nexport const renderClassic = (Component) => (props) => {\n    return (<Component {...props}>{props.children}</Component>)\n}\n\nexport const renderClassicWithLabel = (Component) => (props) => {\n    return (<Component {...props}>{props.label || props.value || props.children}</Component>)\n}\n\nconst renderClassicWithComponentType = (Component, componentType) => (props) => {\n    return renderClassic(Component)({...props, componentType});\n}\n\nexport const renderClassicByName = (componentName) => (props) => {\n    if(classic[componentName]) {\n        // console.log(\"renderClassicByName => \", props);\n        return renderClassic(classic[componentName])(props)\n    } else {\n        console.log(\"NO renderClassicByName => \", componentName);\n        return null;\n    }\n}\nexport const renderDeclarativeByName = (componentName) => (props) => (children) => {\n    if(classic[componentName]) {\n        // console.log(\"renderDeclarativeByName => \", props);\n        return renderDeclarative(classic[componentName])(props)(children)\n    } else {\n        console.log(\"NO renderDeclarativeByName => \", componentName);\n        return null;\n    }\n}\n\nexport const renderDeclarative = (Component) => (props) => (children) => {\n    // console.log(\"renderDeclarative => \", props);\n    return (<Component {...props}>{children}</Component>)\n}\n\nconst renderFormItemComponent = (Component) => (props) => {\n    const componentProps = getObjectExcludedProps(props, ['itemProps']);\n    return renderDeclarative(AntForm.Item)\n        ({...props.itemProps, noStyle: !(props.itemProps && props.itemProps.label)})\n        (renderClassic(Component)(componentProps))\n}\n\n\n/** */\nconst ComponentClassic = (Component) => (props) => {\n    // console.log(\"ComponentClassic => \", Component)\n    const StoreComponent = withStore(Component, props.itemProps);\n    return renderFormItemComponent(StoreComponent)(props);\n}\nconst ComponentClassicWithLabel = (Component) => (props) => {\n    const StoreComponent = withStore(Component, props.itemProps);\n    return renderFormItemComponent(renderClassicWithLabel(StoreComponent))(props);\n}\nconst ComponentClassicWithPlaceholder = (Component, placeholder) => (props) => {\n    const StoreComponent = withStore(Component, props.itemProps);\n    const _placeholder = (props && props.placeholder) ? props.placeholder : placeholder;\n    return renderFormItemComponent(StoreComponent)({...props, placeholder: _placeholder});\n}\nconst ComponentClassicWithOutStore = (Component) => (props) => {\n    // console.log(\"ComponentClassicWithOutStore => \", Component)\n    return renderFormItemComponent(Component)(props);\n}\n\nconst TableWrapper = (props) => {\n    const {type, ...restProps} = props\n    if(type)\n        return type === 'rt' ? <RtTable {...restProps} /> : <AntTable {...restProps} />\n    else\n        return props.infinityMode ? <RtTable {...props} /> : <AntTable {...props} />\n}\n\nconst classicComponents = {\n    Form:       RtForm,\n    FormHeader: FormHeader,\n    FormBody:   FormBody,\n    FormFooter: FormFooter,\n    FormList:   AntForm.List,\n    Space:      renderFormItemComponent(AntSpace),\n    Row:        renderFormItemComponent(AntRow),\n    Col:        renderFormItemComponent(AntCol),\n    Layout:     renderFormItemComponent(RtLayout),\n    Tabs:       AntTabs,\n    TabPane:    RtTabPane,\n    List:       renderFormItemComponent(AntList),\n}\nconst withComponentType = {\n    Button:     ComponentClassicWithOutStore(RtButton),\n    Title:      ComponentClassicWithLabel(AntTypography.Title),\n    Text:       ComponentClassicWithLabel(AntTypography.Text),\n    Divider:    ComponentClassicWithLabel(AntDivider),\n    Checkbox:   ComponentClassicWithLabel(AntCheckbox),\n    DatePicker: ComponentClassicWithPlaceholder(RtDatePicker, 'Выберите дату'),\n    TimePicker: ComponentClassicWithPlaceholder(RtTimePicker, 'Выберите время'),\n    DateText:   ComponentClassic(TypographyDate),\n    Input:      ComponentClassicWithPlaceholder(AntInput, 'Введите значение'),\n    Search:     ComponentClassicWithPlaceholder(AntInput.Search, 'Поиск'),\n    TextArea:   ComponentClassicWithPlaceholder(AntInput.TextArea, 'Введите текст'),\n    Password:   ComponentClassicWithPlaceholder(AntInput.Password, 'Введите пароль'),\n    InputNumber:ComponentClassicWithPlaceholder(AntInputNumber, 'Введите значение'),\n    Switch:     ComponentClassic(AntSwitch),\n    RadioGroup: ComponentClassic(AntRadio.Group),\n    Select:     ComponentClassicWithPlaceholder(RtSelect, 'Выберите значение'),\n    TreeSelect: ComponentClassicWithPlaceholder(RtTreeSelect, 'Выберите значение'),\n    Table:      ComponentClassicWithOutStore(TableWrapper),\n    RtTable:    ComponentClassicWithOutStore(RtTable),\n    AntTable:   ComponentClassicWithOutStore(AntTable),\n    Modal:      ComponentClassicWithOutStore(RtModal),\n    Custom:     ComponentClassic(Custom),\n    Switcher:   ComponentClassic(RtSwitcher),\n    UploadFile: ComponentClassic(RtUploadFile),\n    Transfer:   ComponentClassic(AntTransfer),\n}\n\nexport const classic = {\n    ...classicComponents,\n    ...Object.keys(withComponentType)\n        .reduce((obj, key) =>\n            ({ ...obj, [key]: renderClassicWithComponentType(withComponentType[key], key) }), {})\n}\n\nexport const declarative =\n    Object.keys(classic)\n    .reduce((obj, key) =>\n        ({ ...obj, [key]: renderDeclarative(classic[key]) }), {});\n","import {Spin} from 'antd';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport React from 'react';\n\nexport const empty = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<span>Нет данных</span>{' '}\n\t</div>\n);\n\nexport const overlay = (\n\t<div className={'BaseTable__overlay'}>\n\t\t{' '}\n\t\t<Spin\n\t\t\ttip='Загрузка...'\n\t\t\tindicator={<LoadingOutlined style={{fontSize: 24}} spin />}\n\t\t/>{' '}\n\t</div>\n);\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport { flatten, getTableRowKeys, getTableRowObjects } from \"../../../utils/baseUtils\";\n\nconst SelectionHead = (props) => {\n\tconst {column, container} = props;\n\tconst {rowKey, onSelectAll, selectedRowKeys, selectAll} = column;\n\n\tconst _handleChange = (e) => {\n\t\tconst rowKeys = flatten(getTableRowKeys(container.props.data, column.rowKey));\n\t\tconst rowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => rowKeys.includes(item[rowKey]));\n\t\tconst totalLength = rowKeys.length;\n\t\tconst selectLength = selectedRowKeys.length;\n\t\tconst checked = !(totalLength === selectLength);\n\n\t\t// const newRowKeys = container.props.data.map((item) => { return item[column.rowKey] });\n\t\tonSelectAll({selected: checked, rowKeys: rowKeys, rowObjects: rowObjects});\n\t};\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={selectAll === null}\n\t\t\tonChange={_handleChange}\n\t\t\tchecked={selectAll}\n\t\t/>\n\t);\n};\n\nexport default SelectionHead;\n","import React from 'react';\nimport {Checkbox} from 'antd';\nimport {\n\tflatten,\n\tgetTableRowKeys,\n\tfindNodeByRowKey, getTableRowObjects\n} from \"../../../utils/baseUtils\";\n\nconst getRowChildren = (data, rowKey) =>\n\tdata.map((item) => {\n\t\tif (item.children && item.children.length) {\n\t\t\treturn [item[rowKey], getRowChildren(item.children, rowKey)];\n\t\t}\n\t\treturn item[rowKey];\n\t});\n\nconst findBrothers = (data, selfItem, rowKey, parentKey, rowKeys = null) => {\n\tlet arr = [];\n\tdata.forEach((item) => {\n\t\tif (\n\t\t\titem[parentKey] &&\n\t\t\titem[parentKey] === selfItem[parentKey] &&\n\t\t\titem[rowKey] !== selfItem[rowKey]\n\t\t) {\n\t\t\tif (rowKeys !== null) {\n\t\t\t\tif (rowKeys.includes(item[rowKey])) {\n\t\t\t\t\tarr.push(item[rowKey]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tarr.push(item[rowKey]);\n\t\t\t}\n\t\t} else if (item.children && item.children.length) {\n\t\t\tarr.push(\n\t\t\t\tfindBrothers(\n\t\t\t\t\titem.children,\n\t\t\t\t\tselfItem,\n\t\t\t\t\trowKey,\n\t\t\t\t\tparentKey,\n\t\t\t\t\trowKeys\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\treturn arr;\n};\n\nexport const parentAnalysis = ({\n\trowData,\n\trowKey,\n\tparentKey,\n\tchecked,\n\tnodeAssociated,\n\ttreeData,\n\tselectedRowKeys,\n\tindeterminateRowKeys,\n}) => {\n\tlet _selectedRowKeys = [...selectedRowKeys];\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\tlet currentRowData = rowData;\n\tlet parentExist = !!currentRowData[parentKey];\n\tlet lastTypeSelect = checked ? 'checked' : 'square';\n\tlet typeSelect = '';\n\tlet nextSquare = false;\n\n\t/** Пока есть родитель */\n\twhile (parentExist && nodeAssociated) {\n\t\tconst indeterminateBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_indeterminateRowKeys\n\t\t\t)\n\t\t);\n\t\tconst selectedBrothers = flatten(\n\t\t\tfindBrothers(\n\t\t\t\ttreeData,\n\t\t\t\tcurrentRowData,\n\t\t\t\trowKey,\n\t\t\t\tparentKey,\n\t\t\t\t_selectedRowKeys\n\t\t\t)\n\t\t);\n\t\tconst allBrothers = flatten(\n\t\t\tfindBrothers(treeData, currentRowData, rowKey, parentKey)\n\t\t);\n\n\t\tif (checked) {\n\t\t\tif (\n\t\t\t\tlastTypeSelect === 'checked' &&\n\t\t\t\tselectedBrothers.length === allBrothers.length\n\t\t\t)\n\t\t\t\ttypeSelect = 'checked';\n\t\t\telse typeSelect = 'square';\n\t\t} else {\n\t\t\tif (\n\t\t\t\t!checked &&\n\t\t\t\t!nextSquare &&\n\t\t\t\t(selectedBrothers.length || indeterminateBrothers.length)\n\t\t\t)\n\t\t\t\tnextSquare = true;\n\t\t\tif (nextSquare) typeSelect = 'square';\n\t\t\telse typeSelect = 'none';\n\t\t}\n\n\t\t// console.log(\"allBrothers \", allBrothers);\n\t\t// console.log(\"findParentById \", treeData,\n\t\t//     rowKey,\n\t\t//     parentKey,\n\t\t//     currentRowData[parentKey]);\n\t\t//\n\t\t// console.log(\"findNodeByRowKey \", findNodeByRowKey(treeData, rowKey, currentRowData[parentKey]));\n\n\t\t// Найти родителя\n\t\tcurrentRowData = findNodeByRowKey(\n\t\t\ttreeData,\n\t\t\trowKey,\n\t\t\tcurrentRowData[parentKey]\n\t\t);\n\n\t\tif (typeSelect === 'checked') {\n\t\t\t// Выделить галкой\n\t\t\t// console.log(\"checked\");\n\t\t\tlastTypeSelect = 'checked';\n\t\t\tif (!_selectedRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_selectedRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _indeterminateRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _indeterminateRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'square') {\n\t\t\t// Выдлеить квадратом\n\t\t\t// console.log(\"square: \");\n\t\t\tlastTypeSelect = 'square';\n\t\t\tif (!_indeterminateRowKeys.includes(currentRowData[rowKey]))\n\t\t\t\t_indeterminateRowKeys.push(currentRowData[rowKey]);\n\t\t\tconst index = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (index > -1) _selectedRowKeys.splice(index, 1);\n\t\t} else if (typeSelect === 'none') {\n\t\t\t// Снять выделение\n\t\t\t// console.log(\"none: \");\n\t\t\tlastTypeSelect = 'none';\n\t\t\tconst indexS = _selectedRowKeys.indexOf(currentRowData[rowKey]);\n\t\t\tif (indexS > -1) _selectedRowKeys.splice(indexS, 1);\n\t\t\tconst indexI = _indeterminateRowKeys.indexOf(\n\t\t\t\tcurrentRowData[rowKey]\n\t\t\t);\n\t\t\tif (indexI > -1) _indeterminateRowKeys.splice(indexI, 1);\n\t\t}\n\n\t\tparentExist = !!currentRowData[parentKey];\n\t\t// parentExist = проверка наличия след родителя\n\t}\n\n\treturn [_selectedRowKeys, _indeterminateRowKeys];\n};\n\nconst SelectionCell = (props) => {\n\tconst _handleChange = (checked) => {\n\t\tconst {rowData, rowIndex, column, container} = props;\n\t\tconst {\n\t\t\tonChange,\n\t\t\tselectedRowKeys,\n\t\t\tindeterminateRowKeys,\n\t\t\trowKey,\n\t\t\tparentKey,\n\t\t\tnodeAssociated,\n\t\t} = column;\n\n\t\t// const rowKeys = flatten(getTableRowKeys([rowData], column.rowKey));\n\t\t// const totalLength = container.props.data.length;\n\t\t// const checked = e.target.checked;\n\t\t// const currentRowKey = {[rowKey]: rowData[rowKey], checked};\n\t\t// console.log(\"_handleChange: \", selectedRowKeys);\n\n\t\tlet _selectedRowKeys = [...selectedRowKeys];\n\t\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\n\n\t\t/** Обработка себя, поиск детей, выделение / снятие их */\n\t\tlet rowChildren = [];\n\t\tif (checked) {\n\t\t\tif (rowData.children && nodeAssociated)\n\t\t\t\trowChildren = flatten(getRowChildren(rowData.children, rowKey));\n\n\t\t\t_selectedRowKeys = _selectedRowKeys\n\t\t\t\t.concat([rowData[rowKey]])\n\t\t\t\t.concat(rowChildren);\n\t\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t} else {\n\t\t\tif (rowData.children && nodeAssociated)\n\t\t\t\trowChildren = flatten(\n\t\t\t\t\tgetRowChildren(rowData.children, rowKey, false)\n\t\t\t\t);\n\n\t\t\t_selectedRowKeys = _selectedRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\n\t\t\t\t(element) =>\n\t\t\t\t\telement !== rowData[rowKey] &&\n\t\t\t\t\t!rowChildren.includes(element)\n\t\t\t);\n\t\t}\n\n\t\t[_selectedRowKeys, _indeterminateRowKeys] = parentAnalysis({\n\t\t\trowData,\n\t\t\trowKey,\n\t\t\tparentKey,\n\t\t\tchecked,\n\t\t\tnodeAssociated,\n\t\t\ttreeData: container.props.data,\n\t\t\tselectedRowKeys: _selectedRowKeys,\n\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t});\n\n\t\tconst keys = [...new Set(_selectedRowKeys)];\n\t\tconst _selectedRowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => keys.includes(item[rowKey]));\n\t\t//return [...new Set(_disabledElements)]\n\t\t// onChange({ selected: checked, totalLength, rowData, rowIndex });\n\n\t\t/** Выясняем новое состояние галочки \"Выделить все\" */\n\t\tlet selectAll;\n\t\tconst selectLength = _selectedRowKeys.length;\n\t\tconst totalLength = flatten(\n\t\t\tgetTableRowKeys(container.props.data, column.rowKey)\n\t\t).length;\n\n\t\tif (selectLength === 0) selectAll = false;\n\t\telse if (totalLength === selectLength) selectAll = true;\n\t\telse if (totalLength !== selectLength) selectAll = null;\n\n\n\n\t\tonChange({\n\t\t\tselected: checked,\n\t\t\t_selectedRow: {\n\t\t\t\trowData: {...rowData},\n\t\t\t\trowIndex: rowIndex,\n\t\t\t\trowKey: rowKey,\n\t\t\t},\n\t\t\t_selectAll: selectAll,\n\t\t\t_selectedRowKeys: keys, //[...new Set(_selectedRowKeys)],\n\t\t\t_selectedRowObjects: _selectedRowObjects,\n\t\t\t_indeterminateRowKeys: [...new Set(_indeterminateRowKeys)],\n\t\t});\n\n\t\t// let uniqIds = {};\n\t\t// onChange({selected: checked, rowKeys: rowKeys.filter(obj => !uniqIds[obj[rowKey]] && (uniqIds[obj[rowKey]] = true)) });\n\t};\n\n\tconst {rowData, column} = props;\n\tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\n\tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\n\tconst checked = selectedRowKeys.includes(rowData[rowKey]);\n\n\treturn (\n\t\t<Checkbox\n\t\t\tindeterminate={det}\n\t\t\tonChange={(e) => _handleChange(e.target.checked)}\n\t\t\tchecked={checked}\n\t\t/>\n\t);\n};\n\nexport default SelectionCell;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport {DatePicker} from 'antd';\nimport locale from 'antd/es/date-picker/locale/ru_RU';\nimport {noop} from '../../utils/baseUtils';\nimport {rtPrefix} from '../../utils/variables';\nimport {\n\tgetMomentWithOffset,\n\tgetMomentWithOffsetTruncateDay,\n\tgetMomentFromStringByFormat,\n} from '../../utils/datesUtils';\n\nconst DateRange = (props) => {\n\t/** Состояние первоначалной настройки компонента */\n\tconst [mounted, setMounted] = useState(false);\n\tconst [startValue, setStartValue] = useState(undefined);\n\tconst [endValue, setEndValue] = useState(undefined);\n\n\tconst {\n        className,\n\t\tnameStart,\n\t\tnameEnd,\n\t\tdateFormat,\n\t\tonChange,\n        size,\n\t\ttitle,\n\t\tvalueStart,\n\t\tvalueEnd,\n\t\tshowTime,\n\t} = props;\n\n\tuseEffect(() => {\n\t\tif (!mounted) {\n\t\t\tif (props.defaultValueStart) {\n                // console.log(\"DateRange mounted :\", nameStart, props.defaultValueStart);\n                _onChange(\n\t\t\t\t\tnameStart,\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueStart,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tsetStartValue(\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueStart,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (props.defaultValueEnd) {\n\t\t\t\t_onChange(\n\t\t\t\t\tnameEnd,\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueEnd,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tsetEndValue(\n\t\t\t\t\tgetMomentFromStringByFormat(\n\t\t\t\t\t\tprops.defaultValueEnd,\n\t\t\t\t\t\tdateFormat\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tsetMounted(true);\n\t\t}\n\t}, [mounted]);\n\n\tuseEffect(() => {\n\t\tif (valueStart) {\n\t\t\tsetStartValue(moment(valueStart));\n\t\t\t// console.log('useEffect -> valueStart', valueStart);\n\t\t} else if (!props.defaultValueStart) setStartValue(null);\n\t}, [valueStart]);\n\tuseEffect(() => {\n\t\tif (valueEnd) {\n\t\t\tsetEndValue(moment(valueEnd));\n\t\t\t// console.log('useEffect -> valueEnd', valueEnd);\n\t\t} else if (!props.defaultValueEnd) setEndValue(null);\n\t}, [valueEnd]);\n\n\tconst disabledStartDate = (startValue) => {\n\t\tif (!startValue || !endValue) {\n\t\t\treturn false;\n\t\t}\n\t\treturn startValue.valueOf() > endValue.valueOf();\n\t};\n\n\tconst disabledEndDate = (endValue) => {\n\t\tif (!endValue || !startValue) {\n\t\t\treturn false;\n\t\t}\n\t\treturn endValue.valueOf() <= startValue.valueOf();\n\t};\n\n\tconst onStartChange = (date) => {\n\t\tsetStartValue(date);\n\t\t_onChange(nameStart, date);\n\t};\n\n\tconst onEndChange = (date) => {\n\t\tsetEndValue(date);\n\t\t_onChange(nameEnd, date);\n\t};\n\n\tconst _onChange = (name, value) => {\n\t\tif (value)\n\t\t\tif(showTime)\n\t\t\t\tonChange(name, getMomentWithOffset(value));\n\t\t\telse\n\t\t\t\tonChange(name, getMomentWithOffsetTruncateDay(value));\n\n\t\telse onChange(name, value);\n\t};\n\n\treturn (\n\t\t<div className={`${className} ${rtPrefix}-date-range`}>\n\t\t\t<div>\n                {title ? <div className={'title'}>{title}</div> : null}\n\t\t\t\t<span className={'subtitleStart'}>c</span>\n\t\t\t\t<DatePicker\n\t\t\t\t\tlocale={locale}\n\t\t\t\t\t// defaultValue={ checkDefValue(props.defaultValueStart) }\n\t\t\t\t\tsize={size}\n\t\t\t\t\tstyle={{width: !!showTime ? '160px' : '135px'}}\n\t\t\t\t\tdisabledDate={disabledStartDate}\n\t\t\t\t\tonChange={onStartChange}\n\t\t\t\t\tformat={dateFormat}\n\t\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\t\tvalue={startValue}\n\t\t\t\t\tshowTime={showTime}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span className={'subtitleEnd'}>по</span>\n\t\t\t\t<DatePicker\n\t\t\t\t\tlocale={locale}\n\t\t\t\t\t// defaultValue={ checkDefValue(props.defaultValueEnd) }\n\t\t\t\t\tsize={size}\n\t\t\t\t\tstyle={{width: showTime ? '160px' : '135px'}}\n\t\t\t\t\tdisabledDate={disabledEndDate}\n\t\t\t\t\tonChange={onEndChange}\n\t\t\t\t\tformat={dateFormat}\n\t\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\t\tvalue={endValue}\n\t\t\t\t\tshowTime={showTime}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nDateRange.propTypes = {\n\t/** Формат отображения даты (не влияет на формат в onChange) */\n\tdateFormat: PropTypes.string,\n\n\t/** Значение по умолчанию для первого пикера */\n\t// defaultValueStart: PropTypes.string,\n\n\t/** Значение по умолчанию для второго пикера */\n\t// defaultValueEnd: PropTypes.string,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Наименование параметра для первого пикера */\n\tnameStart: PropTypes.string,\n\n\t/** Наименование параметра для второго пикера */\n\tnameEnd: PropTypes.string,\n\n\t/** Событие при изменении любого из пикеров */\n\tonChange: PropTypes.func,\n\n    /** Размер пикера ['small', 'middle', 'large'] */\n    size: PropTypes.oneOf(['small', 'middle', 'large']),\n\n\t/** Заголовок */\n\ttitle: PropTypes.string,\n\n\t/** Значение даты первого пикера (используется для управления датой из родительного компонента) */\n\t// valueStart: PropTypes.string,\n\n\t/** Значение даты второго пикера (используется для управления датой из родительного компонента) */\n\t// valueEnd: PropTypes.string,\n};\n\nDateRange.defaultProps = {\n    className: '',\n\tnameStart: 'dateStart',\n\tnameEnd: 'dateEnd',\n\tdateFormat: 'DD.MM.YYYY',\n\tonChange: noop,\n    size: 'middle',\n    // title: 'Период',\n};\n\nexport default DateRange;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {DatePicker} from 'antd';\nimport moment from 'moment';\nimport {noop} from '../../utils/baseUtils';\nimport {\n\tgetMomentFromStringByFormat,\n\tgetMomentWithOffsetTruncateDay,\n} from '../../utils/datesUtils';\n\nconst SingleDate = (props) => {\n\t/** Состояние первоначалной настройки компонента */\n\tconst [mounted, setMounted] = useState(false);\n\tconst [_value, setValue] = useState(null);\n\n\tconst {dateFormat, defaultValue, name, onChange, title, value, className} = props;\n\n\tuseEffect(() => {\n\t\tif (!mounted) {\n\t\t\t// console.log(\"DateRange mounted :\", nameFrom, props.defaultValueFrom);\n\t\t\tif (defaultValue) {\n\t\t\t\t_onChange(\n\t\t\t\t\tname,\n\t\t\t\t\tgetMomentFromStringByFormat(defaultValue, dateFormat)\n\t\t\t\t);\n\t\t\t\tsetValue(getMomentFromStringByFormat(defaultValue, dateFormat));\n\t\t\t}\n\t\t\tsetMounted(true);\n\t\t}\n\t}, [mounted]);\n\n\tuseEffect(() => {\n\t\tif (value) {\n\t\t\tsetValue(moment(value));\n\t\t} else if (!defaultValue) setValue(null);\n\t}, [value]);\n\n\tconst _onChangePicker = (date) => {\n\t\tsetValue(date);\n\t\t_onChange(name, date);\n\t};\n\n\tconst _onChange = (name, value) => {\n\t\tif (value) onChange(name, getMomentWithOffsetTruncateDay(value));\n\t\telse onChange(name, value);\n\t};\n\n\treturn (\n\t\t<div className={`single-date-container ${className}`}>\n\t\t\t<div className={'title'}>{title}</div>\n\t\t\t<DatePicker\n\t\t\t\tsize={'small'}\n\t\t\t\tstyle={{width: '135px'}}\n\t\t\t\tonChange={_onChangePicker}\n\t\t\t\tformat={dateFormat}\n\t\t\t\tplaceholder={'Выберите дату'}\n\t\t\t\tvalue={_value}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nSingleDate.propTypes = {\n\t/** Формат отображения даты (не влияет на формат в onChange) */\n\tdateFormat: PropTypes.string,\n\n\t/** Значение по умолчанию */\n\tdefaultValue: PropTypes.string,\n\n\t/** Наименование параметра */\n\tname: PropTypes.string,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Событие при изменении пикера */\n\tonChange: PropTypes.func,\n\n\t/** Заголовок */\n\ttitle: PropTypes.string,\n\n\t/** Значение даты */\n\tvalue: PropTypes.string,\n};\n\nSingleDate.defaultProps = {\n\tname: 'date',\n\tdateFormat: 'DD.MM.YYYY',\n\tonChange: noop,\n\ttitle: 'Дата',\n};\n\nexport default SingleDate;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Tooltip } from \"antd\";\nimport { noop } from \"../../utils/baseUtils\";\nimport DateRange from \"../DateRange/DateRange\";\nimport SingleDate from \"../SingleDate/SingleDate\";\nimport Select from \"../Select/Select\";\nimport { rtPrefix } from \"../../utils/variables\";\n\nconst FilterPanel = (props) => {\n  /**\n   * Период с, по (день / месяц / год)\n   * Множественный выбор (дерево с галочками с поиском) (ajax / const)\n   * Множественный выбор (список с поиском) (ajax / const)\n   * Единственный выбор (список с поиском) (ajax / const)\n   */\n\n  const [filter, setFilter] = useState(props.defaultFilter);\n  // const [multiSelectObjects, setMultiSelectObjects] = useState([]);\n\n  const {\n    applyFilterTooltip,\n    applyFilterSize,\n    applyFilterRender,\n    borderStyle,\n    onChangeFilter,\n    onApplyFilter,\n    configFilter,\n    resetFilterRender,\n    resetFilterTooltip,\n    resetFilterSize\n  } = props;\n\n  useEffect(() => {\n    setFilter(props.defaultFilter);\n  }, []);\n\n  const _onChangeData = (name, value) => {\n    // console.log(\"FilterPanel -> onChangeData\", name, value);\n    let _filter = { ...filter };\n    if (value === null) {\n      delete _filter[name];\n    } else {\n      _filter = { ..._filter, ...{ [name]: value } };\n    }\n    // console.log(\"onChangeData:\", _filter);\n    setFilter(_filter);\n    onChangeFilter(_filter);\n  };\n\n  const _applyFilter = () => {\n    // console.log(\"_applyFilter:\", filter);\n    onApplyFilter(filter);\n  };\n  const _resetFilter = () => {\n    // console.log(\"_resetFilter:\", props.defaultFilter);\n    setFilter(props.defaultFilter);\n    onChangeFilter(props.defaultFilter);\n    onApplyFilter(props.defaultFilter);\n    // setMultiSelectObjects([]);\n  };\n\n  // const _onChangeObjects = (name, value) => {\n  // \tlet _multiSelectObjects = {...multiSelectObjects};\n  // \tif (value === null) {\n  // \t\tdelete _multiSelectObjects[name];\n  // \t} else {\n  // \t\t_multiSelectObjects = {..._multiSelectObjects, ...{[name]: value}};\n  // \t}\n  // \t// console.log(\"onChangeData:\", _filter);\n  // \tsetMultiSelectObjects(_multiSelectObjects);\n  // };\n  const getPanelCls = () => {\n    let cls = [`${rtPrefix}-filter-panel`];\n    cls.push(`border-${borderStyle}`);\n    if (configFilter.findIndex((item) => !!item.title) === -1)\n      cls.push(`${rtPrefix}-filter-panel-no-title`);\n    return cls.join(\" \");\n  };\n\n  return (\n    <React.Fragment>\n      {configFilter && configFilter.length ? (\n        <div className={getPanelCls()}>\n          {configFilter.map((item, index) => {\n            // console.log(\"item.defaultRows\", item.defaultRows);\n            let cls = [`${rtPrefix}-filter-panel-item`];\n            item.className && cls.push(item.className);\n            switch (item.componentType) {\n              case \"DateRange\":\n                return (\n                  <DateRange\n                    key={index}\n                    {...item}\n                    className={cls.join(\" \")}\n                    defaultValueStart={\n                      filter[item.nameStart]\n                        ? filter[item.nameStart]\n                        : null\n                    }\n                    defaultValueEnd={\n                      filter[item.nameEnd]\n                        ? filter[item.nameEnd]\n                        : null\n                    }\n                    onChange={_onChangeData}\n                    valueStart={filter[item.nameStart]}\n                    valueEnd={filter[item.nameEnd]}\n                  />\n                );\n              case \"SingleDate\":\n                return (\n                  <SingleDate\n                    key={index}\n                    {...item}\n                    className={cls.join(\" \")}\n                    dateFormat={\n                      item.dateFormat\n                        ? item.dateFormat\n                        : undefined\n                    }\n                    defaultValue={\n                      filter[item.name]\n                        ? filter[item.name]\n                        : null\n                    }\n                    onChange={_onChangeData}\n                    value={filter[item.name]}\n                  />\n                );\n              case \"MultiSelect\":\n              case \"SingleSelect\":\n                return (\n                  <Select\n                    key={index}\n                    {...item}\n                    type={item.componentType}\n                    defaultSelectedRowKeys={\n                      filter[item.name]\n                        ? filter[item.name]\n                        : null\n                    }\n                    selectedRowKeys={filter[item.name] ? filter[item.name] : []}\n                    className={cls.join(\" \")}\n                    onChangeKeys={_onChangeData}\n                    defaultValue={\n                      filter[item.name]\n                        ? filter[item.name]\n                        : null\n                    }\n                    value={filter[item.name]}\n                  />\n                );\n              case \"Custom\":\n                return (\n                  <React.Fragment key={index}>\n                    {\n                      item.render({\n                        onChange: _onChangeData,\n                        defaultValue: filter[item.name]\n                          ? filter[item.name]\n                          : null,\n                        value: filter[item.name]\n                      })\n                    }\n                  </React.Fragment>);\n              default:\n                return null;\n            }\n          })}\n          <Tooltip title={applyFilterTooltip}>\n            <Button\n              type='primary'\n              size={applyFilterSize}\n              style={{ marginLeft: \"auto\" }}\n              onClick={_applyFilter}\n            >\n              {applyFilterRender}\n            </Button>\n          </Tooltip>\n          <Tooltip title={resetFilterTooltip}>\n            <Button\n              size={resetFilterSize}\n              style={{ marginLeft: \"10px\" }}\n              onClick={_resetFilter}\n            >\n              {resetFilterRender}\n            </Button>\n          </Tooltip>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\nFilterPanel.propTypes = {\n\n  /** Тест Tooltip для кнопки \"Применить фильтр\" */\n  applyFilterTooltip: PropTypes.string,\n\n  /** Размер кнопки \"Применить фильтр\" ['small', 'middle', 'large'] */\n  applyFilterSize: PropTypes.oneOf([\"small\", \"middle\", \"large\"]),\n\n  /** Строка / функция / элемент для отображения в кнопке \"Применить фильтр\" */\n  applyFilterRender: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.string\n  ]),\n\n  /** Тип бордера панели (по умолчанию 'none')\n   * ['all', 'none', 'top', 'left', 'bottom', 'right', 'top-bottom', 'left-right'] */\n  borderStyle: PropTypes.oneOf([\n    \"all\",\n    \"none\",\n    \"top\",\n    \"left\",\n    \"bottom\",\n    \"right\",\n    \"top-bottom\",\n    \"left-right\"\n  ]),\n\n  /** Объект фильтра по умолчанию */\n  defaultFilter: PropTypes.object,\n\n  /** Конфигурация панели фильтров */\n  configFilter: PropTypes.arrayOf(PropTypes.object),\n\n  /** Событие по кнопке выполнить фильтр */\n  onApplyFilter: PropTypes.func,\n\n  /** Событие по изменение объекта фильтра */\n  onChangeFilter: PropTypes.func,\n\n  /** Тест Tooltip для кнопки \"Сбросить фильтр\" */\n  resetFilterTooltip: PropTypes.string,\n\n  /** Размер кнопки \"Сбросить фильтр\" ['small', 'middle', 'large'] */\n  resetFilterSize: PropTypes.oneOf([\"small\", \"middle\", \"large\"]),\n\n  /** Строка / функция / элемент для отображения в кнопке \"Сбросить фильтр\" */\n  resetFilterRender: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.string\n  ])\n};\n\nFilterPanel.defaultProps = {\n  applyFilterTooltip: \"Применить фильтр\",\n  applyFilterSize: \"middle\",\n  applyFilterRender: \"Применить\",\n  borderStyle: \"none\",\n  defaultFilter: {},\n  configFilter: [],\n  onApplyFilter: noop,\n  onChangeFilter: noop,\n  resetFilterTooltip: \"Сбросить фильтр\",\n  resetFilterSize: \"middle\",\n  resetFilterRender: \"Сбросить\"\n};\n\nexport default FilterPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {CloseCircleOutlined} from '@ant-design/icons';\nimport {rtPrefix} from '../../../utils/variables';\n\nconst SelectionList = (props) => {\n\tconst {selectedRowObjects, rowRender, onClickDropSelect} = props;\n\n\t// console.log(\"SelectionList typeof -> \", typeof(rowRender));\n\treturn (\n\t\t<div className={`${rtPrefix}-table-selected-rows`}>\n\t\t\t{selectedRowObjects && selectedRowObjects.length > 0 ? (\n\t\t\t\t<ul>\n\t\t\t\t\t{selectedRowObjects.map((item, index) => (\n\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t{/*{(typeof(rowRender) === 'string') ? <div>{item[rowRender]}</div> : rowRender }*/}\n\t\t\t\t\t\t\t{typeof rowRender === 'function' ? (\n\t\t\t\t\t\t\t\trowRender({rowData: item, rowIndex: index})\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>{item[rowRender]}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<div onClick={() => onClickDropSelect(item)}>\n\t\t\t\t\t\t\t\t<CloseCircleOutlined />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t) : (\n\t\t\t\t<div>Нет выбранных записей</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nSelectionList.propTypes = {\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { rowData, rowIndex }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n\t/** Список выделенных объектов */\n\tselectedRowObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Событие удаления элемента */\n\tonClickDropSelect: PropTypes.func.isRequired,\n};\n\nSelectionList.defaultProps = {};\n\nexport default SelectionList;\n","import React, {useRef, forwardRef, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {notification} from 'antd';\nimport SortOrder from 'react-base-table/lib/SortOrder';\nimport BaseTable, {AutoResizer, callOrReturn, Column} from 'react-base-table';\nimport {empty, overlay} from './defaultSettings';\nimport SelectionHead from '../Table/Selectable/SelectionHead';\nimport SelectionCell, {parentAnalysis} from '../Table/Selectable/SelectionCell';\nimport CommandPanel from '../CommandPanel/CommandPanel';\nimport FilterPanel from '../FilterPanel/FilterPanel';\nimport SelectionList from '../Table/SelectionList/SelectionList';\nimport {rtPrefix} from '../../utils/variables';\nimport {\n\tflatten,\n\tgenerateUUID,\n\tgetTableRowKeys,\n\tfindNodeByRowKey,\n\tnoop,\n\tgetTableRowObjects, notificationError\n} from \"../../utils/baseUtils\";\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../../redux/rtd.actions\";\nimport FormItems from \"../Form/FormItems\";\n\nconst Table = forwardRef((props, ref) => {\n\t/** Состояние первоначалной настройки компонента*/\n\tconst [mounted, setMounted] = useState(false);\n\t/** Наличие на сервере еще данных */\n\tconst [hasMore, setHasMore] = useState(true);\n\t/** Индикатор загрузки данных */\n\tconst [loading, setLoading] = useState(false);\n\n\t/** Indoor control */\n\tconst [_rows, _setRows] = useState([]);\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n\tconst [_searchValue, setSearchValue] = useState({});\n\tconst [_filter, setFilter] = useState(false);\n\tconst [_sortBy, setSortBy] = useState(false);\n\n\t/** Selectable States */\n\tconst [selectAll, setSelectAll] = useState(false);\n\n\t/** Tree States */\n\tconst [_indeterminateRowKeys, setIndeterminateRowKeys] = useState([]);\n    const [_expandedRowKeys, setExpandedRowKeys] = useState([]);\n\n    const [_totalCountRows, setTotalCountRows] = useState(0);\n\n    const [_footerShow, _setFooterShow] = useState(false);\n\n    const tableRef = useRef();\n\n\tconst {\n\t\t/** Def values */\n\t\tdefaultRows,\n\t\tdefaultSelectedRowKeys,\n\t\tdefaultSearchValue,\n\t\tdefaultFilter,\n\t\tdefaultSortBy,\n\n\t\t/** Outdoor control */\n\t\trows,\n\t\tsetRows,\n\t\tselectedRowKeys,\n\t\tsearchValue,\n\t\tfilter,\n\t\tsortBy,\n\n\t\t/** Required */\n\t\tcolumns,\n\t\ttype,\n\n\t\t/** Base Props */\n\t\tautoDeleteRows,\n\t\trowKey,\n\n\t\t/** View Props */\n\t\tempty,\n\t\tfixWidthColumn,\n\t\tfooterHeight,\n\t\tfooterShow,\n        footerTitles,\n\t\t// footerProps,\n\t\theaderHeight,\n\t\trowHeight,\n\t\tzebraStyle,\n\t\trowRenderer,\n\t\testimatedRowHeight,\n\n\t\t/** Load Data Props */\n\t\tloadThreshold,\n\t\tpageSize,\n\t\trequestLoadRows,\n        requestLoadCount,\n\t\tsearchParamName,\n\n\t\t/** Selectable Props */\n\t\tselectable,\n\n\t\t/** Tree Props */\n\t\tnodeAssociated,\n\t\texpandColumnKey,\n\t\texpandParentKey,\n\t\texpandLazyLoad,\n\t\texpandDefaultAll,\n\n\t\t/** Events */\n\t\tonRowClick,\n\t\tonRowDoubleClick,\n\t\tonRowExpand,\n\t\tonSelectedRowsChange,\n\t\tonExpandedRowsChange,\n\n\t\t/** SELECTED PANEL */\n\t\tshowSelection,\n\t\trowRenderShowSelection,\n\n\t\t/** REDUX PROPS */\n\t\tdispatchPath,\n\t\tsubscribe,\n\t} = props;\n\n\t// console.log('props.commandPanelProps => ', props.commandPanelProps);\n\tconst commandPanelProps = {\n\t\t...CommandPanel.defaultProps,\n\t\t...props.commandPanelProps,\n\t};\n\tconst filterPanelProps = {\n\t\t...FilterPanel.defaultProps,\n\t\t...props.filterPanelProps,\n\t};\n\n\tconst footerProps = {\n\t\t...Table.defaultProps.footerProps,\n\t\t...props.footerProps,\n\t};\n\n\tconst selectedDispatchPath = dispatchPath && `${dispatchPath}.selected`;\n\tconst rowsDispatchPath = dispatchPath && `${dispatchPath}.rows`;\n\n\n\tuseEffect(() => {\n        // console.log(\"Инициализация дефолтных значений \");\n        // console.log(\"Инициализация дефолтных значений defaultSelectedRowKeys > \", defaultSelectedRowKeys);\n\n\t\t// Инициализация дефолтных значений\n\t\t// _setRows(defaultRows);\n\t\t_setRowsHandler(defaultRows);\n\t\tsetSelectedRowKeys(defaultSelectedRowKeys);\n\t\tsetSearchValue(defaultSearchValue);\n\t\tsetFilter(defaultFilter);\n\t\tsetSortBy(defaultSortBy);\n\t\tsetSelectAll(\n\t\t\tdefaultRows.length > 0 &&\n\t\t\t\tdefaultRows.length === defaultSelectedRowKeys.length\n\t\t);\n\t\t// Определение нужно ли отображать подвал\n\t\t_setFooterShow(\n\t\t\t(footerProps.showElements.length ||\n\t\t\tfooterProps.leftCustomSideElement ||\n\t\t\tfooterProps.centerCustomSideElement ||\n\t\t\tfooterProps.rightCustomSideElement));\n\n\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t// Открытие всех нод\n\t\t\tif (expandDefaultAll)\n\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\tflatten(getTableRowKeys(defaultRows, rowKey))\n\t\t\t\t);\n\t\t\t// Установка квадратиков на нужных нодах\n\t\t\tif (defaultSelectedRowKeys && defaultSelectedRowKeys.length > 0) {\n\t\t\t\tlet flatRows = flatten(getTableRowKeys(defaultRows, rowKey));\n\t\t\t\tlet selectedRow = flatRows.filter((item) =>\n\t\t\t\t\tdefaultSelectedRowKeys.includes(item[rowKey])\n\t\t\t\t);\n\t\t\t\tlet _indeterminateRowKeys = [];\n\t\t\t\tselectedRow.forEach((item) => {\n\t\t\t\t\tconst [ss, ii] = parentAnalysis({\n\t\t\t\t\t\trowData: item,\n\t\t\t\t\t\trowKey,\n\t\t\t\t\t\tparentKey: expandParentKey,\n\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t\tnodeAssociated,\n\t\t\t\t\t\ttreeData: defaultRows,\n\t\t\t\t\t\tselectedRowKeys: defaultSelectedRowKeys,\n\t\t\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t\t\t\t});\n\t\t\t\t\t_indeterminateRowKeys.push(...ii);\n\t\t\t\t});\n\t\t\t\tsetIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\n\t\t\t}\n\t\t}\n\n\t\tif (type !== 'localSide') {\n\t\t\t_dataProcessing({\n\t\t\t\tsortBy: defaultSortBy,\n\t\t\t\tfilter: defaultFilter,\n\t\t\t\tsearchLine: defaultSearchValue,\n\t\t\t\treload: true,\n\t\t\t});\n\t\t}\n\t\t// console.log(\"Table => props \", props);\n\t\tsetMounted(true);\n\t\tif (ref && typeof ref === 'function') ref({reloadData});\n\t\telse if (ref && typeof ref === 'object') ref.current = {reloadData};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (type === 'localSide') {\n\t\t\t// console.log(\"Control useEffect => \", rows, selectedRowKeys, searchValue, filter, sortBy);\n\t\t\t// _setRows(rows);\n\t\t\t_setRowsHandler(rows);\n\t\t\tsetSelectedRowKeys(selectedRowKeys);\n\t\t\tsetSearchValue(searchValue);\n\t\t\tsetFilter(filter);\n\t\t\tsetSortBy(sortBy);\n\t\t\tif (!!expandColumnKey && !expandLazyLoad) {\n\t\t\t\t// Открытие всех нод\n\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\tsetExpandedRowKeys(flatten(getTableRowKeys(rows, rowKey)));\n\t\t\t}\n\t\t}\n    }, [rows, selectedRowKeys, searchValue, filter, sortBy]);\n\n\t/** Подписка на изменение props[subscribe.name] в сторе */\n\tuseEffect( () => {\n\t\tif(subscribe.name) {\n\t\t\t// console.log(\"Table => useEffect => subscribe.value \", props[subscribe.name]);\n\t\t\tsubscribe.onChange && subscribe.onChange({value: props[subscribe.name], setReloadTable: reloadData});\n\t\t}\n\t}, [props[subscribe.name]]);\n\n\n\t/** BASE FUNCTIONS */\n\tconst _setRowsHandler = (rows) => {\n\t\t_setRows(rows);\n\t\trowsDispatch(rows);\n\t};\n\tconst setRowsHandler = (rows) => {\n\t\tsetRows(rows);\n\t\trowsDispatch(rows);\n\t};\n\tconst rowsDispatch = (rows) => {\n\t\trowsDispatchPath && props.setDateStore && props.setDateStore(rowsDispatchPath, rows);\n\t};\n\n\tconst reloadData = ({sortBy, filter, searchValue}) => {\n\t\t// console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\n        if(props.value && props.value.length > 0)\n            setSelectedRowKeys(props.value.map(item => item[rowKey]));\n        else\n            setSelectedRowKeys([]);\n\t\t// setSelectedRowKeys([]);\n\t\tif(sortBy) setSortBy(sortBy);\n\t\tif(filter) setFilter(filter);\n\t\tif(searchValue) setSearchValue(searchValue);\n\t\t_dataProcessing({\n\t\t\tsortBy: sortBy ? sortBy : _sortBy,\n\t\t\tfilter: filter ? filter : _filter,\n\t\t\tsearchLine: searchValue ? searchValue : _searchValue,\n\t\t\treload: true,\n\t\t});\n        // console.log(\"reloadData loading \", loading);\n    };\n\n\tconst _dataProcessing = (params) => {\n\t\t// console.log('_dataProcessing', params);\n\t\tconst {sortBy, filter, searchLine, expandRow, reload} = params;\n\t\tswitch (type) {\n\t\t\tcase 'infinity':\n\t\t\tcase 'serverSide':\n\t\t\t\tif ((hasMore || reload) && !loading) {\n\t\t\t\t\tsetLoading(true);\n\t\t\t\t\tconst pageNum = reload\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: Math.floor(_rows.length / pageSize);\n\t\t\t\t\tconst params = {\n\t\t\t\t\t\tpage: pageNum,\n\t\t\t\t\t\tsize: pageSize,\n\t\t\t\t\t\tsort:\n\t\t\t\t\t\t\tsortBy && sortBy.key\n\t\t\t\t\t\t\t\t? sortBy.key + ',' + sortBy.order\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t};\n\t\t\t\t\tconst dataQuery = {\n                        ...filter,\n                        ...(searchLine\n                            ? {[searchParamName]: searchLine}\n                            : null),\n                    };\n\t\t\t\t\t// console.log('dataQuery', dataQuery);\n\n                    if(type === 'infinity' && reload && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad) {\n                        requestLoadCount({\n                            params,\n                            data: dataQuery,\n                        })\n                            .then((response) => {\n                                // console.log(\"infinity then response\", response);\n                                // const result = response.data;\n                                setTotalCountRows(response.data);\n                            })\n\t\t\t\t\t\t\t.catch(error =>\n\t\t\t\t\t\t\t\tnotificationError(error, 'Ошибка получения количества записей по фильтру') );\n                    }\n\n                    // console.log('requestLoadRows => ', typeof requestLoadRows);\n                    // if(typeof requestLoadRows !== 'function'){\n                    //     setLoading(false);\n                    // }\n                    requestLoadRows({\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tdata: dataQuery,\n\t\t\t\t\t})\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\t// console.log(\"infinity then response\", response);\n\t\t\t\t\t\t\tconst result = response.data;\n\t\t\t\t\t\t\t// Если иерархия и ленивая, то ищим кому добавть полученные записи\n\t\t\t\t\t\t\tif (!!expandColumnKey && expandLazyLoad) {\n\t\t\t\t\t\t\t\t// lastExpandRow//, setLastExpandRow\n\t\t\t\t\t\t\t\t// console.log('!!expandColumnKey && expandLazyLoad', result);\n\t\t\t\t\t\t\t\tif (pageNum === 0) {\n\t\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t\t{[rowKey]: generateUUID()},\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t// _setRows(result);\n\t\t\t\t\t\t\t\t\t_setRowsHandler(result);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlet newRows = [..._rows];\n\t\t\t\t\t\t\t\t\t// (data, rowKey, rowValue)\n\t\t\t\t\t\t\t\t\tresult.forEach((child) => {\n\t\t\t\t\t\t\t\t\t\tchild.children = [\n\t\t\t\t\t\t\t\t\t\t\t{[rowKey]: generateUUID()},\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tlet node = findNodeByRowKey(\n\t\t\t\t\t\t\t\t\t\tnewRows,\n\t\t\t\t\t\t\t\t\t\trowKey,\n\t\t\t\t\t\t\t\t\t\texpandRow[rowKey]\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tnode.children = result;\n\t\t\t\t\t\t\t\t\t// console.log('newRows -> ', newRows);\n\t\t\t\t\t\t\t\t\t// _setRows(newRows);\n\t\t\t\t\t\t\t\t\t_setRowsHandler(newRows);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (result && result.length < pageSize) {\n\t\t\t\t\t\t\t\t\tsetHasMore(false);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetHasMore(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpageNum === 0\n\t\t\t\t\t\t\t\t\t? _setRowsHandler(result) // _setRows\n\t\t\t\t\t\t\t\t\t: _setRowsHandler(_rows.concat(result)); // _setRows\n\n\t\t\t\t\t\t\t\t// console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\n\t\t\t\t\t\t\t\tif (expandDefaultAll)\n\t\t\t\t\t\t\t\t\tsetExpandedRowKeys(\n\t\t\t\t\t\t\t\t\t\tflatten(getTableRowKeys(result, rowKey))\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\n\t\t\t\t\t\t\t_setRowsHandler(_rows); // _setRows\n\t\t\t\t\t\t\t// setHasMore(false);\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t// case 'serverSide':\n\t\t\t// \tsetLoading(true);\n\t\t\t// \tbreak;\n\t\t\tcase 'localSide':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t/** Событие выделение одной строки в режиме без галочек */\n\tconst _rowEventHandlers = {\n\t\tonClick: ({rowData, rowIndex, rowKey, event}) => {\n\t\t\tif (!selectable) {\n\t\t\t\t// if (_selectedRowKeys.includes(rowKey)) {\n\t\t\t\t//     setSelectedRowKeys([]);\n\t\t\t\t//     // setSelectedRow([]);\n\t\t\t\t//     // setSelectedRowObjects([]);\n\t\t\t\t//     onRowClick({\n\t\t\t\t//         selected: false,\n\t\t\t\t//         rowData,\n\t\t\t\t//         rowIndex,\n\t\t\t\t//         rowKey,\n\t\t\t\t//     });\n\t\t\t\t//     onSelectedRowsChange([]);\n\t\t\t\t// } else {\n\t\t\t\t// console.log('_rowEventHandlers -> onClick', rowKey, rowIndex);\n\t\t\t\tconst newRowObject = {\n\t\t\t\t\trowData: {...rowData},\n\t\t\t\t\trowIndex: rowIndex,\n\t\t\t\t\trowKey: rowKey,\n\t\t\t\t};\n\t\t\t\t// if(type !== 'localSide')\n\t\t\t\tsetSelectedRowKeys([rowKey]);\n\t\t\t\t// setSelectedRow(newRowObject);\n\t\t\t\t// setSelectedRowObjects([newRowObject]);\n\t\t\t\tselectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, rowData);\n\t\t\t\tonRowClick({\n\t\t\t\t\tselected: true,\n\t\t\t\t\t...newRowObject,\n\t\t\t\t});\n\t\t\t\tonSelectedRowsChange([rowKey], [rowData]);\n\t\t\t\t// }\n\t\t\t}\n\t\t},\n\t\tonDoubleClick: ({rowData, rowIndex, rowKey}) => {\n\t\t\t// console.log('onDoubleClick', rowData, rowIndex, rowKey);\n\t\t\tonRowDoubleClick({rowData, rowIndex, rowKey});\n\t\t},\n\t\t// onContextMenu: console.log('context menu'),\n\t\t// onMouseEnter: console.log('mouse enter'),\n\t\t// onMouseLeave: console.log('mouse leave'),\n\t};\n\n\t/** Событие при сортировке */\n\tconst _onColumnSort = (sortBy) => {\n\t\t// console.log(\"sortBy\", sortBy);\n\t\ttableRef.current.scrollToRow(0, 'auto');\n\t\tsetSortBy(sortBy);\n\n\t\t// Для серверной сортировки - сбросить выделение\n\t\tif (type !== 'localSide') {\n\t\t\tsetSelectedRowKeys([]);\n\t\t}\n\t\tconst loadParams = {\n\t\t\tsortBy: sortBy,\n\t\t\tfilter: _filter,\n\t\t\tsearchLine: _searchValue,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t};\n\n\t/** Получение колонок таблицы */\n\tconst _getColumns = () => {\n\t\tlet _columns = [...columns];\n\n\t\t/** Создаем колонку с галочками (если надо) */\n\t\tif (selectable) {\n\t\t\tconst selectColumn = {\n\t\t\t\tkey: '__selection__',\n\t\t\t\theaderRenderer: SelectionHead,\n\t\t\t\tcellRenderer: SelectionCell,\n\t\t\t\twidth: 40,\n\t\t\t\tflexShrink: 0,\n\t\t\t\tresizable: false,\n\t\t\t\tfrozen: 'left',\n\t\t\t\trowKey: rowKey,\n\t\t\t\tparentKey: expandParentKey,\n\t\t\t\tselectedRowKeys: _selectedRowKeys,\n\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\n\t\t\t\tnodeAssociated: nodeAssociated,\n\t\t\t\tonChange: _onChangeSelectHandler,\n\t\t\t\tselectAll: selectAll,\n\t\t\t\tonSelectAll: _onSelectAllHandler,\n\t\t\t};\n\t\t\t_columns.unshift(selectColumn);\n\t\t}\n\t\treturn _columns;\n\t};\n\n\t/** VIEW FUNCTIONS */\n\n\tconst _footer = (\n\t\t<React.Fragment>\n\t\t\t{_footerShow ? (\n\t\t\t\t\t<React.Fragment>\n                        {/*className={'BaseTable__footer__counter'}>*/}\n\t\t\t\t\t\t<div key={'footer-left-custom-side'} className={'left-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.leftCustomSideElement ? <FormItems items={footerProps.leftCustomSideElement} /> : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-center-custom-side'} className={'center-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.centerCustomSideElement ? <FormItems items={footerProps.centerCustomSideElement} /> : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div key={'footer-right-custom-side'} className={'right-custom-side'}>\n\t\t\t\t\t\t\t{footerProps.rightCustomSideElement ? <FormItems items={footerProps.rightCustomSideElement} /> : null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{selectable ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('selected')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.selectedTitle} {_selectedRowKeys.length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('loaded')\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.loadedTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t\t\t: null }\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{footerProps.showElements.includes('total')\n\t\t\t\t\t\t\t? type === 'infinity' && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad\n\t\t\t\t\t\t\t\t? <span>{footerProps.totalTitle} {_totalCountRows}</span>\n\t\t\t\t\t\t\t\t: <span>{footerProps.totalTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\n\t\t\t\t\t\t\t: null}\n\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n\n\t/** Событие при рендере для стилизации */\n\tconst _rowClassName = ({rowData, rowIndex}) => {\n\t\tconst {rowClassName} = props;\n\t\treturn [\n\t\t\trowClassName,\n\t\t\t_selectedRowKeys.includes(rowData[rowKey]) && 'row-selected',\n\t\t\tzebraStyle ? (rowIndex % 2 === 0 ? 'even' : 'odd') : '',\n\t\t\t'bordered'\n\t\t].join(' ')\n\t};\n\n\t/** LOAD DATA FUNCTIONS */\n\tconst onEndReached = () => {\n\t\tlet selectAll;\n\t\tconst selectLength = _selectedRowKeys.length;\n\t\tif (selectLength === 0) selectAll = false;\n\t\telse if (selectLength > 0) selectAll = null;\n\n\t\tsetSelectAll(selectAll);\n\n\t\tif (type === 'infinity') {\n\t\t\tconst loadParams = {\n\t\t\t\tsortBy: _sortBy,\n\t\t\t\tfilter: _filter,\n\t\t\t\tsearchLine: _searchValue,\n\t\t\t\treload: false,\n\t\t\t};\n\t\t\t_dataProcessing(loadParams);\n\t\t}\n\t};\n\n\t/** SELECTABLE FUNCTIONS */\n\n\t/** Событие при изменении галочки одной строки */\n\tconst _onChangeSelectHandler = ({\n\t\tselected,\n\t\t_selectedRow,\n\t\t_selectAll,\n\t\t_selectedRowKeys,\n\t\t_selectedRowObjects,\n\t\t_indeterminateRowKeys,\n\t}) => {\n\t\tsetSelectedRowKeys(_selectedRowKeys);\n\t\tsetIndeterminateRowKeys(_indeterminateRowKeys);\n\t\tsetSelectAll(_selectAll);\n\t\t// setSelectedRow(_selectedRow);\n\n\t\t// let newSelectedObjects = [];\n\t\t// if (selected) {\n\t\t// \tif (!!expandColumnKey)\n\t\t// \t\tnewSelectedObjects = flatten(\n\t\t// \t\t\tgetTableRowObjects(rows, rowKey)\n\t\t// \t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]));\n\t\t// \telse\n\t\t// \t\tnewSelectedObjects = selectedRowObjects.concat([\n\t\t// \t\t\t_selectedRow.rowData,\n\t\t// \t\t]);\n\t\t// \t// setSelectedRowObjects(newSelectedObjects);\n\t\t// } else {\n\t\t// \tnewSelectedObjects = selectedRowObjects.filter(\n\t\t// \t\t(item) => item[rowKey] !== _selectedRow.rowData[rowKey]\n\t\t// \t);\n\t\t// \t// setSelectedRowObjects(newSelectedObjects);\n\t\t// }\n\t\t// console.log(\"_handleSelectChange\", props);\n\t\t// dispatchPath && props.setTableSelectedRow && props.setTableSelectedRow(dispatchPath, _selectedRow.rowData);\n\t\tselectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, _selectedRowObjects);\n\t\tonRowClick({\n\t\t\tselected,\n\t\t\trowData: _selectedRow.rowData,\n\t\t\trowIndex: _selectedRow.rowIndex,\n\t\t\trowKey,\n\t\t});\n\t\tonSelectedRowsChange(_selectedRowKeys, _selectedRowObjects);\n\t};\n\n\t/** Событие при изменении галочки \"Выделить все\" */\n\tconst _onSelectAllHandler = ({selected, rowKeys, rowObjects}) => {\n\t\tconst selectedKeys = selected ? rowKeys : [];\n\t\tsetSelectedRowKeys(selectedKeys);\n\t\tsetIndeterminateRowKeys([]);\n\t\tsetSelectAll(selected);\n\t\tselectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, selected ? rowObjects : []);\n\t\t// setSelectedRowObjects(rows);\n\t\t// console.log(\"_handleSelectAll\", selectedKeys);\n\t\tonSelectedRowsChange(selectedKeys, rowObjects);\n\t};\n\n\t/** TREE FUNCTIONS */\n\n\t/** Анализ дерева на пердмет квадратиков\n\t * Нужно для выделения по умолчанию свернутых элементов */\n\t// const _postLoadTreeAnalysis = () => {\n\t//     if (!!expandColumnKey && !expandLazyLoad) {\n\t//         let _indeterminateRowKeys = [];\n\t//         // console.log(\"mounted->selectedRowObjects: \", selectedRowObjects);\n\t//         selectedRowObjects.map((item) => {\n\t//             const [ss, ii] = parentAnalysis({\n\t//                 rowData: item,\n\t//                 rowKey,\n\t//                 parentKey: expandParentKey,\n\t//                 checked: true,\n\t//                 nodeAssociated,\n\t//                 treeData: _rows,\n\t//                 selectedRowKeys: _selectedRowKeys,\n\t//                 indeterminateRowKeys: _indeterminateRowKeys,\n\t//             });\n\t//             _indeterminateRowKeys.push(...ii);\n\t//         });\n\t//         setIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\n\t//     }\n\t// }\n\n\tconst _onExpandedRowsChange = (expandedRowKeys) => {\n\t\t// console.log(\"_onExpandedRowsChange\", expandedRowKeys);\n\t\tonExpandedRowsChange(expandedRowKeys);\n\t};\n\tconst _onRowExpand = ({expanded, rowData, rowIndex, rowKey}) => {\n\t\t// console.log(\"_onRowExpand\", rowData, expanded, rowIndex, rowKey);\n\t\tif (expanded) {\n\t\t\tsetExpandedRowKeys([..._expandedRowKeys, rowKey]);\n\n\t\t\tif (expandLazyLoad) {\n\t\t\t\tconst loadParams = {\n\t\t\t\t\tsortBy: _sortBy,\n\t\t\t\t\tfilter: {..._filter, [expandParentKey]: rowKey},\n\t\t\t\t\tsearchLine: _searchValue,\n\t\t\t\t\treload: false,\n\t\t\t\t\texpandRow: rowData,\n\t\t\t\t};\n\t\t\t\t// _callPropsOnLoad(loadParams);\n\t\t\t\t_dataProcessing(loadParams);\n\t\t\t}\n\t\t} else {\n\t\t\tlet expandedRowKeys = [..._expandedRowKeys];\n\t\t\tlet allChildKeys = flatten(\n\t\t\t\tgetTableRowKeys(rowData.children, props.rowKey)\n\t\t\t);\n\t\t\tallChildKeys.push(rowKey);\n\t\t\t// console.log('allChildKeys', allChildKeys);\n\t\t\tsetExpandedRowKeys(\n\t\t\t\texpandedRowKeys.filter((item) => !allChildKeys.includes(item))\n\t\t\t);\n\t\t}\n\t\tonRowExpand({expanded, rowData, rowIndex, rowKey});\n\t};\n\n\t/** COMMAND PANEL FUNCTIONS */\n\n\tconst _getDisabledElementsOfCommandPanel = () => {\n\t\t// console.log('commandPanelProps', commandPanelProps);\n\t\tlet _disabledElements = [...commandPanelProps.disabledElements];\n\t\tif (type === 'infinity') {\n\t\t\t_disabledElements.push('up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => infinity');\n        }\n\t\tif (selectable && _selectedRowKeys.length > 1) {\n\t\t\t_disabledElements.push('addAsCopy', 'edit', 'up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => selectable');\n        }\n\t\tif (_selectedRowKeys.length === 0) {\n\t\t\t_disabledElements.push('addAsCopy', 'edit', 'delete', 'up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => NO select');\n        }\n\t\t// if (expandColumnKey) {\n\t\t\t//|| !selectedRow) {\n\t\t\t// _disabledElements.push('up', 'down');\n            // console.log('_getDisabledElementsOfCommandPanel => expandColumnKey');\n        // }\n        // console.log('_getDisabledElementsOfCommandPanel => ', _disabledElements, _selectedRowKeys);\n\n        return [...new Set(_disabledElements)];\n\t};\n\n\tconst _onClickAddAsCopy = (event) => {\n\t\t// console.log(\"_onClickAddAsCopy\", selectedRow);\n\t\tcommandPanelProps.onClickAddAsCopy(\n\t\t\tevent,\n\t\t\tfindNodeByRowKey(_rows, rowKey, _selectedRowKeys[0])\n\t\t);\n\t};\n\n\tconst _onClickEdit = (event) => {\n\t\t// console.log(\"_onClickEdit\", selectedRow);\n\t\tcommandPanelProps.onClickEdit(event, {\n\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t});\n\t\t// props.onClickEdit(event, selectedRow);\n\t};\n\n\tconst _onClickDelete = (event) => {\n\t\t// console.log(\"_onClickDelete\", autoDeleteRows, selectedRowKeys);\n\t\tif (autoDeleteRows) {\n\t\t\tif (type === 'localSide') {\n\t\t\t\tsetRowsHandler(\n\t\t\t\t\t_rows.filter(\n\t\t\t\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey])\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t_setRowsHandler(\n\t\t\t\t\t_rows.filter(\n\t\t\t\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey])\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tsetSelectedRowKeys([]);\n\t\t}\n\t\tcommandPanelProps.onClickDelete(event, _selectedRowKeys);\n\t};\n\n\tconst loop = (data, key, callback) => {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tif (data[i][rowKey] === key) {\n\t\t\t\t// console.log(`Selected => index: [${i}], path: [${data[i].path}]`, data);\n\t\t\t\treturn callback(data[i], i, data);\n\t\t\t} else {\n\t\t\t\t// console.log(`Other => index: [${i}], path: [${data[i].path}]`);\n\t\t\t}\n\t\t\tif (data[i].children) {\n\t\t\t\tloop(data[i].children, key, callback);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst _onClickUp = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index - 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data);\n\t\t\tcommandPanelProps.onClickUp(event, {\n\t\t\t\trowIndex: newRowIndex,\n\t\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t}, data);\n\t\t})\n\t};\n\n\tconst _onClickDown = (event) => {\n\t\tconst data = [..._rows];\n\t\tconst key = _selectedRowKeys[0];\n\t\tloop(data, key, (item, index, arr)  => {\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index + 1);\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data);\n\t\t\tcommandPanelProps.onClickDown(event, {\n\t\t\t\trowIndex: newRowIndex,\n\t\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\n\t\t\t}, data);\n\t\t})\n\t};\n\n\tconst _getNewIndexRow = (oldIndex, newIndex) =>\n\t\tnewIndex >= 0 && newIndex < _rows.length ? newIndex : oldIndex;\n\n\tconst _changeIndexRow = (oldIndex, newIndex, arr, data) => {\n\t\tif (newIndex >= 0 && newIndex < arr.length) {\n\t\t\t// let arr = [..._rows]; // Копируем массив\n\t\t\tconst item = arr.splice(oldIndex, 1); // Удаляем элемент со старого места\n\t\t\t// console.log('_changeIndexRow => ',item);\n\t\t\tarr.splice(newIndex > 0 ? newIndex : 0, 0, item[0]); // Ставим элемент на новое место\n\t\t\t// console.log(\"_changeIndexRow\", item[0]);\n\t\t\tif (type === 'localSide') {\n\t\t\t\tsetRowsHandler(data);\n\t\t\t} else {\n\t\t\t\t_setRowsHandler(data);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst _onSearch = (searchLine, e) => {\n        e.preventDefault();\n\t\t// console.log(\"_onSearch\", searchLine);\n        tableRef.current.scrollToRow(0, 'auto');\n\t\tsetSearchValue(searchLine);\n\t\tconst loadParams = {\n\t\t\tsortBy: _sortBy,\n\t\t\tfilter: _filter,\n\t\t\tsearchLine: searchLine,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t\tcommandPanelProps.onSearch(searchLine);\n\t};\n\n\t/** FILTER PANEL FUNCTIONS */\n\n\tconst _onChangeFilter = (filter) => {\n\t\t// console.log('_onChangeFilter', filter);\n\t\tsetHasMore(true);\n\t\tsetFilter(filter);\n\t\tfilterPanelProps.onChangeFilter(filter);\n\t};\n\tconst _onApplyFilter = (filter) => {\n\t\t// console.log('_onApplyFilter', filter);\n\t\tconst loadParams = {\n\t\t\tsortBy: _sortBy,\n\t\t\tfilter: filter,\n\t\t\tsearchLine: _searchValue,\n\t\t\treload: true,\n\t\t};\n\t\t_dataProcessing(loadParams);\n\t\tfilterPanelProps.onApplyFilter(filter);\n\t};\n\n\t/** SELECTED PANEL */\n\n\tconst _onClickDropSelectHandler = (dropObject) => {\n\t\tconst newSelectedKeys = _selectedRowKeys.filter(\n\t\t\t(item) => item !== dropObject[rowKey]\n\t\t);\n\t\tsetSelectedRowKeys(newSelectedKeys);\n\t\tonSelectedRowsChange(newSelectedKeys);\n\t};\n\n\t// const rowProps = {\n\t//     // tagName: 'button',\n\t//     // onClick: e => {\n\t//     //     e.preventDefault();\n\t//     //     e.stopPropagation();\n\t//     //     console.log(`You clicked row onClick`)\n\t//     // },\n\t//     onDoubleClick: e => {\n\t//         e.preventDefault();\n\t//         e.stopPropagation();\n\t//         console.log(`You clicked row onDoubleClick`)\n\t//     }\n\t// };\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`${rtPrefix}-table`}\n\t\t\tstyle={{width: '100%', height: '100%'}}\n\t\t>\n\t\t\t<div className={`${rtPrefix}-table-top-panel`}>\n\t\t\t\t<CommandPanel\n\t\t\t\t\t{...commandPanelProps}\n\t\t\t\t\tdefaultValueSearch={defaultSearchValue}\n\t\t\t\t\tdisabledElements={_getDisabledElementsOfCommandPanel()}\n\t\t\t\t\tonClickAddAsCopy={_onClickAddAsCopy}\n\t\t\t\t\tonClickDelete={_onClickDelete}\n\t\t\t\t\tonClickDown={_onClickDown}\n\t\t\t\t\tonClickEdit={_onClickEdit}\n\t\t\t\t\tonClickUp={_onClickUp}\n\t\t\t\t\tonSearch={_onSearch}\n\t\t\t\t/>\n\t\t\t\t{/*{!filter ? (*/}\n\t\t\t\t<FilterPanel\n\t\t\t\t\t{...filterPanelProps}\n\t\t\t\t\tdefaultFilter={defaultFilter}\n\t\t\t\t\tonChangeFilter={_onChangeFilter}\n\t\t\t\t\tonApplyFilter={_onApplyFilter}\n\t\t\t\t/>\n\t\t\t\t{/*) : null}*/}\n\t\t\t</div>\n\t\t\t<div className={`${rtPrefix}-baseTable`}>\n\t\t\t\t<AutoResizer>\n\t\t\t\t\t{({width, height}) => (\n\t\t\t\t\t\t<BaseTable\n\t\t\t\t\t\t\tref={tableRef}\n\t\t\t\t\t\t\t/** Required */\n\t\t\t\t\t\t\tcolumns={_getColumns()}\n\t\t\t\t\t\t\tdata={_rows}\n\t\t\t\t\t\t\t/** Control Props */\n\t\t\t\t\t\t\tsortBy={_sortBy}\n\t\t\t\t\t\t\t/** Base Props */\n\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\trowKey={rowKey}\n\t\t\t\t\t\t\t// rowProps={rowProps}\n\n\t\t\t\t\t\t\t/** View Props */\n\t\t\t\t\t\t\trowClassName={_rowClassName}\n\t\t\t\t\t\t\temptyRenderer={empty}\n\t\t\t\t\t\t\tfixed={fixWidthColumn}\n\t\t\t\t\t\t\tfooterHeight={_footerShow ? footerProps.height : 0}\n\t\t\t\t\t\t\theaderHeight={headerHeight}\n\t\t\t\t\t\t\trowHeight={rowHeight}\n\t\t\t\t\t\t\toverlayRenderer={loading ? overlay : null}\n\t\t\t\t\t\t\tfooterRenderer={_footer}\n\t\t\t\t\t\t\trowRenderer={rowRenderer}\n\t\t\t\t\t\t\testimatedRowHeight={estimatedRowHeight}\n\t\t\t\t\t\t\t/** Load Data Props */\n\t\t\t\t\t\t\tonEndReachedThreshold={loadThreshold}\n\t\t\t\t\t\t\tonEndReached={\n\t\t\t\t\t\t\t\ttype === 'infinity' ? onEndReached : undefined\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t/** Tree Props */\n\t\t\t\t\t\t\texpandColumnKey={expandColumnKey}\n\t\t\t\t\t\t\texpandedRowKeys={_expandedRowKeys}\n\t\t\t\t\t\t\t/** Events */\n\t\t\t\t\t\t\tonColumnSort={_onColumnSort}\n\t\t\t\t\t\t\trowEventHandlers={_rowEventHandlers}\n\t\t\t\t\t\t\tonExpandedRowsChange={_onExpandedRowsChange}\n\t\t\t\t\t\t\tonRowExpand={_onRowExpand}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</AutoResizer>\n\t\t\t</div>\n\t\t\t{showSelection && selectable && !expandColumnKey ? (\n\t\t\t\t<SelectionList\n\t\t\t\t\tonClickDropSelect={_onClickDropSelectHandler}\n\t\t\t\t\tselectedRowObjects={flatten(\n\t\t\t\t\t\tgetTableRowObjects(_rows, rowKey)\n\t\t\t\t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]))}\n\t\t\t\t\trowRender={rowRenderShowSelection}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</div>\n\t);\n});\n\nTable.propTypes = {\n\t/**\n\t * REQUIRED\n\t * */\n\n\t/** Столбцы таблицы */\n\tcolumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n\t/** Тип таблицы\n\t * **infinity** - загрузка данных по скроллу. Фильтрация, сортировка и поиск через сервер.\n\t * **serverSide** - первичная загрузка таблицы с сервера. Фильтрация, сортировка и поиск через сервер. Lazy Load для дерева тоже тут.\n\t * **localSide** - полностью локальная таблица. Фильтрация, сортировка и поиск через локальный rows */\n\ttype: PropTypes.oneOf(['infinity', 'serverSide', 'localSide']).isRequired,\n\n\t/** Объект со свойствами Command Panel */\n\tcommandPanelProps: PropTypes.object,\n\n\t/** Объект со свойствами Filter Panel */\n\tfilterPanelProps: PropTypes.object,\n\n\t/**\n\t * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n\t * */\n\n\t/** Строки по умолчанию */\n\tdefaultRows: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Ключи выделенных по умолчанию строк */\n\tdefaultSelectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска по умолчанию строк */\n\tdefaultSearchValue: PropTypes.string,\n\n\t/** Объект фильтрации по умолчанию */\n\tdefaultFilter: PropTypes.object,\n\n\t/** Сортировка по умолчанию */\n\tdefaultSortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n\t * */\n\n\t/** Строки таблицы. Используется для контроля таблицы из вне. */\n\trows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Функция задания строк таблицы. */\n    setRows: PropTypes.func,\n\n\t/** Выделенные строки таблицы. */\n\tselectedRowKeys: PropTypes.arrayOf(\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\t),\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Объект фильтрации */\n\tfilter: PropTypes.object,\n\n\t/** Объект сортировки */\n\tsortBy: PropTypes.shape({\n\t\t/** Ключ поля для сортировки */\n\t\tkey: PropTypes.string,\n\t\t/** Направление сортировки */\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\n\t}),\n\n\t/**\n\t * BASE PROPS\n\t * */\n\n\t/** Автоудаление строк из таблицы по кнопке в командной панели*/\n\tautoDeleteRows: PropTypes.bool,\n\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/**\n\t * VIEW PROPS\n\t * */\n\n\t/** Вывод когда нет данных */\n\tempty: PropTypes.element,\n\n\t/** Отображение загрузки данных */\n\toverlay: PropTypes.element,\n\n\t/** Фиксированная ширина столбцов. Появится боковой скрол */\n\tfixWidthColumn: PropTypes.bool,\n\n\t/** Высота подвала */\n\tfooterHeight: PropTypes.number,\n\n\t/** Отображать ли подвал */\n\tfooterShow: PropTypes.bool,\n\n    /** Заголовки футтера */\n    footerTitles: PropTypes.shape({\n\t\t/** Заголовок выделенных элементов */\n        selectedRows: PropTypes.string,\n\t\t/** Заголовок загруженных элементов */\n        loadedRows: PropTypes.string,\n\t\t/** Заголовок всего элементов */\n\t\ttotalRows: PropTypes.string,\n    }),\n\n\tfooterProps: PropTypes.shape({\n\n\t\t/** Высота подвала */\n\t\theight: PropTypes.number,\n\n\t\t/** Массив элементов футтера, которые надо отобразить\n\t\t * ['selected', 'loaded', 'total'] */\n\t\tshowElements: PropTypes.arrayOf(PropTypes.string),\n\n\t\t/** Заколовок для кол-ва выбранных объектов */\n\t\tselectedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва загруженны объектов */\n\t\tloadedTitle: PropTypes.string,\n\n\t\t/** Заколовок для кол-ва всего объектов */\n\t\ttotalTitle: PropTypes.string,\n\n\t\t/** Левый кастомный элемент командной панели */\n\t\tleftCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/** Центральный кастомный элемент командной панели */\n\t\tcenterCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/** Правый кастомный элемент командной панели */\n\t\trightCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\t}),\n\n\t/** Высота заголовка таблицы */\n\theaderHeight: PropTypes.number,\n\n\t/** Высота строки таблицы */\n\trowHeight: PropTypes.number,\n\n\t/** Custom row renderer\n\t * Параметры - ({ isScrolling, cells, columns, rowData, rowIndex, depth }) */\n\trowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n\t/** Строки будут в зебро-стиле */\n\tzebraStyle: PropTypes.bool,\n\n\t/**\n\t * LOAD DATA PROPS\n\t * */\n\n\t/** Порог в пикселях для вызова _onLoad.\n\t * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n\tloadThreshold: PropTypes.number,\n\n\t/** Размер страницы */\n\tpageSize: PropTypes.number,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\t/**\n\t * SELECTABLE PROPS\n\t * */\n\n\t/** Таблица с возможностью выбора строки */\n\tselectable: PropTypes.bool,\n\n\t/**\n\t * TREE PROPS\n\t * */\n\n\t/** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\n\tnodeAssociated: PropTypes.bool,\n\n\t/** Ключ колонки по которой строить иерархию */\n\texpandColumnKey: PropTypes.string,\n\n\t/** Открыть по умолчанию вложенность до уровня N или 'All' */\n\texpandDefaultAll: PropTypes.bool,\n\n\t/** Загружать ноды иерархии по одной */\n\texpandLazyLoad: PropTypes.bool,\n\n\t/** Поле в котором хранится ссылка на родителя */\n\texpandParentKey: PropTypes.string,\n\n\t/**\n\t * EVENTS\n\t * */\n\n\t/** Событие при клике на строку (только при selectable = false)\n\t * Параметр - ({selected, rowData, rowIndex}) */\n\tonRowClick: PropTypes.func,\n\n\t/** Событие при двойном клике на строку.\n\t * Параметр - ({rowData, rowIndex, rowKey}) */\n\tonRowDoubleClick: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * Парметры - ({ expanded, rowData, rowIndex, rowKey }) */\n\tonRowExpand: PropTypes.func,\n\n\t/** Событие при выборе строки.\n\t * Параметр - массив выбранных строе (только rowKey) */\n\tonSelectedRowsChange: PropTypes.func,\n\n\t/** События при открытии / закрытии ноды\n\t * Парметры - (expandedRowKeys) - массив ключей открытых нод */\n\tonExpandedRowsChange: PropTypes.func,\n\n\t/** SELECTED PANEL */\n\n\t/** Отображать ли панель выбранных элементов */\n\tshowSelection: PropTypes.bool,\n\n\t/** Строка или функция для отображения элементов списка выбранных\n\t * Строка - имя поля\n\t * Функция - рендер строк.\n\t * `({ rowData, rowIndex }) => { return <Component> }` */\n\trowRenderShowSelection: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.string,\n\t]),\n\n\t/** Путь в сторе куда класть выбранную строку таблицы */\n\tdispatchPath: PropTypes.string,\n\n\t/** Объект для подписки на изменения в STORE */\n\tsubscribe: PropTypes.object,\n};\n\nTable.defaultProps = {\n\tdefaultRows: [],\n\tdefaultSelectedRowKeys: [],\n\tdefaultSearchValue: '',\n\tdefaultFilter: {},\n\tdefaultSortBy: {},\n\n\trows: [],\n\tselectedRowKeys: [],\n\tsearchValue: '',\n\tfilter: {},\n\tsortBy: {},\n\n\tautoDeleteRows: true,\n\trowKey: 'id',\n\n\tempty: empty,\n\toverlay: overlay,\n\tfixWidthColumn: false,\n\tfooterHeight: 30,\n\tfooterShow: false,\n    footerTitles: {\n        selectedRows: 'Выделено:',\n        loadedRows: 'Загружено записей:',\n        totalRows: 'Всего записей:',\n    },\n\tfooterProps: {\n\t\theight: 30,\n\t\tshowElements: [],\n\t\tselectedTitle: 'Выделено:',\n\t\tloadedTitle: 'Загружено записей:',\n\t\ttotalTitle: 'Всего записей:',\n\t\tleftCustomSideElement: null,\n\t\tcenterCustomSideElement: null,\n\t\trightCustomSideElement: null\n\t},\n\theaderHeight: 30,\n\trowHeight: 30,\n\tzebraStyle: false,\n\n\tloadThreshold: 300,\n\tpageSize: 50,\n\trequestLoadRows: noop,\n    requestLoadCount: noop,\n\tsearchParamName: 'searchLine',\n\n\tselectable: false,\n\n\tnodeAssociated: true,\n\texpandColumnKey: undefined,\n\texpandDefaultAll: true,\n\texpandLazyLoad: false,\n\texpandParentKey: 'parentId',\n\n\tonRowClick: noop,\n\tonRowDoubleClick: noop,\n\tonRowExpand: noop,\n\tonSelectedRowsChange: noop,\n\tonExpandedRowsChange: noop,\n\n\tshowSelection: false,\n\n\tsubscribe: {},\n};\n\nconst mapStateToProps = (store, ownProps) => {\n\tconst {subscribe} = ownProps;\n\tif(subscribe){\n\t\tconst {name, path} = subscribe;\n\t\tif(name && path)\n\t\t\treturn { [name]: objectPath.get(store, path) };\n\t}\n\n\treturn {};\n};\nconst mapDispatchToProps = (dispatch) =>\n\tbindActionCreators({ setDateStore: setDateStore}, dispatch);\n\n// const mapStateToProps = (store, ownProps) => {\n//     // console.log(\"mapStateToProps -> store\", store);\n//     // const {match , section} = ownProps;\n//     // const { path } = match;\n//     // const rows = store.table[path] && store.table[path][section] ? store.table[path][section].rows : [];\n//     // console.log(\"mapStateToProps -> rows\", rows);\n//     return { store: store };\n// };\n// const mapDispatchToProps = (dispatch, ownProps) => {\n//     // console.log(\"mapDispatchToProps -> ownProps\", ownProps);\n//     // const {match , section} = ownProps;\n//     // const { path } = match;\n//     // initTableStore(path, section);\n//     return bindActionCreators(\n//         {\n//             initTableStore,\n//             setRows,\n//         },\n//         dispatch\n//     );\n// };\n//\n// export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\n\n/**\n * @deprecated [#1] since version 0.0.54 [#2].\n * */\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\n","import React, {useEffect, useState, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { flatten, getTableRowKeys, noop, notificationError } from \"../../utils/baseUtils\";\nimport {rtPrefix} from '../../utils/variables';\nimport {Button, Typography} from 'antd';\nimport { DownOutlined, UpOutlined, CloseCircleFilled } from '@ant-design/icons'\nimport Table from '../Table/Table';\nimport { setDateStore } from \"../../../redux/rtd.actions\";\nconst {Paragraph} = Typography;\n\nconst Select = (props) => {\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\n\tconst [_selectedRowData, _setSelectedRowData] = useState(null);\n\tconst [isSelectOpened, setIsSelectOpened] = useState(false);\n\tconst [isClickInSelect, setIsClickInSelect] = useState(false);\n\n\tconst {\n\t\tname,\n\t\trowRender,\n        className,\n\t\ttype,\n\t\ttitle,\n\t\tplaceholder,\n        selectedRowKeys,\n\t\t// searchable,\n        size,\n\t\twidthControl,\n\t\twidthPopup,\n\t\theightPopup,\n\n\t\tonChangeKeys,\n        defaultValue,\n        value,\n\n\t\t/** Table Props */\n\t\tdefaultSelectedRowKeys,\n\t\trowKey,\n\t\texpandColumnKey,\n\t\tshowSelection,\n\t\trequestLoadRows,\n\t\trequestLoadDefault,\n        commandPanelProps,\n\t\trows,\n\t\tdispatchPath,\n\t} = props;\n\n\tconst selectedDispatchPath = dispatchPath && `${dispatchPath}.selected`;\n\tconst searchable = commandPanelProps && commandPanelProps.showElements && commandPanelProps.showElements.includes('search');\n\tconst node = useRef(null);\n\n\tconst setSelectedRowData = (rowData) => {\n\t\tselectedDispatchPath && props.setDateStore && props.setDateStore(selectedDispatchPath, rowData);\n\t\t_setSelectedRowData(rowData);\n\t}\n\n\tconst loadSelectedObject = ({selectedRowKeys}) => {\n        if(selectedRowKeys) {\n            let _selectedRowKeys;\n\t\t\tif(Array.isArray(selectedRowKeys)) {\n\t\t\t\tsetSelectedRowKeys(selectedRowKeys);\n\t\t\t\t_selectedRowKeys = selectedRowKeys\n\t\t\t}\n            else {\n            \tsetSelectedRowKeys([selectedRowKeys]);\n\t\t\t\t_selectedRowKeys = [selectedRowKeys]\n\t\t\t}\n\n\t\t\t// console.log(\"setSelectedRowKeys[70] -> \", _selectedRowKeys);\n\n\t\t\tconst request = requestLoadDefault\n                ? requestLoadDefault\n                : requestLoadRows;\n\n            if (!!request && !rows && _selectedRowKeys.length > 0) {\n                // console.log('defaultSelectedRowKeys ', defaultSelectedRowKeys, defaultSelectedRowKeys.length);\n                request({\n                    data: {\n                        [rowKey]:  _selectedRowKeys, //defaultSelectedRowKeys,\n                    },\n                })\n                    .then((response) => {\n                        let result = response.data;\n\t\t\t\t\t\t// console.log(\"setSelectedRowData[84] => \", response.data);\n\t\t\t\t\t\tif (result.length > 0) setSelectedRowData(result[0]);\n                    })\n\t\t\t\t\t.catch(error => notificationError(error, 'Ошибка загрузки данных в Select') );\n\n            } else if (rows && _selectedRowKeys && type === 'SingleSelect') {\n            \tlet srk = _selectedRowKeys[0];\n\t\t\t\t// if(Array.isArray(selectedRowKeys) && selectedRowKeys.length > 0)\n\t\t\t\t// \tsrk = selectedRowKeys[0];\n            \t// else\n\t\t\t\t// \tsrk = selectedRowKeys;\n\n                const findRow = rows.find((row) => row[rowKey] === srk);\n                // console.log(\"setSelectedRowData[98] => \", findRow, rows, srk);\n                setSelectedRowData(findRow);\n            } else {\n                setSelectedRowData(null);\n            }\n        }\n\t};\n\n\tuseEffect(() => {\n        loadSelectedObject({selectedRowKeys: defaultSelectedRowKeys});\n\t\twindow.addEventListener('mousedown', handleMouseClick, false);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('mousedown', handleMouseClick, false);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// console.log(\"selectedRowKeys\", selectedRowKeys);\n        loadSelectedObject({selectedRowKeys: selectedRowKeys});\n    }, [selectedRowKeys]);\n\n\tuseEffect(() => {\n\t\tif(_selectedRowKeys !== undefined && _selectedRowData === undefined){\n\t\t\t// console.log(\"useEffect rows\", _selectedRowKeys, _selectedRowData, rows);\n\t\t\tloadSelectedObject({selectedRowKeys: _selectedRowKeys});\n\t\t}\n\t}, [rows])\n\n\tuseEffect(() => {\n\t\t// console.log(\"isClickInSelect \", isClickInSelect);\n\t\t// console.log(\"isSelectOpened \", isSelectOpened);\n\t\tif(!isClickInSelect && isSelectOpened)\n\t\t\tonClosePopup();\n\t}, [isClickInSelect]);\n\n\t// useEffect(() => {\n\t// \t// console.log(\"setSelectedRowData[117] => \", props.value, props.defaultValue);\n\t// }, [props])\n\n\tconst columns = [\n\t\t{\n\t\t\tkey: rowKey,\n\t\t\ttitle: title,\n\t\t\tdataKey: rowKey,\n\t\t\twidth: 500,\n\t\t\tcellRenderer:\n\t\t\t\ttypeof rowRender === 'function'\n\t\t\t\t\t? rowRender\n\t\t\t\t\t: ({rowData}) => <div className={'rt-table-cell'}>{rowData[rowRender]}</div>,\n\t\t},\n\t];\n\n\tconst _getHeadCls = () => {\n\t    let cls = [`${rtPrefix}-select-header`];\n\n\t    if(isSelectOpened)\n            cls.push('opened');\n\n\t    if(_selectedRowKeys && _selectedRowKeys.length > 0)\n\t        cls.push('selected');\n\n\t    switch (size) {\n            case 'small':\n                cls.push(`${rtPrefix}-select-header-sm`);\n                break;\n            case 'large':\n                cls.push(`${rtPrefix}-select-header-lg`);\n                break;\n            default: break;\n        }\n\n\t    return cls.join(' ');\n    };\n\n\tconst _getHeadText = () => {\n\t\tif (type === 'SingleSelect') {\n\t\t\t\tif(_selectedRowData)\n\t\t\t\t\tif(typeof rowRender === 'function')\n\t\t\t\t\t\treturn rowRender({rowData: _selectedRowData});\n\t\t\t\t\telse\n\t\t\t\t\t\treturn `${_selectedRowData[rowRender]}`;\n\t\t\t\telse\n\t\t\t\t\treturn `${placeholder}`;\n\t\t} else {\n\t\t\treturn _selectedRowKeys.length > 0\n\t\t\t\t? `Выбрано: ${_selectedRowKeys.length}`\n\t\t\t\t: `${placeholder}`;\n\t\t}\n\t};\n\n    const _getPopupCls = () => {\n    \t// console.log('_getPopupCls _selectedRowKeys => ', _selectedRowKeys);\n        let cls = [`${rtPrefix}-select-popup`];\n\n        if(title)\n            cls.push(`${rtPrefix}-select-popup-with-title`);\n\n        return cls.join(' ');\n    };\n\tconst _getPopupStyle = () => {\n\t\t// if (heightPopup)\n\t\t// \treturn {height: `${heightPopup}px`, width: `${widthPopup}px`};\n\n\t\tlet height = {};\n\t\tlet defRowsLen = 0;\n\n\t\tif (!requestLoadRows && rows)\n\t\t\tif (expandColumnKey)\n\t\t\t\tdefRowsLen = flatten(getTableRowKeys(rows, rowKey)).length;\n\t\t\telse defRowsLen = rows.length;\n\n\t\t// console.log('_getPopupStyle', defRowsLen);\n\t\tif (defRowsLen && defRowsLen > 0) {\n\t\t\theight =\n\t\t\t\tdefRowsLen * 30 + // Кол-во строк * высоту строки\n\t\t\t\t(searchable ? 46 : 0) + // Размер поисковой строки или 0\n\t\t\t\t(type === 'MultiSelect' ? 65 : 0) + // Размер футтера (30) + размер кнопки 35 или 0\n\t\t\t\t(showSelection ? 200 : 0) + // Размер панели выбранных элементов или 0\n\t\t\t\t22; // Паддинги и бордер\n\t\t\t// console.log('heightPopup', height);\n\t\t\tif (height > heightPopup) height = `${heightPopup}px`;\n\t\t\telse height = `${height}px`;\n\t\t} else {\n\t\t\t// console.log(\"heightPopup\", heightPopup);\n\t\t\theight = `${heightPopup}px`;\n\t\t}\n\n\t\t// console.log(\"heightPopup, widthPopup\", heightPopup, widthPopup);\n\t\treturn {height, width: `${widthPopup}px`};\n\t};\n\n\tconst getEvents = () => {\n\t\treturn (commandPanelProps && commandPanelProps.systemBtnProps && Object.keys(commandPanelProps.systemBtnProps)) || [];\n\t};\n\n\tconst _onChange = (selectedKeys) => {\n\t\t// console.log('_onChange [176]', selectedKeys);\n\t\tsetSelectedRowKeys(selectedKeys);\n\t\t// setSelectedRowData(selectedObjects);\n\t\tonChangeKeys(name, selectedKeys.length ? selectedKeys : null);\n\t\t// onChangeObjects(name, selectedObjects.length ? selectedObjects : null);\n\t\t// setCountSelect(selectedKeys.length);\n\t\tif (type === 'SingleSelect') {\n\t\t\tsetIsSelectOpened(false);\n\t\t}\n\t};\n\n\tconst _SingleSelectRow = ({selected, rowData, rowIndex}) => {\n\t\t// console.log(\"_SingleSelectRow => \", rowData);\n\t\tsetSelectedRowData(rowData);\n\t\t// selected ? setSingleSelectRowData(rowData) : setSingleSelectRowData({})\n\t};\n\n\tconst handleMouseClick = (e) => {\n\t\tnode && node.current && setIsClickInSelect(node.current.contains(e.target))\n\t};\n\n\tconst onClosePopup  = () => {\n\t\tsetIsSelectOpened(false);\n\t};\n\n\tconst onOpenPopup = () => {\n\t\tif(!isSelectOpened)\n\t\t\tsetIsSelectOpened(true);\n\t\telse\n\t\t\tsetIsSelectOpened(false);\n\t};\n\n\tconst onClickClear = () => {\n\t\t// console.log(\"delete Selected\");\n\t\tsetSelectedRowData(null);\n\t\t_onChange([]);\n\t};\n\n\treturn (\n\t\t<div\n            className={`${rtPrefix}-select ${className ? className : ''}`}\n\t\t\tref={node}\n\t\t>\n\t\t\t{title ? <div className={'title'}>{title}</div> : null}\n\t\t\t<div\n\t\t\t\tclassName={_getHeadCls()}\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: widthControl === 0 ? '100%' : `${widthControl}px`,\n\t\t\t\t}}\n\n\t\t\t>\n\t\t\t\t<div className={`${rtPrefix}-select-selector`}\n\t\t\t\t\t // onFocus={ () => {setIsSelectOpened(true)} }\n\t\t\t\t\t onClick={ onOpenPopup }\n\t\t\t\t>\n\t\t\t\t\t<Paragraph ellipsis> {_getHeadText()} </Paragraph>\n\t\t\t\t</div>\n                {isSelectOpened ? <UpOutlined onClick={ onOpenPopup } className={`${rtPrefix}-select-header-icon`} /> : <DownOutlined onClick={ onOpenPopup } className={`${rtPrefix}-select-header-icon`}/> }\n\t\t\t\t{/*<Button shape=\"circle\" icon={<CloseCircleFilled />} onClick={() => console.log(\"delete Selected\")} className={`${rtPrefix}-select-header-clear`} />*/}\n\t\t\t\t{_selectedRowKeys.length > 0 ? <CloseCircleFilled onClick={onClickClear} className={`${rtPrefix}-select-header-clear`}/> : null }\n\t\t\t</div>\n\n\t\t\t{isSelectOpened ? (\n\t\t\t\t<div className={_getPopupCls()} style={_getPopupStyle()}>\n\t\t\t\t\t<Table\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t\tcommandPanelProps={{\n\t\t\t\t\t\t\t...props.commandPanelProps,\n\t\t\t\t\t\t\tshowElements: getEvents(),// getShowElements(),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdefaultSelectedRowKeys={_selectedRowKeys}\n                        selectedRowKeys={_selectedRowKeys}\n\t\t\t\t\t\theaderHeight={0}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\ttype={!!requestLoadRows ? 'serverSide' : 'localSide'}\n\t\t\t\t\t\t// showElements={searchable ? ['search'] : undefined}\n\t\t\t\t\t\tselectable={type === 'MultiSelect'}\n\t\t\t\t\t\tfooterShow={type === 'MultiSelect'}\n\t\t\t\t\t\tshowSelection={showSelection}\n\t\t\t\t\t\trowRenderShowSelection={rowRender}\n\t\t\t\t\t\tonRowClick={_SingleSelectRow}\n\t\t\t\t\t\tonSelectedRowsChange={_onChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{type === 'MultiSelect' ? (\n\t\t\t\t\t\t<div className={'close-panel'}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={() => setIsSelectOpened(false)}\n\t\t\t\t\t\t\t\tsize={'small'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tOk\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\nSelect.propTypes = {\n\t/** Имя параметра селекта (вернется в onChangeKeys и onChangeObjects) */\n\tname: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.number,\n\t\tPropTypes.arrayOf(\n\t\t\tPropTypes.oneOfType(\n\t\t\t\t[PropTypes.string, PropTypes.number]\n\t\t\t)\n\t\t)]).isRequired,\n\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { rowData, rowIndex }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n\t\t.isRequired,\n\n\t/** Тип селекта (SingleSelect и MultiSelect) */\n\ttype: PropTypes.oneOf(['SingleSelect', 'MultiSelect']).isRequired,\n\n    /** Дополнительное имя класса для элемента */\n    className: PropTypes.string,\n\n\t/** Заголовок фильтра */\n\ttitle: PropTypes.string,\n\n\t/** Строка, когда ничего не выбрано */\n\tplaceholder: PropTypes.string,\n\n\t/** Запрос на загрузку дефолтных данных */\n\trequestLoadDefault: PropTypes.func,\n\n    /** Массив выбранных значений */\n    selectedRowKeys: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n\n    /** Размер селектора ['small', 'middle', 'large'] */\n    size: PropTypes.oneOf(['small', 'middle', 'large']),\n\n\t// /** Показывать ли поисковую строку */\n\t// searchable: PropTypes.bool,\n\n\t/** Ширина поля выбора в пикселях */\n\twidthControl: PropTypes.number,\n\n\t/** Ширина выпадающего меню */\n\twidthPopup: PropTypes.number,\n\n\t/** Высота выпадающего меню (по умолчанию считается сама) */\n\theightPopup: PropTypes.number,\n\n    /** Событие об изменении состояния селектора */\n\tonChangeKeys: PropTypes.func,\n\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/** Высота строки таблицы */\n\trowHeight: PropTypes.number,\n\n\t/** Строки будут в зебро-стиле */\n\tzebraStyle: PropTypes.bool,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadRows: PropTypes.func,\n\n\t/** Функция запроса для загрузки строк (данных) */\n\trequestLoadCount: PropTypes.func,\n\n\t/** Значение строки поиска */\n\tsearchValue: PropTypes.string,\n\n\t/** Имя параметра для поиска */\n\tsearchParamName: PropTypes.string,\n\n\t/** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\n\tnodeAssociated: PropTypes.bool,\n\n\t/** Ключ колонки по которой строить иерархию */\n\texpandColumnKey: PropTypes.string,\n\n\t/** Открыть по умолчанию вложенность до уровня N или 'All' */\n\texpandDefaultAll: PropTypes.bool,\n\n\t/** Загружать ноды иерархии по одной */\n\texpandLazyLoad: PropTypes.bool,\n\n\t/** Поле в котором хранится ссылка на родителя */\n\texpandParentKey: PropTypes.string,\n};\n\nSelect.defaultProps = {\n\tonChangeKeys: noop,\n\t// onChangeObjects: noop,\n\tplaceholder: 'Выбрать',\n\t// searchable: false,\n    size: 'middle',\n\twidthControl: 110,\n\twidthPopup: 400,\n\theightPopup: 600,\n    rowKey: 'id',\n\trowHeight: 30,\n\tzebraStyle: false,\n\n\trequestLoadDefault: undefined,\n\trequestLoadRows: undefined,\n\trequestLoadCount: undefined,\n\tsearchValue: '',\n\tsearchParamName: 'searchLine',\n\n\tnodeAssociated: true,\n\texpandColumnKey: undefined,\n\texpandDefaultAll: true,\n\texpandLazyLoad: false,\n\texpandParentKey: 'parentId',\n};\nconst mapDispatchToProps = (dispatch) =>\n\tbindActionCreators({ setDateStore: setDateStore}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(Select);\n","import React, {forwardRef, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '../Table/Table';\nimport { notification, Typography } from \"antd\";\nimport { notificationError } from \"../../utils/baseUtils\";\n\nconst AdvancedTable = forwardRef((props, ref) => {\n\tconst [config, setConfig] = useState({});\n\n\tconst {\n\t\tconfigData,\n        customColumnProps,\n\t\tdefaultFilter,\n\t\texpandColumnKey,\n\t\texpandLazyLoad,\n\t\texpandParentKey,\n\t\tpageSize,\n\t\trowKey,\n\t\trequestLoadConfig,\n\t} = props;\n\n\tuseEffect(() => {\n        let cleanupFunction = false;\n        const loadData = async () => {\n            if (requestLoadConfig) {\n                // console.log('requestLoadConfig => ', typeof requestLoadConfig);\n                // console.log('requestLoadRows => ', typeof props.requestLoadRows);\n                requestLoadConfig()\n                    .then((response) => {\n                        // let result = response.data;\n                        // console.log('requestLoadConfig -> ', response.data);\n                        if(!cleanupFunction)\n                            setConfig(response.data);\n                    })\n                    .catch(error => notificationError(error, 'Ошибка получения конфигурации') );\n            } else {\n                if(!cleanupFunction)\n                    setConfig(configData);\n            }\n        };\n        loadData();\n        return () => cleanupFunction = true;\n\t}, []);\n\n\tconst columnsByConfig = () =>\n\t\tconfig &&\n\t\tconfig.fields &&\n\t\tconfig.fields.map((item) => {\n\n\t\t\tconst colProps =\n                customColumnProps &&\n                customColumnProps.find(\n                    (render) =>\n                        render.name === item.name || render.name === item.alias\n                );\n\t\t\treturn {\n\t\t\t\tkey: item.name,\n\t\t\t\ttitle: item.header ? item.header : item.name,\n\t\t\t\tdataKey: item.alias ? item.alias : item.name,\n\t\t\t\talign: item.align,\n\t\t\t\twidth: item.width,\n\t\t\t\tresizable: item.resizable,\n\t\t\t\tsortable: item.sortable,\n\t\t\t\thidden: !item.visible,\n\t\t\t\t// cellRenderer: cellR && cellR.cellRender,\n                ...colProps,\n                cellRenderer: (object) => {\n\t\t\t\t\tif (colProps && colProps.cellRenderer)\n\t\t\t\t\t\treturn <colProps.cellRenderer {...object}/>\n\t\t\t\t\t// return colProps.cellRenderer(object) ? colProps.cellRenderer(object) : '---';\n\t\t\t\t\telse\n\t\t\t\t\t\treturn object.cellData\n\t\t\t\t\t\t\t? <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>{object.cellData}</Typography.Text>\n\t\t\t\t\t\t\t: <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>---</Typography.Text> ;\n\t\t\t\t\t// return object.cellData ? object.cellData : '---';\n                },\n\t\t\t};\n\t\t});\n\n\tconst getDefaultFilter = () => {\n\t\tif (config && config.hierarchical && config.hierarchyLazyLoad) {\n\t\t\tconst parentKey = config.hierarchyField\n\t\t\t\t? config.hierarchyField.split('/')[1]\n\t\t\t\t: expandParentKey;\n\t\t\treturn {...defaultFilter, [parentKey]: null};\n\t\t} else return defaultFilter;\n\t};\n\n\tif (config && config.fields) {\n\t\t// console.log('AdvancedTable render table -> ', config);\n\t\treturn (\n\t\t\t<Table\n\t\t\t\t{...props}\n\t\t\t\tref={ref}\n\t\t\t\tcolumns={columnsByConfig()}\n\t\t\t\tdefaultFilter={getDefaultFilter()}\n\t\t\t\trowKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyField\n\t\t\t\t\t\t? config.hierarchyField.split('/')[0]\n\t\t\t\t\t\t: rowKey\n\t\t\t\t}\n\t\t\t\texpandParentKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyField\n\t\t\t\t\t\t? config.hierarchyField.split('/')[1]\n\t\t\t\t\t\t: expandParentKey\n\t\t\t\t}\n\t\t\t\texpandColumnKey={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyView\n\t\t\t\t\t\t? config.hierarchyView\n\t\t\t\t\t\t: expandColumnKey\n\t\t\t\t}\n\t\t\t\texpandLazyLoad={\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyLazyLoad\n\t\t\t\t\t\t? config.hierarchyLazyLoad\n\t\t\t\t\t\t: expandLazyLoad\n\t\t\t\t}\n\t\t\t\tpageSize={config && config.hierarchical ? 1 : pageSize}\n\t\t\t/>\n\t\t);\n\t} else return null;\n});\n\nAdvancedTable.propTypes = {\n\t/** Функция запроса на получение конфига для таблицы */\n\trequestLoadConfig: PropTypes.func,\n\n\t/** Конфигурация внешнего вида таблицы */\n\tconfigData: PropTypes.shape({\n\t\thierarchical: PropTypes.bool,\n\t\thierarchyField: PropTypes.string,\n\t\thierarchyView: PropTypes.string,\n\t\thierarchyLazyLoad: PropTypes.bool,\n\t\tfields: PropTypes.arrayOf(\n\t\t\tPropTypes.shape({\n\t\t\t\tname: PropTypes.string,\n\t\t\t\talias: PropTypes.string,\n\t\t\t\theader: PropTypes.string,\n\t\t\t\tvisible: PropTypes.bool,\n\t\t\t\tresizable: PropTypes.bool,\n\t\t\t\tsortable: PropTypes.bool,\n\t\t\t\talign: PropTypes.oneOf(['left', 'center', 'right']),\n\t\t\t\twidth: PropTypes.number,\n\t\t\t})\n\t\t),\n\t}),\n\n\t/** Дополнительные пропсы для колонок */\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\n};\n\nAdvancedTable.defaultProps = {};\n\nexport default AdvancedTable;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormItems from \"./FormItems\";\nimport { Form as AntForm, notification } from \"antd\";\nimport { getObjectExcludedProps, noop, notificationError } from \"../../utils/baseUtils\";\nimport { rtPrefix } from \"../../utils/variables\";\n\nconst excludeProps = [\"noPadding\", \"scrollable\", \"header\", \"body\", \"footer\", \"loadInitData\", \"autoSaveForm\", \"requestSaveForm\", \"methodSaveForm\", \"processBeforeSaveForm\"];\n\n\nconst Form = (props) => {\n    const { loadInitData, header, body, footer,\n        autoSaveForm, requestSaveForm, methodSaveForm, processBeforeSaveForm } = props;\n\n    /** Состояние первоначалной настройки компонента*/\n    const [loaded, setLoaded] = useState(false);\n    const [antFormProps, setAntFormProps] = useState({});\n    const [initFormData, setInitFormData] = useState({});\n\n    useEffect(() => {\n        if (!loaded) {\n            if (loadInitData !== noop)\n                loadInitData(_setInitFormData);\n            else\n                setLoaded(true);\n        }\n    }, [loaded]);\n\n    useEffect(() => {\n        setAntFormProps(getObjectExcludedProps(props, excludeProps));\n        // console.log('antFormProps props => ', getObjectExcludedProps(props, excludeProps));\n    }, [props]);\n\n\n    const _setInitFormData = (data) => {\n        // console.log(\"Form loaded init data => \", data);\n        setInitFormData(data);\n        setLoaded(true);\n    };\n\n\n    let antForm;\n    if (props && props.form) {\n        antForm = props.form;\n    } else {\n        const [form] = AntForm.useForm();\n        antForm = form;\n    }\n\n    const getBodyCls = () => {\n        let cls = [`${rtPrefix}-form-body`];\n        props.noPadding && cls.push(`${rtPrefix}-form-body-no-padding`);\n        props.scrollable && cls.push(`${rtPrefix}-form-body-scrollable`);\n        return cls.join(\" \");\n    };\n\n    const onFinish = (rawValues) => {\n        const values = processBeforeSaveForm ? processBeforeSaveForm(rawValues) : rawValues;\n        console.log(`Success form [${props.name ? props.name : 'no name form'}]: `, values);\n        if (autoSaveForm && requestSaveForm) {\n            const saveObject = {\n                ...initFormData,\n                ...values,\n                // dateStart: getISO(values['dateStart'])\n            };\n            requestSaveForm({\n                method: methodSaveForm,\n                data: saveObject\n            })\n                .then(response => {\n                    notification.success({\n                        message: \"Сохранение прошло успешно\"\n                    });\n                    if (props.onFinish)\n                        props.onFinish(values);\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\n        } else if (props.onFinish)\n            props.onFinish(values);\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.error(\"Failed:\", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    return (\n        <React.Fragment>\n            {loaded ?\n                <AntForm\n                    form={antForm}\n                    {...antFormProps}\n                    className={`${antFormProps.className} ${rtPrefix}-form`}\n                    style={{ ...antFormProps.style, width: '100%', height: '100%' }}\n                    initialValues={{ ...antFormProps.initialValues, ...initFormData }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                >\n                    {header ? <div className={`${rtPrefix}-form-header`}><FormItems items={header}/></div> : null}\n                    <div className={getBodyCls()}><FormItems items={body}/></div>\n                    {footer ? <div className={`${rtPrefix}-form-footer`}><FormItems items={footer}/></div> : null}\n                </AntForm>\n                : null}\n        </React.Fragment>\n    );\n};\n\nForm.propTypes = {\n\n    /** Не делать отступы у формы от краев блока */\n    noPadding: PropTypes.bool,\n\n    /** scrollable\n     */\n    scrollable: PropTypes.bool,\n\n    /** Массив объектов для шапки формы. Как правило только заголовок. */\n    header: PropTypes.arrayOf(PropTypes.object),\n\n    /** Массив объектов для тела формы */\n    body: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n    /** Массив объектов для подвала формы. Как правило только кнопки \"Сохранить\" и \"Отмена\" */\n    footer: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ссылка на функцию загрузки значений по умолчанию\n     * (callBack) => callBack(initObject) */\n    loadInitData: PropTypes.func,\n\n    /** Производить ли автоматическое сохранение по параметрам requestSaveForm и methodSaveForm */\n    autoSaveForm: PropTypes.bool,\n\n    /** Запрос для автоматического сохранения формы */\n    requestSaveForm: PropTypes.func,\n\n    /** HTTP Метод, передаваемый в запрос сохранения */\n    methodSaveForm: PropTypes.string,\n\n    /** Функция обработки перед сохранением формы */\n    processBeforeSaveForm: PropTypes.func,\n};\n\nForm.defaultProps = {\n    noPadding: false,\n    scrollable: false,\n    loadInitData: noop,\n    autoSaveForm: true\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {getObjectExcludedProps} from '../../utils/baseUtils';\nimport Form from './Form';\nimport {Modal} from 'antd';\n\nconst excludeProps = ['type', 'initialValues', 'form'];\n\nconst FormModal = props => {\n\n    const {\n        modal,\n        selectedRow,\n        visible,\n        setVisible,\n        saveRow,\n    } = props;\n\n    const getDefaultFooterProps = () => {\n\n        let okText = '';\n        let cancelText = '';\n        let modalTitle = '';\n\n        switch (modal.type) {\n            case 'addOnServer':\n            case 'addGroupOnServer':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Сохранить на сервере';\n                break;\n            case 'addOnLocal':\n            case 'addGroupOnLocal':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Сохранить локально';\n                break;\n            case 'editOnServer':\n            case 'editGroupOnServer':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Измененить на сервере';\n                break;\n            case 'editOnLocal':\n            case 'editGroupOnLocal':\n                okText = 'Сохранить';\n                cancelText = 'Отмена';\n                modalTitle = 'Изменение локально';\n                break;\n            case 'select':\n                okText = 'Добавить';\n                cancelText = 'Отмена';\n                modalTitle = 'Выбор';\n                break;\n            case 'viewGroup':\n            case 'viewObject':\n                okText = 'Закрыть';\n                modalTitle = 'Просмотр';\n                break;\n            default: break;\n        }\n\n        if(modal.okText)\n            okText = modal.okText;\n\n        if(modal.cancelText)\n            cancelText = modal.cancelText;\n\n        if(modal.title)\n            modalTitle = modal.title;\n\n        return {okText, cancelText, title: modalTitle, okType: 'primary'}\n    };\n\n    let modalProps = { ...getDefaultFooterProps(), ...getObjectExcludedProps(modal, excludeProps) };\n\n    const onFinish = values => {\n        // console.log('FormModal Success:', values, selectedRow);\n        let saveObj = {};\n        if(modal.type.startsWith('add'))\n            saveObj = {...values};\n        else\n            saveObj = {...selectedRow, ...values};\n\n        saveRow({type: modal.type, row: saveObj, requestSaveRow: modal.requestSaveRow});\n\n        if (modalProps.onOk) modalProps.onOk(values);\n        if (modalProps.onFinish) modalProps.onFinish(values);\n    };\n\n    const onFinishFailed = errorInfo => {\n        // console.log('FormModal Failed:', errorInfo);\n        console.error(\"FormModal fields failed: \", errorInfo);\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\n    };\n\n    const _onCancelHandler = (e) => {\n        // setVisibleModals({ ...visibleModals, [modal.type]: false });\n        // form.resetFields();\n        setVisible(modal.type, false);\n        if (modalProps.onCancel) modalProps.onCancel(e)\n    };\n\n    const _onLoadInitData = (callBack) => {\n        // console.log(\"Modal => loadInitData\", selectedRow);\n        formConfig.loadInitData(callBack, selectedRow)\n    }\n\n    const defaultFooter = [\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.cancelText,\n                className: 'mr-8',\n                onClick: _onCancelHandler,\n                ...modalProps.cancelButtonProps\n            }\n        },\n        {\n            componentType: 'Item',\n            child: {\n                componentType: 'Button',\n                label: modalProps.okText,\n                type: modalProps.okType,\n                htmlType: 'submit',\n                ...modalProps.okButtonProps\n            }\n        }\n    ];\n\n    const formConfig =  {\n        footer: defaultFooter,\n        ...modal.form\n    };\n    return (\n        <Modal\n            {...modalProps}\n            centered\n            destroyOnClose\n            visible={visible}\n            onCancel={_onCancelHandler}\n            bodyStyle={{padding: 0, ...modalProps.bodyStyle}}\n            footer={null}\n        >\n            <Form\n                {...formConfig}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                loadInitData={_onLoadInitData}\n            />\n        </Modal>\n    )\n};\n\nFormModal.propTypes = {\n    /** Объект модального окна */\n    modal: PropTypes.object,\n\n    /** Выделенная строка таблицы */\n    selectedRow: PropTypes.object,\n\n    /** Состояние видимости модалки */\n    visible: PropTypes.bool,\n\n    /** Задание состояния видимости модалки */\n    setVisible: PropTypes.func,\n\n    /** CallBack функция для сохранения данных */\n    saveRow: PropTypes.func,\n};\n\nexport default FormModal;\n","import React, {forwardRef, useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport SortOrder from 'react-base-table/lib/SortOrder';\nimport AdvancedTable from '../AdvancedTable/AdvancedTable';\nimport { generateUUID, getObjectExcludedProps, noop, notificationError } from \"../../utils/baseUtils\";\nimport FormModal from './FormModal';\nimport { notification as antNotification, notification } from \"antd\";\nimport { rtPrefix } from \"../../utils/variables\";\nimport { empty, overlay } from \"../Table/defaultSettings\";\n\n\nconst excludeProps = ['onChange', 'defaultValue', 'modals', 'events', 'history'];\n\nconst FormTable = forwardRef((props, ref) => {\n\n    /** Состояние первоначалной настройки компонента*/\n    const [loading, setLoading] = useState(false);\n\n    /** Состояние отображения модалок таблицы */\n    const [visibleModals, setVisibleModals] = useState({\n        addOnServer: false,\n        editOnServer: false,\n        addOnLocal: false,\n        editOnLocal: false,\n        addGroupOnServer: false,\n        editGroupOnServer: false,\n        addGroupOnLocal: false,\n        editGroupOnLocal: false,\n        select: false,\n        viewGroup: false,\n        viewObject: false});\n    const [tableRows, setTableRows] = useState([]);\n    const [tableSelectedRowKeys, setTableSelectedRowKeys] = useState([]);\n    const [tableSelectedRow, setTableSelectedRow] = useState({});\n\n    /** Ссылка на объект таблицы */\n    const [tableRef, setTableRef] = useState({});\n    const _setTableRef = (_ref) => {\n        setTableRef(_ref);\n        ref && ref(_ref)\n    };\n\n    const {\n        rowKey,\n        rowKeyType,\n        customFields,\n        modals,\n        isGroupKey,\n        history,\n\n        componentType,\n        name,\n\n        // Form.Item props\n        value,\n\n        // Requests\n        requestDeleteRow,\n\n        dataDeleteRow\n    } = props;\n    const cmdProps = props.commandPanelProps;\n\n    // let advancedTableProps = getObjectExcludedProps(props, excludeProps);\n\n    /** Аналог componentDidMounted */\n    useEffect(() => {\n        // Если таблица локальная, то пробуем загрузить исходные данные\n        if(!loading && props.type === 'localSide') {\n            let cleanupFunction = false;\n            setLoading(true);\n            const loadData = async () => {\n                if (!loading && props.requestLoadRows) {\n                    props.requestLoadRows({params: {page: 0, size: 1}, data: {}})\n                        .then((response) => {\n                            // console.log('FormTable -> requestLoadRows -> response', response);\n                            // console.log('FormTable -> requestLoadRows -> value', value);\n                            if (!cleanupFunction)\n                                _addRowsToLocalTable(response.data, value);\n                        })\n                        .catch(error => notificationError(error, 'Ошибка загрузки данных') );\n                }\n                // console.log('FormTable -> setMounted ', advancedTableProps.type);\n                setLoading(false);\n            };\n            loadData();\n            return () => cleanupFunction = true;\n        }\n    }, [props.type]);\n\n    useEffect(() => {\n        if(props.selectable) {\n            console.log(\"FormTable => useEffect => value: \", value);\n            if(value && value.length > 0)\n                setTableSelectedRowKeys(value.map(item => item[rowKey]));\n            else\n                setTableSelectedRowKeys([]);\n\n        }\n    }, [value]);\n\n    /** Получить список кнопок для Command Panel */\n    const getEvents = () => {\n        return (cmdProps && cmdProps.systemBtnProps && Object.keys(cmdProps.systemBtnProps)) || [];\n    };\n\n    /** Получить рендер модалок */\n    const getModals = () => {\n        return modals.map((modal, index) => {\n            return (\n                <FormModal\n                    key={index}\n                    modal={modal}\n                    selectedRow={tableSelectedRow}\n                    visible={visibleModals[modal.type]}\n                    setVisible={(type, value) => setVisibleModals({ ...visibleModals, [type]: value })}\n                    saveRow={_onSaveRow}\n                />\n            )\n\n        })\n    };\n\n    /** Проверка существования кнопки в Command Panel */\n    const isExistCmdBtn = (btnType) => (cmdProps && cmdProps.systemBtnProps && cmdProps.systemBtnProps[btnType]);\n\n    /** Проверка соответствия типа кнопки и события ? (params) === (props) */\n    const equalsActionTypeCmdBtn = (btnType, actionType) => {\n        if(isExistCmdBtn(btnType)) {\n            if(btnType === 'edit') {\n                const aTypes = actionType.split('/');\n                if(aTypes[0] === 'g') {\n                    return !!(cmdProps.systemBtnProps[btnType].actionType\n                        && cmdProps.systemBtnProps[btnType].actionType.length === 2\n                        && cmdProps.systemBtnProps[btnType].actionType[1] === aTypes[1]);\n                }\n                else if (aTypes[0] === 'i') {\n                    return !!(cmdProps.systemBtnProps[btnType].actionType\n                        && cmdProps.systemBtnProps[btnType].actionType.length === 2\n                        && cmdProps.systemBtnProps[btnType].actionType[0] === aTypes[1]);\n                }\n            } else {\n                return !!(cmdProps.systemBtnProps[btnType].actionType\n                    && cmdProps.systemBtnProps[btnType].actionType === actionType);\n            }\n        }\n        return false;\n    };\n\n    /** Command Panel Events */\n    /** Добавить */\n    const _onClickAddHandler = () => {\n        if(equalsActionTypeCmdBtn('add', 'modal')) {\n            // console.log(\"FormTable => _onClickAddHandler => modal\");\n            if (props.type !== 'localSide') {\n                setVisibleModals({...visibleModals, addOnServer: true});\n            } else {\n                if (modals && (modals.find(modal => modal.type === 'select') !== undefined)) {\n                    setVisibleModals({...visibleModals, select: true});\n                    // console.log(\"FormTable => _onClickAddHandler => select\", modals.find(modal => modal.type === 'select'));\n                } else {\n                    setVisibleModals({...visibleModals, addOnLocal: true});\n                    // console.log(\"FormTable => _onClickAddHandler => addOnLocal\"); location.pathname\n                }\n            }\n        } else if (equalsActionTypeCmdBtn('add', 'page')) {\n            history.push(`${history.location.pathname}/new`);\n        }\n    };\n\n    /** Добавить копированием */\n    const _onClickAddAsCopyHandler = (event, row) => {\n        _addRowToLocalTable(row);\n    };\n\n    /** Добавить группу */\n    const _onClickAddGroupHandler = () => {\n        if(equalsActionTypeCmdBtn('addGroup', 'modal')) {\n            // console.log(\"FormTable => _onClickAddGroupHandler => modal\");\n            if (props.type !== 'localSide')\n                setVisibleModals({...visibleModals, addGroupOnServer: true});\n            else\n                setVisibleModals({...visibleModals, addGroupOnLocal: true});\n        } else if (equalsActionTypeCmdBtn('addGroup', 'page')) {\n            // console.log(\"FormTable => _onClickAddGroupHandler => page\");\n            history.push(`${history.location.pathname}/newGroup`);\n        }\n    };\n\n    /** Изменить */\n    const _onClickEditHandler = (event, {rowData}) => {\n        // console.log(\"FormTable -> _onClickEditHandler -> row \", rowData, props.type);\n        if (rowData[isGroupKey]) {\n            if (equalsActionTypeCmdBtn('edit', 'g/modal')) {\n                // console.log(\"FormTable => _onClickEditHandler => g/modal\");\n                if (props.type !== 'localSide')\n                    setVisibleModals({...visibleModals, editGroupOnServer: true});\n                else\n                    setVisibleModals({...visibleModals, editGroupOnLocal: true});\n            } else if (equalsActionTypeCmdBtn('edit', 'g/page')) {\n                // console.log(\"FormTable => _onClickEditHandler => g/page\");\n                history.push(`${history.location.pathname}/${rowData[rowKey]}`);\n            }\n        } else {\n            if (equalsActionTypeCmdBtn('edit', 'i/modal')) {\n                // console.log(\"FormTable => _onClickEditHandler => i/modal\");\n                if (props.type !== 'localSide')\n                    setVisibleModals({...visibleModals, editOnServer: true});\n                else\n                    setVisibleModals({...visibleModals, editOnLocal: true});\n            } else if (equalsActionTypeCmdBtn('edit', 'i/page')) {\n                // console.log(\"FormTable => _onClickEditHandler => i/page\");\n                history.push(`${history.location.pathname}/${rowData[rowKey]}`);\n            }\n        }\n    };\n\n    /** Удалить */\n    const _onClickDelete = (event, _selectedRowKeys) => {\n        if(props.type === 'localSide') {\n            const _rows = tableRows.filter(\n                (item) => !_selectedRowKeys.includes(item[rowKey])\n            );\n            setTableRows(_rows);\n            _onChange(_rows);\n        } else {\n            if(_selectedRowKeys && _selectedRowKeys.length > 0 && requestDeleteRow){\n                const deleteData = _selectedRowKeys.map(item => { return {[rowKey]: item, ...dataDeleteRow} } );\n                requestDeleteRow({data: {deleteData: deleteData}})\n                    .then((response) => {\n                        antNotification.success({message: 'Успешное удаленение'});\n                        tableRef && tableRef.reloadData({});\n\n                    })\n                    .catch(error => {\n                        notificationError(error, 'Ошибка удаления записи');\n                        tableRef && tableRef.reloadData({});\n                    });\n            }\n        }\n        cmdProps.onClickDelete && cmdProps.onClickDelete(event, _selectedRowKeys);\n    };\n\n    /** Переместить вверх / вниз */\n    const _onClickUpHandler = (event, row, rows) => {\n        _onChange(rows);\n        cmdProps.onClickUp && cmdProps.onClickUp(event, row, rows);\n    };\n\n    const _onClickDownHandler = (event, row, rows) => {\n        _onChange(rows);\n        cmdProps.onClickDown && cmdProps.onClickDown(event, row, rows);\n    };\n\n    /** Modal Events */\n    const _onSaveRow = ({type, row, requestSaveRow}) => {\n        // console.log(\"FormTable -> _saveRow -> row \", row);\n        if(type === 'select') {\n            // Получить массив строк из таблицы в модальной форме\n            let selectRows = row[name];\n            // console.log(\"FormTable -> _onSaveRow -> row [0]\", row);\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [0]\", selectRows);\n\n            // Фильтрация выбранных строк, оставить только те которых еще нет в таблице\n            let saveRows = selectRows.filter((sRow) =>\n                tableRows.findIndex((tRow) => tRow[rowKey] === sRow[rowKey]) === -1\n            );\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [1]\", saveRows);\n            if (customFields)\n                // Фильтрация по пользовательским параметрам\n                saveRows = saveRows.filter((sRow) => {\n                    let isValid = [];\n                    customFields.forEach((field) => {\n                        // Валидация по пользовательской логике функции validate\n                        if(field.validate)\n                            isValid.push(field.validate(sRow, tableRows));\n\n                        // Создание или переобразование по пользовательской логике функции value\n                        if(field.value)\n                            sRow[field.name] = field.value(sRow, tableRows);\n                    });\n                    // console.log('_addRows isValid', isValid);\n                    if(!isValid.includes(false))\n                        return sRow;\n                });\n            setVisibleModals({ ...visibleModals, [type]: false });\n            notification.success({\n                message: `Добавлено ${saveRows.length} строк`\n            });\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [2]\", saveRows);\n            _addRowsToLocalTable([...tableRows, ...saveRows]);\n        }\n        else {\n            let saveRow = {...row};\n            if(type.indexOf('Group') !== -1)\n                saveRow[isGroupKey] = true;\n            else\n                saveRow[isGroupKey] = false;\n            if (customFields)\n                customFields.forEach((field) => saveRow[field.name] = field.value(saveRow, tableRows));\n            switch (type) {\n                case 'addOnServer':\n                case 'editOnServer':\n                case 'addGroupOnServer':\n                case 'editGroupOnServer':\n                    _addRowToServerTable({requestSaveRow, type, saveRow});\n                    break;\n                case 'addOnLocal':\n                case 'addGroupOnLocal':\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    _addRowToLocalTable(saveRow);\n                    break;\n                case 'editOnLocal':\n                case 'editGroupOnLocal':\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    _editRowToLocalTable(saveRow);\n                    break;\n\n                //            addGroupOnServer: false,\n                //         editGroupOnServer: false,\n                //         addGroupOnLocal: false,\n                //         editGroupOnLocal: false,\n                // case 'select':\n                case 'viewGroup':\n                case 'viewObject':\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    break;\n            }\n            // console.log(\"Modal Events => type: \", type, itemName, componentType, saveRow);\n        }\n\n    };\n\n    const _addRowToLocalTable = (row) => {\n        let saveObj = {...row};\n        if(rowKeyType === 'uuid')\n            saveObj[rowKey] = generateUUID();\n\n        // console.log('_addRowToLocalTable', tableRows);\n        _addRowsToLocalTable([...tableRows, saveObj]);\n    };\n\n    const _editRowToLocalTable = (row) => {\n        let arr = [...tableRows];\n        const rowIndex = arr.findIndex(item => item[rowKey] === row[rowKey]);\n        arr.splice(rowIndex, 1, row);\n        setTableRows(arr);\n        setTableSelectedRow(row);\n        _onChange(arr);\n    };\n\n    const _addRowsToLocalTable = (rows, keys) => {\n        // console.log('FormTable -> _addRowsToLocalTable -> rows', rows, keys);\n        setTableRows(rows);\n        if(props.selectable)\n            _onChange(keys);\n        else\n            _onChange(rows);\n    };\n\n    const _addRowToServerTable = ({requestSaveRow, type, saveRow}) => {\n        if (requestSaveRow\n            && ['addOnServer', 'editOnServer', 'addGroupOnServer', 'editGroupOnServer'].includes(type)\n        ) {\n            const method = (type === 'addOnServer' || type === 'addGroupOnServer') ? 'POST' : 'PUT';\n            // console.log(\"Modal Events => type: \", type, itemName, componentType, saveRow);\n            requestSaveRow({\n                method,\n                data: saveRow,\n            })\n                .then(response => {\n                    notification.success({\n                        message: 'Сохранение прошло успешно'\n                    });\n                    setVisibleModals({ ...visibleModals, [type]: false });\n                    tableRef && tableRef.reloadData({ filter: props.defaultFilter});\n                    // ref && ref.current && ref.current.reloadData({ filter: props.defaultFilter});\n                    // console.log('_addRowToServerTable tableRef =>', tableRef);\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\n        }\n    };\n\n    const _onRowClick = ({selected, rowData, rowIndex, rowKey}) => {\n        if(!props.selectable) {\n            setTableSelectedRow(rowData);\n            setTableSelectedRowKeys([rowKey]);\n            if(componentType === 'SelectTable')\n                _onChange([rowData]);\n        }\n        props.onRowClick && props.onRowClick({selected, rowData, rowIndex, rowKey});\n    };\n\n    const _onRowDoubleClick = ({rowData, rowIndex, rowKey}) => {\n        if (rowData[isGroupKey]) {\n            setVisibleModals({...visibleModals, viewGroup: true});\n        } else {\n            setVisibleModals({...visibleModals, viewObject: true});\n        }\n        props.onRowDoubleClick && props.onRowDoubleClick({rowData, rowIndex, rowKey});\n    };\n\n    const _onSelectedRowsChange = (keys, rows) => {\n        // console.log(\"_onSelectedRowsChange\", keys, rows);\n        if(props.selectable) {\n            setTableSelectedRow(rows[0]);\n            setTableSelectedRowKeys(keys);\n            _onChange(rows);\n        }\n    };\n\n    const _onChange = (rows) => {\n        if(rows !== undefined)\n            props.onChange(rows);\n        else\n            props.onChange(tableRows);\n    };\n\n    const getTableCls = () => {\n        let cls = [`${rtPrefix}-form-table`];\n        if (props.className)\n            cls.push(props.className);\n        return cls.join(' ');\n    };\n\n    return (\n        <div className={getTableCls()} style={props.style} >\n            <AdvancedTable\n                ref={_setTableRef}\n                {...getObjectExcludedProps(props, excludeProps)}\n                rows={tableRows}\n                setRows={setTableRows}\n                // selectedRowKeys={tableSelectedRow[rowKey] ? [tableSelectedRow[rowKey]] : []}\n                selectedRowKeys={tableSelectedRowKeys}\n                onRowClick={_onRowClick}\n                onRowDoubleClick={_onRowDoubleClick}\n                onSelectedRowsChange={_onSelectedRowsChange}\n                autoDeleteRows={false}\n                commandPanelProps={{\n                    ...props.commandPanelProps,\n                    showElements: getEvents(),// getShowElements(),\n                    onClickAdd: _onClickAddHandler,\n                    onClickAddAsCopy: _onClickAddAsCopyHandler,\n                    onClickAddGroup: _onClickAddGroupHandler,\n                    onClickEdit: _onClickEditHandler,\n                    onClickDelete: _onClickDelete,\n                    onClickDown: _onClickDownHandler,\n                    onClickUp: _onClickUpHandler,\n                }}\n                filterPanelProps={{\n                    ...props.filterPanelProps,\n                    // onApplyFilter: (filter) => console.log('filter', filter)\n                }}\n            />\n            {modals && getModals()}\n        </div>\n    );\n});\n\nFormTable.propTypes = {\n    /** Объект со свойствами Command Panel */\n    commandPanelProps: PropTypes.object,\n\n    /** Объект со свойствами Filter Panel */\n    filterPanelProps: PropTypes.object,\n\n    /**\n     * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\n     * */\n\n    /** Строки по умолчанию */\n    defaultRows: PropTypes.arrayOf(PropTypes.object),\n\n    /** Ключи выделенных по умолчанию строк */\n    defaultSelectedRowKeys: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n\n    /** Значение строки поиска по умолчанию строк */\n    defaultSearchValue: PropTypes.string,\n\n    /** Объект фильтрации по умолчанию */\n    defaultFilter: PropTypes.object,\n\n    /** Сортировка по умолчанию */\n    defaultSortBy: PropTypes.shape({\n        key: PropTypes.string,\n        order: PropTypes.oneOf([SortOrder.ASC, SortOrder.DESC]),\n    }),\n\n    /**\n     * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\n     * */\n\n    /** Значение строки поиска */\n    searchValue: PropTypes.string,\n\n    /** Фильтр */\n    filter: PropTypes.object,\n\n    /** Объект сортировки ({ key: 'string', order: 'asc' }).\n     * key - поле по которому сотрировать,\n     * order - направление сортировки (\"asc\", \"desc\")\n     * */\n    sortBy: PropTypes.shape({\n        key: PropTypes.string,\n        order: PropTypes.oneOf([SortOrder.ASC, SortOrder.DESC]),\n    }),\n\n    /**\n     * BASE PROPS\n     * */\n\n    /** Автоудаление строк из таблицы по кнопке в командной панели*/\n    autoDeleteRows: PropTypes.bool,\n\n    /** Поле для уникальной идентификации строки */\n    rowKey: PropTypes.string,\n\n    /** Тип поля для уникальной идентификации строки */\n    rowKeyType: PropTypes.oneOf(['uuid', 'number']),\n\n    /**\n     * VIEW PROPS\n     * */\n\n    /** Вывод когда нет данных. JSX для заглушки \"Нет данных\".  */\n    empty: PropTypes.element,\n\n    /** Отображение загрузки данных. JSX для загрузки данных. */\n    overlay: PropTypes.element,\n\n    /** Фиксированная ширина столбцов. Появится боковой скрол */\n    fixWidthColumn: PropTypes.bool,\n\n    /** Высота подвала */\n    footerHeight: PropTypes.number,\n\n    /** Отображать ли подвал */\n    footerShow: PropTypes.bool,\n\n    /** Названия футтера */\n    footerTitles: PropTypes.shape({\n        selectedRows: PropTypes.string,\n        loadedRows: PropTypes.string,\n        totalRows: PropTypes.string,\n    }),\n\n    /** Высота заголовка таблицы */\n    headerHeight: PropTypes.number,\n\n    /** Высота строки таблицы */\n    rowHeight: PropTypes.number,\n\n    /** Custom row renderer\n     * Параметры - ({ isScrolling, cells, columns, rowData, rowIndex, depth }) */\n    rowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n\n    /** Строки будут в зебро-стиле */\n    zebraStyle: PropTypes.bool,\n\n    /**\n     * LOAD DATA PROPS\n     * */\n\n    /** Порог в пикселях для вызова _onLoad.\n     * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\n    loadThreshold: PropTypes.number,\n\n    /** Размер страницы */\n    pageSize: PropTypes.number,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadCount: PropTypes.func,\n\n    /** Имя параметра для поиска */\n    searchParamName: PropTypes.string,\n\n    /**\n     * SELECTABLE PROPS\n     * */\n\n    /** Таблица с возможностью выбора строки */\n    selectable: PropTypes.bool,\n\n    /**\n     * TREE PROPS\n     * */\n\n    /** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\n    nodeAssociated: PropTypes.bool,\n\n    /** Ключ колонки по которой строить иерархию */\n    expandColumnKey: PropTypes.string,\n\n    /** Открыть по умолчанию вложенность до уровня N или 'All' */\n    expandDefaultAll: PropTypes.bool,\n\n    /** Загружать ноды иерархии по одной */\n    expandLazyLoad: PropTypes.bool,\n\n    /** Поле в котором хранится ссылка на родителя */\n    expandParentKey: PropTypes.string,\n\n    /**\n     * EVENTS\n     * */\n\n    /** Событие при клике на строку (только при selectable = false)\n     * Параметр - ({selected, rowData, rowIndex}) */\n    onRowClick: PropTypes.func,\n\n    /** Событие при двойном клике на строку.\n     * Параметр - ({rowData, rowIndex, rowKey}) */\n    onRowDoubleClick: PropTypes.func,\n\n    /** События при открытии / закрытии ноды\n     * Парметры - ({ expanded, rowData, rowIndex, rowKey }) */\n    onRowExpand: PropTypes.func,\n\n    /** Событие при выборе строки.\n     * Параметр - массив выбранных строе (только rowKey) */\n    onSelectedRowsChange: PropTypes.func,\n\n    /** События при открытии / закрытии ноды\n     * Парметры - (expandedRowKeys) - массив ключей открытых нод */\n    onExpandedRowsChange: PropTypes.func,\n\n    /** SELECTED PANEL */\n\n    /** Отображать ли панель выбранных элементов */\n    showSelection: PropTypes.bool,\n\n    /** Строка или функция для отображения элементов списка выбранных\n     * Строка - имя поля\n     * Функция - рендер строк.\n     * Параметры - ({ rowData, rowIndex }) */\n    rowRenderShowSelection: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.string,\n    ]),\n\n\n    /** Дополнительные пропсы для колонок */\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\n\n    /** Дополнительные поля и валидация в объекты таблицы */\n    customFields: PropTypes.arrayOf(PropTypes.object),\n\n    /** Модальные окна */\n    modals: PropTypes.arrayOf(PropTypes.object),\n\n    /** Событие об изменении объектов таблицы\n     * Параметр - (rows)*/\n    onChange: PropTypes.func,\n\n    /** implemented - только для (LocalTable + selectable) - Контроль значение из вне */\n    // value: PropTypes.arrayOf(PropTypes.object),\n\n    /** Not implemented - Задание значений по умолчанию */\n    defaultValue: PropTypes.arrayOf(PropTypes.object),\n\n    /** Классы стилей */\n    className: PropTypes.string,\n\n    /** Стили */\n    style: PropTypes.object,\n\n    /** Поле для идентификации группы */\n    isGroupKey: PropTypes.string,\n\n    /** Объект history для перемещения по путям */\n    history: PropTypes.object,\n\n    /** Функция запроса на получение конфига для таблицы */\n    requestLoadConfig: PropTypes.func,\n\n    /** Функция запроса на уделание данных */\n    requestDeleteRow: PropTypes.func,\n\n    /** Параметры объекта удаления */\n    dataDeleteRow: PropTypes.object,\n};\n\nFormTable.defaultProps = {\n    defaultRows: [],\n    defaultSelectedRowKeys: [],\n    defaultSearchValue: '',\n    defaultFilter: {},\n    defaultSortBy: {},\n\n    searchValue: '',\n    filter: {},\n    sortBy: {},\n\n    autoDeleteRows: true,\n    rowKey: 'id',\n\n    empty: empty,\n    overlay: overlay,\n    fixWidthColumn: false,\n    footerHeight: 30,\n    footerShow: false,\n    footerTitles: {\n        selectedRows: 'Выделено:',\n        loadedRows: 'Загружено записей:',\n        totalRows: 'Всего записей:',\n    },\n    headerHeight: 30,\n    rowHeight: 30,\n    zebraStyle: false,\n\n    loadThreshold: 300,\n    pageSize: 50,\n    requestLoadRows: noop,\n    requestLoadCount: noop,\n    searchParamName: 'searchLine',\n\n    selectable: false,\n\n    nodeAssociated: true,\n    expandColumnKey: undefined,\n    expandDefaultAll: true,\n    expandLazyLoad: false,\n    expandParentKey: 'parentId',\n\n    onRowClick: noop,\n    onRowDoubleClick: noop,\n    onRowExpand: noop,\n    onSelectedRowsChange: noop,\n    onExpandedRowsChange: noop,\n\n    showSelection: false,\n\n    rowKeyType: 'uuid',\n    onChange: noop,\n    isGroupKey: 'isGroup',\n};\n\nexport default FormTable;\n","import React, {useState, useEffect} from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../../redux/rtd.actions\";\nimport {getObjectExcludedProps} from '../../utils/baseUtils';\nimport moment from \"moment\";\nimport { Typography as AntTypography } from \"antd\";\nimport { getISO, toFormat } from \"../../utils/datesUtils\";\n\nexport const withStore = (Component, antFormItemProps) => {\n\n    const mapStateToProps = (store, ownProps) => {\n        const {subscribe} = ownProps;\n        if(subscribe){\n            const {name, path} = subscribe;\n            if(name && path)\n                return { [name]: objectPath.get(store, path) };\n        }\n\n        return {};\n    };\n    const mapDispatchToProps = (dispatch) =>\n        bindActionCreators({ setDateStore: setDateStore}, dispatch);\n\n    const defaultGetValueFromEvent = (valuePropName, event) => {\n        if (event && event.target && valuePropName in event.target) {\n            return event.target[valuePropName];\n        }\n        return event;\n    };\n\n    const defaultProps = {\n        trigger: 'onChange',\n        valuePropName: 'value',\n    };\n\n    const withStoreProps = { ...defaultProps, ...antFormItemProps };\n\n    return connect(mapStateToProps, mapDispatchToProps)( (props) => {\n\n        const {dispatchPath} = props;\n\n        const subscribe = props.subscribe ? props.subscribe : {};\n\n        const [subscribeProps, setSubscribeProps] = useState({});\n\n        const {trigger, getValueFromEvent, valuePropName} = withStoreProps;\n\n        const excludeProps = ['componentType', 'setDateStore', 'subscribe', subscribe.name, 'dispatchPath'];\n\n        const getValue = (...args) => {\n            let newValue;\n            if (getValueFromEvent) {\n                newValue = getValueFromEvent(...args);\n                // console.log(\"storeHOC => getValueFromEvent: \", newValue);\n            } else {\n                newValue = defaultGetValueFromEvent(valuePropName, ...args);\n                // console.log(\"storeHOC => defaultGetValueFromEvent: \", newValue);\n            }\n            return newValue;\n        };\n\n        /** Подписка на изменение props[subscribe.name] в сторе */\n        useEffect( () => {\n            if(subscribe.name) {\n                // console.log(\"storeHOC => subscribe: \", props[subscribe.name]);\n                subscribe.onChange && subscribe.onChange({value: props[subscribe.name], setSubscribeProps});\n            }\n            // console.log(\"Change Props[2]: \", props.subscribeЗф);\n        }, [props[subscribe.name]]);\n\n        useEffect(() => {\n            // dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, props.value);\n            if(dispatchPath) {\n                const newValue = props[valuePropName];\n                // console.log(\"storeHOC => dispatch: \", newValue);\n                dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, newValue);\n            }\n        }, [props]);\n\n        useEffect(() => {\n            if(subscribeProps.value) {\n                // console.log('subscribeProps.value => ', subscribeProps.value);\n                props[trigger] && props[trigger](subscribeProps.value);\n            }\n        }, [subscribeProps.value]);\n\n        const onChange = (...args) => {\n            // const newValue = getValue(...args);\n            // dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, newValue);\n            props[trigger] && props[trigger](...args);\n        };\n\n        const childProps = getObjectExcludedProps(props, excludeProps);\n        return <Component {...childProps} {...subscribeProps} {...{[trigger]: onChange }}/>\n    })\n};\n\n\nexport const DatePickerHOC = (Component) => {\n    return props => {\n        // console.log(\"DatePickerHOC => \", props);\n        if(props.value){\n            if(typeof props.value === 'string'){\n                // console.log(\"DatePickerHOC => onChange => string\");\n                props.onChange(moment(props.value), props.value);\n            }\n            // else {\n            // \tconsole.log(\"DatePickerHOC => onChange => moment\");\n            // \tprops.onChange(props.value, props.format ? toFormat(props.value,props.format) : getISO(props.value));\n            // }\n        }\n        const value = props.value ? (typeof props.value === 'string' ? moment(props.value) : props.value) : null;\n        return <Component {...props} value={value} />\n    };\n};\n\nexport const TypographyTitle = (props) =>\n    <AntTypography.Title {...props}> {props.label || props.value} </AntTypography.Title>;\n\nexport const TypographyText = (props) =>\n    <AntTypography.Text {...props}> {props.label || props.value} </AntTypography.Text>;\n\nexport const TypographyDate = (props) => {\n    const {label, value, format } = props;\n    const _value = value ? (format ? toFormat(value, format) : getISO(value)) : null;\n    return <AntTypography.Text {...props}> {label || _value} </AntTypography.Text>;\n}\n","const getTitle = (type, element) => {\n    if(element === 'Group')\n        if(type === 'edit')\n            return 'Изменение папки';\n        else\n            return 'Создание папки';\n    else\n        return 'Изменение файла';\n};\n\nconst Modal = (type, element, requestSaveRow, processBeforeSaveForm, parentLoadHandler, requestLoadRows) => {\n    // console.log(\"FolderModal\", type, requestSaveRow, processBeforeSaveForm, parentLoadHandler, requestLoadRows);\n    let selectedRow;\n    return {\n        type: `${type}${element}OnServer`,\n        title: getTitle(type, element),\n        requestSaveRow: requestSaveRow,\n        width: 500,\n        // bodyStyle: {height: 650},\n        form: {\n            name: 'FileManagerModalModal',\n            labelCol: {span: 8},\n            wrapperCol: {span: 16},\n            processBeforeSaveForm: (rawValues) => processBeforeSaveForm(rawValues, type, element),\n            loadInitData: (callBack, row) => {\n                selectedRow = row;\n                callBack(type === 'edit' ? row : null);\n            },\n            body: [\n                {\n                    componentType: 'Item',\n                    label: 'Наименование',\n                    name: 'name',\n                    rules: [\n                        {\n                            message: `Заполните наименование`,\n                            required: true,\n                        },\n                    ],\n                    child: {componentType: 'Input'},\n                },\n                type === 'edit'\n                    ? {\n                        componentType: 'Item',\n                        label: 'Родитель',\n                        name: 'parentId',\n                        child: {\n                            componentType: 'SingleSelect',\n                            widthControl: 0,\n                            heightPopup: 300,\n                            expandColumnKey: 'id',\n                            rowRender: 'name',\n                            nodeAssociated: false,\n                            expandDefaultAll: true,\n                            // (info) аналогично ({params, data})\n                            // Но поскольку тут раскрывать объект не нужно, мы можем просто передать его дальше\n                            requestLoadRows: (info) => parentLoadHandler(type, selectedRow, info),\n                            requestLoadDefault: requestLoadRows,\n                        },\n                    }\n                    : {},\n            ],\n        },\n    };\n};\n\nexport const AddFolderModal = (...args) => Modal('add', 'Group', ...args);\nexport const EditFolderModal = (...args) => Modal('edit', 'Group', ...args);\nexport const EditFileModal = (...args) => Modal('edit', '', ...args);\n\n","import {notification} from 'antd';\n\nexport const copyTextToClipboard = text => {\n\tif (!navigator.clipboard) {\n\t\tfallbackCopyTextToClipboard(text);\n\t\treturn;\n\t}\n\tnavigator.clipboard.writeText(text).then(\n\t\tfunction() {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'success',\n\t\t\t\t'Успешно',\n\t\t\t\t`[${text}] успешно копирован в буфер обмена`\n\t\t\t);\n\t\t},\n\t\tfunction(err) {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'error',\n\t\t\t\t'Ошибка',\n\t\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\n\t\t\t);\n\t\t}\n\t);\n};\n\nconst fallbackCopyTextToClipboard = text => {\n\tlet textArea = document.createElement('textarea');\n\ttextArea.value = text;\n\n\t// Avoid scrolling to bottom\n\ttextArea.style.top = '0';\n\ttextArea.style.left = '0';\n\ttextArea.style.position = 'fixed';\n\n\tdocument.body.appendChild(textArea);\n\ttextArea.focus();\n\ttextArea.select();\n\n\ttry {\n\t\tlet successful = document.execCommand('copy');\n\t\tif (successful) {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'success',\n\t\t\t\t'Успешно',\n\t\t\t\t`[${text}] успешно копирован в буфер обмена`\n\t\t\t);\n\t\t} else {\n\t\t\topenNotificationWithIcon(\n\t\t\t\t'error',\n\t\t\t\t'Ошибка',\n\t\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\n\t\t\t);\n\t\t}\n\t} catch (err) {\n\t\topenNotificationWithIcon(\n\t\t\t'error',\n\t\t\t'Ошибка',\n\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\n\t\t);\n\t}\n\tdocument.body.removeChild(textArea);\n};\n\nconst openNotificationWithIcon = (type, title, msg) => {\n\tnotification[type]({\n\t\tmessage: title,\n\t\tdescription: msg\n\t});\n};\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormTable from \"../Form/FormTable\";\nimport {Button, Upload, notification as antNotification, Spin, Typography, Tooltip} from 'antd';\nimport {\n    HomeOutlined,\n    RollbackOutlined,\n    FolderFilled,\n    FileOutlined,\n    PlusOutlined,\n    LoadingOutlined,\n    FileWordOutlined,\n    FileExcelOutlined,\n    FileImageOutlined,\n    FileMarkdownOutlined,\n    FilePdfOutlined,\n    FilePptOutlined,\n    FileTextOutlined,\n    FileZipOutlined,\n    CopyOutlined\n} from '@ant-design/icons';\nimport { AddFolderModal, EditFileModal, EditFolderModal } from \"./AddFolderModal\";\nimport { rtPrefix } from \"../../utils/variables\";\nimport { toDDMMYYYYHHMMSS } from \"../../utils/datesUtils\";\nimport { copyTextToClipboard } from \"../../utils/clipboardUtils\";\nimport { notificationError } from \"../../utils/baseUtils\";\n\nconst FileManager = props => {\n\n    const {\n        rowKey,\n        isGroupKey,\n        expandParentKey\n    } = props;\n\n    const [tableRef, setTableRef] = useState({});\n    const _setTableRef = (ref) => setTableRef(ref);\n\n    // const tableRef = React.createRef();\n\n    const [breadcrumb, setBreadcrumb] = useState([{[rowKey]: null, name: <HomeOutlined />}]);\n    const [tableFilter, setTableFilter] = useState({deleted: false, [expandParentKey]: null});\n\n\n\n    /**\n     * TABLE EVENTS\n     */\n\n    // Down to folder OR download file\n    const _onRowDoubleClick = ({rowData, rowIndex, rowKey}) => {\n        if(rowData.isGroup) {\n            loadTable([...breadcrumb, rowData], { [expandParentKey]: rowKey });\n        } else {\n            props.requestDownloadFile(rowKey)\n        }\n        props.onRowDoubleClick && props.onRowDoubleClick({rowData, rowIndex, rowKey});\n    };\n\n    // Jump to folder\n    const _onClickBreadcrumb = (parentId, index) => {\n        loadTable(breadcrumb.slice(0, index), {[expandParentKey]: parentId})\n    };\n\n    // Up to folder\n    const _onClickBack = () => {\n        if(breadcrumb.length > 1) {\n            const newBreadcrumb = breadcrumb.slice(0, breadcrumb.length - 1);\n            // setBreadcrumb(newBreadcrumb);\n            // tableRef && tableRef.reloadData({ filter: { parentId: newBreadcrumb[newBreadcrumb.length - 1].id } });\n            loadTable(newBreadcrumb, { [expandParentKey]: newBreadcrumb[newBreadcrumb.length - 1][rowKey] })\n        }\n    };\n\n    // Delete folder OR file\n    const _onClickDelete = (event, _selectedRowKeys) => {\n        if(_selectedRowKeys && _selectedRowKeys.length > 0){\n            props.requestDeleteRow({data: {[rowKey]: _selectedRowKeys[0], deleted: true}})\n                .then((response) => {\n                    antNotification.success({message: 'Файл успешно удален'});\n                    tableRef && tableRef.reloadData({filter: tableFilter});\n                })\n                .catch(error => {\n                    notificationError(error, 'Ошибка удаления файла');\n                    tableRef && tableRef.reloadData({filter: tableFilter});\n                });\n        }\n    };\n\n    /**\n     * TABLE FUNCs\n     */\n    const loadTable = (breadcrumb, filter) => {\n        setBreadcrumb(breadcrumb);\n        const newFilter = {...tableFilter, ...filter};\n        setTableFilter(newFilter);\n        tableRef && tableRef.reloadData({filter: newFilter});\n    };\n\n\n    /**\n     * MODAL FUNCs\n     */\n    const processBeforeSaveModal = (rawValues, type, element) => {\n        let values = {...rawValues};\n        if(type === 'add')\n            values[expandParentKey] = breadcrumb[breadcrumb.length - 1][rowKey];\n\n        if(element === 'Group')\n            values.extension = 'dir';\n        // console.log(\"FileManager values =>\", values);\n        return values;\n    };\n\n    const parentLoadHandler = (type, selectedRow, {params, data}) => {\n        let newData = {...data, [isGroupKey]: true};\n        if (type === 'edit') newData.owner = selectedRow && selectedRow[rowKey];\n        return props.requestLoadParent({ params, data: newData, });\n    };\n\n    // const _onChangeViewDeleted = (checked) => {\n    //     const newFilter = {...tableFilter, deleted: checked };//? undefined : checked};\n    //     setTableFilter(newFilter);\n    //     tableRef && tableRef.reloadData({filter: newFilter});\n    // };\n\n    // console.log(\"EditFolderModal\", EditFolderModal(props.requestSaveRow, processBeforeSaveForm));\n\n\n    /**\n     * UPLOAD FUNCs\n     */\n\n    const _uploadFile = (file) => {\n        // console.log('beforeUpload fileList => ', fileList);\n        notification(file, 'loading');\n        if (props.requestUploadFile) {\n            props.requestUploadFile({ file: file, [expandParentKey]: breadcrumb[breadcrumb.length - 1][rowKey] })\n                .then((response) => {\n                    notification(file, 'success');\n                    tableRef && tableRef.reloadData({ filter: tableFilter });\n                })\n                .catch(() => {\n                    notification(file, 'error');\n                    tableRef && tableRef.reloadData({ filter: tableFilter });\n                });\n        }\n        return false;\n    };\n\n    const notification = (file, type) => {\n        const notifProps = {\n            key: file.uid,\n            duration: type === 'loading' ? 0 : 5,\n            icon: type === 'loading'\n                ? <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n                : null,\n            message: <span>Загрузка файла: <Typography.Text code>{file.name}</Typography.Text></span>\n        };\n        switch (type) {\n            case 'loading':\n                antNotification.info(notifProps);\n                break;\n            case 'success':\n                antNotification.success(notifProps);\n                break;\n            case 'error':\n                antNotification.error(notifProps);\n                break;\n            case 'close':\n                antNotification.close(file.uid);\n                break;\n            default:\n                break;\n        }\n    };\n\n    /**\n     * RENDER PARAMS\n     */\n    const customColumnProps = [\n        {\n            name: 'dateCreate',\n            cellRenderer: ({cellData}) => toDDMMYYYYHHMMSS(cellData),\n        },\n        {\n            name: 'dateUpdate',\n            cellRenderer: ({cellData}) => toDDMMYYYYHHMMSS(cellData),\n        },\n        {\n            name: 'path',\n            cellRenderer: ({rowData}) =>\n                rowData[isGroupKey] ? null\n                    :\n                <Tooltip title=\"Скопировать путь к файлу\">\n                    <CopyOutlined onClick={() => copyTextToClipboard(props.pathDownloadFile(rowData[rowKey]))}/>\n                </Tooltip>,\n        },\n        {\n            name: 'name',\n            cellRenderer: ({rowData}) => {\n                const styleDiv = {display: 'flex', alignItems: 'center'};\n                let Icon;\n                let styleIcon = {marginRight: '10px', fontSize: '16px'};\n                switch (rowData.extension) {\n                    case 'dir':\n                        Icon = FolderFilled;\n                        styleIcon.color = '#3a88c9';\n                        break;\n                    case 'doc':\n                    case 'docm':\n                    case 'docx':\n                    case 'dot':\n                    case 'dotx':\n                        Icon = FileWordOutlined;\n                        styleIcon.color = '#185abc';\n                        break;\n                    case 'xlm':\n                    case 'xls':\n                    case 'xlsm':\n                    case 'xlt':\n                    case 'xltm':\n                    case 'xltx':\n                    case 'xlsx':\n                        Icon = FileExcelOutlined;\n                        styleIcon.color = '#1f7244';\n                        break;\n                    case 'png':\n                    case 'jpg':\n                    case 'jpeg':\n                    case 'tiff':\n                    case 'bmp':\n                    case 'ico':\n                    case 'gif':\n                    case 'svg':\n                        Icon = FileImageOutlined;\n                        break;\n                    case 'markdown':\n                    case 'md':\n                        Icon = FileMarkdownOutlined;\n                        styleIcon.color = '#175987';\n                        break;\n                    case 'pdf':\n                        Icon = FilePdfOutlined;\n                        styleIcon.color = '#bd1f07';\n                        break;\n                    case 'ppt':\n                        Icon = FilePptOutlined;\n                        styleIcon.color = '#be5239';\n                        break;\n                    case 'txt':\n                        Icon = FileTextOutlined;\n                        break;\n                    case 'zip':\n                        Icon = FileZipOutlined;\n                        break;\n                    default:\n                        Icon = FileOutlined;\n                }\n\n\n                return (\n                    <div style={styleDiv}>\n                        {/*{rowData.isGroup*/}\n                        {/*    ? <FolderFilled style={{ marginRight: '10px', color: '#3a88c9'}}/>*/}\n                        {/*    : <FileOutlined style={{ marginRight: '10px' }}/>*/}\n                        {/*}*/}\n                        <Icon style={styleIcon}/>\n                        {rowData.name}\n                    </div>\n                );\n            },\n        }\n    ];\n\n    const uploadProps = {\n        multiple: true,\n        showUploadList: false,\n        beforeUpload: _uploadFile\n    };\n\n    const uploadRender = () => {\n        return (\n            <Upload {...uploadProps}>\n                <Button icon={<PlusOutlined />}/>\n            </Upload>\n        )\n    };\n\n    const breadcrumbRender = () => {\n        return (\n            <span className={`${rtPrefix}-file-manager-breadcrumb ml-8`}>\n                {breadcrumb.map((item, index) =>\n                    <span\n                        key={item[rowKey]}\n                        // type=\"text\"\n                        className={`${rtPrefix}-file-manager-breadcrumb-btn`}\n                        onClick={() => _onClickBreadcrumb(item[rowKey], index + 1)}\n                    >\n                        <span>/</span><span>{item.name}</span>\n                    </span>\n                )}\n            </span>\n        )\n    };\n\n    return (\n        <FormTable\n            {...props}\n            ref={_setTableRef}\n            type={'serverSide'}\n            componentType={'FilesTable'}\n            onRowDoubleClick={_onRowDoubleClick}\n            defaultFilter={tableFilter}\n            customColumnProps={customColumnProps}\n            commandPanelProps={{\n                ...props.commandPanelProps,\n                onClickDelete: _onClickDelete,\n                systemBtnProps: {\n                    add: {\n                        actionType: 'modal',\n                        tooltip: 'Загрузить файл(ы)',\n                        render: uploadRender\n                    },\n                    addGroup: {actionType: 'modal', tooltip: 'Создать папку'},\n                    edit: {actionType: ['modal', 'modal']},\n                    delete: {}\n                },\n                leftCustomSideElement: [\n                    {\n                        componentType: 'Item',\n                        child: {\n                            componentType: 'Button',\n                            icon: <RollbackOutlined />,\n                            label: 'Back',\n                            className: 'ml-4',\n                            disabled: (breadcrumb.length === 1),\n                            onClick: _onClickBack\n                        }\n                    },\n                    {\n                        componentType: 'Item',\n                        child: {\n                            componentType: 'Custom',\n                            render: breadcrumbRender\n                        }\n                    }\n                ],\n                // rightCustomSideElement: [\n                //     {\n                //         componentType: 'Item',\n                //         label: 'View deleted',\n                //         className: 'mb-0',\n                //         child: {\n                //             componentType: 'Switch',\n                //             checked: tableFilter.deleted,\n                //             onChange: _onChangeViewDeleted\n                //         }\n                //     },\n                // ]\n            }}\n            modals={[\n                AddFolderModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows),\n                EditFolderModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows),\n                EditFileModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows)\n            ]}\n        />\n    );\n};\n\nFileManager.propTypes = {\n\n    /** Функция запроса для загрузки строк (данных) */\n    requestLoadRows: PropTypes.func,\n\n    /** Функция запроса на получение конфига для таблицы */\n    requestLoadConfig: PropTypes.func,\n};\n\nFileManager.defaultProps = {\n    rowKey: 'id',\n    isGroupKey: 'isGroup',\n    expandParentKey: 'parentId',\n};\n\nexport default FileManager;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport FormModal from \"../Form/FormModal\";\nimport { notification, Button} from \"antd\";\nimport { notificationError } from \"../../utils/baseUtils\";\nimport objectPath from \"object-path\";\nimport { setDateStore } from \"../../../redux/rtd.actions\";\n\nconst Modal = props => {\n\n    const {buttonProps, modalConfig, modalData, dispatchPath} = props;\n\n    const [visible, setVisible] = useState(false);\n    const [_modalData, _setModalData] = useState({});\n    const [_buttonProps, setButtonProps] = useState({});\n\n    const subscribe = props.subscribe ? props.subscribe : {};\n\n    const setModalData = (value) => {\n        // console.log(\"setModalData: \", value);\n        _setModalData && _setModalData(value);\n    }\n\n    useEffect(() => {\n        _setModalData(modalData);\n    }, []);\n\n    /** Подписка на изменение props[subscribe.name] в сторе */\n    useEffect( () => {\n        if(subscribe.name) {\n            // console.log(\"Modal => subscribe: \", props[subscribe.name]);\n            subscribe.onChange && subscribe.onChange({value: props[subscribe.name], setModalData, setButtonProps});\n        }\n        // console.log(\"Change Props[2]: \", props.subscribeЗф);\n    }, [props[subscribe.name]]);\n\n    const _onOpenModal = () => {\n        // console.log(\"Modal => _modalData: \", _modalData);\n        setVisible(true)\n    }\n\n    const _onCloseModal = () => {\n        setVisible(false)\n    }\n\n    const _onSaveRow = ({type, row, requestSaveRow}) => {\n        dispatchPath && props.setDateStore && props.setDateStore(dispatchPath, row);\n\n        if (requestSaveRow\n            && ['addOnServer', 'editOnServer', 'addGroupOnServer', 'editGroupOnServer'].includes(type)\n        ) {\n            const method = (type === 'addOnServer' || type === 'addGroupOnServer') ? 'POST' : 'PUT';\n            // console.log(\"Modal Events => type: \", type, method, row, _modalData);\n            requestSaveRow({\n                method,\n                data: row,\n            })\n                .then(response => {\n                    notification.success({\n                        message: 'Сохранение прошло успешно'\n                    });\n                    _onCloseModal();\n                })\n                .catch(error => notificationError(error, 'Ошибка при сохранении'));\n        } else _onCloseModal();\n    };\n\n    return (\n        <React.Fragment>\n            <Button\n                type=\"primary\"\n                {...buttonProps}\n                {..._buttonProps}\n                onClick={_onOpenModal}\n            >{buttonProps && buttonProps.label}</Button>\n            <FormModal\n                modal={modalConfig}\n                selectedRow={_modalData}\n                visible={visible}\n                setVisible={_onCloseModal}\n                saveRow={_onSaveRow}\n            />\n        </React.Fragment>\n    )\n};\n\nModal.propTypes = {\n\n    /** Свойства [Button](https://ant.design/components/button/) из Ant Design\n     * Добавлено свойство `label` с типом `ReactNode` или `string` для формирования контента кнопки*/\n    buttonProps: PropTypes.object,\n\n    /** Объект модального окна. Стандартная конфигурация. */\n    modalConfig: PropTypes.object,\n\n    /** Данные для модального окна */\n    modalData: PropTypes.object,\n\n    /** Путь в сторе куда класть данных окна после закрытия */\n    dispatchPath: PropTypes.string,\n\n    /** Объект для подписки на изменения в STORE */\n    subscribe: PropTypes.object,\n};\n\nconst mapStateToProps = (store, ownProps) => {\n    const {subscribe} = ownProps;\n    if(subscribe){\n        const {name, path} = subscribe;\n        if(name && path)\n            return { [name]: objectPath.get(store, path) };\n    }\n    return {};\n};\nconst mapDispatchToProps = (dispatch) =>\n    bindActionCreators( { setDateStore: setDateStore, }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Select from '../Select/Select';\nimport {\n\tInput,\n\tInputNumber,\n\tForm as AntForm,\n\tButton,\n\tCheckbox,\n\tSwitch,\n\tDatePicker,\n\tRadio,\n    Divider,\n} from 'antd';\nimport { getObjectExcludedProps, getValueFromMultiSelect, getValueFromSingleSelect } from \"../../utils/baseUtils\";\nimport FormTable from './FormTable';\n// import Typography from './Typography';\nimport { withStore, DatePickerHOC, TypographyTitle, TypographyText, TypographyDate } from \"./HOCs\";\nimport FileManager from \"../FileManager/FileManager\";\nimport Modal from \"../Modal/Modal\";\n\nconst excludeProps = ['child', 'componentType', 'field'];\nconst noAntItemTypes = ['Title', 'Text', 'Divider', 'Button', 'LocalTable', 'ServerTable', 'InfinityTable'];\n\nconst FormItem = (props) => {\n\n\tconst {child, field} = props;\n\tlet antFormItemProps = getObjectExcludedProps(props, excludeProps);\n\n\t// Если тип элемента Select -> добавить доп свойства к Form.Item\n    if (child && child.componentType && (child.componentType === 'SingleSelect' || child.componentType === 'MultiSelect')) {\n        antFormItemProps.valuePropName = 'defaultSelectedRowKeys';\n        antFormItemProps.getValueFromEvent = child.componentType === 'SingleSelect' ? getValueFromSingleSelect : getValueFromMultiSelect;\n        antFormItemProps.trigger = 'onChangeKeys';\n    } else if (child && child.componentType && child.componentType === 'SelectTable') {\n        // antFormItemProps.getValueFromEvent = getValueFromSelectTable;\n        // antFormItemProps.trigger = 'onRowClick';\n    }\n\n\t// console.log('FormItem props => ', props);\n\n\tconst getItem = () => {\n\t\tif (child) {\n\t\t    // const childProps = getObjectExcludedProps(child, ['componentType']);\n\t\t\tconst childProps = {...child};\n            // console.log('FormItem childProps => ', childProps);\n\t\t\tlet Component;\n\t\t\tlet placeholder;\n            switch (child.componentType) {\n\t\t\t\tcase 'Button':\n\t\t\t\t\tComponent = withStore(Button, antFormItemProps);\n\t\t\t\t\t// console.log('Props field => ', field);\n\t\t\t\t\tconst onClick = (e) => childProps.onClick && childProps.onClick(e, field);\n\t\t\t\t\treturn (<Component {...childProps} onClick={onClick}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'Title':\n\t\t\t\t\tComponent = withStore(TypographyTitle, antFormItemProps);\n\t\t\t\t\treturn (<Component {...child} componentType={child.componentType}/>);\n\t\t\t\tcase 'Text':\n\t\t\t\t\tComponent = withStore(TypographyText, antFormItemProps);\n\t\t\t\t\treturn (<Component {...child} componentType/>);\n\t\t\t\tcase 'Divider':\n\t\t\t\t\tComponent = withStore(Divider, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'Checkbox':\n\t\t\t\t\tComponent = withStore(Checkbox, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'DatePicker':\n\t\t\t\t\tComponent = withStore(DatePickerHOC(DatePicker), antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Выберите дату';\n\t\t\t\t\tconst style = {width: '100%', ...(childProps && childProps.style)};\n\t\t\t\t\treturn (<Component{...childProps} style={style} placeholder={placeholder}/>);\n\t\t\t\tcase 'DateText':\n\t\t\t\t\tComponent = withStore(TypographyDate, antFormItemProps);\n\t\t\t\t\treturn (<Component {...child} />);\n\t\t\t\tcase 'Input':\n\t\t\t\t\tComponent = withStore(Input, antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите значение';\n\t\t\t\t\treturn (<Component {...childProps} placeholder={placeholder} />);\n\t\t\t\tcase 'TextArea':\n\t\t\t\t\tComponent = withStore(Input.TextArea, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps} />);\n\t\t\t\tcase 'Password':\n\t\t\t\t\tComponent = withStore(Input.Password, antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите пароль';\n\t\t\t\t\treturn (<Component {...childProps} placeholder={placeholder}/>);\n\t\t\t\tcase 'InputNumber':\n\t\t\t\t\tComponent = withStore(InputNumber, antFormItemProps);\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите значение';\n\t\t\t\t\treturn (<Component {...childProps} style={{width: '100%'}} placeholder={placeholder}/>);\n\t\t\t\tcase 'Radio':\n\t\t\t\t\tComponent = withStore(Radio, antFormItemProps);\n\t\t\t\t\treturn <Component {...childProps}>{childProps && childProps.label}</Component>;\n\t\t\t\tcase 'RadioButton':\n\t\t\t\t\tComponent = withStore(Radio.Button, antFormItemProps);\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\n\t\t\t\tcase 'Switch':\n\t\t\t\t\tComponent = withStore(Switch, antFormItemProps);\n\t\t\t\t\treturn <Component {...childProps} />;\n                case \"RadioGroup\":\n                    Component = withStore(Radio.Group, antFormItemProps);\n                    return (<Component {...childProps} />);\n\t\t\t\tcase 'SingleSelect':\n                case 'MultiSelect':\n\t\t\t\t\treturn <Select {...childProps} type={child.componentType} name={antFormItemProps.name}/>;\n\t\t\t\t\t//'infinity', 'serverSide', 'localSide'\n                case 'InfinityTable':\n                    childProps.type = 'infinity';\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\n                case 'ServerTable':\n                    childProps.type = 'serverSide';\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\n                case 'LocalTable':\n                    childProps.type = 'localSide';\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\n                case 'SelectTable':\n\t\t\t\t\tchildProps.type = 'localSide';\n\t\t\t\t\treturn <FormTable {...childProps} name={props.name} componentType={child.componentType} /> ;\n\t\t\t\tcase 'FileManager':\n\t\t\t\t\treturn <FileManager {...childProps} name={props.name} />;\n\t\t\t\tcase 'Modal':\n\t\t\t\t\treturn <Modal {...childProps} name={props.name} />;\n\t\t\t\tcase 'Custom':\n\t\t\t\t\tComponent = withStore(child.render, antFormItemProps);\n\t\t\t\t\treturn <Component {...childProps}/>;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t};\n\n    if(!antFormItemProps.label)\n        return <AntForm.Item {...antFormItemProps} noStyle>{getItem()}</AntForm.Item>;\n    else\n        return <AntForm.Item {...antFormItemProps}>{getItem()}</AntForm.Item>;\n};\n\nFormItem.propTypes = {\n\tchild: PropTypes.object.isRequired\n};\n\nexport default FormItem;\n","import React from 'react';\nimport {rtPrefix} from '../../utils/variables';\nimport PropTypes from \"prop-types\";\n\nconst Layout = props => {\n\n    let itemProps = {};\n    Object.keys(props).forEach((key) =>\n        key !== 'children' ? (itemProps[key] = props[key]) : null\n    );\n\n    const getCls = () => {\n        let cls = [`${rtPrefix}-layout`];\n        itemProps.className && cls.push(itemProps.className);\n        return cls.join(' ');\n    };\n\n    return (\n        <div {...itemProps} className={getCls()}>\n            {props.children}\n        </div>\n    );\n};\n\nLayout.propTypes = {\n    /** Строка класса */\n    className: PropTypes.string,\n\n    /** Объект стиля */\n    style: PropTypes.object,\n};\n\nexport default Layout;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormItem from \"./FormItem\";\nimport Layout from \"../Layout/Layout\";\nimport { Row, Col, Tabs, Radio, Form as AntForm, Input, Space } from \"antd\";\nimport { getObjectExcludedProps } from \"../../utils/baseUtils\";\n\nconst excludeProps = [\"children\", \"componentType\"];\n\nconst FormItems = (props) => {\n    const { items } = props;\n\n    // console.log('FormItems props => ', props);\n\n    const getItems = (data, antFormListParams) => {\n\n        return (data && data.map((item, index) => {\n            let itemProps = getObjectExcludedProps(item, excludeProps);\n            // console.log('FormItems index => ', index);\n\n            switch (item.componentType) {\n                case \"Row\":\n                    return (\n                        <Row key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Row>\n                    );\n                case \"Col\":\n                    return (\n                        <Col key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Col>\n                    );\n                case \"Layout\":\n                    return (\n                        <Layout key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Layout>\n                    );\n                case \"Tabs\":\n                    return (\n                        <Tabs key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Tabs>\n                    );\n                case \"TabPane\":\n                    return (\n                        <Tabs.TabPane key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Tabs.TabPane>\n                    );\n                case \"RadioGroup\":\n                    return (\n                        <Radio.Group key={index} {...itemProps}>\n                            {item.children &&\n                            item.children.length > 0 &&\n                            getItems(item.children, antFormListParams)}\n                        </Radio.Group>\n                    );\n                case \"Item\":\n                    let _item = { ...item };\n                    let _key = index;\n                    if (antFormListParams && antFormListParams.field) {\n                        if (_item.name) {\n                            if (Array.isArray(_item.name)) {\n                                _item.name = [antFormListParams.field.name, ..._item.name];\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\n                            } else {\n                                _item.name = [antFormListParams.field.name, _item.name];\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\n                            }\n                        }\n                    }\n                    // console.log('_item ', _item.name);\n                    return <FormItem key={`${_key}`} {..._item} field={{ ...antFormListParams }}/>;\n                case \"ListItems\":\n                    return (\n                        <AntForm.List key={index} {...itemProps}>\n                            {(fields, operation) => {\n                                const param = { fields: [...fields], operation: { ...operation } };\n                                return getItems(item.children, param);\n                            }}\n                        </AntForm.List>\n                    );\n                case \"ListItem\":\n                    // console.log('antFormListParams => ', antFormListParams);\n                    return (\n                        <div key={index}>\n                            {antFormListParams && antFormListParams.fields && antFormListParams.fields.map((field, fIndex) => {\n                                // console.log('index field.key', index, field);\n                                const param = { field: { ...field }, ...antFormListParams };\n                                return <div key={field.key}>{getItems(item.children, param)} </div>;\n                            })}\n                        </div>\n                    );\n\n\n                default:\n                    return null;\n            }\n        })) || null;\n    };\n\n    return getItems(items);\n};\n\nFormItems.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default FormItems;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {noop} from '../../utils/baseUtils';\nimport {rtPrefix} from '../../utils/variables';\nimport {Input, Tooltip, Popconfirm, Modal, Button} from 'antd';\nimport {\n\tPlusOutlined,\n\tCopyOutlined,\n\tFolderAddOutlined,\n\tDeleteOutlined,\n\tEditOutlined,\n\tArrowUpOutlined,\n\tArrowDownOutlined,\n\tSettingOutlined,\n\tFilterOutlined,\n\tExclamationCircleOutlined,\n} from '@ant-design/icons';\nimport FormItems from \"../Form/FormItems\";\nconst {confirm} = Modal;\n\nconst CommandPanel = (props) => {\n\tconst {\n\t\tborderStyle,\n\t\tdefaultValueSearch,\n\t\tdeleteConfirm,\n\t\tdeleteConfirmType,\n\t\tdeleteConfirmTitle,\n\t\tdeleteConfirmDescription,\n\t\tonClickAdd,\n\t\tonClickAddAsCopy,\n\t\tonClickAddGroup,\n\t\tonClickDelete,\n\t\tonClickEdit,\n\t\tonClickUp,\n\t\tonClickDown,\n\t\tonSearch,\n\t\tshowElements,\n        systemBtnProps,\n\t\tdisabledElements,\n\t\tleftCustomSideElement,\n\t\tcenterCustomSideElement,\n\t\trightCustomSideElement,\n\t} = props;\n\n    const defaultSystemBtnProps = {\n        add: {\n            tooltip: 'Добавить',\n            onClick: onClickAdd,\n            icon: <PlusOutlined />\n        },\n        addAsCopy: {\n            tooltip: 'Добавить копированием',\n            onClick: onClickAddAsCopy,\n            icon: <CopyOutlined />\n        },\n        addGroup: {\n            tooltip: 'Добавить группу',\n            onClick: onClickAddGroup,\n            icon: <FolderAddOutlined />\n        },\n        edit: {\n            tooltip: 'Изменить',\n            onClick: onClickEdit,\n            icon: <EditOutlined />\n        },\n        delete: {\n            tooltip: 'Удалить',\n            icon: <DeleteOutlined />\n        },\n        up: {\n            tooltip: 'Переместить вверх',\n            onClick: onClickUp,\n            icon: <ArrowUpOutlined />\n        },\n        down: {\n            tooltip: 'Переместить вниз',\n            onClick: onClickDown,\n            icon: <ArrowDownOutlined />\n        },\n\t\tsearch: {\n\t\t\tplaceholder: 'Поиск',\n\t\t\tonSearch: onSearch,\n\t\t},\n        settings: {\n            tooltip: 'Настройки таблицы',\n            tooltipPlacement: 'topRight',\n            onClick: () => {},\n            icon: <SettingOutlined />\n        },\n        filter: {\n            tooltip: 'Настройки фильтров',\n            tooltipPlacement: 'topRight',\n            onClick: () => {},\n            icon: <FilterOutlined />\n        }\n    };\n\n\tconst _onClickDelete = (event) => {\n\t\tif (deleteConfirmType === 'Modal') {\n\t\t\tdeleteButtonModalConfirm();\n\t\t} else {\n\t\t\tonClickDelete(event);\n\t\t}\n\t};\n\n\tconst deleteButtonPopupConfirm = () => {\n\t\treturn (\n\t\t\t<Popconfirm\n\t\t\t\tplacement='top'\n\t\t\t\ttitle={deleteConfirmDescription}\n\t\t\t\tonConfirm={onClickDelete}\n\t\t\t\tokText='Да'\n\t\t\t\tcancelText='Нет'\n\t\t\t>\n\t\t\t\t{renderDeleteBtn(false)}\n\t\t\t</Popconfirm>\n\t\t);\n\t};\n\n    const deleteButtonModalConfirm = () => {\n\t\tconfirm({\n\t\t\ttitle: deleteConfirmTitle,\n\t\t\ticon: <ExclamationCircleOutlined />,\n\t\t\tcontent: deleteConfirmDescription,\n\t\t\tcentered: true,\n\t\t\tokText: 'Ок',\n\t\t\tcancelText: 'Отмена',\n\t\t\tonOk() {\n\t\t\t\tonClickDelete();\n\t\t\t},\n\t\t});\n\t};\n\n    const renderDeleteBtn = (withOnClick) => {\n        const genProps = {...defaultSystemBtnProps['all'], ...systemBtnProps['all']};\n        const btnProps = {...defaultSystemBtnProps['delete'], ...systemBtnProps['delete']};\n\n        return (\n            <Tooltip title={btnProps.tooltip}>\n                <Button\n                    {...genProps}\n                    className={`${rtPrefix}-btn`}\n                    icon={btnProps.icon}\n                    onClick={withOnClick ? _onClickDelete : null}\n                    disabled={disabledElements.includes('delete')}\n                />\n            </Tooltip>\n        );\n    };\n\n    const renderBtn = (type) => {\n        const genProps = {...defaultSystemBtnProps['all'], ...systemBtnProps['all']};\n        const btnProps = {...defaultSystemBtnProps[type], ...systemBtnProps[type]};\n\n        if(showElements.includes(type)) {\n            if(btnProps.render)\n                return btnProps.render({\n                    disabled: disabledElements.includes(type),\n                    onClick: btnProps.onClick,\n\t\t\t\t\tonSearch: btnProps.onSearch\n\t\t\t\t});\n             else\n             \tif (type === 'search')\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Input.Search\n\t\t\t\t\t\t\tdisabled={disabledElements.includes(type)}\n\t\t\t\t\t\t\tdefaultValue={defaultValueSearch}\n\t\t\t\t\t\t\tplaceholder={btnProps.placeholder}\n\t\t\t\t\t\t\tonSearch={btnProps.onSearch}\n\t\t\t\t\t\t\tclassName={'search'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\telse\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Tooltip title={btnProps.tooltip} placement={btnProps.tooltipPlacement ? btnProps.tooltipPlacement : 'top'}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t{...genProps}\n\t\t\t\t\t\t\t\tclassName={`${rtPrefix}-btn`}\n\t\t\t\t\t\t\t\ticon={btnProps.icon}\n\t\t\t\t\t\t\t\tonClick={btnProps.onClick}\n\t\t\t\t\t\t\t\tdisabled={disabledElements.includes(type)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t)\n        }\n        else\n            return null\n    };\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{showElements.length ||\n\t\t\tleftCustomSideElement ||\n\t\t\tcenterCustomSideElement ||\n\t\t\trightCustomSideElement ? (\n\t\t\t\t<div\n\t\t\t\t\tclassName={`${rtPrefix}-command-panel border-${borderStyle}`}\n\t\t\t\t>\n\t\t\t\t\t<div className={'left-system-side'}>\n                        {renderBtn('add')}\n                        {renderBtn('addAsCopy')}\n                        {renderBtn('addGroup')}\n                        {renderBtn('edit')}\n\n\t\t\t\t\t\t{showElements.includes('delete')\n\t\t\t\t\t\t\t? deleteConfirm\n\t\t\t\t\t\t\t\t? deleteConfirmType === 'Popup'\n\t\t\t\t\t\t\t\t\t? deleteButtonPopupConfirm()\n\t\t\t\t\t\t\t\t\t: renderDeleteBtn(true)\n\t\t\t\t\t\t\t\t: renderDeleteBtn(true)\n\t\t\t\t\t\t\t: null}\n\n                        {renderBtn('up')}\n                        {renderBtn('down')}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'left-custom-side'}>\n\t\t\t\t\t\t{leftCustomSideElement ? <FormItems items={leftCustomSideElement} /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'center-custom-side'}>\n\t\t\t\t\t\t{centerCustomSideElement ? <FormItems items={centerCustomSideElement} /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'right-custom-side'}>\n\t\t\t\t\t\t{rightCustomSideElement ? <FormItems items={rightCustomSideElement} /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'right-system-side'}>\n\t\t\t\t\t\t{renderBtn('search')}\n                        {renderBtn('settings')}\n                        {renderBtn('filter')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n};\n\nCommandPanel.propTypes = {\n\t/** Центральный кастомный элемент командной панели */\n\tcenterCustomSideElement: PropTypes.arrayOf(PropTypes.object), // PropTypes.element,\n\n\t/** Тип бордера панели (по умолчанию 'bottom')\n\t * ['all', 'none', 'top', 'left', 'bottom', 'right', 'top-bottom', 'left-right'] */\n\tborderStyle: PropTypes.oneOf([\n\t\t'all',\n\t\t'none',\n\t\t'top',\n\t\t'left',\n\t\t'bottom',\n\t\t'right',\n\t\t'top-bottom',\n\t\t'left-right',\n\t]),\n\n\t/** Значение по умолчанию для строки поиска */\n\tdefaultValueSearch: PropTypes.string,\n\n\t/** Нужно ли делать подтверждение на кнопке удалить */\n\tdeleteConfirm: PropTypes.bool,\n\n\t/** Тип подтверждения удаления 'Popup' / 'Modal' */\n\tdeleteConfirmType: PropTypes.oneOf(['Popup', 'Modal']),\n\n\t/** Текст подтверждения на удаление элемента */\n\tdeleteConfirmTitle: PropTypes.string,\n\n\t/** Текст подтверждения на удаление элемента */\n\tdeleteConfirmDescription: PropTypes.string,\n\n\t/** Массив элементов командной панели для блокировки\n     ['add', 'addAsCopy', 'addGroup', 'delete', 'edit', 'up', 'down', 'search', 'settings', 'filter'] */\n\tdisabledElements: PropTypes.arrayOf(PropTypes.string),\n\n\t/** Левый кастомный элемент командной панели */\n\tleftCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Событие при нажатии на кнопку \"Добавить\" */\n\tonClickAdd: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Добавить копированием\" */\n\tonClickAddAsCopy: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Добавить группу\" */\n\tonClickAddGroup: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Удалить\" */\n\tonClickDelete: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Переместить вниз\" */\n\tonClickDown: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Изменить\" */\n\tonClickEdit: PropTypes.func,\n\n\t/** Событие при нажатии на кнопку \"Переместить вверх\" */\n\tonClickUp: PropTypes.func,\n\n\t/** Событие при поиске */\n\tonSearch: PropTypes.func,\n\n\t/** Правый кастомный элемент командной панели */\n\trightCustomSideElement: PropTypes.arrayOf(PropTypes.object),\n\n\t/** Массив элементов командной панели, которые надо отобразить\n     ['add', 'addAsCopy', 'addGroup', 'delete', 'edit', 'up', 'down', 'search', 'settings', 'filter'] */\n\tshowElements: PropTypes.arrayOf(PropTypes.string),\n\n    /** Объект кастомизации системных кнопок\n     { [btnType]: { tooltip: <String>, icon: <Icon />, render: ({disabled, onClick}) => <Component /> } } */\n    systemBtnProps: PropTypes.object\n};\n\nCommandPanel.defaultProps = {\n\tcenterCustomSideElement: null,\n\tborderStyle: 'bottom',\n\tdefaultValueSearch: undefined,\n\tdeleteConfirm: true,\n\tdeleteConfirmType: 'Modal',\n\tdeleteConfirmTitle: 'Подтвержение удаления',\n\tdeleteConfirmDescription: 'Вы действительно хотите удалить?',\n\tdisabledElements: [],\n\tleftCustomSideElement: null,\n\tonClickAdd: noop,\n\tonClickAddAsCopy: noop,\n\tonClickAddGroup: noop,\n\tonClickDelete: noop,\n\tonClickEdit: noop,\n\tonClickUp: noop,\n\tonClickDown: noop,\n\tonSearch: noop,\n\trightCustomSideElement: null,\n\tshowElements: [],\n    systemBtnProps: {},\n};\nexport default CommandPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '../Table/Table';\n\n/**\n * ### Список / Дерево.\n */\nconst List = (props) => {\n\tconst {rowKey, rowRender, title} = props;\n\n\tconst columns = [\n\t\t{\n\t\t\tkey: rowKey,\n\t\t\ttitle: title,\n\t\t\tdataKey: rowKey,\n\t\t\twidth: 500,\n\t\t\tcellRenderer:\n\t\t\t\ttypeof rowRender === 'function'\n\t\t\t\t\t? rowRender\n\t\t\t\t\t: ({rowData}) => <div>{rowData[rowRender]}</div>,\n\t\t},\n\t];\n\treturn <Table {...props} columns={columns} headerHeight={title ? 30 : 0} />;\n};\n\nList.propTypes = {\n\t/** Поле для уникальной идентификации строки */\n\trowKey: PropTypes.string,\n\n\t/** Строка или функция для отображения элементов списка\n\t * Строка - имя поля\n\t * Функция - рендер строк. Параметры v\n\t * { cellData, columns, column, columnIndex, rowData, rowIndex, container, isScrolling }) */\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n\t/** Заголовок списка (по умолчанию скрыт)*/\n\ttitle: PropTypes.string,\n};\n\nList.defaultProps = {\n\trowKey: 'id',\n\trowRender: 'id',\n\ttitle: undefined,\n};\n\nexport default List;\n","/** deprecated */\nimport CommandPanel from './CommandPanel/CommandPanel';\nimport FilterPanel from './FilterPanel/FilterPanel';\nimport Table from './Table/Table';\nimport AdvancedTable from './AdvancedTable/AdvancedTable';\nimport List from './List/List';\nimport Select from './Select/Select';\nimport SingleDate from './SingleDate/SingleDate';\nimport DateRange from './DateRange/DateRange';\nimport Form from './Form/Form';\nimport FileManager from './FileManager/FileManager';\nimport Modal from './Modal/Modal';\n\n// export {default as CommandPanel} from './CommandPanel/CommandPanel';\n// export {default as FilterPanel} from './FilterPanel/FilterPanel';\n// export {default as Table} from './Table/Table';\n// export {default as AdvancedTable} from './AdvancedTable/AdvancedTable';\n// export {default as List} from './List/List';\n// export {default as Select} from './Select/Select';\n// export {default as SingleDate} from './SingleDate/SingleDate';\n// export {default as DateRange} from './DateRange/DateRange';\n//\n// // Компоненты формы\n// export {default as Form} from './Form/Form';\n// export {default as FileManager} from './FileManager/FileManager';\n// export {default as Modal} from './Modal/Modal';\n\n\nexport const deprecated = {\n    CommandPanel,\n    FilterPanel,\n    Table,\n    AdvancedTable,\n    List,\n    Select,\n    SingleDate,\n    DateRange,\n    Form,\n    FileManager,\n    Modal,\n}","import objectPath from 'object-path';\nimport {actionTypes} from './rtd.action.types';\n\nconst rtdReducer = (state = {}, action) => {\n    switch (action.type) {\n        case actionTypes.INIT_STORE: {\n            const {path} = action.payload;\n            // console.log(\"INIT_TABLE_STORE: \", path);\n            let newState = {...state};\n            objectPath.set(newState, path, {});\n            return newState;\n        }\n        case actionTypes.SET_DATA_STORE: {\n            const {path, row} = action.payload;\n\n            let newState = {...state};\n            if(row === undefined)\n                objectPath.del(newState, path); // newState[path] is now undefined\n            else\n                objectPath.set(newState, path, row); // newState[path] is now row\n\n            console.debug(\"Store change: \", path, row);\n            // console.group(\"Store\");\n            // console.log(\"Store: \", newState);\n            // console.log(\"New Data: \", path, row);\n            // console.groupEnd();\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\nexport default rtdReducer;\n","import { notification } from \"antd\";\nimport { notificationError } from \"./baseUtils\";\n\nexport const executeRequest = (request) => (options) => request(options)\n    .then(response => {\n        notification.success({\n            message: \"Сохранение прошло успешно\"\n        });\n    })\n    .catch(error => notificationError(error, 'Ошибка при сохранении') );","import {classic} from './components/declarative'\n\nexport {deprecated} from './components/deprecated'\n// Store\nexport {default as rtdReducer} from './redux/rtd.reducer';\nexport {setDateStore} from './redux/rtd.actions';\n// Utils\nexport {notificationError} from './components/utils/baseUtils'\nexport {executeRequest} from \"./components/utils/api\";\n// export * from './components/utils/datesUtils';\n\n// General\nexport const { Button } = classic\nexport const { Title } = classic\nexport const { Text } = classic\nexport const { DateText } = classic\n// Layout\nexport const { Divider } = classic\nexport const { Layout } = classic\nexport const { Row } = classic\nexport const { Col } = classic\nexport const { Space } = classic\n// Data Entry\nexport const { Checkbox } = classic\nexport const { DatePicker } = classic\nexport const { Form } = classic\nexport const { FormHeader } = classic\nexport const { FormBody } = classic\nexport const { FormFooter } = classic\nexport const { FormList } = classic\nexport const { InputNumber } = classic\nexport const { Input } = classic\nexport const { Search } = classic\nexport const { TextArea } = classic\nexport const { Password } = classic\nexport const { RadioGroup } = classic\nexport const { Switch } = classic\nexport const { Slider } = classic\nexport const { Select } = classic\nexport const { TreeSelect } = classic\nexport const { Transfer } = classic\nexport const { TimePicker } = classic\nexport const { UploadFile } = classic\n// Data Display\nexport const { Collapse } = classic\nexport const { List } = classic\nexport const { Popover } = classic\nexport const { Tooltip } = classic\nexport const { Tabs } = classic\nexport const { TabPane } = classic\n// Feedback\nexport const { Modal } = classic\n// Rt-design\nexport const { Table } = classic\nexport const { RtTable } = classic\nexport const { AntTable } = classic\nexport const { Custom } = classic\nexport const { Switcher } = classic"],"names":["APP_TIME_OFFSET","getMomentFromStringByFormat","date","format","moment","utcOffset","getMomentWithOffset","getMomentWithOffsetTruncateDay","startOf","toFormat","dateString","mom","isValid","toDDMMYYYYHHMMSS","getISO","toISOString","types","INIT_STORE","SET_DATA_STORE","setDateStore","path","row","type","actionTypes","payload","noop","flatten","arrayOfArrays","reduce","flattened","item","concat","Array","isArray","getTableRowObjects","data","rowKeys","map","children","length","getTableRowKeys","rowKey","findNodeByRowKey","rowValue","node","i","_findNodeByRowKey","currentNode","value","currentChild","result","generateUUID","replace","c","crypto","getRandomValues","Uint8Array","toString","getValueFromSingleSelect","name","keys","getValueFromMultiSelect","getObjectExcludedProps","object","exclude","returnObject","Object","forEach","key","includes","undefined","notificationError","error","message","response","console","status","errorDescription","description","dispatchToStore","dispatch","extraData","timestamp","useMounted","React","useState","isMounted","setIsMounted","useEffect","getSortBy","clientSortBy","serverSortBy","dataIndex","order","withStore","Component","antFormItemProps","mapStateToProps","store","ownProps","subscribe","state","objectPath","get","dispatchExtraData","mapDispatchToProps","bindActionCreators","defaultProps","trigger","valuePropName","withStoreProps","connect","props","componentType","subscribeProps","setSubscribeProps","excludeProps","withMount","onChange","setSubscribePropsHandler","_value","_subscribeProps","prevState","has","_searchDispatchToStore","del","_onSearch","searchLine","e","preventDefault","childProps","onSearchProps","onSearch","rtPrefix","DatePicker","TimePicker","DateTimePicker","restProps","style","width","TypographyDate","label","Button","onClick","field","renderClassicWithLabel","Custom","childNode","warn","render","renderClassic","isValidElement","cloneElement","FormHeader","FormBody","cls","noPadding","push","scrollable","join","FormFooter","TabPane","className","FormItem","child","renderClassicByName","itemProps","propTypes","PropTypes","isRequired","FormItems","items","getItems","antFormListParams","index","_item","_key","fieldKey","fields","operation","param","fIndex","renderDeclarativeByName","arrayOf","Form","loadInitData","header","body","footer","requestSaveForm","methodSaveForm","processBeforeSaveForm","loaded","setLoaded","antFormProps","setAntFormProps","initFormData","setInitFormData","_setInitFormData","antForm","form","_Form","useForm","getBodyCls","onFinish","rawValues","values","saveObject","log","method","then","success","catch","onFinishFailed","errorInfo","Header","Footer","height","initialValues","changedFields","allFields","getFieldsValue","bool","func","string","Layout","getCls","Switcher","_setValue","empty","overlay","LoadingOutlined","fontSize","SelectionHead","column","container","onSelectAll","selectedRowKeys","selectAll","_handleChange","rowObjects","filter","totalLength","selectLength","checked","selected","getRowChildren","findBrothers","selfItem","parentKey","arr","parentAnalysis","rowData","nodeAssociated","treeData","indeterminateRowKeys","_selectedRowKeys","_indeterminateRowKeys","currentRowData","parentExist","lastTypeSelect","typeSelect","nextSquare","indeterminateBrothers","selectedBrothers","allBrothers","indexOf","splice","indexS","indexI","onChangeSelectionCell","rowIndex","rows","rowChildren","element","Set","_selectedRowObjects","_selectedRow","_selectAll","SelectionCell","det","SelectionList","selectedRowObjects","rowRender","onClickDropSelect","CloseCircleOutlined","oneOfType","Table","forwardRef","ref","hasMore","setHasMore","loading","setLoading","_rows","_setRows","setSelectedRowKeys","_searchValue","setSearchValue","_filter","setFilter","_sortBy","setSortBy","setSelectAll","setIndeterminateRowKeys","_expandedRowKeys","setExpandedRowKeys","_footerShow","_setFooterShow","_totalCountRows","setTotalCountRows","tableRef","useRef","columns","infinityMode","editMode","defaultRows","defaultSelectedRowKeys","defaultSearchValue","defaultFilter","defaultSortBy","setRows","searchValue","sortBy","customFields","fixWidthColumn","headerHeight","rowHeight","rowRenderer","zebraStyle","estimatedRowHeight","rowBordered","loadThreshold","pageSize","requestLoadRows","requestLoadCount","searchParamName","selectable","expandColumnKey","expandDefaultAll","expandLazyLoad","expandParentKey","onRowClick","onRowDoubleClick","onRowExpand","onSelectedRowsChange","onExpandedRowsChange","showSelection","rowRenderShowSelection","dispatchPath","footerProps","selectedDispatchPath","rowsDispatchPath","_setRowsHandler","_setSelectedRowsHandler","setFilterHandler","showElements","leftCustomSideElement","centerCustomSideElement","rightCustomSideElement","flatRows","selectedRow","ii","_dataProcessing","reload","reloadData","current","babelHelpers.typeof","onChangeObject","reloadTable","addRows","_addRows","addRow","_addRow","addRowAsCopy","_addRowAsCopy","editRow","_editRow","removeRow","_removeRow","moveUpRow","_moveUpRow","moveDownRow","_moveDownRow","_setSubscribeProps","_setLoadedRowsHandler","rowsDispatch","selectedKeys","selectedObjects","selectedDispatch","onTableEventsDispatch","nameEvent","dp","appendParams","scrollToRow","__sortBy","__filter","__searchValue","params","expandRow","pageNum","Math","floor","page","size","sort","dataQuery","newRows","_onRowClick","_rowSelectAfterClick","_onRowDoubleClick","newRowObject","_getSelectionColumnProps","_rowEventHandlers","onDoubleClick","_onColumnSort","localSortBy","loadParams","_footer","selectedTitle","loadedTitle","totalTitle","_rowClassName","rowClassName","onEndReached","_onChangeSelectHandler","_onSelectAllHandler","_getColumns","selectColumn","headerRenderer","cellRenderer","flexShrink","resizable","frozen","_onExpandedRowsChange","expandedRowKeys","_onRowExpand","expanded","allChildKeys","loop","callback","saveRows","sRow","validate","_localRows","_row","validations","event","newRowIndex","_getNewIndexRow","_changeIndexRow","oldIndex","newIndex","_onClickDropSelectHandler","dropObject","newSelectedKeys","BaseTable","number","shape","oneOf","customColumnProps","cellBordered","requestLoadConfig","ConfigLoader","tableConfig","setTableConfig","cleanupFunction","loadData","configParser","r","config","_columns","_defaultSorter","colProps","find","alias","defaultSort","title","dataKey","align","sortable","hidden","visible","headerClassName","cellData","_defaultFilter","hierarchical","hierarchyLazyLoad","hierarchyField","split","hierarchyView","HeaderCell","onResize","ColumnResizer","maxWidth","HeaderRow","headerRowRef","setHeaderHeight","newHeight","clientHeight","BodyCell","cellComponent","padding","_setColumns","rowSelection","expandable","_loadRows","_moveUpSelectedRow","moveUpRowByKey","_moveUpRowByKey","_moveDownSelectedRow","moveDownRowByKey","_moveDownRowByKey","onChangeTable","pagination","filters","sorter","extra","action","onSort","onHeaderRowProps","onRowEvents","onResizeHandler","nextColumns","onChangeSelectedHandler","selectedRows","onSelectAllHandler","changeRows","ExpandIcon","Icon","expandIconRender","onExpand","record","CaretUpOutlined","visibility","CaretDownOutlined","CaretRightOutlined","currentPageData","getColumns","col","onHeaderCell","expandableProps","defaultExpandAllRows","expandIcon","rowSelectionProps","fixed","checkStrictly","y","position","cell","bordered","visibleIndex","expandIconColumnIndex","_expandColumnKey","widthCol","titleNode","ellipsis","defaultSortOrder","onCell","typeData","JSON","stringify","Select","lostParamName","optionConverter","options","widthControl","mode","_hasMore","_setHasMore","_loading","_setLoading","_options","_setOptions","tmpOption","setTmpOption","isEndReached","setIsEndReached","_setSortBy","_setFilter","_setSearchValue","_isSelectAll","_setIsSelectAll","_loadOptions","preValue","findIndex","option","_loadTmpOption","getPageNum","getSort","getSearchValue","requestOptions","onScroll","scrollTopMax","nativeEvent","target","scrollTop","_onChangeSelectAll","optionsValues","_onChange","getSelectAllCls","omittedValues","CheckOutlined","menu","disabled","TreeSelect","_treeData","_setTreeData","_optionConverter","modalTypes","getDefaultFooterProps","modal","okText","cancelText","modalTitle","okType","Modal","buttonProps","toolTipProps","modalConfig","modalData","modalProps","setVisible","_modalData","_setModalData","_buttonProps","setButtonProps","setModalData","openModal","_onOpenModal","closeModal","_onCloseModal","onFinishHandler","saveObj","onOk","onFinishFailedHandler","loadInitDataHandler","callBack","formConfig","_onCancelHandler","onCancel","defaultFooter","cancelButtonProps","htmlType","okButtonProps","bodyStyle","requestUploadFile","dataObject","onCompletedUpload","onFailedUpload","uploadProps","UploadFile","_uploadFile","file","notification","notifProps","uid","duration","icon","info","close","defaultUploadProps","multiple","showUploadList","beforeUpload","CloudUploadOutlined","renderClassicWithComponentType","componentName","classic","renderDeclarative","renderFormItemComponent","componentProps","Item","noStyle","ComponentClassic","StoreComponent","ComponentClassicWithLabel","ComponentClassicWithPlaceholder","placeholder","_placeholder","ComponentClassicWithOutStore","TableWrapper","RtTable","AntTable","classicComponents","RtForm","FormList","List","Space","Row","Col","RtLayout","Tabs","RtTabPane","withComponentType","RtButton","Title","_Typography","Text","Divider","Checkbox","RtDatePicker","RtTimePicker","DateText","Input","Search","_Input","TextArea","Password","InputNumber","Switch","RadioGroup","_Radio","Group","RtSelect","RtTreeSelect","RtModal","RtSwitcher","RtUploadFile","Transfer","obj","DateRange","mounted","setMounted","startValue","setStartValue","endValue","setEndValue","nameStart","nameEnd","dateFormat","valueStart","valueEnd","showTime","defaultValueStart","defaultValueEnd","disabledStartDate","valueOf","disabledEndDate","onStartChange","onEndChange","locale","SingleDate","setValue","defaultValue","_onChangePicker","FilterPanel","applyFilterTooltip","applyFilterSize","applyFilterRender","borderStyle","onChangeFilter","onApplyFilter","configFilter","resetFilterRender","resetFilterTooltip","resetFilterSize","_onChangeData","_applyFilter","_resetFilter","getPanelCls","marginLeft","autoDeleteRows","footerHeight","footerShow","footerTitles","commandPanelProps","CommandPanel","filterPanelProps","setReloadTable","setRowsHandler","unshift","_getDisabledElementsOfCommandPanel","_disabledElements","disabledElements","_onClickAddAsCopy","onClickAddAsCopy","_onClickEdit","onClickEdit","_onClickDelete","onClickDelete","_onClickUp","onClickUp","_onClickDown","onClickDown","_onChangeFilter","_onApplyFilter","loadedRows","totalRows","Paragraph","_selectedRowData","_setSelectedRowData","isSelectOpened","setIsSelectOpened","isClickInSelect","setIsClickInSelect","widthPopup","heightPopup","onChangeKeys","requestLoadDefault","searchable","setSelectedRowData","loadSelectedObject","request","srk","findRow","window","addEventListener","handleMouseClick","removeEventListener","onClosePopup","_getHeadCls","_getHeadText","_getPopupCls","_getPopupStyle","defRowsLen","getEvents","systemBtnProps","_SingleSelectRow","contains","onOpenPopup","onClickClear","UpOutlined","DownOutlined","CloseCircleFilled","AdvancedTable","setConfig","configData","columnsByConfig","getDefaultFilter","autoSaveForm","FormModal","saveRow","startsWith","requestSaveRow","_onLoadInitData","FormTable","addOnServer","editOnServer","addOnLocal","editOnLocal","addGroupOnServer","editGroupOnServer","addGroupOnLocal","editGroupOnLocal","select","viewGroup","viewObject","visibleModals","setVisibleModals","tableRows","setTableRows","tableSelectedRowKeys","setTableSelectedRowKeys","tableSelectedRow","setTableSelectedRow","setTableRef","_setTableRef","_ref","rowKeyType","modals","isGroupKey","history","requestDeleteRow","dataDeleteRow","cmdProps","_addRowsToLocalTable","getModals","_onSaveRow","isExistCmdBtn","btnType","equalsActionTypeCmdBtn","actionType","aTypes","_onClickAddHandler","location","pathname","_onClickAddAsCopyHandler","_addRowToLocalTable","_onClickAddGroupHandler","_onClickEditHandler","deleteData","_onClickUpHandler","_onClickDownHandler","selectRows","tRow","_addRowToServerTable","_editRowToLocalTable","_onSelectedRowsChange","getTableCls","onClickAdd","onClickAddGroup","SortOrder","ASC","DESC","getValueFromEvent","newValue","DatePickerHOC","TypographyTitle","TypographyText","getTitle","parentLoadHandler","labelCol","span","wrapperCol","rules","required","AddFolderModal","args","EditFolderModal","EditFileModal","copyTextToClipboard","navigator","clipboard","fallbackCopyTextToClipboard","text","writeText","openNotificationWithIcon","err","textArea","document","createElement","top","left","appendChild","focus","successful","execCommand","removeChild","msg","FileManager","HomeOutlined","breadcrumb","setBreadcrumb","deleted","tableFilter","setTableFilter","isGroup","loadTable","requestDownloadFile","_onClickBreadcrumb","parentId","slice","_onClickBack","newBreadcrumb","newFilter","processBeforeSaveModal","extension","newData","owner","requestLoadParent","CopyOutlined","pathDownloadFile","styleDiv","display","alignItems","styleIcon","marginRight","FolderFilled","color","FileWordOutlined","FileExcelOutlined","FileImageOutlined","FileMarkdownOutlined","FilePdfOutlined","FilePptOutlined","FileTextOutlined","FileZipOutlined","FileOutlined","uploadRender","PlusOutlined","breadcrumbRender","add","tooltip","addGroup","edit","delete","RollbackOutlined","getItem","confirm","defaultValueSearch","deleteConfirm","deleteConfirmType","deleteConfirmTitle","deleteConfirmDescription","defaultSystemBtnProps","addAsCopy","FolderAddOutlined","EditOutlined","DeleteOutlined","up","ArrowUpOutlined","down","ArrowDownOutlined","search","settings","tooltipPlacement","SettingOutlined","FilterOutlined","deleteButtonModalConfirm","deleteButtonPopupConfirm","renderDeleteBtn","ExclamationCircleOutlined","content","centered","withOnClick","genProps","btnProps","renderBtn","deprecated","rtdReducer","newState","set","debug","executeRequest","Slider","Collapse","Popover","Tooltip"],"mappings":"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"}