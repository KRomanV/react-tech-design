{"version":3,"file":"index.js","sources":["../src/redux/rtd.action.types.js","../src/redux/rtd.actions.js","../src/components/utils/baseUtils.js","../src/components/utils/variables.js","../src/components/deprecated/Table/defaultSettings.js","../src/components/deprecated/Table/Selectable/SelectionHead.js","../src/components/deprecated/Table/Selectable/SelectionCell.js","../src/components/utils/datesUtils.js","../src/components/deprecated/DateRange/DateRange.js","../src/components/deprecated/SingleDate/SingleDate.js","../src/components/deprecated/FilterPanel/FilterPanel.js","../src/components/deprecated/Table/SelectionList/SelectionList.js","../src/components/deprecated/Table/Table.js","../src/components/deprecated/Select/Select.js","../src/components/deprecated/AdvancedTable/AdvancedTable.js","../src/components/deprecated/Form/Form.js","../src/components/deprecated/Form/FormModal.js","../src/components/deprecated/Form/FormTable.js","../src/components/deprecated/Form/HOCs.js","../src/components/deprecated/FileManager/AddFolderModal.js","../src/components/utils/clipboardUtils.js","../src/components/deprecated/FileManager/FileManager.js","../src/components/deprecated/Modal/Modal.js","../src/components/deprecated/Form/FormItem.js","../src/components/deprecated/Layout/Layout.js","../src/components/deprecated/Form/FormItems.js","../src/components/deprecated/CommandPanel/CommandPanel.js","../src/components/deprecated/List/List.js","../src/components/deprecated/index.js","../src/components/core/withStore.js","../src/components/Form/FormItem.js","../src/components/Form/FormItems.js","../src/components/Form/Form.js","../src/components/Select/Select.js","../src/components/TreeSelect/TreeSelect.js","../src/components/UploadFile/UploadFile.js","../src/components/Table/ReactBaseTable/defaultSettings.js","../src/components/Table/ReactBaseTable/Selectable/SelectionHead.js","../src/components/Table/ReactBaseTable/Selectable/SelectionCell.js","../src/components/Table/ReactBaseTable/SelectionList/SelectionList.js","../src/components/Table/ReactBaseTable/Table.js","../src/components/Table/ReactBaseTable/ConfigLoader.js","../src/components/Table/AntTable/HeaderCell.js","../src/components/Table/AntTable/HeaderRow.js","../src/components/Table/AntTable/BodyCell.js","../src/components/Table/AntTable/Table.js","../src/components/Table/AntTable/ConfigLoader.js","../src/components/Modal/Modal.js","../src/components/Dashboard/Panels/Logs.js","../src/components/Dashboard/Panels/LineChart.js","../src/components/Dashboard/Dashboard.js","../src/redux/rtd.reducer.js","../src/components/utils/api.js"],"sourcesContent":["const types =\r\n{\r\n    INIT_STORE: 'INIT_STORE',\r\n    SET_DATA_STORE: 'SET_DATA_STORE',\r\n};\r\n\r\nexport {types as actionTypes};\r\n","import {actionTypes} from './rtd.action.types';\r\n\r\nexport const setDataStore = (path, row) => ({\r\n    type: actionTypes.SET_DATA_STORE,\r\n    payload: {path, row}\r\n});\r\n","import React from 'react';\r\nimport {notification} from 'antd';\r\nimport moment from \"moment\";\r\nimport {setDataStore} from '../../redux/rtd.actions';\r\n\r\nexport const noop = () => {};\r\n\r\nexport const flatten = (arrayOfArrays) =>\r\n\tarrayOfArrays.reduce(\r\n\t\t(flattened, item) =>\r\n\t\t\tflattened.concat(Array.isArray(item) ? flatten(item) : [item]),\r\n\t\t[]\r\n\t);\r\n\r\nexport const getTableRowObjects = (data) => {\r\n\tconst rowKeys = data.map((item) => {\r\n\t\tif (item.children && item.children.length) {\r\n\t\t\treturn [item, getTableRowObjects(item.children)];\r\n\t\t}\r\n\t\treturn item;\r\n\t});\r\n\treturn rowKeys;\r\n};\r\n\r\nexport const getTableRowKeys = (data, rowKey) => {\r\n\tconst rowKeys = data.map((item) => {\r\n\t\tif (item.children && item.children.length) {\r\n\t\t\treturn [item[rowKey], getTableRowKeys(item.children, rowKey)];\r\n\t\t}\r\n\t\treturn item[rowKey];\r\n\t});\r\n\treturn rowKeys;\r\n};\r\n\r\nexport const findNodeByRowKey = (data, rowKey, rowValue) => {\r\n\tlet node = {};\r\n\tlet item = {};\r\n\tfor (let i = 0; i < data.length; i++) {\r\n\t\titem = _findNodeByRowKey(data[i], rowKey, rowValue);\r\n\t\tif (item !== false) return item;\r\n\t}\r\n\treturn node;\r\n};\r\n\r\nconst _findNodeByRowKey = (currentNode, rowKey, value) => {\r\n\tlet i, currentChild, result;\r\n\r\n\tif (value === currentNode[rowKey]) {\r\n\t\treturn currentNode;\r\n\t} else {\r\n\t\tif (currentNode.children) {\r\n\t\t\tfor (i = 0; i < currentNode.children.length; i += 1) {\r\n\t\t\t\tcurrentChild = currentNode.children[i];\r\n\t\t\t\tresult = _findNodeByRowKey(currentChild, rowKey, value);\r\n\t\t\t\tif (result !== false) return result;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\nexport const generateUUID = () => {\r\n\treturn ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\r\n\t\t(\r\n\t\t\tc ^\r\n\t\t\t(crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\r\n\t\t).toString(16)\r\n\t);\r\n};\r\n\r\n\r\nexport const getValueFromSingleSelect = (name, keys) => (keys && keys.length > 0) ? keys[0] : null;\r\n\r\nexport const getValueFromMultiSelect = (name, keys) => (keys && keys.length > 0) ? keys : null;\r\n\r\nexport const getValueFromSelectTable = (rows) => {\r\n    if (rows && rows.length > 0) return rows[0];\r\n    else return null;\r\n};\r\n\r\nexport const getObjectExcludedProps = (object, exclude) => {\r\n    let returnObject = {};\r\n    Object.keys(object).forEach((key) =>\r\n        !exclude.includes(key) ? (returnObject[key] = object[key]) : undefined // было null\r\n    );\r\n    return returnObject;\r\n};\r\n\r\nexport const notificationError = (error, message) => {\r\n\tif (error.response) {\r\n\t\tconsole.error(error.response.status, error.response.data);\r\n\t\tconst errorDescription = (error.response.data && error.response.data.error)\r\n\t\t\t? error.response.data.error\r\n\t\t\t: \"Нет описания ошибки\";\r\n\t\tnotification.error({\r\n\t\t\tmessage: `[${error.response.status}] ${message}`,\r\n\t\t\tdescription: errorDescription,\r\n\t\t});\r\n\t} else {\r\n\t\tconsole.error(error);\r\n\t\tnotification.error({\r\n\t\t\tmessage: 'Не удалось детектировать ошибку. См. console.error',\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const dispatchToStore = ({dispatch, setDataStore, value, extraData}) => {\r\n\tif(dispatch.path) {\r\n\t\t// console.log(\"storeHOC => dispatchToStore\", dispatch, setDataStore);\r\n\t\tif(dispatch.type === 'event')\r\n\t\t\tsetDataStore && setDataStore(dispatch.path,  {\r\n\t\t\t\ttimestamp: moment(),\r\n\t\t\t\t// type: dispatch.type,\r\n\t\t\t\tvalue: value,\r\n\t\t\t\textraData: extraData\r\n\t\t\t});\r\n\t\telse\r\n\t\t\tsetDataStore && setDataStore(dispatch.path, value);\r\n\t}\r\n}\r\nexport const dispatchToStoreEx = ({dispatch, path, type, value}) => {\r\n\tif(type === 'event'){\r\n\t\tdispatch(\r\n\t\t\tsetDataStore(path, {\r\n\t\t\t\ttimestamp: moment(),\r\n\t\t\t\tvalue\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\tdispatch( setDataStore(path, value) );\r\n}\r\n\r\n\r\nexport function useMounted() {\r\n\tconst [isMounted, setIsMounted] = React.useState(false)\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetIsMounted(true)\r\n\t}, [])\r\n\treturn isMounted\r\n}\r\n\r\nexport const getSortBy = (clientSortBy, serverSortBy, dataIndex) => {\r\n\tif (clientSortBy && clientSortBy.key === dataIndex) {\r\n\t\treturn [\r\n\t\t\tclientSortBy,\r\n\t\t\tclientSortBy.order === \"asc\" ? \"ascend\" : \"descend\"\r\n\t\t];\r\n\t} else if (serverSortBy) {\r\n\t\treturn [\r\n\t\t\t{ key: dataIndex, order: serverSortBy },\r\n\t\t\tserverSortBy === \"asc\" ? \"ascend\" : \"descend\"\r\n\t\t];\r\n\t} else\r\n\t\treturn [undefined, undefined];\r\n};\r\n","export const rtPrefix = 'rt';\r\n","import {Spin} from 'antd';\r\nimport {LoadingOutlined} from '@ant-design/icons';\r\nimport React from 'react';\r\n\r\nexport const empty = (\r\n\t<div className={'BaseTable__overlay'}>\r\n\t\t{' '}\r\n\t\t<span>Нет данных</span>{' '}\r\n\t</div>\r\n);\r\n\r\nexport const overlay = (\r\n\t<div className={'BaseTable__overlay'}>\r\n\t\t{' '}\r\n\t\t<Spin\r\n\t\t\ttip='Загрузка...'\r\n\t\t\tindicator={<LoadingOutlined style={{fontSize: 24}} spin />}\r\n\t\t/>{' '}\r\n\t</div>\r\n);\r\n","import React from 'react';\r\nimport {Checkbox} from 'antd';\r\nimport { flatten, getTableRowKeys, getTableRowObjects } from \"../../../utils/baseUtils\";\r\n\r\nconst SelectionHead = (props) => {\r\n\tconst {column, container} = props;\r\n\tconst {rowKey, onSelectAll, selectedRowKeys, selectAll} = column;\r\n\r\n\tconst _handleChange = (e) => {\r\n\t\tconst rowKeys = flatten(getTableRowKeys(container.props.data, column.rowKey));\r\n\t\tconst rowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => rowKeys.includes(item[rowKey]));\r\n\t\tconst totalLength = rowKeys.length;\r\n\t\tconst selectLength = selectedRowKeys.length;\r\n\t\tconst checked = !(totalLength === selectLength);\r\n\r\n\t\t// const newRowKeys = container.props.data.map((item) => { return item[column.rowKey] });\r\n\t\tonSelectAll({selected: checked, rowKeys: rowKeys, rowObjects: rowObjects});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Checkbox\r\n\t\t\tindeterminate={selectAll === null}\r\n\t\t\tonChange={_handleChange}\r\n\t\t\tchecked={selectAll}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default SelectionHead;\r\n","import React from 'react';\r\nimport {Checkbox} from 'antd';\r\nimport {\r\n\tflatten,\r\n\tgetTableRowKeys,\r\n\tfindNodeByRowKey, getTableRowObjects\r\n} from \"../../../utils/baseUtils\";\r\n\r\nconst getRowChildren = (data, rowKey) =>\r\n\tdata.map((item) => {\r\n\t\tif (item.children && item.children.length) {\r\n\t\t\treturn [item[rowKey], getRowChildren(item.children, rowKey)];\r\n\t\t}\r\n\t\treturn item[rowKey];\r\n\t});\r\n\r\nconst findBrothers = (data, selfItem, rowKey, parentKey, rowKeys = null) => {\r\n\tlet arr = [];\r\n\tdata.forEach((item) => {\r\n\t\tif (\r\n\t\t\titem[parentKey] &&\r\n\t\t\titem[parentKey] === selfItem[parentKey] &&\r\n\t\t\titem[rowKey] !== selfItem[rowKey]\r\n\t\t) {\r\n\t\t\tif (rowKeys !== null) {\r\n\t\t\t\tif (rowKeys.includes(item[rowKey])) {\r\n\t\t\t\t\tarr.push(item[rowKey]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tarr.push(item[rowKey]);\r\n\t\t\t}\r\n\t\t} else if (item.children && item.children.length) {\r\n\t\t\tarr.push(\r\n\t\t\t\tfindBrothers(\r\n\t\t\t\t\titem.children,\r\n\t\t\t\t\tselfItem,\r\n\t\t\t\t\trowKey,\r\n\t\t\t\t\tparentKey,\r\n\t\t\t\t\trowKeys\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n\r\nexport const parentAnalysis = ({\r\n\trowData,\r\n\trowKey,\r\n\tparentKey,\r\n\tchecked,\r\n\tnodeAssociated,\r\n\ttreeData,\r\n\tselectedRowKeys,\r\n\tindeterminateRowKeys,\r\n}) => {\r\n\tlet _selectedRowKeys = [...selectedRowKeys];\r\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\r\n\r\n\tlet currentRowData = rowData;\r\n\tlet parentExist = !!currentRowData[parentKey];\r\n\tlet lastTypeSelect = checked ? 'checked' : 'square';\r\n\tlet typeSelect = '';\r\n\tlet nextSquare = false;\r\n\r\n\t/** Пока есть родитель */\r\n\twhile (parentExist && nodeAssociated) {\r\n\t\tconst indeterminateBrothers = flatten(\r\n\t\t\tfindBrothers(\r\n\t\t\t\ttreeData,\r\n\t\t\t\tcurrentRowData,\r\n\t\t\t\trowKey,\r\n\t\t\t\tparentKey,\r\n\t\t\t\t_indeterminateRowKeys\r\n\t\t\t)\r\n\t\t);\r\n\t\tconst selectedBrothers = flatten(\r\n\t\t\tfindBrothers(\r\n\t\t\t\ttreeData,\r\n\t\t\t\tcurrentRowData,\r\n\t\t\t\trowKey,\r\n\t\t\t\tparentKey,\r\n\t\t\t\t_selectedRowKeys\r\n\t\t\t)\r\n\t\t);\r\n\t\tconst allBrothers = flatten(\r\n\t\t\tfindBrothers(treeData, currentRowData, rowKey, parentKey)\r\n\t\t);\r\n\r\n\t\tif (checked) {\r\n\t\t\tif (\r\n\t\t\t\tlastTypeSelect === 'checked' &&\r\n\t\t\t\tselectedBrothers.length === allBrothers.length\r\n\t\t\t)\r\n\t\t\t\ttypeSelect = 'checked';\r\n\t\t\telse typeSelect = 'square';\r\n\t\t} else {\r\n\t\t\tif (\r\n\t\t\t\t!checked &&\r\n\t\t\t\t!nextSquare &&\r\n\t\t\t\t(selectedBrothers.length || indeterminateBrothers.length)\r\n\t\t\t)\r\n\t\t\t\tnextSquare = true;\r\n\t\t\tif (nextSquare) typeSelect = 'square';\r\n\t\t\telse typeSelect = 'none';\r\n\t\t}\r\n\r\n\t\t// console.log(\"allBrothers \", allBrothers);\r\n\t\t// console.log(\"findParentById \", treeData,\r\n\t\t//     rowKey,\r\n\t\t//     parentKey,\r\n\t\t//     currentRowData[parentKey]);\r\n\t\t//\r\n\t\t// console.log(\"findNodeByRowKey \", findNodeByRowKey(treeData, rowKey, currentRowData[parentKey]));\r\n\r\n\t\t// Найти родителя\r\n\t\tcurrentRowData = findNodeByRowKey(\r\n\t\t\ttreeData,\r\n\t\t\trowKey,\r\n\t\t\tcurrentRowData[parentKey]\r\n\t\t);\r\n\r\n\t\tif (typeSelect === 'checked') {\r\n\t\t\t// Выделить галкой\r\n\t\t\t// console.log(\"checked\");\r\n\t\t\tlastTypeSelect = 'checked';\r\n\t\t\tif (!_selectedRowKeys.includes(currentRowData[rowKey]))\r\n\t\t\t\t_selectedRowKeys.push(currentRowData[rowKey]);\r\n\t\t\tconst index = _indeterminateRowKeys.indexOf(currentRowData[rowKey]);\r\n\t\t\tif (index > -1) _indeterminateRowKeys.splice(index, 1);\r\n\t\t} else if (typeSelect === 'square') {\r\n\t\t\t// Выдлеить квадратом\r\n\t\t\t// console.log(\"square: \");\r\n\t\t\tlastTypeSelect = 'square';\r\n\t\t\tif (!_indeterminateRowKeys.includes(currentRowData[rowKey]))\r\n\t\t\t\t_indeterminateRowKeys.push(currentRowData[rowKey]);\r\n\t\t\tconst index = _selectedRowKeys.indexOf(currentRowData[rowKey]);\r\n\t\t\tif (index > -1) _selectedRowKeys.splice(index, 1);\r\n\t\t} else if (typeSelect === 'none') {\r\n\t\t\t// Снять выделение\r\n\t\t\t// console.log(\"none: \");\r\n\t\t\tlastTypeSelect = 'none';\r\n\t\t\tconst indexS = _selectedRowKeys.indexOf(currentRowData[rowKey]);\r\n\t\t\tif (indexS > -1) _selectedRowKeys.splice(indexS, 1);\r\n\t\t\tconst indexI = _indeterminateRowKeys.indexOf(\r\n\t\t\t\tcurrentRowData[rowKey]\r\n\t\t\t);\r\n\t\t\tif (indexI > -1) _indeterminateRowKeys.splice(indexI, 1);\r\n\t\t}\r\n\r\n\t\tparentExist = !!currentRowData[parentKey];\r\n\t\t// parentExist = проверка наличия след родителя\r\n\t}\r\n\r\n\treturn [_selectedRowKeys, _indeterminateRowKeys];\r\n};\r\n\r\nconst SelectionCell = (props) => {\r\n\tconst _handleChange = (checked) => {\r\n\t\tconst {rowData, rowIndex, column, container} = props;\r\n\t\tconst {\r\n\t\t\tonChange,\r\n\t\t\tselectedRowKeys,\r\n\t\t\tindeterminateRowKeys,\r\n\t\t\trowKey,\r\n\t\t\tparentKey,\r\n\t\t\tnodeAssociated,\r\n\t\t} = column;\r\n\r\n\t\t// const rowKeys = flatten(getTableRowKeys([rowData], column.rowKey));\r\n\t\t// const totalLength = container.props.data.length;\r\n\t\t// const checked = e.target.checked;\r\n\t\t// const currentRowKey = {[rowKey]: rowData[rowKey], checked};\r\n\t\t// console.log(\"_handleChange: \", selectedRowKeys);\r\n\r\n\t\tlet _selectedRowKeys = [...selectedRowKeys];\r\n\t\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\r\n\r\n\t\t/** Обработка себя, поиск детей, выделение / снятие их */\r\n\t\tlet rowChildren = [];\r\n\t\tif (checked) {\r\n\t\t\tif (rowData.children && nodeAssociated)\r\n\t\t\t\trowChildren = flatten(getRowChildren(rowData.children, rowKey));\r\n\r\n\t\t\t_selectedRowKeys = _selectedRowKeys\r\n\t\t\t\t.concat([rowData[rowKey]])\r\n\t\t\t\t.concat(rowChildren);\r\n\t\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\r\n\t\t\t\t(element) =>\r\n\t\t\t\t\telement !== rowData[rowKey] &&\r\n\t\t\t\t\t!rowChildren.includes(element)\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tif (rowData.children && nodeAssociated)\r\n\t\t\t\trowChildren = flatten(\r\n\t\t\t\t\tgetRowChildren(rowData.children, rowKey, false)\r\n\t\t\t\t);\r\n\r\n\t\t\t_selectedRowKeys = _selectedRowKeys.filter(\r\n\t\t\t\t(element) =>\r\n\t\t\t\t\telement !== rowData[rowKey] &&\r\n\t\t\t\t\t!rowChildren.includes(element)\r\n\t\t\t);\r\n\t\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\r\n\t\t\t\t(element) =>\r\n\t\t\t\t\telement !== rowData[rowKey] &&\r\n\t\t\t\t\t!rowChildren.includes(element)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t[_selectedRowKeys, _indeterminateRowKeys] = parentAnalysis({\r\n\t\t\trowData,\r\n\t\t\trowKey,\r\n\t\t\tparentKey,\r\n\t\t\tchecked,\r\n\t\t\tnodeAssociated,\r\n\t\t\ttreeData: container.props.data,\r\n\t\t\tselectedRowKeys: _selectedRowKeys,\r\n\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\r\n\t\t});\r\n\r\n\t\tconst keys = [...new Set(_selectedRowKeys)];\r\n\t\tconst _selectedRowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => keys.includes(item[rowKey]));\r\n\t\t//return [...new Set(_disabledElements)]\r\n\t\t// onChange({ selected: checked, totalLength, rowData, rowIndex });\r\n\r\n\t\t/** Выясняем новое состояние галочки \"Выделить все\" */\r\n\t\tlet selectAll;\r\n\t\tconst selectLength = _selectedRowKeys.length;\r\n\t\tconst totalLength = flatten(\r\n\t\t\tgetTableRowKeys(container.props.data, column.rowKey)\r\n\t\t).length;\r\n\r\n\t\tif (selectLength === 0) selectAll = false;\r\n\t\telse if (totalLength === selectLength) selectAll = true;\r\n\t\telse if (totalLength !== selectLength) selectAll = null;\r\n\r\n\r\n\r\n\t\tonChange({\r\n\t\t\tselected: checked,\r\n\t\t\t_selectedRow: {\r\n\t\t\t\trowData: {...rowData},\r\n\t\t\t\trowIndex: rowIndex,\r\n\t\t\t\trowKey: rowKey,\r\n\t\t\t},\r\n\t\t\t_selectAll: selectAll,\r\n\t\t\t_selectedRowKeys: keys, //[...new Set(_selectedRowKeys)],\r\n\t\t\t_selectedRowObjects: _selectedRowObjects,\r\n\t\t\t_indeterminateRowKeys: [...new Set(_indeterminateRowKeys)],\r\n\t\t});\r\n\r\n\t\t// let uniqIds = {};\r\n\t\t// onChange({selected: checked, rowKeys: rowKeys.filter(obj => !uniqIds[obj[rowKey]] && (uniqIds[obj[rowKey]] = true)) });\r\n\t};\r\n\r\n\tconst {rowData, column} = props;\r\n\tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\r\n\tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\r\n\tconst checked = selectedRowKeys.includes(rowData[rowKey]);\r\n\r\n\treturn (\r\n\t\t<Checkbox\r\n\t\t\tindeterminate={det}\r\n\t\t\tonChange={(e) => _handleChange(e.target.checked)}\r\n\t\t\tchecked={checked}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default SelectionCell;\r\n","import moment from 'moment';\r\n\r\nexport const APP_TIME_OFFSET = 3;\r\n\r\nexport const getMomentFromStringByFormat = (date, format) =>\r\n\tdate ? moment(date, format).utcOffset(APP_TIME_OFFSET) : null;\r\n\r\n// export const getMomentWithOffset = (date) =>\r\n// \tmoment(date).utcOffset(APP_TIME_OFFSET);\r\nexport const getMomentWithOffset = (date) => moment(date).format();\r\n\r\nexport const getMomentWithOffsetTruncateDay = (date) =>\r\n\tmoment(date).startOf('day')\r\n\t\t// .hours(0)\r\n\t\t// .minutes(0)\r\n\t\t// .seconds(0)\r\n\t\t// .milliseconds(0)\r\n\t\t.format();\r\n\r\n\r\nexport const toFormat = (dateString, format) => {\r\n\tif (!dateString) {\r\n\t\treturn '';\r\n\t}\r\n\tconst mom = moment(dateString);\r\n\treturn mom.isValid() ? mom.format(format) : dateString;\r\n};\r\n\r\nexport const toDDMMYYYYdot = (dateString) => toFormat(dateString, 'DD.MM.YYYY');\r\n\r\nexport const toDDMMYYYYdotAltDashDash = (dateString) =>\r\n\ttoDDMMYYYYdot(dateString) || '--';\r\n\r\nexport const toDDMMYYYYHHMMSS = (dateString) =>\r\n\ttoFormat(dateString, 'DD.MM.YYYY HH:mm:ss') || '--';\r\n\r\nexport const toDDMMYYYYdash = (dateString) =>\r\n\ttoFormat(dateString, 'DD-MM-YYYY');\r\n\r\nexport const getISO = (date) =>\r\n\tmoment(date).utcOffset(APP_TIME_OFFSET).toISOString();\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport {DatePicker} from 'antd';\r\nimport locale from 'antd/es/date-picker/locale/ru_RU';\r\nimport {noop} from '../../utils/baseUtils';\r\nimport {rtPrefix} from '../../utils/variables';\r\nimport {\r\n\tgetMomentWithOffset,\r\n\tgetMomentWithOffsetTruncateDay,\r\n\tgetMomentFromStringByFormat,\r\n} from '../../utils/datesUtils';\r\n\r\nconst DateRange = (props) => {\r\n\t/** Состояние первоначалной настройки компонента */\r\n\tconst [mounted, setMounted] = useState(false);\r\n\tconst [startValue, setStartValue] = useState(undefined);\r\n\tconst [endValue, setEndValue] = useState(undefined);\r\n\r\n\tconst {\r\n        className,\r\n\t\tnameStart,\r\n\t\tnameEnd,\r\n\t\tdateFormat,\r\n\t\tonChange,\r\n        size,\r\n\t\ttitle,\r\n\t\tvalueStart,\r\n\t\tvalueEnd,\r\n\t\tshowTime,\r\n\t} = props;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!mounted) {\r\n\t\t\tif (props.defaultValueStart) {\r\n                // console.log(\"DateRange mounted :\", nameStart, props.defaultValueStart);\r\n                _onChange(\r\n\t\t\t\t\tnameStart,\r\n\t\t\t\t\tgetMomentFromStringByFormat(\r\n\t\t\t\t\t\tprops.defaultValueStart,\r\n\t\t\t\t\t\tdateFormat\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tsetStartValue(\r\n\t\t\t\t\tgetMomentFromStringByFormat(\r\n\t\t\t\t\t\tprops.defaultValueStart,\r\n\t\t\t\t\t\tdateFormat\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (props.defaultValueEnd) {\r\n\t\t\t\t_onChange(\r\n\t\t\t\t\tnameEnd,\r\n\t\t\t\t\tgetMomentFromStringByFormat(\r\n\t\t\t\t\t\tprops.defaultValueEnd,\r\n\t\t\t\t\t\tdateFormat\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tsetEndValue(\r\n\t\t\t\t\tgetMomentFromStringByFormat(\r\n\t\t\t\t\t\tprops.defaultValueEnd,\r\n\t\t\t\t\t\tdateFormat\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tsetMounted(true);\r\n\t\t}\r\n\t}, [mounted]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (valueStart) {\r\n\t\t\tsetStartValue(moment(valueStart));\r\n\t\t\t// console.log('useEffect -> valueStart', valueStart);\r\n\t\t} else if (!props.defaultValueStart) setStartValue(null);\r\n\t}, [valueStart]);\r\n\tuseEffect(() => {\r\n\t\tif (valueEnd) {\r\n\t\t\tsetEndValue(moment(valueEnd));\r\n\t\t\t// console.log('useEffect -> valueEnd', valueEnd);\r\n\t\t} else if (!props.defaultValueEnd) setEndValue(null);\r\n\t}, [valueEnd]);\r\n\r\n\tconst disabledStartDate = (startValue) => {\r\n\t\tif (!startValue || !endValue) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn startValue.valueOf() > endValue.valueOf();\r\n\t};\r\n\r\n\tconst disabledEndDate = (endValue) => {\r\n\t\tif (!endValue || !startValue) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn endValue.valueOf() <= startValue.valueOf();\r\n\t};\r\n\r\n\tconst onStartChange = (date) => {\r\n\t\tsetStartValue(date);\r\n\t\t_onChange(nameStart, date);\r\n\t};\r\n\r\n\tconst onEndChange = (date) => {\r\n\t\tsetEndValue(date);\r\n\t\t_onChange(nameEnd, date);\r\n\t};\r\n\r\n\tconst _onChange = (name, value) => {\r\n\t\tif (value)\r\n\t\t\tif(showTime)\r\n\t\t\t\tonChange(name, getMomentWithOffset(value));\r\n\t\t\telse\r\n\t\t\t\tonChange(name, getMomentWithOffsetTruncateDay(value));\r\n\r\n\t\telse onChange(name, value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={`${className} ${rtPrefix}-date-range`}>\r\n\t\t\t<div>\r\n                {title ? <div className={'title'}>{title}</div> : null}\r\n\t\t\t\t<span className={'subtitleStart'}>c</span>\r\n\t\t\t\t<DatePicker\r\n\t\t\t\t\tlocale={locale}\r\n\t\t\t\t\t// defaultValue={ checkDefValue(props.defaultValueStart) }\r\n\t\t\t\t\tsize={size}\r\n\t\t\t\t\tstyle={{width: !!showTime ? '160px' : '135px'}}\r\n\t\t\t\t\tdisabledDate={disabledStartDate}\r\n\t\t\t\t\tonChange={onStartChange}\r\n\t\t\t\t\tformat={dateFormat}\r\n\t\t\t\t\tplaceholder={'Выберите дату'}\r\n\t\t\t\t\tvalue={startValue}\r\n\t\t\t\t\tshowTime={showTime}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<span className={'subtitleEnd'}>по</span>\r\n\t\t\t\t<DatePicker\r\n\t\t\t\t\tlocale={locale}\r\n\t\t\t\t\t// defaultValue={ checkDefValue(props.defaultValueEnd) }\r\n\t\t\t\t\tsize={size}\r\n\t\t\t\t\tstyle={{width: showTime ? '160px' : '135px'}}\r\n\t\t\t\t\tdisabledDate={disabledEndDate}\r\n\t\t\t\t\tonChange={onEndChange}\r\n\t\t\t\t\tformat={dateFormat}\r\n\t\t\t\t\tplaceholder={'Выберите дату'}\r\n\t\t\t\t\tvalue={endValue}\r\n\t\t\t\t\tshowTime={showTime}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nDateRange.propTypes = {\r\n\t/** Формат отображения даты (не влияет на формат в onChange) */\r\n\tdateFormat: PropTypes.string,\r\n\r\n\t/** Значение по умолчанию для первого пикера */\r\n\t// defaultValueStart: PropTypes.string,\r\n\r\n\t/** Значение по умолчанию для второго пикера */\r\n\t// defaultValueEnd: PropTypes.string,\r\n\r\n    /** Дополнительное имя класса для элемента */\r\n    className: PropTypes.string,\r\n\r\n\t/** Наименование параметра для первого пикера */\r\n\tnameStart: PropTypes.string,\r\n\r\n\t/** Наименование параметра для второго пикера */\r\n\tnameEnd: PropTypes.string,\r\n\r\n\t/** Событие при изменении любого из пикеров */\r\n\tonChange: PropTypes.func,\r\n\r\n    /** Размер пикера ['small', 'middle', 'large'] */\r\n    size: PropTypes.oneOf(['small', 'middle', 'large']),\r\n\r\n\t/** Заголовок */\r\n\ttitle: PropTypes.string,\r\n\r\n\t/** Значение даты первого пикера (используется для управления датой из родительного компонента) */\r\n\t// valueStart: PropTypes.string,\r\n\r\n\t/** Значение даты второго пикера (используется для управления датой из родительного компонента) */\r\n\t// valueEnd: PropTypes.string,\r\n};\r\n\r\nDateRange.defaultProps = {\r\n    className: '',\r\n\tnameStart: 'dateStart',\r\n\tnameEnd: 'dateEnd',\r\n\tdateFormat: 'DD.MM.YYYY',\r\n\tonChange: noop,\r\n    size: 'middle',\r\n    // title: 'Период',\r\n};\r\n\r\nexport default DateRange;\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {DatePicker} from 'antd';\r\nimport moment from 'moment';\r\nimport {noop} from '../../utils/baseUtils';\r\nimport {\r\n\tgetMomentFromStringByFormat,\r\n\tgetMomentWithOffsetTruncateDay,\r\n} from '../../utils/datesUtils';\r\n\r\nconst SingleDate = (props) => {\r\n\t/** Состояние первоначалной настройки компонента */\r\n\tconst [mounted, setMounted] = useState(false);\r\n\tconst [_value, setValue] = useState(null);\r\n\r\n\tconst {dateFormat, defaultValue, name, onChange, title, value, className} = props;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!mounted) {\r\n\t\t\t// console.log(\"DateRange mounted :\", nameFrom, props.defaultValueFrom);\r\n\t\t\tif (defaultValue) {\r\n\t\t\t\t_onChange(\r\n\t\t\t\t\tname,\r\n\t\t\t\t\tgetMomentFromStringByFormat(defaultValue, dateFormat)\r\n\t\t\t\t);\r\n\t\t\t\tsetValue(getMomentFromStringByFormat(defaultValue, dateFormat));\r\n\t\t\t}\r\n\t\t\tsetMounted(true);\r\n\t\t}\r\n\t}, [mounted]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (value) {\r\n\t\t\tsetValue(moment(value));\r\n\t\t} else if (!defaultValue) setValue(null);\r\n\t}, [value]);\r\n\r\n\tconst _onChangePicker = (date) => {\r\n\t\tsetValue(date);\r\n\t\t_onChange(name, date);\r\n\t};\r\n\r\n\tconst _onChange = (name, value) => {\r\n\t\tif (value) onChange(name, getMomentWithOffsetTruncateDay(value));\r\n\t\telse onChange(name, value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={`single-date-container ${className}`}>\r\n\t\t\t<div className={'title'}>{title}</div>\r\n\t\t\t<DatePicker\r\n\t\t\t\tsize={'small'}\r\n\t\t\t\tstyle={{width: '135px'}}\r\n\t\t\t\tonChange={_onChangePicker}\r\n\t\t\t\tformat={dateFormat}\r\n\t\t\t\tplaceholder={'Выберите дату'}\r\n\t\t\t\tvalue={_value}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nSingleDate.propTypes = {\r\n\t/** Формат отображения даты (не влияет на формат в onChange) */\r\n\tdateFormat: PropTypes.string,\r\n\r\n\t/** Значение по умолчанию */\r\n\tdefaultValue: PropTypes.string,\r\n\r\n\t/** Наименование параметра */\r\n\tname: PropTypes.string,\r\n\r\n    /** Дополнительное имя класса для элемента */\r\n    className: PropTypes.string,\r\n\r\n\t/** Событие при изменении пикера */\r\n\tonChange: PropTypes.func,\r\n\r\n\t/** Заголовок */\r\n\ttitle: PropTypes.string,\r\n\r\n\t/** Значение даты */\r\n\tvalue: PropTypes.string,\r\n};\r\n\r\nSingleDate.defaultProps = {\r\n\tname: 'date',\r\n\tdateFormat: 'DD.MM.YYYY',\r\n\tonChange: noop,\r\n\ttitle: 'Дата',\r\n};\r\n\r\nexport default SingleDate;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Tooltip } from \"antd\";\r\nimport { noop } from \"../../utils/baseUtils\";\r\nimport DateRange from \"../DateRange/DateRange\";\r\nimport SingleDate from \"../SingleDate/SingleDate\";\r\nimport Select from \"../Select/Select\";\r\nimport { rtPrefix } from \"../../utils/variables\";\r\n\r\nconst FilterPanel = (props) => {\r\n  /**\r\n   * Период с, по (день / месяц / год)\r\n   * Множественный выбор (дерево с галочками с поиском) (ajax / const)\r\n   * Множественный выбор (список с поиском) (ajax / const)\r\n   * Единственный выбор (список с поиском) (ajax / const)\r\n   */\r\n\r\n  const [filter, setFilter] = useState(props.defaultFilter);\r\n  // const [multiSelectObjects, setMultiSelectObjects] = useState([]);\r\n\r\n  const {\r\n    applyFilterTooltip,\r\n    applyFilterSize,\r\n    applyFilterRender,\r\n    borderStyle,\r\n    onChangeFilter,\r\n    onApplyFilter,\r\n    configFilter,\r\n    resetFilterRender,\r\n    resetFilterTooltip,\r\n    resetFilterSize\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    setFilter(props.defaultFilter);\r\n  }, []);\r\n\r\n  const _onChangeData = (name, value) => {\r\n    // console.log(\"FilterPanel -> onChangeData\", name, value);\r\n    let _filter = { ...filter };\r\n    if (value === null) {\r\n      delete _filter[name];\r\n    } else {\r\n      _filter = { ..._filter, ...{ [name]: value } };\r\n    }\r\n    // console.log(\"onChangeData:\", _filter);\r\n    setFilter(_filter);\r\n    onChangeFilter(_filter);\r\n  };\r\n\r\n  const _applyFilter = () => {\r\n    // console.log(\"_applyFilter:\", filter);\r\n    onApplyFilter(filter);\r\n  };\r\n  const _resetFilter = () => {\r\n    // console.log(\"_resetFilter:\", props.defaultFilter);\r\n    setFilter(props.defaultFilter);\r\n    onChangeFilter(props.defaultFilter);\r\n    onApplyFilter(props.defaultFilter);\r\n    // setMultiSelectObjects([]);\r\n  };\r\n\r\n  // const _onChangeObjects = (name, value) => {\r\n  // \tlet _multiSelectObjects = {...multiSelectObjects};\r\n  // \tif (value === null) {\r\n  // \t\tdelete _multiSelectObjects[name];\r\n  // \t} else {\r\n  // \t\t_multiSelectObjects = {..._multiSelectObjects, ...{[name]: value}};\r\n  // \t}\r\n  // \t// console.log(\"onChangeData:\", _filter);\r\n  // \tsetMultiSelectObjects(_multiSelectObjects);\r\n  // };\r\n  const getPanelCls = () => {\r\n    let cls = [`${rtPrefix}-filter-panel`];\r\n    cls.push(`border-${borderStyle}`);\r\n    if (configFilter.findIndex((item) => !!item.title) === -1)\r\n      cls.push(`${rtPrefix}-filter-panel-no-title`);\r\n    return cls.join(\" \");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {configFilter && configFilter.length ? (\r\n        <div className={getPanelCls()}>\r\n          {configFilter.map((item, index) => {\r\n            // console.log(\"item.defaultRows\", item.defaultRows);\r\n            let cls = [`${rtPrefix}-filter-panel-item`];\r\n            item.className && cls.push(item.className);\r\n            switch (item.componentType) {\r\n              case \"DateRange\":\r\n                return (\r\n                  <DateRange\r\n                    key={index}\r\n                    {...item}\r\n                    className={cls.join(\" \")}\r\n                    defaultValueStart={\r\n                      filter[item.nameStart]\r\n                        ? filter[item.nameStart]\r\n                        : null\r\n                    }\r\n                    defaultValueEnd={\r\n                      filter[item.nameEnd]\r\n                        ? filter[item.nameEnd]\r\n                        : null\r\n                    }\r\n                    onChange={_onChangeData}\r\n                    valueStart={filter[item.nameStart]}\r\n                    valueEnd={filter[item.nameEnd]}\r\n                  />\r\n                );\r\n              case \"SingleDate\":\r\n                return (\r\n                  <SingleDate\r\n                    key={index}\r\n                    {...item}\r\n                    className={cls.join(\" \")}\r\n                    dateFormat={\r\n                      item.dateFormat\r\n                        ? item.dateFormat\r\n                        : undefined\r\n                    }\r\n                    defaultValue={\r\n                      filter[item.name]\r\n                        ? filter[item.name]\r\n                        : null\r\n                    }\r\n                    onChange={_onChangeData}\r\n                    value={filter[item.name]}\r\n                  />\r\n                );\r\n              case \"MultiSelect\":\r\n              case \"SingleSelect\":\r\n                return (\r\n                  <Select\r\n                    key={index}\r\n                    {...item}\r\n                    type={item.componentType}\r\n                    defaultSelectedRowKeys={\r\n                      filter[item.name]\r\n                        ? filter[item.name]\r\n                        : null\r\n                    }\r\n                    selectedRowKeys={filter[item.name] ? filter[item.name] : []}\r\n                    className={cls.join(\" \")}\r\n                    onChangeKeys={_onChangeData}\r\n                    defaultValue={\r\n                      filter[item.name]\r\n                        ? filter[item.name]\r\n                        : null\r\n                    }\r\n                    value={filter[item.name]}\r\n                  />\r\n                );\r\n              case \"Custom\":\r\n                return (\r\n                  <React.Fragment key={index}>\r\n                    {\r\n                      item.render({\r\n                        onChange: _onChangeData,\r\n                        defaultValue: filter[item.name]\r\n                          ? filter[item.name]\r\n                          : null,\r\n                        value: filter[item.name]\r\n                      })\r\n                    }\r\n                  </React.Fragment>);\r\n              default:\r\n                return null;\r\n            }\r\n          })}\r\n          <Tooltip title={applyFilterTooltip}>\r\n            <Button\r\n              type='primary'\r\n              size={applyFilterSize}\r\n              style={{ marginLeft: \"auto\" }}\r\n              onClick={_applyFilter}\r\n            >\r\n              {applyFilterRender}\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip title={resetFilterTooltip}>\r\n            <Button\r\n              size={resetFilterSize}\r\n              style={{ marginLeft: \"10px\" }}\r\n              onClick={_resetFilter}\r\n            >\r\n              {resetFilterRender}\r\n            </Button>\r\n          </Tooltip>\r\n        </div>\r\n      ) : null}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nFilterPanel.propTypes = {\r\n\r\n  /** Тест Tooltip для кнопки \"Применить фильтр\" */\r\n  applyFilterTooltip: PropTypes.string,\r\n\r\n  /** Размер кнопки \"Применить фильтр\" ['small', 'middle', 'large'] */\r\n  applyFilterSize: PropTypes.oneOf([\"small\", \"middle\", \"large\"]),\r\n\r\n  /** Строка / функция / элемент для отображения в кнопке \"Применить фильтр\" */\r\n  applyFilterRender: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.element,\r\n    PropTypes.string\r\n  ]),\r\n\r\n  /** Тип бордера панели (по умолчанию 'none')\r\n   * ['all', 'none', 'top', 'left', 'bottom', 'right', 'top-bottom', 'left-right'] */\r\n  borderStyle: PropTypes.oneOf([\r\n    \"all\",\r\n    \"none\",\r\n    \"top\",\r\n    \"left\",\r\n    \"bottom\",\r\n    \"right\",\r\n    \"top-bottom\",\r\n    \"left-right\"\r\n  ]),\r\n\r\n  /** Объект фильтра по умолчанию */\r\n  defaultFilter: PropTypes.object,\r\n\r\n  /** Конфигурация панели фильтров */\r\n  configFilter: PropTypes.arrayOf(PropTypes.object),\r\n\r\n  /** Событие по кнопке выполнить фильтр */\r\n  onApplyFilter: PropTypes.func,\r\n\r\n  /** Событие по изменение объекта фильтра */\r\n  onChangeFilter: PropTypes.func,\r\n\r\n  /** Тест Tooltip для кнопки \"Сбросить фильтр\" */\r\n  resetFilterTooltip: PropTypes.string,\r\n\r\n  /** Размер кнопки \"Сбросить фильтр\" ['small', 'middle', 'large'] */\r\n  resetFilterSize: PropTypes.oneOf([\"small\", \"middle\", \"large\"]),\r\n\r\n  /** Строка / функция / элемент для отображения в кнопке \"Сбросить фильтр\" */\r\n  resetFilterRender: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.element,\r\n    PropTypes.string\r\n  ])\r\n};\r\n\r\nFilterPanel.defaultProps = {\r\n  applyFilterTooltip: \"Применить фильтр\",\r\n  applyFilterSize: \"middle\",\r\n  applyFilterRender: \"Применить\",\r\n  borderStyle: \"none\",\r\n  defaultFilter: {},\r\n  configFilter: [],\r\n  onApplyFilter: noop,\r\n  onChangeFilter: noop,\r\n  resetFilterTooltip: \"Сбросить фильтр\",\r\n  resetFilterSize: \"middle\",\r\n  resetFilterRender: \"Сбросить\"\r\n};\r\n\r\nexport default FilterPanel;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {CloseCircleOutlined} from '@ant-design/icons';\r\nimport {rtPrefix} from '../../../utils/variables';\r\n\r\nconst SelectionList = (props) => {\r\n\tconst {selectedRowObjects, rowRender, onClickDropSelect} = props;\r\n\r\n\t// console.log(\"SelectionList typeof -> \", typeof(rowRender));\r\n\treturn (\r\n\t\t<div className={`${rtPrefix}-table-selected-rows`}>\r\n\t\t\t{selectedRowObjects && selectedRowObjects.length > 0 ? (\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{selectedRowObjects.map((item, index) => (\r\n\t\t\t\t\t\t<li key={index}>\r\n\t\t\t\t\t\t\t{/*{(typeof(rowRender) === 'string') ? <div>{item[rowRender]}</div> : rowRender }*/}\r\n\t\t\t\t\t\t\t{typeof rowRender === 'function' ? (\r\n\t\t\t\t\t\t\t\trowRender({rowData: item, rowIndex: index})\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div>{item[rowRender]}</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div onClick={() => onClickDropSelect(item)}>\r\n\t\t\t\t\t\t\t\t<CloseCircleOutlined />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t) : (\r\n\t\t\t\t<div>Нет выбранных записей</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nSelectionList.propTypes = {\r\n\t/** Строка или функция для отображения элементов списка\r\n\t * Строка - имя поля\r\n\t * Функция - рендер строк. Параметры v\r\n\t * { rowData, rowIndex }) */\r\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n\r\n\t/** Список выделенных объектов */\r\n\tselectedRowObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n\r\n\t/** Событие удаления элемента */\r\n\tonClickDropSelect: PropTypes.func.isRequired,\r\n};\r\n\r\nSelectionList.defaultProps = {};\r\n\r\nexport default SelectionList;\r\n","import React, {useRef, forwardRef, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport {notification} from 'antd';\r\nimport SortOrder from 'react-base-table/lib/SortOrder';\r\nimport BaseTable, {AutoResizer, callOrReturn, Column} from 'react-base-table';\r\nimport {empty, overlay} from './defaultSettings';\r\nimport SelectionHead from '../Table/Selectable/SelectionHead';\r\nimport SelectionCell, {parentAnalysis} from '../Table/Selectable/SelectionCell';\r\nimport CommandPanel from '../CommandPanel/CommandPanel';\r\nimport FilterPanel from '../FilterPanel/FilterPanel';\r\nimport SelectionList from '../Table/SelectionList/SelectionList';\r\nimport {rtPrefix} from '../../utils/variables';\r\nimport {\r\n\tflatten,\r\n\tgenerateUUID,\r\n\tgetTableRowKeys,\r\n\tfindNodeByRowKey,\r\n\tnoop,\r\n\tgetTableRowObjects, notificationError\r\n} from \"../../utils/baseUtils\";\r\nimport objectPath from \"object-path\";\r\nimport { setDataStore } from \"../../../redux/rtd.actions\";\r\nimport FormItems from \"../Form/FormItems\";\r\n\r\nconst Table = forwardRef((props, ref) => {\r\n\t/** Состояние первоначалной настройки компонента*/\r\n\tconst [mounted, setMounted] = useState(false);\r\n\t/** Наличие на сервере еще данных */\r\n\tconst [hasMore, setHasMore] = useState(true);\r\n\t/** Индикатор загрузки данных */\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\t/** Indoor control */\r\n\tconst [_rows, _setRows] = useState([]);\r\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n\tconst [_searchValue, setSearchValue] = useState({});\r\n\tconst [_filter, setFilter] = useState(false);\r\n\tconst [_sortBy, setSortBy] = useState(false);\r\n\r\n\t/** Selectable States */\r\n\tconst [selectAll, setSelectAll] = useState(false);\r\n\r\n\t/** Tree States */\r\n\tconst [_indeterminateRowKeys, setIndeterminateRowKeys] = useState([]);\r\n    const [_expandedRowKeys, setExpandedRowKeys] = useState([]);\r\n\r\n    const [_totalCountRows, setTotalCountRows] = useState(0);\r\n\r\n    const [_footerShow, _setFooterShow] = useState(false);\r\n\r\n    const tableRef = useRef();\r\n\r\n\tconst {\r\n\t\t/** Def values */\r\n\t\tdefaultRows,\r\n\t\tdefaultSelectedRowKeys,\r\n\t\tdefaultSearchValue,\r\n\t\tdefaultFilter,\r\n\t\tdefaultSortBy,\r\n\r\n\t\t/** Outdoor control */\r\n\t\trows,\r\n\t\tsetRows,\r\n\t\tselectedRowKeys,\r\n\t\tsearchValue,\r\n\t\tfilter,\r\n\t\tsortBy,\r\n\r\n\t\t/** Required */\r\n\t\tcolumns,\r\n\t\ttype,\r\n\r\n\t\t/** Base Props */\r\n\t\tautoDeleteRows,\r\n\t\trowKey,\r\n\r\n\t\t/** View Props */\r\n\t\tempty,\r\n\t\tfixWidthColumn,\r\n\t\tfooterHeight,\r\n\t\tfooterShow,\r\n        footerTitles,\r\n\t\t// footerProps,\r\n\t\theaderHeight,\r\n\t\trowHeight,\r\n\t\tzebraStyle,\r\n\t\trowRenderer,\r\n\t\testimatedRowHeight,\r\n\r\n\t\t/** Load Data Props */\r\n\t\tloadThreshold,\r\n\t\tpageSize,\r\n\t\trequestLoadRows,\r\n        requestLoadCount,\r\n\t\tsearchParamName,\r\n\r\n\t\t/** Selectable Props */\r\n\t\tselectable,\r\n\r\n\t\t/** Tree Props */\r\n\t\tnodeAssociated,\r\n\t\texpandColumnKey,\r\n\t\texpandParentKey,\r\n\t\texpandLazyLoad,\r\n\t\texpandDefaultAll,\r\n\r\n\t\t/** Events */\r\n\t\tonRowClick,\r\n\t\tonRowDoubleClick,\r\n\t\tonRowExpand,\r\n\t\tonSelectedRowsChange,\r\n\t\tonExpandedRowsChange,\r\n\r\n\t\t/** SELECTED PANEL */\r\n\t\tshowSelection,\r\n\t\trowRenderShowSelection,\r\n\r\n\t\t/** REDUX PROPS */\r\n\t\tdispatchPath,\r\n\t\tsubscribe,\r\n\t} = props;\r\n\r\n\t// console.log('props.commandPanelProps => ', props.commandPanelProps);\r\n\tconst commandPanelProps = {\r\n\t\t...CommandPanel.defaultProps,\r\n\t\t...props.commandPanelProps,\r\n\t};\r\n\tconst filterPanelProps = {\r\n\t\t...FilterPanel.defaultProps,\r\n\t\t...props.filterPanelProps,\r\n\t};\r\n\r\n\tconst footerProps = {\r\n\t\t...Table.defaultProps.footerProps,\r\n\t\t...props.footerProps,\r\n\t};\r\n\r\n\tconst selectedDispatchPath = dispatchPath && `${dispatchPath}.selected`;\r\n\tconst rowsDispatchPath = dispatchPath && `${dispatchPath}.rows`;\r\n\r\n\r\n\tuseEffect(() => {\r\n        // console.log(\"Инициализация дефолтных значений \");\r\n        // console.log(\"Инициализация дефолтных значений defaultSelectedRowKeys > \", defaultSelectedRowKeys);\r\n\r\n\t\t// Инициализация дефолтных значений\r\n\t\t// _setRows(defaultRows);\r\n\t\t_setRowsHandler(defaultRows);\r\n\t\tsetSelectedRowKeys(defaultSelectedRowKeys);\r\n\t\tsetSearchValue(defaultSearchValue);\r\n\t\tsetFilter(defaultFilter);\r\n\t\tsetSortBy(defaultSortBy);\r\n\t\tsetSelectAll(\r\n\t\t\tdefaultRows.length > 0 &&\r\n\t\t\t\tdefaultRows.length === defaultSelectedRowKeys.length\r\n\t\t);\r\n\t\t// Определение нужно ли отображать подвал\r\n\t\t_setFooterShow(\r\n\t\t\t(footerProps.showElements.length ||\r\n\t\t\tfooterProps.leftCustomSideElement ||\r\n\t\t\tfooterProps.centerCustomSideElement ||\r\n\t\t\tfooterProps.rightCustomSideElement));\r\n\r\n\t\tif (!!expandColumnKey && !expandLazyLoad) {\r\n\t\t\t// Открытие всех нод\r\n\t\t\tif (expandDefaultAll)\r\n\t\t\t\tsetExpandedRowKeys(\r\n\t\t\t\t\tflatten(getTableRowKeys(defaultRows, rowKey))\r\n\t\t\t\t);\r\n\t\t\t// Установка квадратиков на нужных нодах\r\n\t\t\tif (defaultSelectedRowKeys && defaultSelectedRowKeys.length > 0) {\r\n\t\t\t\tlet flatRows = flatten(getTableRowKeys(defaultRows, rowKey));\r\n\t\t\t\tlet selectedRow = flatRows.filter((item) =>\r\n\t\t\t\t\tdefaultSelectedRowKeys.includes(item[rowKey])\r\n\t\t\t\t);\r\n\t\t\t\tlet _indeterminateRowKeys = [];\r\n\t\t\t\tselectedRow.forEach((item) => {\r\n\t\t\t\t\tconst [ss, ii] = parentAnalysis({\r\n\t\t\t\t\t\trowData: item,\r\n\t\t\t\t\t\trowKey,\r\n\t\t\t\t\t\tparentKey: expandParentKey,\r\n\t\t\t\t\t\tchecked: true,\r\n\t\t\t\t\t\tnodeAssociated,\r\n\t\t\t\t\t\ttreeData: defaultRows,\r\n\t\t\t\t\t\tselectedRowKeys: defaultSelectedRowKeys,\r\n\t\t\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\r\n\t\t\t\t\t});\r\n\t\t\t\t\t_indeterminateRowKeys.push(...ii);\r\n\t\t\t\t});\r\n\t\t\t\tsetIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (type !== 'localSide') {\r\n\t\t\t_dataProcessing({\r\n\t\t\t\tsortBy: defaultSortBy,\r\n\t\t\t\tfilter: defaultFilter,\r\n\t\t\t\tsearchLine: defaultSearchValue,\r\n\t\t\t\treload: true,\r\n\t\t\t});\r\n\t\t}\r\n\t\t// console.log(\"Table => props \", props);\r\n\t\tsetMounted(true);\r\n\t\tif (ref && typeof ref === 'function') ref({reloadData});\r\n\t\telse if (ref && typeof ref === 'object') ref.current = {reloadData};\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (type === 'localSide') {\r\n\t\t\t// console.log(\"Control useEffect => \", rows, selectedRowKeys, searchValue, filter, sortBy);\r\n\t\t\t// _setRows(rows);\r\n\t\t\t_setRowsHandler(rows);\r\n\t\t\tsetSelectedRowKeys(selectedRowKeys);\r\n\t\t\tsetSearchValue(searchValue);\r\n\t\t\tsetFilter(filter);\r\n\t\t\tsetSortBy(sortBy);\r\n\t\t\tif (!!expandColumnKey && !expandLazyLoad) {\r\n\t\t\t\t// Открытие всех нод\r\n\t\t\t\tif (expandDefaultAll)\r\n\t\t\t\t\tsetExpandedRowKeys(flatten(getTableRowKeys(rows, rowKey)));\r\n\t\t\t}\r\n\t\t}\r\n    }, [rows, selectedRowKeys, searchValue, filter, sortBy]);\r\n\r\n\t/** Подписка на изменение props[subscribe.name] в сторе */\r\n\tuseEffect( () => {\r\n\t\tif(subscribe.name) {\r\n\t\t\t// console.log(\"Table => useEffect => subscribe.value \", props[subscribe.name]);\r\n\t\t\tsubscribe.onChange && subscribe.onChange({value: props[subscribe.name], setReloadTable: reloadData});\r\n\t\t}\r\n\t}, [props[subscribe.name]]);\r\n\r\n\r\n\t/** BASE FUNCTIONS */\r\n\tconst _setRowsHandler = (rows) => {\r\n\t\t_setRows(rows);\r\n\t\trowsDispatch(rows);\r\n\t};\r\n\tconst setRowsHandler = (rows) => {\r\n\t\tsetRows(rows);\r\n\t\trowsDispatch(rows);\r\n\t};\r\n\tconst rowsDispatch = (rows) => {\r\n\t\trowsDispatchPath && props.setDataStore && props.setDataStore(rowsDispatchPath, rows);\r\n\t};\r\n\r\n\tconst reloadData = ({sortBy, filter, searchValue}) => {\r\n\t\t// console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\r\n        if(props.value && props.value.length > 0)\r\n            setSelectedRowKeys(props.value.map(item => item[rowKey]));\r\n        else\r\n            setSelectedRowKeys([]);\r\n\t\t// setSelectedRowKeys([]);\r\n\t\tif(sortBy) setSortBy(sortBy);\r\n\t\tif(filter) setFilter(filter);\r\n\t\tif(searchValue) setSearchValue(searchValue);\r\n\t\t_dataProcessing({\r\n\t\t\tsortBy: sortBy ? sortBy : _sortBy,\r\n\t\t\tfilter: filter ? filter : _filter,\r\n\t\t\tsearchLine: searchValue ? searchValue : _searchValue,\r\n\t\t\treload: true,\r\n\t\t});\r\n        // console.log(\"reloadData loading \", loading);\r\n    };\r\n\r\n\tconst _dataProcessing = (params) => {\r\n\t\t// console.log('_dataProcessing', params);\r\n\t\tconst {sortBy, filter, searchLine, expandRow, reload} = params;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'infinity':\r\n\t\t\tcase 'serverSide':\r\n\t\t\t\tif ((hasMore || reload) && !loading) {\r\n\t\t\t\t\tsetLoading(true);\r\n\t\t\t\t\tconst pageNum = reload\r\n\t\t\t\t\t\t? 0\r\n\t\t\t\t\t\t: Math.floor(_rows.length / pageSize);\r\n\t\t\t\t\tconst params = {\r\n\t\t\t\t\t\tpage: pageNum,\r\n\t\t\t\t\t\tsize: pageSize,\r\n\t\t\t\t\t\tsort:\r\n\t\t\t\t\t\t\tsortBy && sortBy.key\r\n\t\t\t\t\t\t\t\t? sortBy.key + ',' + sortBy.order\r\n\t\t\t\t\t\t\t\t: null,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tconst dataQuery = {\r\n                        ...filter,\r\n                        ...(searchLine\r\n                            ? {[searchParamName]: searchLine}\r\n                            : null),\r\n                    };\r\n\t\t\t\t\t// console.log('dataQuery', dataQuery);\r\n\r\n                    if(type === 'infinity' && reload && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad) {\r\n                        requestLoadCount({\r\n                            params,\r\n                            data: dataQuery,\r\n                        })\r\n                            .then((response) => {\r\n                                // console.log(\"infinity then response\", response);\r\n                                // const result = response.data;\r\n                                setTotalCountRows(response.data);\r\n                            })\r\n\t\t\t\t\t\t\t.catch(error =>\r\n\t\t\t\t\t\t\t\tnotificationError(error, 'Ошибка получения количества записей по фильтру') );\r\n                    }\r\n\r\n                    // console.log('requestLoadRows => ', typeof requestLoadRows);\r\n                    // if(typeof requestLoadRows !== 'function'){\r\n                    //     setLoading(false);\r\n                    // }\r\n                    requestLoadRows({\r\n\t\t\t\t\t\tparams,\r\n\t\t\t\t\t\tdata: dataQuery,\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\t\t// console.log(\"infinity then response\", response);\r\n\t\t\t\t\t\t\tconst result = response.data;\r\n\t\t\t\t\t\t\t// Если иерархия и ленивая, то ищим кому добавть полученные записи\r\n\t\t\t\t\t\t\tif (!!expandColumnKey && expandLazyLoad) {\r\n\t\t\t\t\t\t\t\t// lastExpandRow//, setLastExpandRow\r\n\t\t\t\t\t\t\t\t// console.log('!!expandColumnKey && expandLazyLoad', result);\r\n\t\t\t\t\t\t\t\tif (pageNum === 0) {\r\n\t\t\t\t\t\t\t\t\tresult.forEach((child) => {\r\n\t\t\t\t\t\t\t\t\t\tchild.children = [\r\n\t\t\t\t\t\t\t\t\t\t\t{[rowKey]: generateUUID()},\r\n\t\t\t\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t// _setRows(result);\r\n\t\t\t\t\t\t\t\t\t_setRowsHandler(result);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tlet newRows = [..._rows];\r\n\t\t\t\t\t\t\t\t\t// (data, rowKey, rowValue)\r\n\t\t\t\t\t\t\t\t\tresult.forEach((child) => {\r\n\t\t\t\t\t\t\t\t\t\tchild.children = [\r\n\t\t\t\t\t\t\t\t\t\t\t{[rowKey]: generateUUID()},\r\n\t\t\t\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tlet node = findNodeByRowKey(\r\n\t\t\t\t\t\t\t\t\t\tnewRows,\r\n\t\t\t\t\t\t\t\t\t\trowKey,\r\n\t\t\t\t\t\t\t\t\t\texpandRow[rowKey]\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\tnode.children = result;\r\n\t\t\t\t\t\t\t\t\t// console.log('newRows -> ', newRows);\r\n\t\t\t\t\t\t\t\t\t// _setRows(newRows);\r\n\t\t\t\t\t\t\t\t\t_setRowsHandler(newRows);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (result && result.length < pageSize) {\r\n\t\t\t\t\t\t\t\t\tsetHasMore(false);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tsetHasMore(true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tpageNum === 0\r\n\t\t\t\t\t\t\t\t\t? _setRowsHandler(result) // _setRows\r\n\t\t\t\t\t\t\t\t\t: _setRowsHandler(_rows.concat(result)); // _setRows\r\n\r\n\t\t\t\t\t\t\t\t// console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\r\n\t\t\t\t\t\t\t\tif (expandDefaultAll)\r\n\t\t\t\t\t\t\t\t\tsetExpandedRowKeys(\r\n\t\t\t\t\t\t\t\t\t\tflatten(getTableRowKeys(result, rowKey))\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\r\n\t\t\t\t\t\t\t_setRowsHandler(_rows); // _setRows\r\n\t\t\t\t\t\t\t// setHasMore(false);\r\n\t\t\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t// case 'serverSide':\r\n\t\t\t// \tsetLoading(true);\r\n\t\t\t// \tbreak;\r\n\t\t\tcase 'localSide':\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\t/** Событие выделение одной строки в режиме без галочек */\r\n\tconst _rowEventHandlers = {\r\n\t\tonClick: ({rowData, rowIndex, rowKey, event}) => {\r\n\t\t\tif (!selectable) {\r\n\t\t\t\t// if (_selectedRowKeys.includes(rowKey)) {\r\n\t\t\t\t//     setSelectedRowKeys([]);\r\n\t\t\t\t//     // setSelectedRow([]);\r\n\t\t\t\t//     // setSelectedRowObjects([]);\r\n\t\t\t\t//     onRowClick({\r\n\t\t\t\t//         selected: false,\r\n\t\t\t\t//         rowData,\r\n\t\t\t\t//         rowIndex,\r\n\t\t\t\t//         rowKey,\r\n\t\t\t\t//     });\r\n\t\t\t\t//     onSelectedRowsChange([]);\r\n\t\t\t\t// } else {\r\n\t\t\t\t// console.log('_rowEventHandlers -> onClick', rowKey, rowIndex);\r\n\t\t\t\tconst newRowObject = {\r\n\t\t\t\t\trowData: {...rowData},\r\n\t\t\t\t\trowIndex: rowIndex,\r\n\t\t\t\t\trowKey: rowKey,\r\n\t\t\t\t};\r\n\t\t\t\t// if(type !== 'localSide')\r\n\t\t\t\tsetSelectedRowKeys([rowKey]);\r\n\t\t\t\t// setSelectedRow(newRowObject);\r\n\t\t\t\t// setSelectedRowObjects([newRowObject]);\r\n\t\t\t\tselectedDispatchPath && props.setDataStore && props.setDataStore(selectedDispatchPath, rowData);\r\n\t\t\t\tonRowClick({\r\n\t\t\t\t\tselected: true,\r\n\t\t\t\t\t...newRowObject,\r\n\t\t\t\t});\r\n\t\t\t\tonSelectedRowsChange([rowKey], [rowData]);\r\n\t\t\t\t// }\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDoubleClick: ({rowData, rowIndex, rowKey}) => {\r\n\t\t\t// console.log('onDoubleClick', rowData, rowIndex, rowKey);\r\n\t\t\tonRowDoubleClick({rowData, rowIndex, rowKey});\r\n\t\t},\r\n\t\t// onContextMenu: console.log('context menu'),\r\n\t\t// onMouseEnter: console.log('mouse enter'),\r\n\t\t// onMouseLeave: console.log('mouse leave'),\r\n\t};\r\n\r\n\t/** Событие при сортировке */\r\n\tconst _onColumnSort = (sortBy) => {\r\n\t\t// console.log(\"sortBy\", sortBy);\r\n\t\ttableRef.current.scrollToRow(0, 'auto');\r\n\t\tsetSortBy(sortBy);\r\n\r\n\t\t// Для серверной сортировки - сбросить выделение\r\n\t\tif (type !== 'localSide') {\r\n\t\t\tsetSelectedRowKeys([]);\r\n\t\t}\r\n\t\tconst loadParams = {\r\n\t\t\tsortBy: sortBy,\r\n\t\t\tfilter: _filter,\r\n\t\t\tsearchLine: _searchValue,\r\n\t\t\treload: true,\r\n\t\t};\r\n\t\t_dataProcessing(loadParams);\r\n\t};\r\n\r\n\t/** Получение колонок таблицы */\r\n\tconst _getColumns = () => {\r\n\t\tlet _columns = [...columns];\r\n\r\n\t\t/** Создаем колонку с галочками (если надо) */\r\n\t\tif (selectable) {\r\n\t\t\tconst selectColumn = {\r\n\t\t\t\tkey: '__selection__',\r\n\t\t\t\theaderRenderer: SelectionHead,\r\n\t\t\t\tcellRenderer: SelectionCell,\r\n\t\t\t\twidth: 40,\r\n\t\t\t\tflexShrink: 0,\r\n\t\t\t\tresizable: false,\r\n\t\t\t\tfrozen: 'left',\r\n\t\t\t\trowKey: rowKey,\r\n\t\t\t\tparentKey: expandParentKey,\r\n\t\t\t\tselectedRowKeys: _selectedRowKeys,\r\n\t\t\t\tindeterminateRowKeys: _indeterminateRowKeys,\r\n\t\t\t\tnodeAssociated: nodeAssociated,\r\n\t\t\t\tonChange: _onChangeSelectHandler,\r\n\t\t\t\tselectAll: selectAll,\r\n\t\t\t\tonSelectAll: _onSelectAllHandler,\r\n\t\t\t};\r\n\t\t\t_columns.unshift(selectColumn);\r\n\t\t}\r\n\t\treturn _columns;\r\n\t};\r\n\r\n\t/** VIEW FUNCTIONS */\r\n\r\n\tconst _footer = (\r\n\t\t<React.Fragment>\r\n\t\t\t{_footerShow ? (\r\n\t\t\t\t\t<React.Fragment>\r\n                        {/*className={'BaseTable__footer__counter'}>*/}\r\n\t\t\t\t\t\t<div key={'footer-left-custom-side'} className={'left-custom-side'}>\r\n\t\t\t\t\t\t\t{footerProps.leftCustomSideElement ? <FormItems items={footerProps.leftCustomSideElement} /> : null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div key={'footer-center-custom-side'} className={'center-custom-side'}>\r\n\t\t\t\t\t\t\t{footerProps.centerCustomSideElement ? <FormItems items={footerProps.centerCustomSideElement} /> : null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div key={'footer-right-custom-side'} className={'right-custom-side'}>\r\n\t\t\t\t\t\t\t{footerProps.rightCustomSideElement ? <FormItems items={footerProps.rightCustomSideElement} /> : null}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{selectable ? (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('selected')\r\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.selectedTitle} {_selectedRowKeys.length}</span>\r\n\t\t\t\t\t\t\t\t\t: null }\r\n\t\t\t\t\t\t\t\t{footerProps.showElements.includes('loaded')\r\n\t\t\t\t\t\t\t\t\t? <span>{footerProps.loadedTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\r\n\t\t\t\t\t\t\t\t\t: null }\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t) : null}\r\n\r\n\t\t\t\t\t\t{footerProps.showElements.includes('total')\r\n\t\t\t\t\t\t\t? type === 'infinity' && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad\r\n\t\t\t\t\t\t\t\t? <span>{footerProps.totalTitle} {_totalCountRows}</span>\r\n\t\t\t\t\t\t\t\t: <span>{footerProps.totalTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\r\n\t\t\t\t\t\t\t: null}\r\n\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t) : null}\r\n\t\t</React.Fragment>\r\n\t);\r\n\r\n\t/** Событие при рендере для стилизации */\r\n\tconst _rowClassName = ({rowData, rowIndex}) => {\r\n\t\tconst {rowClassName} = props;\r\n\t\treturn [\r\n\t\t\trowClassName,\r\n\t\t\t_selectedRowKeys.includes(rowData[rowKey]) && 'row-selected',\r\n\t\t\tzebraStyle ? (rowIndex % 2 === 0 ? 'even' : 'odd') : '',\r\n\t\t\t'bordered'\r\n\t\t].join(' ')\r\n\t};\r\n\r\n\t/** LOAD DATA FUNCTIONS */\r\n\tconst onEndReached = () => {\r\n\t\tlet selectAll;\r\n\t\tconst selectLength = _selectedRowKeys.length;\r\n\t\tif (selectLength === 0) selectAll = false;\r\n\t\telse if (selectLength > 0) selectAll = null;\r\n\r\n\t\tsetSelectAll(selectAll);\r\n\r\n\t\tif (type === 'infinity') {\r\n\t\t\tconst loadParams = {\r\n\t\t\t\tsortBy: _sortBy,\r\n\t\t\t\tfilter: _filter,\r\n\t\t\t\tsearchLine: _searchValue,\r\n\t\t\t\treload: false,\r\n\t\t\t};\r\n\t\t\t_dataProcessing(loadParams);\r\n\t\t}\r\n\t};\r\n\r\n\t/** SELECTABLE FUNCTIONS */\r\n\r\n\t/** Событие при изменении галочки одной строки */\r\n\tconst _onChangeSelectHandler = ({\r\n\t\tselected,\r\n\t\t_selectedRow,\r\n\t\t_selectAll,\r\n\t\t_selectedRowKeys,\r\n\t\t_selectedRowObjects,\r\n\t\t_indeterminateRowKeys,\r\n\t}) => {\r\n\t\tsetSelectedRowKeys(_selectedRowKeys);\r\n\t\tsetIndeterminateRowKeys(_indeterminateRowKeys);\r\n\t\tsetSelectAll(_selectAll);\r\n\t\t// setSelectedRow(_selectedRow);\r\n\r\n\t\t// let newSelectedObjects = [];\r\n\t\t// if (selected) {\r\n\t\t// \tif (!!expandColumnKey)\r\n\t\t// \t\tnewSelectedObjects = flatten(\r\n\t\t// \t\t\tgetTableRowObjects(rows, rowKey)\r\n\t\t// \t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]));\r\n\t\t// \telse\r\n\t\t// \t\tnewSelectedObjects = selectedRowObjects.concat([\r\n\t\t// \t\t\t_selectedRow.rowData,\r\n\t\t// \t\t]);\r\n\t\t// \t// setSelectedRowObjects(newSelectedObjects);\r\n\t\t// } else {\r\n\t\t// \tnewSelectedObjects = selectedRowObjects.filter(\r\n\t\t// \t\t(item) => item[rowKey] !== _selectedRow.rowData[rowKey]\r\n\t\t// \t);\r\n\t\t// \t// setSelectedRowObjects(newSelectedObjects);\r\n\t\t// }\r\n\t\t// console.log(\"_handleSelectChange\", props);\r\n\t\t// dispatchPath && props.setTableSelectedRow && props.setTableSelectedRow(dispatchPath, _selectedRow.rowData);\r\n\t\tselectedDispatchPath && props.setDataStore && props.setDataStore(selectedDispatchPath, _selectedRowObjects);\r\n\t\tonRowClick({\r\n\t\t\tselected,\r\n\t\t\trowData: _selectedRow.rowData,\r\n\t\t\trowIndex: _selectedRow.rowIndex,\r\n\t\t\trowKey,\r\n\t\t});\r\n\t\tonSelectedRowsChange(_selectedRowKeys, _selectedRowObjects);\r\n\t};\r\n\r\n\t/** Событие при изменении галочки \"Выделить все\" */\r\n\tconst _onSelectAllHandler = ({selected, rowKeys, rowObjects}) => {\r\n\t\tconst selectedKeys = selected ? rowKeys : [];\r\n\t\tsetSelectedRowKeys(selectedKeys);\r\n\t\tsetIndeterminateRowKeys([]);\r\n\t\tsetSelectAll(selected);\r\n\t\tselectedDispatchPath && props.setDataStore && props.setDataStore(selectedDispatchPath, selected ? rowObjects : []);\r\n\t\t// setSelectedRowObjects(rows);\r\n\t\t// console.log(\"_handleSelectAll\", selectedKeys);\r\n\t\tonSelectedRowsChange(selectedKeys, rowObjects);\r\n\t};\r\n\r\n\t/** TREE FUNCTIONS */\r\n\r\n\t/** Анализ дерева на пердмет квадратиков\r\n\t * Нужно для выделения по умолчанию свернутых элементов */\r\n\t// const _postLoadTreeAnalysis = () => {\r\n\t//     if (!!expandColumnKey && !expandLazyLoad) {\r\n\t//         let _indeterminateRowKeys = [];\r\n\t//         // console.log(\"mounted->selectedRowObjects: \", selectedRowObjects);\r\n\t//         selectedRowObjects.map((item) => {\r\n\t//             const [ss, ii] = parentAnalysis({\r\n\t//                 rowData: item,\r\n\t//                 rowKey,\r\n\t//                 parentKey: expandParentKey,\r\n\t//                 checked: true,\r\n\t//                 nodeAssociated,\r\n\t//                 treeData: _rows,\r\n\t//                 selectedRowKeys: _selectedRowKeys,\r\n\t//                 indeterminateRowKeys: _indeterminateRowKeys,\r\n\t//             });\r\n\t//             _indeterminateRowKeys.push(...ii);\r\n\t//         });\r\n\t//         setIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\r\n\t//     }\r\n\t// }\r\n\r\n\tconst _onExpandedRowsChange = (expandedRowKeys) => {\r\n\t\t// console.log(\"_onExpandedRowsChange\", expandedRowKeys);\r\n\t\tonExpandedRowsChange(expandedRowKeys);\r\n\t};\r\n\tconst _onRowExpand = ({expanded, rowData, rowIndex, rowKey}) => {\r\n\t\t// console.log(\"_onRowExpand\", rowData, expanded, rowIndex, rowKey);\r\n\t\tif (expanded) {\r\n\t\t\tsetExpandedRowKeys([..._expandedRowKeys, rowKey]);\r\n\r\n\t\t\tif (expandLazyLoad) {\r\n\t\t\t\tconst loadParams = {\r\n\t\t\t\t\tsortBy: _sortBy,\r\n\t\t\t\t\tfilter: {..._filter, [expandParentKey]: rowKey},\r\n\t\t\t\t\tsearchLine: _searchValue,\r\n\t\t\t\t\treload: false,\r\n\t\t\t\t\texpandRow: rowData,\r\n\t\t\t\t};\r\n\t\t\t\t// _callPropsOnLoad(loadParams);\r\n\t\t\t\t_dataProcessing(loadParams);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet expandedRowKeys = [..._expandedRowKeys];\r\n\t\t\tlet allChildKeys = flatten(\r\n\t\t\t\tgetTableRowKeys(rowData.children, props.rowKey)\r\n\t\t\t);\r\n\t\t\tallChildKeys.push(rowKey);\r\n\t\t\t// console.log('allChildKeys', allChildKeys);\r\n\t\t\tsetExpandedRowKeys(\r\n\t\t\t\texpandedRowKeys.filter((item) => !allChildKeys.includes(item))\r\n\t\t\t);\r\n\t\t}\r\n\t\tonRowExpand({expanded, rowData, rowIndex, rowKey});\r\n\t};\r\n\r\n\t/** COMMAND PANEL FUNCTIONS */\r\n\r\n\tconst _getDisabledElementsOfCommandPanel = () => {\r\n\t\t// console.log('commandPanelProps', commandPanelProps);\r\n\t\tlet _disabledElements = [...commandPanelProps.disabledElements];\r\n\t\tif (type === 'infinity') {\r\n\t\t\t_disabledElements.push('up', 'down');\r\n            // console.log('_getDisabledElementsOfCommandPanel => infinity');\r\n        }\r\n\t\tif (selectable && _selectedRowKeys.length > 1) {\r\n\t\t\t_disabledElements.push('addAsCopy', 'edit', 'up', 'down');\r\n            // console.log('_getDisabledElementsOfCommandPanel => selectable');\r\n        }\r\n\t\tif (_selectedRowKeys.length === 0) {\r\n\t\t\t_disabledElements.push('addAsCopy', 'edit', 'delete', 'up', 'down');\r\n            // console.log('_getDisabledElementsOfCommandPanel => NO select');\r\n        }\r\n\t\t// if (expandColumnKey) {\r\n\t\t\t//|| !selectedRow) {\r\n\t\t\t// _disabledElements.push('up', 'down');\r\n            // console.log('_getDisabledElementsOfCommandPanel => expandColumnKey');\r\n        // }\r\n        // console.log('_getDisabledElementsOfCommandPanel => ', _disabledElements, _selectedRowKeys);\r\n\r\n        return [...new Set(_disabledElements)];\r\n\t};\r\n\r\n\tconst _onClickAddAsCopy = (event) => {\r\n\t\t// console.log(\"_onClickAddAsCopy\", selectedRow);\r\n\t\tcommandPanelProps.onClickAddAsCopy(\r\n\t\t\tevent,\r\n\t\t\tfindNodeByRowKey(_rows, rowKey, _selectedRowKeys[0])\r\n\t\t);\r\n\t};\r\n\r\n\tconst _onClickEdit = (event) => {\r\n\t\t// console.log(\"_onClickEdit\", selectedRow);\r\n\t\tcommandPanelProps.onClickEdit(event, {\r\n\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\r\n\t\t});\r\n\t\t// props.onClickEdit(event, selectedRow);\r\n\t};\r\n\r\n\tconst _onClickDelete = (event) => {\r\n\t\t// console.log(\"_onClickDelete\", autoDeleteRows, selectedRowKeys);\r\n\t\tif (autoDeleteRows) {\r\n\t\t\tif (type === 'localSide') {\r\n\t\t\t\tsetRowsHandler(\r\n\t\t\t\t\t_rows.filter(\r\n\t\t\t\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey])\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\t_setRowsHandler(\r\n\t\t\t\t\t_rows.filter(\r\n\t\t\t\t\t\t(item) => !_selectedRowKeys.includes(item[rowKey])\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tsetSelectedRowKeys([]);\r\n\t\t}\r\n\t\tcommandPanelProps.onClickDelete(event, _selectedRowKeys);\r\n\t};\r\n\r\n\tconst loop = (data, key, callback) => {\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tif (data[i][rowKey] === key) {\r\n\t\t\t\t// console.log(`Selected => index: [${i}], path: [${data[i].path}]`, data);\r\n\t\t\t\treturn callback(data[i], i, data);\r\n\t\t\t} else {\r\n\t\t\t\t// console.log(`Other => index: [${i}], path: [${data[i].path}]`);\r\n\t\t\t}\r\n\t\t\tif (data[i].children) {\r\n\t\t\t\tloop(data[i].children, key, callback);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst _onClickUp = (event) => {\r\n\t\tconst data = [..._rows];\r\n\t\tconst key = _selectedRowKeys[0];\r\n\t\tloop(data, key, (item, index, arr)  => {\r\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index - 1);\r\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data);\r\n\t\t\tcommandPanelProps.onClickUp(event, {\r\n\t\t\t\trowIndex: newRowIndex,\r\n\t\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\r\n\t\t\t}, data);\r\n\t\t})\r\n\t};\r\n\r\n\tconst _onClickDown = (event) => {\r\n\t\tconst data = [..._rows];\r\n\t\tconst key = _selectedRowKeys[0];\r\n\t\tloop(data, key, (item, index, arr)  => {\r\n\t\t\tconst newRowIndex = _getNewIndexRow(index, index + 1);\r\n\t\t\t_changeIndexRow(index, newRowIndex, arr, data);\r\n\t\t\tcommandPanelProps.onClickDown(event, {\r\n\t\t\t\trowIndex: newRowIndex,\r\n\t\t\t\trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\r\n\t\t\t}, data);\r\n\t\t})\r\n\t};\r\n\r\n\tconst _getNewIndexRow = (oldIndex, newIndex) =>\r\n\t\tnewIndex >= 0 && newIndex < _rows.length ? newIndex : oldIndex;\r\n\r\n\tconst _changeIndexRow = (oldIndex, newIndex, arr, data) => {\r\n\t\tif (newIndex >= 0 && newIndex < arr.length) {\r\n\t\t\t// let arr = [..._rows]; // Копируем массив\r\n\t\t\tconst item = arr.splice(oldIndex, 1); // Удаляем элемент со старого места\r\n\t\t\t// console.log('_changeIndexRow => ',item);\r\n\t\t\tarr.splice(newIndex > 0 ? newIndex : 0, 0, item[0]); // Ставим элемент на новое место\r\n\t\t\t// console.log(\"_changeIndexRow\", item[0]);\r\n\t\t\tif (type === 'localSide') {\r\n\t\t\t\tsetRowsHandler(data);\r\n\t\t\t} else {\r\n\t\t\t\t_setRowsHandler(data);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst _onSearch = (searchLine, e) => {\r\n        e.preventDefault();\r\n\t\t// console.log(\"_onSearch\", searchLine);\r\n        tableRef.current.scrollToRow(0, 'auto');\r\n\t\tsetSearchValue(searchLine);\r\n\t\tconst loadParams = {\r\n\t\t\tsortBy: _sortBy,\r\n\t\t\tfilter: _filter,\r\n\t\t\tsearchLine: searchLine,\r\n\t\t\treload: true,\r\n\t\t};\r\n\t\t_dataProcessing(loadParams);\r\n\t\tcommandPanelProps.onSearch(searchLine);\r\n\t};\r\n\r\n\t/** FILTER PANEL FUNCTIONS */\r\n\r\n\tconst _onChangeFilter = (filter) => {\r\n\t\t// console.log('_onChangeFilter', filter);\r\n\t\tsetHasMore(true);\r\n\t\tsetFilter(filter);\r\n\t\tfilterPanelProps.onChangeFilter(filter);\r\n\t};\r\n\tconst _onApplyFilter = (filter) => {\r\n\t\t// console.log('_onApplyFilter', filter);\r\n\t\tconst loadParams = {\r\n\t\t\tsortBy: _sortBy,\r\n\t\t\tfilter: filter,\r\n\t\t\tsearchLine: _searchValue,\r\n\t\t\treload: true,\r\n\t\t};\r\n\t\t_dataProcessing(loadParams);\r\n\t\tfilterPanelProps.onApplyFilter(filter);\r\n\t};\r\n\r\n\t/** SELECTED PANEL */\r\n\r\n\tconst _onClickDropSelectHandler = (dropObject) => {\r\n\t\tconst newSelectedKeys = _selectedRowKeys.filter(\r\n\t\t\t(item) => item !== dropObject[rowKey]\r\n\t\t);\r\n\t\tsetSelectedRowKeys(newSelectedKeys);\r\n\t\tonSelectedRowsChange(newSelectedKeys);\r\n\t};\r\n\r\n\t// const rowProps = {\r\n\t//     // tagName: 'button',\r\n\t//     // onClick: e => {\r\n\t//     //     e.preventDefault();\r\n\t//     //     e.stopPropagation();\r\n\t//     //     console.log(`You clicked row onClick`)\r\n\t//     // },\r\n\t//     onDoubleClick: e => {\r\n\t//         e.preventDefault();\r\n\t//         e.stopPropagation();\r\n\t//         console.log(`You clicked row onDoubleClick`)\r\n\t//     }\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`${rtPrefix}-table`}\r\n\t\t\tstyle={{width: '100%', height: '100%'}}\r\n\t\t>\r\n\t\t\t<div className={`${rtPrefix}-table-top-panel`}>\r\n\t\t\t\t<CommandPanel\r\n\t\t\t\t\t{...commandPanelProps}\r\n\t\t\t\t\tdefaultValueSearch={defaultSearchValue}\r\n\t\t\t\t\tdisabledElements={_getDisabledElementsOfCommandPanel()}\r\n\t\t\t\t\tonClickAddAsCopy={_onClickAddAsCopy}\r\n\t\t\t\t\tonClickDelete={_onClickDelete}\r\n\t\t\t\t\tonClickDown={_onClickDown}\r\n\t\t\t\t\tonClickEdit={_onClickEdit}\r\n\t\t\t\t\tonClickUp={_onClickUp}\r\n\t\t\t\t\tonSearch={_onSearch}\r\n\t\t\t\t/>\r\n\t\t\t\t{/*{!filter ? (*/}\r\n\t\t\t\t<FilterPanel\r\n\t\t\t\t\t{...filterPanelProps}\r\n\t\t\t\t\tdefaultFilter={defaultFilter}\r\n\t\t\t\t\tonChangeFilter={_onChangeFilter}\r\n\t\t\t\t\tonApplyFilter={_onApplyFilter}\r\n\t\t\t\t/>\r\n\t\t\t\t{/*) : null}*/}\r\n\t\t\t</div>\r\n\t\t\t<div className={`${rtPrefix}-baseTable`}>\r\n\t\t\t\t<AutoResizer>\r\n\t\t\t\t\t{({width, height}) => (\r\n\t\t\t\t\t\t<BaseTable\r\n\t\t\t\t\t\t\tref={tableRef}\r\n\t\t\t\t\t\t\t/** Required */\r\n\t\t\t\t\t\t\tcolumns={_getColumns()}\r\n\t\t\t\t\t\t\tdata={_rows}\r\n\t\t\t\t\t\t\t/** Control Props */\r\n\t\t\t\t\t\t\tsortBy={_sortBy}\r\n\t\t\t\t\t\t\t/** Base Props */\r\n\t\t\t\t\t\t\twidth={width}\r\n\t\t\t\t\t\t\theight={height}\r\n\t\t\t\t\t\t\trowKey={rowKey}\r\n\t\t\t\t\t\t\t// rowProps={rowProps}\r\n\r\n\t\t\t\t\t\t\t/** View Props */\r\n\t\t\t\t\t\t\trowClassName={_rowClassName}\r\n\t\t\t\t\t\t\temptyRenderer={empty}\r\n\t\t\t\t\t\t\tfixed={fixWidthColumn}\r\n\t\t\t\t\t\t\tfooterHeight={_footerShow ? footerProps.height : 0}\r\n\t\t\t\t\t\t\theaderHeight={headerHeight}\r\n\t\t\t\t\t\t\trowHeight={rowHeight}\r\n\t\t\t\t\t\t\toverlayRenderer={loading ? overlay : null}\r\n\t\t\t\t\t\t\tfooterRenderer={_footer}\r\n\t\t\t\t\t\t\trowRenderer={rowRenderer}\r\n\t\t\t\t\t\t\testimatedRowHeight={estimatedRowHeight}\r\n\t\t\t\t\t\t\t/** Load Data Props */\r\n\t\t\t\t\t\t\tonEndReachedThreshold={loadThreshold}\r\n\t\t\t\t\t\t\tonEndReached={\r\n\t\t\t\t\t\t\t\ttype === 'infinity' ? onEndReached : undefined\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\t\t\t/** Tree Props */\r\n\t\t\t\t\t\t\texpandColumnKey={expandColumnKey}\r\n\t\t\t\t\t\t\texpandedRowKeys={_expandedRowKeys}\r\n\t\t\t\t\t\t\t/** Events */\r\n\t\t\t\t\t\t\tonColumnSort={_onColumnSort}\r\n\t\t\t\t\t\t\trowEventHandlers={_rowEventHandlers}\r\n\t\t\t\t\t\t\tonExpandedRowsChange={_onExpandedRowsChange}\r\n\t\t\t\t\t\t\tonRowExpand={_onRowExpand}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</AutoResizer>\r\n\t\t\t</div>\r\n\t\t\t{showSelection && selectable && !expandColumnKey ? (\r\n\t\t\t\t<SelectionList\r\n\t\t\t\t\tonClickDropSelect={_onClickDropSelectHandler}\r\n\t\t\t\t\tselectedRowObjects={flatten(\r\n\t\t\t\t\t\tgetTableRowObjects(_rows, rowKey)\r\n\t\t\t\t\t).filter((item) => _selectedRowKeys.includes(item[rowKey]))}\r\n\t\t\t\t\trowRender={rowRenderShowSelection}\r\n\t\t\t\t/>\r\n\t\t\t) : null}\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nTable.propTypes = {\r\n\t/**\r\n\t * REQUIRED\r\n\t * */\r\n\r\n\t/** Столбцы таблицы */\r\n\tcolumns: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n\r\n\t/** Тип таблицы\r\n\t * **infinity** - загрузка данных по скроллу. Фильтрация, сортировка и поиск через сервер.\r\n\t * **serverSide** - первичная загрузка таблицы с сервера. Фильтрация, сортировка и поиск через сервер. Lazy Load для дерева тоже тут.\r\n\t * **localSide** - полностью локальная таблица. Фильтрация, сортировка и поиск через локальный rows */\r\n\ttype: PropTypes.oneOf(['infinity', 'serverSide', 'localSide']).isRequired,\r\n\r\n\t/** Объект со свойствами Command Panel */\r\n\tcommandPanelProps: PropTypes.object,\r\n\r\n\t/** Объект со свойствами Filter Panel */\r\n\tfilterPanelProps: PropTypes.object,\r\n\r\n\t/**\r\n\t * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\r\n\t * */\r\n\r\n\t/** Строки по умолчанию */\r\n\tdefaultRows: PropTypes.arrayOf(PropTypes.object),\r\n\r\n\t/** Ключи выделенных по умолчанию строк */\r\n\tdefaultSelectedRowKeys: PropTypes.arrayOf(\r\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n\t),\r\n\r\n\t/** Значение строки поиска по умолчанию строк */\r\n\tdefaultSearchValue: PropTypes.string,\r\n\r\n\t/** Объект фильтрации по умолчанию */\r\n\tdefaultFilter: PropTypes.object,\r\n\r\n\t/** Сортировка по умолчанию */\r\n\tdefaultSortBy: PropTypes.shape({\r\n\t\t/** Ключ поля для сортировки */\r\n\t\tkey: PropTypes.string,\r\n\t\t/** Направление сортировки */\r\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\r\n\t}),\r\n\r\n\t/**\r\n\t * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\r\n\t * */\r\n\r\n\t/** Строки таблицы. Используется для контроля таблицы из вне. */\r\n\trows: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /** Функция задания строк таблицы. */\r\n    setRows: PropTypes.func,\r\n\r\n\t/** Выделенные строки таблицы. */\r\n\tselectedRowKeys: PropTypes.arrayOf(\r\n\t\tPropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n\t),\r\n\r\n\t/** Значение строки поиска */\r\n\tsearchValue: PropTypes.string,\r\n\r\n\t/** Объект фильтрации */\r\n\tfilter: PropTypes.object,\r\n\r\n\t/** Объект сортировки */\r\n\tsortBy: PropTypes.shape({\r\n\t\t/** Ключ поля для сортировки */\r\n\t\tkey: PropTypes.string,\r\n\t\t/** Направление сортировки */\r\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\r\n\t}),\r\n\r\n\t/**\r\n\t * BASE PROPS\r\n\t * */\r\n\r\n\t/** Автоудаление строк из таблицы по кнопке в командной панели*/\r\n\tautoDeleteRows: PropTypes.bool,\r\n\r\n\t/** Поле для уникальной идентификации строки */\r\n\trowKey: PropTypes.string,\r\n\r\n\t/**\r\n\t * VIEW PROPS\r\n\t * */\r\n\r\n\t/** Вывод когда нет данных */\r\n\tempty: PropTypes.element,\r\n\r\n\t/** Отображение загрузки данных */\r\n\toverlay: PropTypes.element,\r\n\r\n\t/** Фиксированная ширина столбцов. Появится боковой скрол */\r\n\tfixWidthColumn: PropTypes.bool,\r\n\r\n\t/** Высота подвала */\r\n\tfooterHeight: PropTypes.number,\r\n\r\n\t/** Отображать ли подвал */\r\n\tfooterShow: PropTypes.bool,\r\n\r\n    /** Заголовки футтера */\r\n    footerTitles: PropTypes.shape({\r\n\t\t/** Заголовок выделенных элементов */\r\n        selectedRows: PropTypes.string,\r\n\t\t/** Заголовок загруженных элементов */\r\n        loadedRows: PropTypes.string,\r\n\t\t/** Заголовок всего элементов */\r\n\t\ttotalRows: PropTypes.string,\r\n    }),\r\n\r\n\tfooterProps: PropTypes.shape({\r\n\r\n\t\t/** Высота подвала */\r\n\t\theight: PropTypes.number,\r\n\r\n\t\t/** Массив элементов футтера, которые надо отобразить\r\n\t\t * ['selected', 'loaded', 'total'] */\r\n\t\tshowElements: PropTypes.arrayOf(PropTypes.string),\r\n\r\n\t\t/** Заколовок для кол-ва выбранных объектов */\r\n\t\tselectedTitle: PropTypes.string,\r\n\r\n\t\t/** Заколовок для кол-ва загруженны объектов */\r\n\t\tloadedTitle: PropTypes.string,\r\n\r\n\t\t/** Заколовок для кол-ва всего объектов */\r\n\t\ttotalTitle: PropTypes.string,\r\n\r\n\t\t/** Левый кастомный элемент командной панели */\r\n\t\tleftCustomSideElement: PropTypes.arrayOf(PropTypes.object),\r\n\r\n\t\t/** Центральный кастомный элемент командной панели */\r\n\t\tcenterCustomSideElement: PropTypes.arrayOf(PropTypes.object),\r\n\r\n\t\t/** Правый кастомный элемент командной панели */\r\n\t\trightCustomSideElement: PropTypes.arrayOf(PropTypes.object),\r\n\t}),\r\n\r\n\t/** Высота заголовка таблицы */\r\n\theaderHeight: PropTypes.number,\r\n\r\n\t/** Высота строки таблицы */\r\n\trowHeight: PropTypes.number,\r\n\r\n\t/** Custom row renderer\r\n\t * Параметры - ({ isScrolling, cells, columns, rowData, rowIndex, depth }) */\r\n\trowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\r\n\r\n\t/** Строки будут в зебро-стиле */\r\n\tzebraStyle: PropTypes.bool,\r\n\r\n\t/**\r\n\t * LOAD DATA PROPS\r\n\t * */\r\n\r\n\t/** Порог в пикселях для вызова _onLoad.\r\n\t * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\r\n\tloadThreshold: PropTypes.number,\r\n\r\n\t/** Размер страницы */\r\n\tpageSize: PropTypes.number,\r\n\r\n\t/** Функция запроса для загрузки строк (данных) */\r\n\trequestLoadRows: PropTypes.func,\r\n\r\n    /** Функция запроса для загрузки строк (данных) */\r\n    requestLoadCount: PropTypes.func,\r\n\r\n\t/** Имя параметра для поиска */\r\n\tsearchParamName: PropTypes.string,\r\n\r\n\t/**\r\n\t * SELECTABLE PROPS\r\n\t * */\r\n\r\n\t/** Таблица с возможностью выбора строки */\r\n\tselectable: PropTypes.bool,\r\n\r\n\t/**\r\n\t * TREE PROPS\r\n\t * */\r\n\r\n\t/** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\r\n\tnodeAssociated: PropTypes.bool,\r\n\r\n\t/** Ключ колонки по которой строить иерархию */\r\n\texpandColumnKey: PropTypes.string,\r\n\r\n\t/** Открыть по умолчанию вложенность до уровня N или 'All' */\r\n\texpandDefaultAll: PropTypes.bool,\r\n\r\n\t/** Загружать ноды иерархии по одной */\r\n\texpandLazyLoad: PropTypes.bool,\r\n\r\n\t/** Поле в котором хранится ссылка на родителя */\r\n\texpandParentKey: PropTypes.string,\r\n\r\n\t/**\r\n\t * EVENTS\r\n\t * */\r\n\r\n\t/** Событие при клике на строку (только при selectable = false)\r\n\t * Параметр - ({selected, rowData, rowIndex}) */\r\n\tonRowClick: PropTypes.func,\r\n\r\n\t/** Событие при двойном клике на строку.\r\n\t * Параметр - ({rowData, rowIndex, rowKey}) */\r\n\tonRowDoubleClick: PropTypes.func,\r\n\r\n\t/** События при открытии / закрытии ноды\r\n\t * Парметры - ({ expanded, rowData, rowIndex, rowKey }) */\r\n\tonRowExpand: PropTypes.func,\r\n\r\n\t/** Событие при выборе строки.\r\n\t * Параметр - массив выбранных строе (только rowKey) */\r\n\tonSelectedRowsChange: PropTypes.func,\r\n\r\n\t/** События при открытии / закрытии ноды\r\n\t * Парметры - (expandedRowKeys) - массив ключей открытых нод */\r\n\tonExpandedRowsChange: PropTypes.func,\r\n\r\n\t/** SELECTED PANEL */\r\n\r\n\t/** Отображать ли панель выбранных элементов */\r\n\tshowSelection: PropTypes.bool,\r\n\r\n\t/** Строка или функция для отображения элементов списка выбранных\r\n\t * Строка - имя поля\r\n\t * Функция - рендер строк.\r\n\t * `({ rowData, rowIndex }) => { return <Component> }` */\r\n\trowRenderShowSelection: PropTypes.oneOfType([\r\n\t\tPropTypes.func,\r\n\t\tPropTypes.string,\r\n\t]),\r\n\r\n\t/** Путь в сторе куда класть выбранную строку таблицы */\r\n\tdispatchPath: PropTypes.string,\r\n\r\n\t/** Объект для подписки на изменения в STORE */\r\n\tsubscribe: PropTypes.object,\r\n};\r\n\r\nTable.defaultProps = {\r\n\tdefaultRows: [],\r\n\tdefaultSelectedRowKeys: [],\r\n\tdefaultSearchValue: '',\r\n\tdefaultFilter: {},\r\n\tdefaultSortBy: {},\r\n\r\n\trows: [],\r\n\tselectedRowKeys: [],\r\n\tsearchValue: '',\r\n\tfilter: {},\r\n\tsortBy: {},\r\n\r\n\tautoDeleteRows: true,\r\n\trowKey: 'id',\r\n\r\n\tempty: empty,\r\n\toverlay: overlay,\r\n\tfixWidthColumn: false,\r\n\tfooterHeight: 30,\r\n\tfooterShow: false,\r\n    footerTitles: {\r\n        selectedRows: 'Выделено:',\r\n        loadedRows: 'Загружено записей:',\r\n        totalRows: 'Всего записей:',\r\n    },\r\n\tfooterProps: {\r\n\t\theight: 30,\r\n\t\tshowElements: [],\r\n\t\tselectedTitle: 'Выделено:',\r\n\t\tloadedTitle: 'Загружено записей:',\r\n\t\ttotalTitle: 'Всего записей:',\r\n\t\tleftCustomSideElement: null,\r\n\t\tcenterCustomSideElement: null,\r\n\t\trightCustomSideElement: null\r\n\t},\r\n\theaderHeight: 30,\r\n\trowHeight: 30,\r\n\tzebraStyle: false,\r\n\r\n\tloadThreshold: 300,\r\n\tpageSize: 50,\r\n\trequestLoadRows: noop,\r\n    requestLoadCount: noop,\r\n\tsearchParamName: 'searchLine',\r\n\r\n\tselectable: false,\r\n\r\n\tnodeAssociated: true,\r\n\texpandColumnKey: undefined,\r\n\texpandDefaultAll: true,\r\n\texpandLazyLoad: false,\r\n\texpandParentKey: 'parentId',\r\n\r\n\tonRowClick: noop,\r\n\tonRowDoubleClick: noop,\r\n\tonRowExpand: noop,\r\n\tonSelectedRowsChange: noop,\r\n\tonExpandedRowsChange: noop,\r\n\r\n\tshowSelection: false,\r\n\r\n\tsubscribe: {},\r\n};\r\n\r\nconst mapStateToProps = (store, ownProps) => {\r\n\tconst {subscribe} = ownProps;\r\n\tif(subscribe){\r\n\t\tconst {name, path} = subscribe;\r\n\t\tif(name && path)\r\n\t\t\treturn { [name]: objectPath.get(store, path) };\r\n\t}\r\n\r\n\treturn {};\r\n};\r\nconst mapDispatchToProps = (dispatch) =>\r\n\tbindActionCreators({ setDataStore: setDataStore}, dispatch);\r\n\r\n// const mapStateToProps = (store, ownProps) => {\r\n//     // console.log(\"mapStateToProps -> store\", store);\r\n//     // const {match , section} = ownProps;\r\n//     // const { path } = match;\r\n//     // const rows = store.table[path] && store.table[path][section] ? store.table[path][section].rows : [];\r\n//     // console.log(\"mapStateToProps -> rows\", rows);\r\n//     return { store: store };\r\n// };\r\n// const mapDispatchToProps = (dispatch, ownProps) => {\r\n//     // console.log(\"mapDispatchToProps -> ownProps\", ownProps);\r\n//     // const {match , section} = ownProps;\r\n//     // const { path } = match;\r\n//     // initTableStore(path, section);\r\n//     return bindActionCreators(\r\n//         {\r\n//             initTableStore,\r\n//             setRows,\r\n//         },\r\n//         dispatch\r\n//     );\r\n// };\r\n//\r\n// export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\r\n\r\n/**\r\n * @deprecated [#1] since version 0.0.54 [#2].\r\n * */\r\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\r\n","import React, {useEffect, useState, useRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { flatten, getTableRowKeys, noop, notificationError } from \"../../utils/baseUtils\";\r\nimport {rtPrefix} from '../../utils/variables';\r\nimport {Button, Typography} from 'antd';\r\nimport { DownOutlined, UpOutlined, CloseCircleFilled } from '@ant-design/icons'\r\nimport Table from '../Table/Table';\r\nimport { setDataStore } from \"../../../redux/rtd.actions\";\r\nconst {Paragraph} = Typography;\r\n\r\nconst Select = (props) => {\r\n\tconst [_selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n\tconst [_selectedRowData, _setSelectedRowData] = useState(null);\r\n\tconst [isSelectOpened, setIsSelectOpened] = useState(false);\r\n\tconst [isClickInSelect, setIsClickInSelect] = useState(false);\r\n\r\n\tconst {\r\n\t\tname,\r\n\t\trowRender,\r\n        className,\r\n\t\ttype,\r\n\t\ttitle,\r\n\t\tplaceholder,\r\n        selectedRowKeys,\r\n\t\t// searchable,\r\n        size,\r\n\t\twidthControl,\r\n\t\twidthPopup,\r\n\t\theightPopup,\r\n\r\n\t\tonChangeKeys,\r\n        defaultValue,\r\n        value,\r\n\r\n\t\t/** Table Props */\r\n\t\tdefaultSelectedRowKeys,\r\n\t\trowKey,\r\n\t\texpandColumnKey,\r\n\t\tshowSelection,\r\n\t\trequestLoadRows,\r\n\t\trequestLoadDefault,\r\n        commandPanelProps,\r\n\t\trows,\r\n\t\tdispatchPath,\r\n\t} = props;\r\n\r\n\tconst selectedDispatchPath = dispatchPath && `${dispatchPath}.selected`;\r\n\tconst searchable = commandPanelProps && commandPanelProps.showElements && commandPanelProps.showElements.includes('search');\r\n\tconst node = useRef(null);\r\n\r\n\tconst setSelectedRowData = (rowData) => {\r\n\t\tselectedDispatchPath && props.setDataStore && props.setDataStore(selectedDispatchPath, rowData);\r\n\t\t_setSelectedRowData(rowData);\r\n\t}\r\n\r\n\tconst loadSelectedObject = ({selectedRowKeys}) => {\r\n        if(selectedRowKeys) {\r\n            let _selectedRowKeys;\r\n\t\t\tif(Array.isArray(selectedRowKeys)) {\r\n\t\t\t\tsetSelectedRowKeys(selectedRowKeys);\r\n\t\t\t\t_selectedRowKeys = selectedRowKeys\r\n\t\t\t}\r\n            else {\r\n            \tsetSelectedRowKeys([selectedRowKeys]);\r\n\t\t\t\t_selectedRowKeys = [selectedRowKeys]\r\n\t\t\t}\r\n\r\n\t\t\t// console.log(\"setSelectedRowKeys[70] -> \", _selectedRowKeys);\r\n\r\n\t\t\tconst request = requestLoadDefault\r\n                ? requestLoadDefault\r\n                : requestLoadRows;\r\n\r\n            if (!!request && !rows && _selectedRowKeys.length > 0) {\r\n                // console.log('defaultSelectedRowKeys ', defaultSelectedRowKeys, defaultSelectedRowKeys.length);\r\n                request({\r\n                    data: {\r\n                        [rowKey]:  _selectedRowKeys, //defaultSelectedRowKeys,\r\n                    },\r\n                })\r\n                    .then((response) => {\r\n                        let result = response.data;\r\n\t\t\t\t\t\t// console.log(\"setSelectedRowData[84] => \", response.data);\r\n\t\t\t\t\t\tif (result.length > 0) setSelectedRowData(result[0]);\r\n                    })\r\n\t\t\t\t\t.catch(error => notificationError(error, 'Ошибка загрузки данных в Select') );\r\n\r\n            } else if (rows && _selectedRowKeys && type === 'SingleSelect') {\r\n            \tlet srk = _selectedRowKeys[0];\r\n\t\t\t\t// if(Array.isArray(selectedRowKeys) && selectedRowKeys.length > 0)\r\n\t\t\t\t// \tsrk = selectedRowKeys[0];\r\n            \t// else\r\n\t\t\t\t// \tsrk = selectedRowKeys;\r\n\r\n                const findRow = rows.find((row) => row[rowKey] === srk);\r\n                // console.log(\"setSelectedRowData[98] => \", findRow, rows, srk);\r\n                setSelectedRowData(findRow);\r\n            } else {\r\n                setSelectedRowData(null);\r\n            }\r\n        }\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n        loadSelectedObject({selectedRowKeys: defaultSelectedRowKeys});\r\n\t\twindow.addEventListener('mousedown', handleMouseClick, false);\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('mousedown', handleMouseClick, false);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log(\"selectedRowKeys\", selectedRowKeys);\r\n        loadSelectedObject({selectedRowKeys: selectedRowKeys});\r\n    }, [selectedRowKeys]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(_selectedRowKeys !== undefined && _selectedRowData === undefined){\r\n\t\t\t// console.log(\"useEffect rows\", _selectedRowKeys, _selectedRowData, rows);\r\n\t\t\tloadSelectedObject({selectedRowKeys: _selectedRowKeys});\r\n\t\t}\r\n\t}, [rows])\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log(\"isClickInSelect \", isClickInSelect);\r\n\t\t// console.log(\"isSelectOpened \", isSelectOpened);\r\n\t\tif(!isClickInSelect && isSelectOpened)\r\n\t\t\tonClosePopup();\r\n\t}, [isClickInSelect]);\r\n\r\n\t// useEffect(() => {\r\n\t// \t// console.log(\"setSelectedRowData[117] => \", props.value, props.defaultValue);\r\n\t// }, [props])\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\tkey: rowKey,\r\n\t\t\ttitle: title,\r\n\t\t\tdataKey: rowKey,\r\n\t\t\twidth: 500,\r\n\t\t\tcellRenderer:\r\n\t\t\t\ttypeof rowRender === 'function'\r\n\t\t\t\t\t? rowRender\r\n\t\t\t\t\t: ({rowData}) => <div className={'rt-table-cell'}>{rowData[rowRender]}</div>,\r\n\t\t},\r\n\t];\r\n\r\n\tconst _getHeadCls = () => {\r\n\t    let cls = [`${rtPrefix}-select-header`];\r\n\r\n\t    if(isSelectOpened)\r\n            cls.push('opened');\r\n\r\n\t    if(_selectedRowKeys && _selectedRowKeys.length > 0)\r\n\t        cls.push('selected');\r\n\r\n\t    switch (size) {\r\n            case 'small':\r\n                cls.push(`${rtPrefix}-select-header-sm`);\r\n                break;\r\n            case 'large':\r\n                cls.push(`${rtPrefix}-select-header-lg`);\r\n                break;\r\n            default: break;\r\n        }\r\n\r\n\t    return cls.join(' ');\r\n    };\r\n\r\n\tconst _getHeadText = () => {\r\n\t\tif (type === 'SingleSelect') {\r\n\t\t\t\tif(_selectedRowData)\r\n\t\t\t\t\tif(typeof rowRender === 'function')\r\n\t\t\t\t\t\treturn rowRender({rowData: _selectedRowData});\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn `${_selectedRowData[rowRender]}`;\r\n\t\t\t\telse\r\n\t\t\t\t\treturn `${placeholder}`;\r\n\t\t} else {\r\n\t\t\treturn _selectedRowKeys.length > 0\r\n\t\t\t\t? `Выбрано: ${_selectedRowKeys.length}`\r\n\t\t\t\t: `${placeholder}`;\r\n\t\t}\r\n\t};\r\n\r\n    const _getPopupCls = () => {\r\n    \t// console.log('_getPopupCls _selectedRowKeys => ', _selectedRowKeys);\r\n        let cls = [`${rtPrefix}-select-popup`];\r\n\r\n        if(title)\r\n            cls.push(`${rtPrefix}-select-popup-with-title`);\r\n\r\n        return cls.join(' ');\r\n    };\r\n\tconst _getPopupStyle = () => {\r\n\t\t// if (heightPopup)\r\n\t\t// \treturn {height: `${heightPopup}px`, width: `${widthPopup}px`};\r\n\r\n\t\tlet height = {};\r\n\t\tlet defRowsLen = 0;\r\n\r\n\t\tif (!requestLoadRows && rows)\r\n\t\t\tif (expandColumnKey)\r\n\t\t\t\tdefRowsLen = flatten(getTableRowKeys(rows, rowKey)).length;\r\n\t\t\telse defRowsLen = rows.length;\r\n\r\n\t\t// console.log('_getPopupStyle', defRowsLen);\r\n\t\tif (defRowsLen && defRowsLen > 0) {\r\n\t\t\theight =\r\n\t\t\t\tdefRowsLen * 30 + // Кол-во строк * высоту строки\r\n\t\t\t\t(searchable ? 46 : 0) + // Размер поисковой строки или 0\r\n\t\t\t\t(type === 'MultiSelect' ? 65 : 0) + // Размер футтера (30) + размер кнопки 35 или 0\r\n\t\t\t\t(showSelection ? 200 : 0) + // Размер панели выбранных элементов или 0\r\n\t\t\t\t22; // Паддинги и бордер\r\n\t\t\t// console.log('heightPopup', height);\r\n\t\t\tif (height > heightPopup) height = `${heightPopup}px`;\r\n\t\t\telse height = `${height}px`;\r\n\t\t} else {\r\n\t\t\t// console.log(\"heightPopup\", heightPopup);\r\n\t\t\theight = `${heightPopup}px`;\r\n\t\t}\r\n\r\n\t\t// console.log(\"heightPopup, widthPopup\", heightPopup, widthPopup);\r\n\t\treturn {height, width: `${widthPopup}px`};\r\n\t};\r\n\r\n\tconst getEvents = () => {\r\n\t\treturn (commandPanelProps && commandPanelProps.systemBtnProps && Object.keys(commandPanelProps.systemBtnProps)) || [];\r\n\t};\r\n\r\n\tconst _onChange = (selectedKeys) => {\r\n\t\t// console.log('_onChange [176]', selectedKeys);\r\n\t\tsetSelectedRowKeys(selectedKeys);\r\n\t\t// setSelectedRowData(selectedObjects);\r\n\t\tonChangeKeys(name, selectedKeys.length ? selectedKeys : null);\r\n\t\t// onChangeObjects(name, selectedObjects.length ? selectedObjects : null);\r\n\t\t// setCountSelect(selectedKeys.length);\r\n\t\tif (type === 'SingleSelect') {\r\n\t\t\tsetIsSelectOpened(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst _SingleSelectRow = ({selected, rowData, rowIndex}) => {\r\n\t\t// console.log(\"_SingleSelectRow => \", rowData);\r\n\t\tsetSelectedRowData(rowData);\r\n\t\t// selected ? setSingleSelectRowData(rowData) : setSingleSelectRowData({})\r\n\t};\r\n\r\n\tconst handleMouseClick = (e) => {\r\n\t\tnode && node.current && setIsClickInSelect(node.current.contains(e.target))\r\n\t};\r\n\r\n\tconst onClosePopup  = () => {\r\n\t\tsetIsSelectOpened(false);\r\n\t};\r\n\r\n\tconst onOpenPopup = () => {\r\n\t\tif(!isSelectOpened)\r\n\t\t\tsetIsSelectOpened(true);\r\n\t\telse\r\n\t\t\tsetIsSelectOpened(false);\r\n\t};\r\n\r\n\tconst onClickClear = () => {\r\n\t\t// console.log(\"delete Selected\");\r\n\t\tsetSelectedRowData(null);\r\n\t\t_onChange([]);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n            className={`${rtPrefix}-select ${className ? className : ''}`}\r\n\t\t\tref={node}\r\n\t\t>\r\n\t\t\t{title ? <div className={'title'}>{title}</div> : null}\r\n\t\t\t<div\r\n\t\t\t\tclassName={_getHeadCls()}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: widthControl === 0 ? '100%' : `${widthControl}px`,\r\n\t\t\t\t}}\r\n\r\n\t\t\t>\r\n\t\t\t\t<div className={`${rtPrefix}-select-selector`}\r\n\t\t\t\t\t // onFocus={ () => {setIsSelectOpened(true)} }\r\n\t\t\t\t\t onClick={ onOpenPopup }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Paragraph ellipsis> {_getHeadText()} </Paragraph>\r\n\t\t\t\t</div>\r\n                {isSelectOpened ? <UpOutlined onClick={ onOpenPopup } className={`${rtPrefix}-select-header-icon`} /> : <DownOutlined onClick={ onOpenPopup } className={`${rtPrefix}-select-header-icon`}/> }\r\n\t\t\t\t{/*<Button shape=\"circle\" icon={<CloseCircleFilled />} onClick={() => console.log(\"delete Selected\")} className={`${rtPrefix}-select-header-clear`} />*/}\r\n\t\t\t\t{_selectedRowKeys.length > 0 ? <CloseCircleFilled onClick={onClickClear} className={`${rtPrefix}-select-header-clear`}/> : null }\r\n\t\t\t</div>\r\n\r\n\t\t\t{isSelectOpened ? (\r\n\t\t\t\t<div className={_getPopupCls()} style={_getPopupStyle()}>\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t\tcommandPanelProps={{\r\n\t\t\t\t\t\t\t...props.commandPanelProps,\r\n\t\t\t\t\t\t\tshowElements: getEvents(),// getShowElements(),\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tdefaultSelectedRowKeys={_selectedRowKeys}\r\n                        selectedRowKeys={_selectedRowKeys}\r\n\t\t\t\t\t\theaderHeight={0}\r\n\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\ttype={!!requestLoadRows ? 'serverSide' : 'localSide'}\r\n\t\t\t\t\t\t// showElements={searchable ? ['search'] : undefined}\r\n\t\t\t\t\t\tselectable={type === 'MultiSelect'}\r\n\t\t\t\t\t\tfooterShow={type === 'MultiSelect'}\r\n\t\t\t\t\t\tshowSelection={showSelection}\r\n\t\t\t\t\t\trowRenderShowSelection={rowRender}\r\n\t\t\t\t\t\tonRowClick={_SingleSelectRow}\r\n\t\t\t\t\t\tonSelectedRowsChange={_onChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{type === 'MultiSelect' ? (\r\n\t\t\t\t\t\t<div className={'close-panel'}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={() => setIsSelectOpened(false)}\r\n\t\t\t\t\t\t\t\tsize={'small'}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tOk\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</div>\r\n\t\t\t) : null}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nSelect.propTypes = {\r\n\t/** Имя параметра селекта (вернется в onChangeKeys и onChangeObjects) */\r\n\tname: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number,\r\n\t\tPropTypes.arrayOf(\r\n\t\t\tPropTypes.oneOfType(\r\n\t\t\t\t[PropTypes.string, PropTypes.number]\r\n\t\t\t)\r\n\t\t)]).isRequired,\r\n\r\n\t/** Строка или функция для отображения элементов списка\r\n\t * Строка - имя поля\r\n\t * Функция - рендер строк. Параметры v\r\n\t * { rowData, rowIndex }) */\r\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\r\n\t\t.isRequired,\r\n\r\n\t/** Тип селекта (SingleSelect и MultiSelect) */\r\n\ttype: PropTypes.oneOf(['SingleSelect', 'MultiSelect']).isRequired,\r\n\r\n    /** Дополнительное имя класса для элемента */\r\n    className: PropTypes.string,\r\n\r\n\t/** Заголовок фильтра */\r\n\ttitle: PropTypes.string,\r\n\r\n\t/** Строка, когда ничего не выбрано */\r\n\tplaceholder: PropTypes.string,\r\n\r\n\t/** Запрос на загрузку дефолтных данных */\r\n\trequestLoadDefault: PropTypes.func,\r\n\r\n    /** Массив выбранных значений */\r\n    selectedRowKeys: PropTypes.arrayOf(\r\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n    ),\r\n\r\n    /** Размер селектора ['small', 'middle', 'large'] */\r\n    size: PropTypes.oneOf(['small', 'middle', 'large']),\r\n\r\n\t// /** Показывать ли поисковую строку */\r\n\t// searchable: PropTypes.bool,\r\n\r\n\t/** Ширина поля выбора в пикселях */\r\n\twidthControl: PropTypes.number,\r\n\r\n\t/** Ширина выпадающего меню */\r\n\twidthPopup: PropTypes.number,\r\n\r\n\t/** Высота выпадающего меню (по умолчанию считается сама) */\r\n\theightPopup: PropTypes.number,\r\n\r\n    /** Событие об изменении состояния селектора */\r\n\tonChangeKeys: PropTypes.func,\r\n\r\n\t/** Поле для уникальной идентификации строки */\r\n\trowKey: PropTypes.string,\r\n\r\n\t/** Высота строки таблицы */\r\n\trowHeight: PropTypes.number,\r\n\r\n\t/** Строки будут в зебро-стиле */\r\n\tzebraStyle: PropTypes.bool,\r\n\r\n\t/** Функция запроса для загрузки строк (данных) */\r\n\trequestLoadRows: PropTypes.func,\r\n\r\n\t/** Функция запроса для загрузки строк (данных) */\r\n\trequestLoadCount: PropTypes.func,\r\n\r\n\t/** Значение строки поиска */\r\n\tsearchValue: PropTypes.string,\r\n\r\n\t/** Имя параметра для поиска */\r\n\tsearchParamName: PropTypes.string,\r\n\r\n\t/** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\r\n\tnodeAssociated: PropTypes.bool,\r\n\r\n\t/** Ключ колонки по которой строить иерархию */\r\n\texpandColumnKey: PropTypes.string,\r\n\r\n\t/** Открыть по умолчанию вложенность до уровня N или 'All' */\r\n\texpandDefaultAll: PropTypes.bool,\r\n\r\n\t/** Загружать ноды иерархии по одной */\r\n\texpandLazyLoad: PropTypes.bool,\r\n\r\n\t/** Поле в котором хранится ссылка на родителя */\r\n\texpandParentKey: PropTypes.string,\r\n};\r\n\r\nSelect.defaultProps = {\r\n\tonChangeKeys: noop,\r\n\t// onChangeObjects: noop,\r\n\tplaceholder: 'Выбрать',\r\n\t// searchable: false,\r\n    size: 'middle',\r\n\twidthControl: 110,\r\n\twidthPopup: 400,\r\n\theightPopup: 600,\r\n    rowKey: 'id',\r\n\trowHeight: 30,\r\n\tzebraStyle: false,\r\n\r\n\trequestLoadDefault: undefined,\r\n\trequestLoadRows: undefined,\r\n\trequestLoadCount: undefined,\r\n\tsearchValue: '',\r\n\tsearchParamName: 'searchLine',\r\n\r\n\tnodeAssociated: true,\r\n\texpandColumnKey: undefined,\r\n\texpandDefaultAll: true,\r\n\texpandLazyLoad: false,\r\n\texpandParentKey: 'parentId',\r\n};\r\nconst mapDispatchToProps = (dispatch) =>\r\n\tbindActionCreators({ setDataStore: setDataStore}, dispatch);\r\n\r\nexport default connect(null, mapDispatchToProps)(Select);\r\n","import React, {forwardRef, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '../Table/Table';\r\nimport { notification, Typography } from \"antd\";\r\nimport { notificationError } from \"../../utils/baseUtils\";\r\n\r\nconst AdvancedTable = forwardRef((props, ref) => {\r\n\tconst [config, setConfig] = useState({});\r\n\r\n\tconst {\r\n\t\tconfigData,\r\n        customColumnProps,\r\n\t\tdefaultFilter,\r\n\t\texpandColumnKey,\r\n\t\texpandLazyLoad,\r\n\t\texpandParentKey,\r\n\t\tpageSize,\r\n\t\trowKey,\r\n\t\trequestLoadConfig,\r\n\t} = props;\r\n\r\n\tuseEffect(() => {\r\n        let cleanupFunction = false;\r\n        const loadData = async () => {\r\n            if (requestLoadConfig) {\r\n                // console.log('requestLoadConfig => ', typeof requestLoadConfig);\r\n                // console.log('requestLoadRows => ', typeof props.requestLoadRows);\r\n                requestLoadConfig()\r\n                    .then((response) => {\r\n                        // let result = response.data;\r\n                        // console.log('requestLoadConfig -> ', response.data);\r\n                        if(!cleanupFunction)\r\n                            setConfig(response.data);\r\n                    })\r\n                    .catch(error => notificationError(error, 'Ошибка получения конфигурации') );\r\n            } else {\r\n                if(!cleanupFunction)\r\n                    setConfig(configData);\r\n            }\r\n        };\r\n        loadData();\r\n        return () => cleanupFunction = true;\r\n\t}, []);\r\n\r\n\tconst columnsByConfig = () =>\r\n\t\tconfig &&\r\n\t\tconfig.fields &&\r\n\t\tconfig.fields.map((item) => {\r\n\r\n\t\t\tconst colProps =\r\n                customColumnProps &&\r\n                customColumnProps.find(\r\n                    (render) =>\r\n                        render.name === item.name || render.name === item.alias\r\n                );\r\n\t\t\treturn {\r\n\t\t\t\tkey: item.name,\r\n\t\t\t\ttitle: item.header ? item.header : item.name,\r\n\t\t\t\tdataKey: item.alias ? item.alias : item.name,\r\n\t\t\t\talign: item.align,\r\n\t\t\t\twidth: item.width,\r\n\t\t\t\tresizable: item.resizable,\r\n\t\t\t\tsortable: item.sortable,\r\n\t\t\t\thidden: !item.visible,\r\n\t\t\t\t// cellRenderer: cellR && cellR.cellRender,\r\n                ...colProps,\r\n                cellRenderer: (object) => {\r\n\t\t\t\t\tif (colProps && colProps.cellRenderer)\r\n\t\t\t\t\t\treturn <colProps.cellRenderer {...object}/>\r\n\t\t\t\t\t// return colProps.cellRenderer(object) ? colProps.cellRenderer(object) : '---';\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn object.cellData\r\n\t\t\t\t\t\t\t? <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>{object.cellData}</Typography.Text>\r\n\t\t\t\t\t\t\t: <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>---</Typography.Text> ;\r\n\t\t\t\t\t// return object.cellData ? object.cellData : '---';\r\n                },\r\n\t\t\t};\r\n\t\t});\r\n\r\n\tconst getDefaultFilter = () => {\r\n\t\tif (config && config.hierarchical && config.hierarchyLazyLoad) {\r\n\t\t\tconst parentKey = config.hierarchyField\r\n\t\t\t\t? config.hierarchyField.split('/')[1]\r\n\t\t\t\t: expandParentKey;\r\n\t\t\treturn {...defaultFilter, [parentKey]: null};\r\n\t\t} else return defaultFilter;\r\n\t};\r\n\r\n\tif (config && config.fields) {\r\n\t\t// console.log('AdvancedTable render table -> ', config);\r\n\t\treturn (\r\n\t\t\t<Table\r\n\t\t\t\t{...props}\r\n\t\t\t\tref={ref}\r\n\t\t\t\tcolumns={columnsByConfig()}\r\n\t\t\t\tdefaultFilter={getDefaultFilter()}\r\n\t\t\t\trowKey={\r\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyField\r\n\t\t\t\t\t\t? config.hierarchyField.split('/')[0]\r\n\t\t\t\t\t\t: rowKey\r\n\t\t\t\t}\r\n\t\t\t\texpandParentKey={\r\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyField\r\n\t\t\t\t\t\t? config.hierarchyField.split('/')[1]\r\n\t\t\t\t\t\t: expandParentKey\r\n\t\t\t\t}\r\n\t\t\t\texpandColumnKey={\r\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyView\r\n\t\t\t\t\t\t? config.hierarchyView\r\n\t\t\t\t\t\t: expandColumnKey\r\n\t\t\t\t}\r\n\t\t\t\texpandLazyLoad={\r\n\t\t\t\t\tconfig && config.hierarchical && config.hierarchyLazyLoad\r\n\t\t\t\t\t\t? config.hierarchyLazyLoad\r\n\t\t\t\t\t\t: expandLazyLoad\r\n\t\t\t\t}\r\n\t\t\t\tpageSize={config && config.hierarchical ? 1 : pageSize}\r\n\t\t\t/>\r\n\t\t);\r\n\t} else return null;\r\n});\r\n\r\nAdvancedTable.propTypes = {\r\n\t/** Функция запроса на получение конфига для таблицы */\r\n\trequestLoadConfig: PropTypes.func,\r\n\r\n\t/** Конфигурация внешнего вида таблицы */\r\n\tconfigData: PropTypes.shape({\r\n\t\thierarchical: PropTypes.bool,\r\n\t\thierarchyField: PropTypes.string,\r\n\t\thierarchyView: PropTypes.string,\r\n\t\thierarchyLazyLoad: PropTypes.bool,\r\n\t\tfields: PropTypes.arrayOf(\r\n\t\t\tPropTypes.shape({\r\n\t\t\t\tname: PropTypes.string,\r\n\t\t\t\talias: PropTypes.string,\r\n\t\t\t\theader: PropTypes.string,\r\n\t\t\t\tvisible: PropTypes.bool,\r\n\t\t\t\tresizable: PropTypes.bool,\r\n\t\t\t\tsortable: PropTypes.bool,\r\n\t\t\t\talign: PropTypes.oneOf(['left', 'center', 'right']),\r\n\t\t\t\twidth: PropTypes.number,\r\n\t\t\t})\r\n\t\t),\r\n\t}),\r\n\r\n\t/** Дополнительные пропсы для колонок */\r\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nAdvancedTable.defaultProps = {};\r\n\r\nexport default AdvancedTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FormItems from \"./FormItems\";\r\nimport { Form as AntForm, notification } from \"antd\";\r\nimport { getObjectExcludedProps, noop, notificationError } from \"../../utils/baseUtils\";\r\nimport { rtPrefix } from \"../../utils/variables\";\r\n\r\nconst excludeProps = [\"noPadding\", \"scrollable\", \"header\", \"body\", \"footer\", \"loadInitData\", \"autoSaveForm\", \"requestSaveForm\", \"methodSaveForm\", \"processBeforeSaveForm\"];\r\n\r\n\r\nconst Form = (props) => {\r\n    const { loadInitData, header, body, footer,\r\n        autoSaveForm, requestSaveForm, methodSaveForm, processBeforeSaveForm } = props;\r\n\r\n    /** Состояние первоначалной настройки компонента*/\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [antFormProps, setAntFormProps] = useState({});\r\n    const [initFormData, setInitFormData] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (!loaded) {\r\n            if (loadInitData !== noop)\r\n                loadInitData(_setInitFormData);\r\n            else\r\n                setLoaded(true);\r\n        }\r\n    }, [loaded]);\r\n\r\n    useEffect(() => {\r\n        setAntFormProps(getObjectExcludedProps(props, excludeProps));\r\n        // console.log('antFormProps props => ', getObjectExcludedProps(props, excludeProps));\r\n    }, [props]);\r\n\r\n\r\n    const _setInitFormData = (data) => {\r\n        // console.log(\"Form loaded init data => \", data);\r\n        setInitFormData(data);\r\n        setLoaded(true);\r\n    };\r\n\r\n\r\n    let antForm;\r\n    if (props && props.form) {\r\n        antForm = props.form;\r\n    } else {\r\n        const [form] = AntForm.useForm();\r\n        antForm = form;\r\n    }\r\n\r\n    const getBodyCls = () => {\r\n        let cls = [`${rtPrefix}-form-body`];\r\n        props.noPadding && cls.push(`${rtPrefix}-form-body-no-padding`);\r\n        props.scrollable && cls.push(`${rtPrefix}-form-body-scrollable`);\r\n        return cls.join(\" \");\r\n    };\r\n\r\n    const onFinish = (rawValues) => {\r\n        const values = processBeforeSaveForm ? processBeforeSaveForm(rawValues) : rawValues;\r\n        console.log(`Success form [${props.name ? props.name : 'no name form'}]: `, values);\r\n        if (autoSaveForm && requestSaveForm) {\r\n            const saveObject = {\r\n                ...initFormData,\r\n                ...values,\r\n                // dateStart: getISO(values['dateStart'])\r\n            };\r\n            requestSaveForm({\r\n                method: methodSaveForm,\r\n                data: saveObject\r\n            })\r\n                .then(response => {\r\n                    notification.success({\r\n                        message: \"Сохранение прошло успешно\"\r\n                    });\r\n                    if (props.onFinish)\r\n                        props.onFinish(values);\r\n                })\r\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\r\n        } else if (props.onFinish)\r\n            props.onFinish(values);\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n        console.error(\"Failed:\", errorInfo);\r\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {loaded ?\r\n                <AntForm\r\n                    form={antForm}\r\n                    {...antFormProps}\r\n                    className={`${antFormProps.className} ${rtPrefix}-form`}\r\n                    style={{ ...antFormProps.style, width: '100%', height: '100%' }}\r\n                    initialValues={{ ...antFormProps.initialValues, ...initFormData }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    {header ? <div className={`${rtPrefix}-form-header`}><FormItems items={header}/></div> : null}\r\n                    <div className={getBodyCls()}><FormItems items={body}/></div>\r\n                    {footer ? <div className={`${rtPrefix}-form-footer`}><FormItems items={footer}/></div> : null}\r\n                </AntForm>\r\n                : null}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nForm.propTypes = {\r\n\r\n    /** Не делать отступы у формы от краев блока */\r\n    noPadding: PropTypes.bool,\r\n\r\n    /** scrollable\r\n     */\r\n    scrollable: PropTypes.bool,\r\n\r\n    /** Массив объектов для шапки формы. Как правило только заголовок. */\r\n    header: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /** Массив объектов для тела формы */\r\n    body: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n\r\n    /** Массив объектов для подвала формы. Как правило только кнопки \"Сохранить\" и \"Отмена\" */\r\n    footer: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /** Ссылка на функцию загрузки значений по умолчанию\r\n     * (callBack) => callBack(initObject) */\r\n    loadInitData: PropTypes.func,\r\n\r\n    /** Производить ли автоматическое сохранение по параметрам requestSaveForm и methodSaveForm */\r\n    autoSaveForm: PropTypes.bool,\r\n\r\n    /** Запрос для автоматического сохранения формы */\r\n    requestSaveForm: PropTypes.func,\r\n\r\n    /** HTTP Метод, передаваемый в запрос сохранения */\r\n    methodSaveForm: PropTypes.string,\r\n\r\n    /** Функция обработки перед сохранением формы */\r\n    processBeforeSaveForm: PropTypes.func,\r\n};\r\n\r\nForm.defaultProps = {\r\n    noPadding: false,\r\n    scrollable: false,\r\n    loadInitData: noop,\r\n    autoSaveForm: true\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {getObjectExcludedProps} from '../../utils/baseUtils';\r\nimport Form from './Form';\r\nimport {Modal} from 'antd';\r\n\r\nconst excludeProps = ['type', 'initialValues', 'form'];\r\n\r\nconst FormModal = props => {\r\n\r\n    const {\r\n        modal,\r\n        selectedRow,\r\n        visible,\r\n        setVisible,\r\n        saveRow,\r\n    } = props;\r\n\r\n    const getDefaultFooterProps = () => {\r\n\r\n        let okText = '';\r\n        let cancelText = '';\r\n        let modalTitle = '';\r\n\r\n        switch (modal.type) {\r\n            case 'addOnServer':\r\n            case 'addGroupOnServer':\r\n                okText = 'Сохранить';\r\n                cancelText = 'Отмена';\r\n                modalTitle = 'Сохранить на сервере';\r\n                break;\r\n            case 'addOnLocal':\r\n            case 'addGroupOnLocal':\r\n                okText = 'Сохранить';\r\n                cancelText = 'Отмена';\r\n                modalTitle = 'Сохранить локально';\r\n                break;\r\n            case 'editOnServer':\r\n            case 'editGroupOnServer':\r\n                okText = 'Сохранить';\r\n                cancelText = 'Отмена';\r\n                modalTitle = 'Измененить на сервере';\r\n                break;\r\n            case 'editOnLocal':\r\n            case 'editGroupOnLocal':\r\n                okText = 'Сохранить';\r\n                cancelText = 'Отмена';\r\n                modalTitle = 'Изменение локально';\r\n                break;\r\n            case 'select':\r\n                okText = 'Добавить';\r\n                cancelText = 'Отмена';\r\n                modalTitle = 'Выбор';\r\n                break;\r\n            case 'viewGroup':\r\n            case 'viewObject':\r\n                okText = 'Закрыть';\r\n                modalTitle = 'Просмотр';\r\n                break;\r\n            default: break;\r\n        }\r\n\r\n        if(modal.okText)\r\n            okText = modal.okText;\r\n\r\n        if(modal.cancelText)\r\n            cancelText = modal.cancelText;\r\n\r\n        if(modal.title)\r\n            modalTitle = modal.title;\r\n\r\n        return {okText, cancelText, title: modalTitle, okType: 'primary'}\r\n    };\r\n\r\n    let modalProps = { ...getDefaultFooterProps(), ...getObjectExcludedProps(modal, excludeProps) };\r\n\r\n    const onFinish = values => {\r\n        // console.log('FormModal Success:', values, selectedRow);\r\n        let saveObj = {};\r\n        if(modal.type.startsWith('add'))\r\n            saveObj = {...values};\r\n        else\r\n            saveObj = {...selectedRow, ...values};\r\n\r\n        saveRow({type: modal.type, row: saveObj, requestSaveRow: modal.requestSaveRow});\r\n\r\n        if (modalProps.onOk) modalProps.onOk(values);\r\n        if (modalProps.onFinish) modalProps.onFinish(values);\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n        // console.log('FormModal Failed:', errorInfo);\r\n        console.error(\"FormModal fields failed: \", errorInfo);\r\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\r\n    };\r\n\r\n    const _onCancelHandler = (e) => {\r\n        // setVisibleModals({ ...visibleModals, [modal.type]: false });\r\n        // form.resetFields();\r\n        setVisible(modal.type, false);\r\n        if (modalProps.onCancel) modalProps.onCancel(e)\r\n    };\r\n\r\n    const _onLoadInitData = (callBack) => {\r\n        // console.log(\"Modal => loadInitData\", selectedRow);\r\n        formConfig.loadInitData(callBack, selectedRow)\r\n    }\r\n\r\n    const defaultFooter = [\r\n        {\r\n            componentType: 'Item',\r\n            child: {\r\n                componentType: 'Button',\r\n                label: modalProps.cancelText,\r\n                className: 'mr-8',\r\n                onClick: _onCancelHandler,\r\n                ...modalProps.cancelButtonProps\r\n            }\r\n        },\r\n        {\r\n            componentType: 'Item',\r\n            child: {\r\n                componentType: 'Button',\r\n                label: modalProps.okText,\r\n                type: modalProps.okType,\r\n                htmlType: 'submit',\r\n                ...modalProps.okButtonProps\r\n            }\r\n        }\r\n    ];\r\n\r\n    const formConfig =  {\r\n        footer: defaultFooter,\r\n        ...modal.form\r\n    };\r\n    return (\r\n        <Modal\r\n            {...modalProps}\r\n            centered\r\n            destroyOnClose\r\n            visible={visible}\r\n            onCancel={_onCancelHandler}\r\n            bodyStyle={{padding: 0, ...modalProps.bodyStyle}}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                {...formConfig}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                loadInitData={_onLoadInitData}\r\n            />\r\n        </Modal>\r\n    )\r\n};\r\n\r\nFormModal.propTypes = {\r\n    /** Объект модального окна */\r\n    modal: PropTypes.object,\r\n\r\n    /** Выделенная строка таблицы */\r\n    selectedRow: PropTypes.object,\r\n\r\n    /** Состояние видимости модалки */\r\n    visible: PropTypes.bool,\r\n\r\n    /** Задание состояния видимости модалки */\r\n    setVisible: PropTypes.func,\r\n\r\n    /** CallBack функция для сохранения данных */\r\n    saveRow: PropTypes.func,\r\n};\r\n\r\nexport default FormModal;\r\n","import React, {forwardRef, useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SortOrder from 'react-base-table/lib/SortOrder';\r\nimport AdvancedTable from '../AdvancedTable/AdvancedTable';\r\nimport { generateUUID, getObjectExcludedProps, noop, notificationError } from \"../../utils/baseUtils\";\r\nimport FormModal from './FormModal';\r\nimport { notification as antNotification, notification } from \"antd\";\r\nimport { rtPrefix } from \"../../utils/variables\";\r\nimport { empty, overlay } from \"../Table/defaultSettings\";\r\n\r\n\r\nconst excludeProps = ['onChange', 'defaultValue', 'modals', 'events', 'history'];\r\n\r\nconst FormTable = forwardRef((props, ref) => {\r\n\r\n    /** Состояние первоначалной настройки компонента*/\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    /** Состояние отображения модалок таблицы */\r\n    const [visibleModals, setVisibleModals] = useState({\r\n        addOnServer: false,\r\n        editOnServer: false,\r\n        addOnLocal: false,\r\n        editOnLocal: false,\r\n        addGroupOnServer: false,\r\n        editGroupOnServer: false,\r\n        addGroupOnLocal: false,\r\n        editGroupOnLocal: false,\r\n        select: false,\r\n        viewGroup: false,\r\n        viewObject: false});\r\n    const [tableRows, setTableRows] = useState([]);\r\n    const [tableSelectedRowKeys, setTableSelectedRowKeys] = useState([]);\r\n    const [tableSelectedRow, setTableSelectedRow] = useState({});\r\n\r\n    /** Ссылка на объект таблицы */\r\n    const [tableRef, setTableRef] = useState({});\r\n    const _setTableRef = (_ref) => {\r\n        setTableRef(_ref);\r\n        ref && ref(_ref)\r\n    };\r\n\r\n    const {\r\n        rowKey,\r\n        rowKeyType,\r\n        customFields,\r\n        modals,\r\n        isGroupKey,\r\n        history,\r\n\r\n        componentType,\r\n        name,\r\n\r\n        // Form.Item props\r\n        value,\r\n\r\n        // Requests\r\n        requestDeleteRow,\r\n\r\n        dataDeleteRow\r\n    } = props;\r\n    const cmdProps = props.commandPanelProps;\r\n\r\n    // let advancedTableProps = getObjectExcludedProps(props, excludeProps);\r\n\r\n    /** Аналог componentDidMounted */\r\n    useEffect(() => {\r\n        // Если таблица локальная, то пробуем загрузить исходные данные\r\n        if(!loading && props.type === 'localSide') {\r\n            let cleanupFunction = false;\r\n            setLoading(true);\r\n            const loadData = async () => {\r\n                if (!loading && props.requestLoadRows) {\r\n                    props.requestLoadRows({params: {page: 0, size: 1}, data: {}})\r\n                        .then((response) => {\r\n                            // console.log('FormTable -> requestLoadRows -> response', response);\r\n                            // console.log('FormTable -> requestLoadRows -> value', value);\r\n                            if (!cleanupFunction)\r\n                                _addRowsToLocalTable(response.data, value);\r\n                        })\r\n                        .catch(error => notificationError(error, 'Ошибка загрузки данных') );\r\n                }\r\n                // console.log('FormTable -> setMounted ', advancedTableProps.type);\r\n                setLoading(false);\r\n            };\r\n            loadData();\r\n            return () => cleanupFunction = true;\r\n        }\r\n    }, [props.type]);\r\n\r\n    useEffect(() => {\r\n        if(props.selectable) {\r\n            console.log(\"FormTable => useEffect => value: \", value);\r\n            if(value && value.length > 0)\r\n                setTableSelectedRowKeys(value.map(item => item[rowKey]));\r\n            else\r\n                setTableSelectedRowKeys([]);\r\n\r\n        }\r\n    }, [value]);\r\n\r\n    /** Получить список кнопок для Command Panel */\r\n    const getEvents = () => {\r\n        return (cmdProps && cmdProps.systemBtnProps && Object.keys(cmdProps.systemBtnProps)) || [];\r\n    };\r\n\r\n    /** Получить рендер модалок */\r\n    const getModals = () => {\r\n        return modals.map((modal, index) => {\r\n            return (\r\n                <FormModal\r\n                    key={index}\r\n                    modal={modal}\r\n                    selectedRow={tableSelectedRow}\r\n                    visible={visibleModals[modal.type]}\r\n                    setVisible={(type, value) => setVisibleModals({ ...visibleModals, [type]: value })}\r\n                    saveRow={_onSaveRow}\r\n                />\r\n            )\r\n\r\n        })\r\n    };\r\n\r\n    /** Проверка существования кнопки в Command Panel */\r\n    const isExistCmdBtn = (btnType) => (cmdProps && cmdProps.systemBtnProps && cmdProps.systemBtnProps[btnType]);\r\n\r\n    /** Проверка соответствия типа кнопки и события ? (params) === (props) */\r\n    const equalsActionTypeCmdBtn = (btnType, actionType) => {\r\n        if(isExistCmdBtn(btnType)) {\r\n            if(btnType === 'edit') {\r\n                const aTypes = actionType.split('/');\r\n                if(aTypes[0] === 'g') {\r\n                    return !!(cmdProps.systemBtnProps[btnType].actionType\r\n                        && cmdProps.systemBtnProps[btnType].actionType.length === 2\r\n                        && cmdProps.systemBtnProps[btnType].actionType[1] === aTypes[1]);\r\n                }\r\n                else if (aTypes[0] === 'i') {\r\n                    return !!(cmdProps.systemBtnProps[btnType].actionType\r\n                        && cmdProps.systemBtnProps[btnType].actionType.length === 2\r\n                        && cmdProps.systemBtnProps[btnType].actionType[0] === aTypes[1]);\r\n                }\r\n            } else {\r\n                return !!(cmdProps.systemBtnProps[btnType].actionType\r\n                    && cmdProps.systemBtnProps[btnType].actionType === actionType);\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /** Command Panel Events */\r\n    /** Добавить */\r\n    const _onClickAddHandler = () => {\r\n        if(equalsActionTypeCmdBtn('add', 'modal')) {\r\n            // console.log(\"FormTable => _onClickAddHandler => modal\");\r\n            if (props.type !== 'localSide') {\r\n                setVisibleModals({...visibleModals, addOnServer: true});\r\n            } else {\r\n                if (modals && (modals.find(modal => modal.type === 'select') !== undefined)) {\r\n                    setVisibleModals({...visibleModals, select: true});\r\n                    // console.log(\"FormTable => _onClickAddHandler => select\", modals.find(modal => modal.type === 'select'));\r\n                } else {\r\n                    setVisibleModals({...visibleModals, addOnLocal: true});\r\n                    // console.log(\"FormTable => _onClickAddHandler => addOnLocal\"); location.pathname\r\n                }\r\n            }\r\n        } else if (equalsActionTypeCmdBtn('add', 'page')) {\r\n            history.push(`${history.location.pathname}/new`);\r\n        }\r\n    };\r\n\r\n    /** Добавить копированием */\r\n    const _onClickAddAsCopyHandler = (event, row) => {\r\n        _addRowToLocalTable(row);\r\n    };\r\n\r\n    /** Добавить группу */\r\n    const _onClickAddGroupHandler = () => {\r\n        if(equalsActionTypeCmdBtn('addGroup', 'modal')) {\r\n            // console.log(\"FormTable => _onClickAddGroupHandler => modal\");\r\n            if (props.type !== 'localSide')\r\n                setVisibleModals({...visibleModals, addGroupOnServer: true});\r\n            else\r\n                setVisibleModals({...visibleModals, addGroupOnLocal: true});\r\n        } else if (equalsActionTypeCmdBtn('addGroup', 'page')) {\r\n            // console.log(\"FormTable => _onClickAddGroupHandler => page\");\r\n            history.push(`${history.location.pathname}/newGroup`);\r\n        }\r\n    };\r\n\r\n    /** Изменить */\r\n    const _onClickEditHandler = (event, {rowData}) => {\r\n        // console.log(\"FormTable -> _onClickEditHandler -> row \", rowData, props.type);\r\n        if (rowData[isGroupKey]) {\r\n            if (equalsActionTypeCmdBtn('edit', 'g/modal')) {\r\n                // console.log(\"FormTable => _onClickEditHandler => g/modal\");\r\n                if (props.type !== 'localSide')\r\n                    setVisibleModals({...visibleModals, editGroupOnServer: true});\r\n                else\r\n                    setVisibleModals({...visibleModals, editGroupOnLocal: true});\r\n            } else if (equalsActionTypeCmdBtn('edit', 'g/page')) {\r\n                // console.log(\"FormTable => _onClickEditHandler => g/page\");\r\n                history.push(`${history.location.pathname}/${rowData[rowKey]}`);\r\n            }\r\n        } else {\r\n            if (equalsActionTypeCmdBtn('edit', 'i/modal')) {\r\n                // console.log(\"FormTable => _onClickEditHandler => i/modal\");\r\n                if (props.type !== 'localSide')\r\n                    setVisibleModals({...visibleModals, editOnServer: true});\r\n                else\r\n                    setVisibleModals({...visibleModals, editOnLocal: true});\r\n            } else if (equalsActionTypeCmdBtn('edit', 'i/page')) {\r\n                // console.log(\"FormTable => _onClickEditHandler => i/page\");\r\n                history.push(`${history.location.pathname}/${rowData[rowKey]}`);\r\n            }\r\n        }\r\n    };\r\n\r\n    /** Удалить */\r\n    const _onClickDelete = (event, _selectedRowKeys) => {\r\n        if(props.type === 'localSide') {\r\n            const _rows = tableRows.filter(\r\n                (item) => !_selectedRowKeys.includes(item[rowKey])\r\n            );\r\n            setTableRows(_rows);\r\n            _onChange(_rows);\r\n        } else {\r\n            if(_selectedRowKeys && _selectedRowKeys.length > 0 && requestDeleteRow){\r\n                const deleteData = _selectedRowKeys.map(item => { return {[rowKey]: item, ...dataDeleteRow} } );\r\n                requestDeleteRow({data: {deleteData: deleteData}})\r\n                    .then((response) => {\r\n                        antNotification.success({message: 'Успешное удаленение'});\r\n                        tableRef && tableRef.reloadData({});\r\n\r\n                    })\r\n                    .catch(error => {\r\n                        notificationError(error, 'Ошибка удаления записи');\r\n                        tableRef && tableRef.reloadData({});\r\n                    });\r\n            }\r\n        }\r\n        cmdProps.onClickDelete && cmdProps.onClickDelete(event, _selectedRowKeys);\r\n    };\r\n\r\n    /** Переместить вверх / вниз */\r\n    const _onClickUpHandler = (event, row, rows) => {\r\n        _onChange(rows);\r\n        cmdProps.onClickUp && cmdProps.onClickUp(event, row, rows);\r\n    };\r\n\r\n    const _onClickDownHandler = (event, row, rows) => {\r\n        _onChange(rows);\r\n        cmdProps.onClickDown && cmdProps.onClickDown(event, row, rows);\r\n    };\r\n\r\n    /** Modal Events */\r\n    const _onSaveRow = ({type, row, requestSaveRow}) => {\r\n        // console.log(\"FormTable -> _saveRow -> row \", row);\r\n        if(type === 'select') {\r\n            // Получить массив строк из таблицы в модальной форме\r\n            let selectRows = row[name];\r\n            // console.log(\"FormTable -> _onSaveRow -> row [0]\", row);\r\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [0]\", selectRows);\r\n\r\n            // Фильтрация выбранных строк, оставить только те которых еще нет в таблице\r\n            let saveRows = selectRows.filter((sRow) =>\r\n                tableRows.findIndex((tRow) => tRow[rowKey] === sRow[rowKey]) === -1\r\n            );\r\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [1]\", saveRows);\r\n            if (customFields)\r\n                // Фильтрация по пользовательским параметрам\r\n                saveRows = saveRows.filter((sRow) => {\r\n                    let isValid = [];\r\n                    customFields.forEach((field) => {\r\n                        // Валидация по пользовательской логике функции validate\r\n                        if(field.validate)\r\n                            isValid.push(field.validate(sRow, tableRows));\r\n\r\n                        // Создание или переобразование по пользовательской логике функции value\r\n                        if(field.value)\r\n                            sRow[field.name] = field.value(sRow, tableRows);\r\n                    });\r\n                    // console.log('_addRows isValid', isValid);\r\n                    if(!isValid.includes(false))\r\n                        return sRow;\r\n                });\r\n            setVisibleModals({ ...visibleModals, [type]: false });\r\n            notification.success({\r\n                message: `Добавлено ${saveRows.length} строк`\r\n            });\r\n            // console.log(\"FormTable -> _onSaveRow -> saveRows [2]\", saveRows);\r\n            _addRowsToLocalTable([...tableRows, ...saveRows]);\r\n        }\r\n        else {\r\n            let saveRow = {...row};\r\n            if(type.indexOf('Group') !== -1)\r\n                saveRow[isGroupKey] = true;\r\n            else\r\n                saveRow[isGroupKey] = false;\r\n            if (customFields)\r\n                customFields.forEach((field) => saveRow[field.name] = field.value(saveRow, tableRows));\r\n            switch (type) {\r\n                case 'addOnServer':\r\n                case 'editOnServer':\r\n                case 'addGroupOnServer':\r\n                case 'editGroupOnServer':\r\n                    _addRowToServerTable({requestSaveRow, type, saveRow});\r\n                    break;\r\n                case 'addOnLocal':\r\n                case 'addGroupOnLocal':\r\n                    setVisibleModals({ ...visibleModals, [type]: false });\r\n                    _addRowToLocalTable(saveRow);\r\n                    break;\r\n                case 'editOnLocal':\r\n                case 'editGroupOnLocal':\r\n                    setVisibleModals({ ...visibleModals, [type]: false });\r\n                    _editRowToLocalTable(saveRow);\r\n                    break;\r\n\r\n                //            addGroupOnServer: false,\r\n                //         editGroupOnServer: false,\r\n                //         addGroupOnLocal: false,\r\n                //         editGroupOnLocal: false,\r\n                // case 'select':\r\n                case 'viewGroup':\r\n                case 'viewObject':\r\n                    setVisibleModals({ ...visibleModals, [type]: false });\r\n                    break;\r\n            }\r\n            // console.log(\"Modal Events => type: \", type, itemName, componentType, saveRow);\r\n        }\r\n\r\n    };\r\n\r\n    const _addRowToLocalTable = (row) => {\r\n        let saveObj = {...row};\r\n        if(rowKeyType === 'uuid')\r\n            saveObj[rowKey] = generateUUID();\r\n\r\n        // console.log('_addRowToLocalTable', tableRows);\r\n        _addRowsToLocalTable([...tableRows, saveObj]);\r\n    };\r\n\r\n    const _editRowToLocalTable = (row) => {\r\n        let arr = [...tableRows];\r\n        const rowIndex = arr.findIndex(item => item[rowKey] === row[rowKey]);\r\n        arr.splice(rowIndex, 1, row);\r\n        setTableRows(arr);\r\n        setTableSelectedRow(row);\r\n        _onChange(arr);\r\n    };\r\n\r\n    const _addRowsToLocalTable = (rows, keys) => {\r\n        // console.log('FormTable -> _addRowsToLocalTable -> rows', rows, keys);\r\n        setTableRows(rows);\r\n        if(props.selectable)\r\n            _onChange(keys);\r\n        else\r\n            _onChange(rows);\r\n    };\r\n\r\n    const _addRowToServerTable = ({requestSaveRow, type, saveRow}) => {\r\n        if (requestSaveRow\r\n            && ['addOnServer', 'editOnServer', 'addGroupOnServer', 'editGroupOnServer'].includes(type)\r\n        ) {\r\n            const method = (type === 'addOnServer' || type === 'addGroupOnServer') ? 'POST' : 'PUT';\r\n            // console.log(\"Modal Events => type: \", type, itemName, componentType, saveRow);\r\n            requestSaveRow({\r\n                method,\r\n                data: saveRow,\r\n            })\r\n                .then(response => {\r\n                    notification.success({\r\n                        message: 'Сохранение прошло успешно'\r\n                    });\r\n                    setVisibleModals({ ...visibleModals, [type]: false });\r\n                    tableRef && tableRef.reloadData({ filter: props.defaultFilter});\r\n                    // ref && ref.current && ref.current.reloadData({ filter: props.defaultFilter});\r\n                    // console.log('_addRowToServerTable tableRef =>', tableRef);\r\n                })\r\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\r\n        }\r\n    };\r\n\r\n    const _onRowClick = ({selected, rowData, rowIndex, rowKey}) => {\r\n        if(!props.selectable) {\r\n            setTableSelectedRow(rowData);\r\n            setTableSelectedRowKeys([rowKey]);\r\n            if(componentType === 'SelectTable')\r\n                _onChange([rowData]);\r\n        }\r\n        props.onRowClick && props.onRowClick({selected, rowData, rowIndex, rowKey});\r\n    };\r\n\r\n    const _onRowDoubleClick = ({rowData, rowIndex, rowKey}) => {\r\n        if (rowData[isGroupKey]) {\r\n            setVisibleModals({...visibleModals, viewGroup: true});\r\n        } else {\r\n            setVisibleModals({...visibleModals, viewObject: true});\r\n        }\r\n        props.onRowDoubleClick && props.onRowDoubleClick({rowData, rowIndex, rowKey});\r\n    };\r\n\r\n    const _onSelectedRowsChange = (keys, rows) => {\r\n        // console.log(\"_onSelectedRowsChange\", keys, rows);\r\n        if(props.selectable) {\r\n            setTableSelectedRow(rows[0]);\r\n            setTableSelectedRowKeys(keys);\r\n            _onChange(rows);\r\n        }\r\n    };\r\n\r\n    const _onChange = (rows) => {\r\n        if(rows !== undefined)\r\n            props.onChange(rows);\r\n        else\r\n            props.onChange(tableRows);\r\n    };\r\n\r\n    const getTableCls = () => {\r\n        let cls = [`${rtPrefix}-form-table`];\r\n        if (props.className)\r\n            cls.push(props.className);\r\n        return cls.join(' ');\r\n    };\r\n\r\n    return (\r\n        <div className={getTableCls()} style={props.style} >\r\n            <AdvancedTable\r\n                ref={_setTableRef}\r\n                {...getObjectExcludedProps(props, excludeProps)}\r\n                rows={tableRows}\r\n                setRows={setTableRows}\r\n                // selectedRowKeys={tableSelectedRow[rowKey] ? [tableSelectedRow[rowKey]] : []}\r\n                selectedRowKeys={tableSelectedRowKeys}\r\n                onRowClick={_onRowClick}\r\n                onRowDoubleClick={_onRowDoubleClick}\r\n                onSelectedRowsChange={_onSelectedRowsChange}\r\n                autoDeleteRows={false}\r\n                commandPanelProps={{\r\n                    ...props.commandPanelProps,\r\n                    showElements: getEvents(),// getShowElements(),\r\n                    onClickAdd: _onClickAddHandler,\r\n                    onClickAddAsCopy: _onClickAddAsCopyHandler,\r\n                    onClickAddGroup: _onClickAddGroupHandler,\r\n                    onClickEdit: _onClickEditHandler,\r\n                    onClickDelete: _onClickDelete,\r\n                    onClickDown: _onClickDownHandler,\r\n                    onClickUp: _onClickUpHandler,\r\n                }}\r\n                filterPanelProps={{\r\n                    ...props.filterPanelProps,\r\n                    // onApplyFilter: (filter) => console.log('filter', filter)\r\n                }}\r\n            />\r\n            {modals && getModals()}\r\n        </div>\r\n    );\r\n});\r\n\r\nFormTable.propTypes = {\r\n    /** Объект со свойствами Command Panel */\r\n    commandPanelProps: PropTypes.object,\r\n\r\n    /** Объект со свойствами Filter Panel */\r\n    filterPanelProps: PropTypes.object,\r\n\r\n    /**\r\n     * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\r\n     * */\r\n\r\n    /** Строки по умолчанию */\r\n    defaultRows: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /** Ключи выделенных по умолчанию строк */\r\n    defaultSelectedRowKeys: PropTypes.arrayOf(\r\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n    ),\r\n\r\n    /** Значение строки поиска по умолчанию строк */\r\n    defaultSearchValue: PropTypes.string,\r\n\r\n    /** Объект фильтрации по умолчанию */\r\n    defaultFilter: PropTypes.object,\r\n\r\n    /** Сортировка по умолчанию */\r\n    defaultSortBy: PropTypes.shape({\r\n        key: PropTypes.string,\r\n        order: PropTypes.oneOf([SortOrder.ASC, SortOrder.DESC]),\r\n    }),\r\n\r\n    /**\r\n     * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\r\n     * */\r\n\r\n    /** Значение строки поиска */\r\n    searchValue: PropTypes.string,\r\n\r\n    /** Фильтр */\r\n    filter: PropTypes.object,\r\n\r\n    /** Объект сортировки ({ key: 'string', order: 'asc' }).\r\n     * key - поле по которому сотрировать,\r\n     * order - направление сортировки (\"asc\", \"desc\")\r\n     * */\r\n    sortBy: PropTypes.shape({\r\n        key: PropTypes.string,\r\n        order: PropTypes.oneOf([SortOrder.ASC, SortOrder.DESC]),\r\n    }),\r\n\r\n    /**\r\n     * BASE PROPS\r\n     * */\r\n\r\n    /** Автоудаление строк из таблицы по кнопке в командной панели*/\r\n    autoDeleteRows: PropTypes.bool,\r\n\r\n    /** Поле для уникальной идентификации строки */\r\n    rowKey: PropTypes.string,\r\n\r\n    /** Тип поля для уникальной идентификации строки */\r\n    rowKeyType: PropTypes.oneOf(['uuid', 'number']),\r\n\r\n    /**\r\n     * VIEW PROPS\r\n     * */\r\n\r\n    /** Вывод когда нет данных. JSX для заглушки \"Нет данных\".  */\r\n    empty: PropTypes.element,\r\n\r\n    /** Отображение загрузки данных. JSX для загрузки данных. */\r\n    overlay: PropTypes.element,\r\n\r\n    /** Фиксированная ширина столбцов. Появится боковой скрол */\r\n    fixWidthColumn: PropTypes.bool,\r\n\r\n    /** Высота подвала */\r\n    footerHeight: PropTypes.number,\r\n\r\n    /** Отображать ли подвал */\r\n    footerShow: PropTypes.bool,\r\n\r\n    /** Названия футтера */\r\n    footerTitles: PropTypes.shape({\r\n        selectedRows: PropTypes.string,\r\n        loadedRows: PropTypes.string,\r\n        totalRows: PropTypes.string,\r\n    }),\r\n\r\n    /** Высота заголовка таблицы */\r\n    headerHeight: PropTypes.number,\r\n\r\n    /** Высота строки таблицы */\r\n    rowHeight: PropTypes.number,\r\n\r\n    /** Custom row renderer\r\n     * Параметры - ({ isScrolling, cells, columns, rowData, rowIndex, depth }) */\r\n    rowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\r\n\r\n    /** Строки будут в зебро-стиле */\r\n    zebraStyle: PropTypes.bool,\r\n\r\n    /**\r\n     * LOAD DATA PROPS\r\n     * */\r\n\r\n    /** Порог в пикселях для вызова _onLoad.\r\n     * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\r\n    loadThreshold: PropTypes.number,\r\n\r\n    /** Размер страницы */\r\n    pageSize: PropTypes.number,\r\n\r\n    /** Функция запроса для загрузки строк (данных) */\r\n    requestLoadRows: PropTypes.func,\r\n\r\n    /** Функция запроса для загрузки строк (данных) */\r\n    requestLoadCount: PropTypes.func,\r\n\r\n    /** Имя параметра для поиска */\r\n    searchParamName: PropTypes.string,\r\n\r\n    /**\r\n     * SELECTABLE PROPS\r\n     * */\r\n\r\n    /** Таблица с возможностью выбора строки */\r\n    selectable: PropTypes.bool,\r\n\r\n    /**\r\n     * TREE PROPS\r\n     * */\r\n\r\n    /** Родительский узел и дочерние узлы связаны (Работает только при selectable) */\r\n    nodeAssociated: PropTypes.bool,\r\n\r\n    /** Ключ колонки по которой строить иерархию */\r\n    expandColumnKey: PropTypes.string,\r\n\r\n    /** Открыть по умолчанию вложенность до уровня N или 'All' */\r\n    expandDefaultAll: PropTypes.bool,\r\n\r\n    /** Загружать ноды иерархии по одной */\r\n    expandLazyLoad: PropTypes.bool,\r\n\r\n    /** Поле в котором хранится ссылка на родителя */\r\n    expandParentKey: PropTypes.string,\r\n\r\n    /**\r\n     * EVENTS\r\n     * */\r\n\r\n    /** Событие при клике на строку (только при selectable = false)\r\n     * Параметр - ({selected, rowData, rowIndex}) */\r\n    onRowClick: PropTypes.func,\r\n\r\n    /** Событие при двойном клике на строку.\r\n     * Параметр - ({rowData, rowIndex, rowKey}) */\r\n    onRowDoubleClick: PropTypes.func,\r\n\r\n    /** События при открытии / закрытии ноды\r\n     * Парметры - ({ expanded, rowData, rowIndex, rowKey }) */\r\n    onRowExpand: PropTypes.func,\r\n\r\n    /** Событие при выборе строки.\r\n     * Параметр - массив выбранных строе (только rowKey) */\r\n    onSelectedRowsChange: PropTypes.func,\r\n\r\n    /** События при открытии / закрытии ноды\r\n     * Парметры - (expandedRowKeys) - массив ключей открытых нод */\r\n    onExpandedRowsChange: PropTypes.func,\r\n\r\n    /** SELECTED PANEL */\r\n\r\n    /** Отображать ли панель выбранных элементов */\r\n    showSelection: PropTypes.bool,\r\n\r\n    /** Строка или функция для отображения элементов списка выбранных\r\n     * Строка - имя поля\r\n     * Функция - рендер строк.\r\n     * Параметры - ({ rowData, rowIndex }) */\r\n    rowRenderShowSelection: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.string,\r\n    ]),\r\n\r\n\r\n    /** Дополнительные пропсы для колонок */\r\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /** Дополнительные поля и валидация в объекты таблицы */\r\n    customFields: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /** Модальные окна */\r\n    modals: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /** Событие об изменении объектов таблицы\r\n     * Параметр - (rows)*/\r\n    onChange: PropTypes.func,\r\n\r\n    /** implemented - только для (LocalTable + selectable) - Контроль значение из вне */\r\n    // value: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /** Not implemented - Задание значений по умолчанию */\r\n    defaultValue: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /** Классы стилей */\r\n    className: PropTypes.string,\r\n\r\n    /** Стили */\r\n    style: PropTypes.object,\r\n\r\n    /** Поле для идентификации группы */\r\n    isGroupKey: PropTypes.string,\r\n\r\n    /** Объект history для перемещения по путям */\r\n    history: PropTypes.object,\r\n\r\n    /** Функция запроса на получение конфига для таблицы */\r\n    requestLoadConfig: PropTypes.func,\r\n\r\n    /** Функция запроса на уделание данных */\r\n    requestDeleteRow: PropTypes.func,\r\n\r\n    /** Параметры объекта удаления */\r\n    dataDeleteRow: PropTypes.object,\r\n};\r\n\r\nFormTable.defaultProps = {\r\n    defaultRows: [],\r\n    defaultSelectedRowKeys: [],\r\n    defaultSearchValue: '',\r\n    defaultFilter: {},\r\n    defaultSortBy: {},\r\n\r\n    searchValue: '',\r\n    filter: {},\r\n    sortBy: {},\r\n\r\n    autoDeleteRows: true,\r\n    rowKey: 'id',\r\n\r\n    empty: empty,\r\n    overlay: overlay,\r\n    fixWidthColumn: false,\r\n    footerHeight: 30,\r\n    footerShow: false,\r\n    footerTitles: {\r\n        selectedRows: 'Выделено:',\r\n        loadedRows: 'Загружено записей:',\r\n        totalRows: 'Всего записей:',\r\n    },\r\n    headerHeight: 30,\r\n    rowHeight: 30,\r\n    zebraStyle: false,\r\n\r\n    loadThreshold: 300,\r\n    pageSize: 50,\r\n    requestLoadRows: noop,\r\n    requestLoadCount: noop,\r\n    searchParamName: 'searchLine',\r\n\r\n    selectable: false,\r\n\r\n    nodeAssociated: true,\r\n    expandColumnKey: undefined,\r\n    expandDefaultAll: true,\r\n    expandLazyLoad: false,\r\n    expandParentKey: 'parentId',\r\n\r\n    onRowClick: noop,\r\n    onRowDoubleClick: noop,\r\n    onRowExpand: noop,\r\n    onSelectedRowsChange: noop,\r\n    onExpandedRowsChange: noop,\r\n\r\n    showSelection: false,\r\n\r\n    rowKeyType: 'uuid',\r\n    onChange: noop,\r\n    isGroupKey: 'isGroup',\r\n};\r\n\r\nexport default FormTable;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport objectPath from \"object-path\";\r\nimport { setDataStore } from \"../../../redux/rtd.actions\";\r\nimport {getObjectExcludedProps} from '../../utils/baseUtils';\r\nimport moment from \"moment\";\r\nimport { Typography as AntTypography } from \"antd\";\r\nimport { getISO, toFormat } from \"../../utils/datesUtils\";\r\n\r\nexport const withStore = (Component, antFormItemProps) => {\r\n\r\n    const mapStateToProps = (store, ownProps) => {\r\n        const {subscribe} = ownProps;\r\n        if(subscribe){\r\n            const {name, path} = subscribe;\r\n            if(name && path)\r\n                return { [name]: objectPath.get(store, path) };\r\n        }\r\n\r\n        return {};\r\n    };\r\n    const mapDispatchToProps = (dispatch) =>\r\n        bindActionCreators({ setDataStore: setDataStore}, dispatch);\r\n\r\n    const defaultGetValueFromEvent = (valuePropName, event) => {\r\n        if (event && event.target && valuePropName in event.target) {\r\n            return event.target[valuePropName];\r\n        }\r\n        return event;\r\n    };\r\n\r\n    const defaultProps = {\r\n        trigger: 'onChange',\r\n        valuePropName: 'value',\r\n    };\r\n\r\n    const withStoreProps = { ...defaultProps, ...antFormItemProps };\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)( (props) => {\r\n\r\n        const {dispatchPath} = props;\r\n\r\n        const subscribe = props.subscribe ? props.subscribe : {};\r\n\r\n        const [subscribeProps, setSubscribeProps] = useState({});\r\n\r\n        const {trigger, getValueFromEvent, valuePropName} = withStoreProps;\r\n\r\n        const excludeProps = ['componentType', 'setDataStore', 'subscribe', subscribe.name, 'dispatchPath'];\r\n\r\n        const getValue = (...args) => {\r\n            let newValue;\r\n            if (getValueFromEvent) {\r\n                newValue = getValueFromEvent(...args);\r\n                // console.log(\"storeHOC => getValueFromEvent: \", newValue);\r\n            } else {\r\n                newValue = defaultGetValueFromEvent(valuePropName, ...args);\r\n                // console.log(\"storeHOC => defaultGetValueFromEvent: \", newValue);\r\n            }\r\n            return newValue;\r\n        };\r\n\r\n        /** Подписка на изменение props[subscribe.name] в сторе */\r\n        useEffect( () => {\r\n            if(subscribe.name) {\r\n                // console.log(\"storeHOC => subscribe: \", props[subscribe.name]);\r\n                subscribe.onChange && subscribe.onChange({value: props[subscribe.name], setSubscribeProps});\r\n            }\r\n            // console.log(\"Change Props[2]: \", props.subscribeЗф);\r\n        }, [props[subscribe.name]]);\r\n\r\n        useEffect(() => {\r\n            // dispatchPath && props.setDataStore && props.setDataStore(dispatchPath, props.value);\r\n            if(dispatchPath) {\r\n                const newValue = props[valuePropName];\r\n                // console.log(\"storeHOC => dispatch: \", newValue);\r\n                dispatchPath && props.setDataStore && props.setDataStore(dispatchPath, newValue);\r\n            }\r\n        }, [props]);\r\n\r\n        useEffect(() => {\r\n            if(subscribeProps.value) {\r\n                // console.log('subscribeProps.value => ', subscribeProps.value);\r\n                props[trigger] && props[trigger](subscribeProps.value);\r\n            }\r\n        }, [subscribeProps.value]);\r\n\r\n        const onChange = (...args) => {\r\n            // const newValue = getValue(...args);\r\n            // dispatchPath && props.setDataStore && props.setDataStore(dispatchPath, newValue);\r\n            props[trigger] && props[trigger](...args);\r\n        };\r\n\r\n        const childProps = getObjectExcludedProps(props, excludeProps);\r\n        return <Component {...childProps} {...subscribeProps} {...{[trigger]: onChange }}/>\r\n    })\r\n};\r\n\r\n\r\nexport const DatePickerHOC = (Component) => {\r\n    return props => {\r\n        // console.log(\"DatePickerHOC => \", props);\r\n        if(props.value){\r\n            if(typeof props.value === 'string'){\r\n                // console.log(\"DatePickerHOC => onChange => string\");\r\n                props.onChange(moment(props.value), props.value);\r\n            }\r\n            // else {\r\n            // \tconsole.log(\"DatePickerHOC => onChange => moment\");\r\n            // \tprops.onChange(props.value, props.format ? toFormat(props.value,props.format) : getISO(props.value));\r\n            // }\r\n        }\r\n        const value = props.value ? (typeof props.value === 'string' ? moment(props.value) : props.value) : null;\r\n        return <Component {...props} value={value} />\r\n    };\r\n};\r\n\r\nexport const TypographyTitle = (props) =>\r\n    <AntTypography.Title {...props}> {props.label || props.value} </AntTypography.Title>;\r\n\r\nexport const TypographyText = (props) =>\r\n    <AntTypography.Text {...props}> {props.label || props.value} </AntTypography.Text>;\r\n\r\nexport const TypographyDate = (props) => {\r\n    const {label, value, format } = props;\r\n    const _value = value ? (format ? toFormat(value, format) : getISO(value)) : null;\r\n    return <AntTypography.Text {...props}> {label || _value} </AntTypography.Text>;\r\n}\r\n","const getTitle = (type, element) => {\r\n    if(element === 'Group')\r\n        if(type === 'edit')\r\n            return 'Изменение папки';\r\n        else\r\n            return 'Создание папки';\r\n    else\r\n        return 'Изменение файла';\r\n};\r\n\r\nconst Modal = (type, element, requestSaveRow, processBeforeSaveForm, parentLoadHandler, requestLoadRows) => {\r\n    // console.log(\"FolderModal\", type, requestSaveRow, processBeforeSaveForm, parentLoadHandler, requestLoadRows);\r\n    let selectedRow;\r\n    return {\r\n        type: `${type}${element}OnServer`,\r\n        title: getTitle(type, element),\r\n        requestSaveRow: requestSaveRow,\r\n        width: 500,\r\n        // bodyStyle: {height: 650},\r\n        form: {\r\n            name: 'FileManagerModalModal',\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 16},\r\n            processBeforeSaveForm: (rawValues) => processBeforeSaveForm(rawValues, type, element),\r\n            loadInitData: (callBack, row) => {\r\n                selectedRow = row;\r\n                callBack(type === 'edit' ? row : null);\r\n            },\r\n            body: [\r\n                {\r\n                    componentType: 'Item',\r\n                    label: 'Наименование',\r\n                    name: 'name',\r\n                    rules: [\r\n                        {\r\n                            message: `Заполните наименование`,\r\n                            required: true,\r\n                        },\r\n                    ],\r\n                    child: {componentType: 'Input'},\r\n                },\r\n                type === 'edit'\r\n                    ? {\r\n                        componentType: 'Item',\r\n                        label: 'Родитель',\r\n                        name: 'parentId',\r\n                        child: {\r\n                            componentType: 'SingleSelect',\r\n                            widthControl: 0,\r\n                            heightPopup: 300,\r\n                            expandColumnKey: 'id',\r\n                            rowRender: 'name',\r\n                            nodeAssociated: false,\r\n                            expandDefaultAll: true,\r\n                            // (info) аналогично ({params, data})\r\n                            // Но поскольку тут раскрывать объект не нужно, мы можем просто передать его дальше\r\n                            requestLoadRows: (info) => parentLoadHandler(type, selectedRow, info),\r\n                            requestLoadDefault: requestLoadRows,\r\n                        },\r\n                    }\r\n                    : {},\r\n            ],\r\n        },\r\n    };\r\n};\r\n\r\nexport const AddFolderModal = (...args) => Modal('add', 'Group', ...args);\r\nexport const EditFolderModal = (...args) => Modal('edit', 'Group', ...args);\r\nexport const EditFileModal = (...args) => Modal('edit', '', ...args);\r\n\r\n","import {notification} from 'antd';\r\n\r\nexport const copyTextToClipboard = text => {\r\n\tif (!navigator.clipboard) {\r\n\t\tfallbackCopyTextToClipboard(text);\r\n\t\treturn;\r\n\t}\r\n\tnavigator.clipboard.writeText(text).then(\r\n\t\tfunction() {\r\n\t\t\topenNotificationWithIcon(\r\n\t\t\t\t'success',\r\n\t\t\t\t'Успешно',\r\n\t\t\t\t`[${text}] успешно копирован в буфер обмена`\r\n\t\t\t);\r\n\t\t},\r\n\t\tfunction(err) {\r\n\t\t\topenNotificationWithIcon(\r\n\t\t\t\t'error',\r\n\t\t\t\t'Ошибка',\r\n\t\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\r\n\t\t\t);\r\n\t\t}\r\n\t);\r\n};\r\n\r\nconst fallbackCopyTextToClipboard = text => {\r\n\tlet textArea = document.createElement('textarea');\r\n\ttextArea.value = text;\r\n\r\n\t// Avoid scrolling to bottom\r\n\ttextArea.style.top = '0';\r\n\ttextArea.style.left = '0';\r\n\ttextArea.style.position = 'fixed';\r\n\r\n\tdocument.body.appendChild(textArea);\r\n\ttextArea.focus();\r\n\ttextArea.select();\r\n\r\n\ttry {\r\n\t\tlet successful = document.execCommand('copy');\r\n\t\tif (successful) {\r\n\t\t\topenNotificationWithIcon(\r\n\t\t\t\t'success',\r\n\t\t\t\t'Успешно',\r\n\t\t\t\t`[${text}] успешно копирован в буфер обмена`\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\topenNotificationWithIcon(\r\n\t\t\t\t'error',\r\n\t\t\t\t'Ошибка',\r\n\t\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\r\n\t\t\t);\r\n\t\t}\r\n\t} catch (err) {\r\n\t\topenNotificationWithIcon(\r\n\t\t\t'error',\r\n\t\t\t'Ошибка',\r\n\t\t\t`[${text}] НЕ успешно копирован в буфер обмена`\r\n\t\t);\r\n\t}\r\n\tdocument.body.removeChild(textArea);\r\n};\r\n\r\nconst openNotificationWithIcon = (type, title, msg) => {\r\n\tnotification[type]({\r\n\t\tmessage: title,\r\n\t\tdescription: msg\r\n\t});\r\n};\r\n","import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FormTable from \"../Form/FormTable\";\r\nimport {Button, Upload, notification as antNotification, Spin, Typography, Tooltip} from 'antd';\r\nimport {\r\n    HomeOutlined,\r\n    RollbackOutlined,\r\n    FolderFilled,\r\n    FileOutlined,\r\n    PlusOutlined,\r\n    LoadingOutlined,\r\n    FileWordOutlined,\r\n    FileExcelOutlined,\r\n    FileImageOutlined,\r\n    FileMarkdownOutlined,\r\n    FilePdfOutlined,\r\n    FilePptOutlined,\r\n    FileTextOutlined,\r\n    FileZipOutlined,\r\n    CopyOutlined\r\n} from '@ant-design/icons';\r\nimport { AddFolderModal, EditFileModal, EditFolderModal } from \"./AddFolderModal\";\r\nimport { rtPrefix } from \"../../utils/variables\";\r\nimport { toDDMMYYYYHHMMSS } from \"../../utils/datesUtils\";\r\nimport { copyTextToClipboard } from \"../../utils/clipboardUtils\";\r\nimport { notificationError } from \"../../utils/baseUtils\";\r\n\r\nconst FileManager = props => {\r\n\r\n    const {\r\n        rowKey,\r\n        isGroupKey,\r\n        expandParentKey\r\n    } = props;\r\n\r\n    const [tableRef, setTableRef] = useState({});\r\n    const _setTableRef = (ref) => setTableRef(ref);\r\n\r\n    // const tableRef = React.createRef();\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState([{[rowKey]: null, name: <HomeOutlined />}]);\r\n    const [tableFilter, setTableFilter] = useState({deleted: false, [expandParentKey]: null});\r\n\r\n\r\n\r\n    /**\r\n     * TABLE EVENTS\r\n     */\r\n\r\n    // Down to folder OR download file\r\n    const _onRowDoubleClick = ({rowData, rowIndex, rowKey}) => {\r\n        if(rowData.isGroup) {\r\n            loadTable([...breadcrumb, rowData], { [expandParentKey]: rowKey });\r\n        } else {\r\n            props.requestDownloadFile(rowKey)\r\n        }\r\n        props.onRowDoubleClick && props.onRowDoubleClick({rowData, rowIndex, rowKey});\r\n    };\r\n\r\n    // Jump to folder\r\n    const _onClickBreadcrumb = (parentId, index) => {\r\n        loadTable(breadcrumb.slice(0, index), {[expandParentKey]: parentId})\r\n    };\r\n\r\n    // Up to folder\r\n    const _onClickBack = () => {\r\n        if(breadcrumb.length > 1) {\r\n            const newBreadcrumb = breadcrumb.slice(0, breadcrumb.length - 1);\r\n            // setBreadcrumb(newBreadcrumb);\r\n            // tableRef && tableRef.reloadData({ filter: { parentId: newBreadcrumb[newBreadcrumb.length - 1].id } });\r\n            loadTable(newBreadcrumb, { [expandParentKey]: newBreadcrumb[newBreadcrumb.length - 1][rowKey] })\r\n        }\r\n    };\r\n\r\n    // Delete folder OR file\r\n    const _onClickDelete = (event, _selectedRowKeys) => {\r\n        if(_selectedRowKeys && _selectedRowKeys.length > 0){\r\n            props.requestDeleteRow({data: {[rowKey]: _selectedRowKeys[0], deleted: true}})\r\n                .then((response) => {\r\n                    antNotification.success({message: 'Файл успешно удален'});\r\n                    tableRef && tableRef.reloadData({filter: tableFilter});\r\n                })\r\n                .catch(error => {\r\n                    notificationError(error, 'Ошибка удаления файла');\r\n                    tableRef && tableRef.reloadData({filter: tableFilter});\r\n                });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * TABLE FUNCs\r\n     */\r\n    const loadTable = (breadcrumb, filter) => {\r\n        setBreadcrumb(breadcrumb);\r\n        const newFilter = {...tableFilter, ...filter};\r\n        setTableFilter(newFilter);\r\n        tableRef && tableRef.reloadData({filter: newFilter});\r\n    };\r\n\r\n\r\n    /**\r\n     * MODAL FUNCs\r\n     */\r\n    const processBeforeSaveModal = (rawValues, type, element) => {\r\n        let values = {...rawValues};\r\n        if(type === 'add')\r\n            values[expandParentKey] = breadcrumb[breadcrumb.length - 1][rowKey];\r\n\r\n        if(element === 'Group')\r\n            values.extension = 'dir';\r\n        // console.log(\"FileManager values =>\", values);\r\n        return values;\r\n    };\r\n\r\n    const parentLoadHandler = (type, selectedRow, {params, data}) => {\r\n        let newData = {...data, [isGroupKey]: true};\r\n        if (type === 'edit') newData.owner = selectedRow && selectedRow[rowKey];\r\n        return props.requestLoadParent({ params, data: newData, });\r\n    };\r\n\r\n    // const _onChangeViewDeleted = (checked) => {\r\n    //     const newFilter = {...tableFilter, deleted: checked };//? undefined : checked};\r\n    //     setTableFilter(newFilter);\r\n    //     tableRef && tableRef.reloadData({filter: newFilter});\r\n    // };\r\n\r\n    // console.log(\"EditFolderModal\", EditFolderModal(props.requestSaveRow, processBeforeSaveForm));\r\n\r\n\r\n    /**\r\n     * UPLOAD FUNCs\r\n     */\r\n\r\n    const _uploadFile = (file) => {\r\n        // console.log('beforeUpload fileList => ', fileList);\r\n        notification(file, 'loading');\r\n        if (props.requestUploadFile) {\r\n            props.requestUploadFile({ file: file, [expandParentKey]: breadcrumb[breadcrumb.length - 1][rowKey] })\r\n                .then((response) => {\r\n                    notification(file, 'success');\r\n                    tableRef && tableRef.reloadData({ filter: tableFilter });\r\n                })\r\n                .catch(() => {\r\n                    notification(file, 'error');\r\n                    tableRef && tableRef.reloadData({ filter: tableFilter });\r\n                });\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const notification = (file, type) => {\r\n        const notifProps = {\r\n            key: file.uid,\r\n            duration: type === 'loading' ? 0 : 5,\r\n            icon: type === 'loading'\r\n                ? <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\r\n                : null,\r\n            message: <span>Загрузка файла: <Typography.Text code>{file.name}</Typography.Text></span>\r\n        };\r\n        switch (type) {\r\n            case 'loading':\r\n                antNotification.info(notifProps);\r\n                break;\r\n            case 'success':\r\n                antNotification.success(notifProps);\r\n                break;\r\n            case 'error':\r\n                antNotification.error(notifProps);\r\n                break;\r\n            case 'close':\r\n                antNotification.close(file.uid);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * RENDER PARAMS\r\n     */\r\n    const customColumnProps = [\r\n        {\r\n            name: 'dateCreate',\r\n            cellRenderer: ({cellData}) => toDDMMYYYYHHMMSS(cellData),\r\n        },\r\n        {\r\n            name: 'dateUpdate',\r\n            cellRenderer: ({cellData}) => toDDMMYYYYHHMMSS(cellData),\r\n        },\r\n        {\r\n            name: 'path',\r\n            cellRenderer: ({rowData}) =>\r\n                rowData[isGroupKey] ? null\r\n                    :\r\n                <Tooltip title=\"Скопировать путь к файлу\">\r\n                    <CopyOutlined onClick={() => copyTextToClipboard(props.pathDownloadFile(rowData[rowKey]))}/>\r\n                </Tooltip>,\r\n        },\r\n        {\r\n            name: 'name',\r\n            cellRenderer: ({rowData}) => {\r\n                const styleDiv = {display: 'flex', alignItems: 'center'};\r\n                let Icon;\r\n                let styleIcon = {marginRight: '10px', fontSize: '16px'};\r\n                switch (rowData.extension) {\r\n                    case 'dir':\r\n                        Icon = FolderFilled;\r\n                        styleIcon.color = '#3a88c9';\r\n                        break;\r\n                    case 'doc':\r\n                    case 'docm':\r\n                    case 'docx':\r\n                    case 'dot':\r\n                    case 'dotx':\r\n                        Icon = FileWordOutlined;\r\n                        styleIcon.color = '#185abc';\r\n                        break;\r\n                    case 'xlm':\r\n                    case 'xls':\r\n                    case 'xlsm':\r\n                    case 'xlt':\r\n                    case 'xltm':\r\n                    case 'xltx':\r\n                    case 'xlsx':\r\n                        Icon = FileExcelOutlined;\r\n                        styleIcon.color = '#1f7244';\r\n                        break;\r\n                    case 'png':\r\n                    case 'jpg':\r\n                    case 'jpeg':\r\n                    case 'tiff':\r\n                    case 'bmp':\r\n                    case 'ico':\r\n                    case 'gif':\r\n                    case 'svg':\r\n                        Icon = FileImageOutlined;\r\n                        break;\r\n                    case 'markdown':\r\n                    case 'md':\r\n                        Icon = FileMarkdownOutlined;\r\n                        styleIcon.color = '#175987';\r\n                        break;\r\n                    case 'pdf':\r\n                        Icon = FilePdfOutlined;\r\n                        styleIcon.color = '#bd1f07';\r\n                        break;\r\n                    case 'ppt':\r\n                        Icon = FilePptOutlined;\r\n                        styleIcon.color = '#be5239';\r\n                        break;\r\n                    case 'txt':\r\n                        Icon = FileTextOutlined;\r\n                        break;\r\n                    case 'zip':\r\n                        Icon = FileZipOutlined;\r\n                        break;\r\n                    default:\r\n                        Icon = FileOutlined;\r\n                }\r\n\r\n\r\n                return (\r\n                    <div style={styleDiv}>\r\n                        {/*{rowData.isGroup*/}\r\n                        {/*    ? <FolderFilled style={{ marginRight: '10px', color: '#3a88c9'}}/>*/}\r\n                        {/*    : <FileOutlined style={{ marginRight: '10px' }}/>*/}\r\n                        {/*}*/}\r\n                        <Icon style={styleIcon}/>\r\n                        {rowData.name}\r\n                    </div>\r\n                );\r\n            },\r\n        }\r\n    ];\r\n\r\n    const uploadProps = {\r\n        multiple: true,\r\n        showUploadList: false,\r\n        beforeUpload: _uploadFile\r\n    };\r\n\r\n    const uploadRender = () => {\r\n        return (\r\n            <Upload {...uploadProps}>\r\n                <Button icon={<PlusOutlined />}/>\r\n            </Upload>\r\n        )\r\n    };\r\n\r\n    const breadcrumbRender = () => {\r\n        return (\r\n            <span className={`${rtPrefix}-file-manager-breadcrumb ml-8`}>\r\n                {breadcrumb.map((item, index) =>\r\n                    <span\r\n                        key={item[rowKey]}\r\n                        // type=\"text\"\r\n                        className={`${rtPrefix}-file-manager-breadcrumb-btn`}\r\n                        onClick={() => _onClickBreadcrumb(item[rowKey], index + 1)}\r\n                    >\r\n                        <span>/</span><span>{item.name}</span>\r\n                    </span>\r\n                )}\r\n            </span>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <FormTable\r\n            {...props}\r\n            ref={_setTableRef}\r\n            type={'serverSide'}\r\n            componentType={'FilesTable'}\r\n            onRowDoubleClick={_onRowDoubleClick}\r\n            defaultFilter={tableFilter}\r\n            customColumnProps={customColumnProps}\r\n            commandPanelProps={{\r\n                ...props.commandPanelProps,\r\n                onClickDelete: _onClickDelete,\r\n                systemBtnProps: {\r\n                    add: {\r\n                        actionType: 'modal',\r\n                        tooltip: 'Загрузить файл(ы)',\r\n                        render: uploadRender\r\n                    },\r\n                    addGroup: {actionType: 'modal', tooltip: 'Создать папку'},\r\n                    edit: {actionType: ['modal', 'modal']},\r\n                    delete: {}\r\n                },\r\n                leftCustomSideElement: [\r\n                    {\r\n                        componentType: 'Item',\r\n                        child: {\r\n                            componentType: 'Button',\r\n                            icon: <RollbackOutlined />,\r\n                            label: 'Back',\r\n                            className: 'ml-4',\r\n                            disabled: (breadcrumb.length === 1),\r\n                            onClick: _onClickBack\r\n                        }\r\n                    },\r\n                    {\r\n                        componentType: 'Item',\r\n                        child: {\r\n                            componentType: 'Custom',\r\n                            render: breadcrumbRender\r\n                        }\r\n                    }\r\n                ],\r\n                // rightCustomSideElement: [\r\n                //     {\r\n                //         componentType: 'Item',\r\n                //         label: 'View deleted',\r\n                //         className: 'mb-0',\r\n                //         child: {\r\n                //             componentType: 'Switch',\r\n                //             checked: tableFilter.deleted,\r\n                //             onChange: _onChangeViewDeleted\r\n                //         }\r\n                //     },\r\n                // ]\r\n            }}\r\n            modals={[\r\n                AddFolderModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows),\r\n                EditFolderModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows),\r\n                EditFileModal(props.requestSaveRow, processBeforeSaveModal, parentLoadHandler, props.requestLoadRows)\r\n            ]}\r\n        />\r\n    );\r\n};\r\n\r\nFileManager.propTypes = {\r\n\r\n    /** Функция запроса для загрузки строк (данных) */\r\n    requestLoadRows: PropTypes.func,\r\n\r\n    /** Функция запроса на получение конфига для таблицы */\r\n    requestLoadConfig: PropTypes.func,\r\n};\r\n\r\nFileManager.defaultProps = {\r\n    rowKey: 'id',\r\n    isGroupKey: 'isGroup',\r\n    expandParentKey: 'parentId',\r\n};\r\n\r\nexport default FileManager;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport FormModal from \"../Form/FormModal\";\r\nimport { notification, Button} from \"antd\";\r\nimport { notificationError } from \"../../utils/baseUtils\";\r\nimport objectPath from \"object-path\";\r\nimport { setDataStore } from \"../../../redux/rtd.actions\";\r\n\r\nconst Modal = props => {\r\n\r\n    const {buttonProps, modalConfig, modalData, dispatchPath} = props;\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [_modalData, _setModalData] = useState({});\r\n    const [_buttonProps, setButtonProps] = useState({});\r\n\r\n    const subscribe = props.subscribe ? props.subscribe : {};\r\n\r\n    const setModalData = (value) => {\r\n        // console.log(\"setModalData: \", value);\r\n        _setModalData && _setModalData(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        _setModalData(modalData);\r\n    }, []);\r\n\r\n    /** Подписка на изменение props[subscribe.name] в сторе */\r\n    useEffect( () => {\r\n        if(subscribe.name) {\r\n            // console.log(\"Modal => subscribe: \", props[subscribe.name]);\r\n            subscribe.onChange && subscribe.onChange({value: props[subscribe.name], setModalData, setButtonProps});\r\n        }\r\n        // console.log(\"Change Props[2]: \", props.subscribeЗф);\r\n    }, [props[subscribe.name]]);\r\n\r\n    const _onOpenModal = () => {\r\n        // console.log(\"Modal => _modalData: \", _modalData);\r\n        setVisible(true)\r\n    }\r\n\r\n    const _onCloseModal = () => {\r\n        setVisible(false)\r\n    }\r\n\r\n    const _onSaveRow = ({type, row, requestSaveRow}) => {\r\n        dispatchPath && props.setDataStore && props.setDataStore(dispatchPath, row);\r\n\r\n        if (requestSaveRow\r\n            && ['addOnServer', 'editOnServer', 'addGroupOnServer', 'editGroupOnServer'].includes(type)\r\n        ) {\r\n            const method = (type === 'addOnServer' || type === 'addGroupOnServer') ? 'POST' : 'PUT';\r\n            // console.log(\"Modal Events => type: \", type, method, row, _modalData);\r\n            requestSaveRow({\r\n                method,\r\n                data: row,\r\n            })\r\n                .then(response => {\r\n                    notification.success({\r\n                        message: 'Сохранение прошло успешно'\r\n                    });\r\n                    _onCloseModal();\r\n                })\r\n                .catch(error => notificationError(error, 'Ошибка при сохранении'));\r\n        } else _onCloseModal();\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                type=\"primary\"\r\n                {...buttonProps}\r\n                {..._buttonProps}\r\n                onClick={_onOpenModal}\r\n            >{buttonProps && buttonProps.label}</Button>\r\n            <FormModal\r\n                modal={modalConfig}\r\n                selectedRow={_modalData}\r\n                visible={visible}\r\n                setVisible={_onCloseModal}\r\n                saveRow={_onSaveRow}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nModal.propTypes = {\r\n\r\n    /** Свойства [Button](https://ant.design/components/button/) из Ant Design\r\n     * Добавлено свойство `label` с типом `ReactNode` или `string` для формирования контента кнопки*/\r\n    buttonProps: PropTypes.object,\r\n\r\n    /** Объект модального окна. Стандартная конфигурация. */\r\n    modalConfig: PropTypes.object,\r\n\r\n    /** Данные для модального окна */\r\n    modalData: PropTypes.object,\r\n\r\n    /** Путь в сторе куда класть данных окна после закрытия */\r\n    dispatchPath: PropTypes.string,\r\n\r\n    /** Объект для подписки на изменения в STORE */\r\n    subscribe: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (store, ownProps) => {\r\n    const {subscribe} = ownProps;\r\n    if(subscribe){\r\n        const {name, path} = subscribe;\r\n        if(name && path)\r\n            return { [name]: objectPath.get(store, path) };\r\n    }\r\n    return {};\r\n};\r\nconst mapDispatchToProps = (dispatch) =>\r\n    bindActionCreators( { setDataStore: setDataStore, }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from '../Select/Select';\r\nimport {\r\n\tInput,\r\n\tInputNumber,\r\n\tForm as AntForm,\r\n\tButton,\r\n\tCheckbox,\r\n\tSwitch,\r\n\tDatePicker,\r\n\tRadio,\r\n    Divider,\r\n} from 'antd';\r\nimport { getObjectExcludedProps, getValueFromMultiSelect, getValueFromSingleSelect } from \"../../utils/baseUtils\";\r\nimport FormTable from './FormTable';\r\n// import Typography from './Typography';\r\nimport { withStore, DatePickerHOC, TypographyTitle, TypographyText, TypographyDate } from \"./HOCs\";\r\nimport FileManager from \"../FileManager/FileManager\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nconst excludeProps = ['child', 'componentType', 'field'];\r\nconst noAntItemTypes = ['Title', 'Text', 'Divider', 'Button', 'LocalTable', 'ServerTable', 'InfinityTable'];\r\n\r\nconst FormItem = (props) => {\r\n\r\n\tconst {child, field} = props;\r\n\tlet antFormItemProps = getObjectExcludedProps(props, excludeProps);\r\n\r\n\t// Если тип элемента Select -> добавить доп свойства к Form.Item\r\n    if (child && child.componentType && (child.componentType === 'SingleSelect' || child.componentType === 'MultiSelect')) {\r\n        antFormItemProps.valuePropName = 'defaultSelectedRowKeys';\r\n        antFormItemProps.getValueFromEvent = child.componentType === 'SingleSelect' ? getValueFromSingleSelect : getValueFromMultiSelect;\r\n        antFormItemProps.trigger = 'onChangeKeys';\r\n    } else if (child && child.componentType && child.componentType === 'SelectTable') {\r\n        // antFormItemProps.getValueFromEvent = getValueFromSelectTable;\r\n        // antFormItemProps.trigger = 'onRowClick';\r\n    }\r\n\r\n\t// console.log('FormItem props => ', props);\r\n\r\n\tconst getItem = () => {\r\n\t\tif (child) {\r\n\t\t    // const childProps = getObjectExcludedProps(child, ['componentType']);\r\n\t\t\tconst childProps = {...child};\r\n            // console.log('FormItem childProps => ', childProps);\r\n\t\t\tlet Component;\r\n\t\t\tlet placeholder;\r\n            switch (child.componentType) {\r\n\t\t\t\tcase 'Button':\r\n\t\t\t\t\tComponent = withStore(Button, antFormItemProps);\r\n\t\t\t\t\t// console.log('Props field => ', field);\r\n\t\t\t\t\tconst onClick = (e) => childProps.onClick && childProps.onClick(e, field);\r\n\t\t\t\t\treturn (<Component {...childProps} onClick={onClick}>{childProps && childProps.label}</Component>);\r\n\t\t\t\tcase 'Title':\r\n\t\t\t\t\tComponent = withStore(TypographyTitle, antFormItemProps);\r\n\t\t\t\t\treturn (<Component {...child} componentType={child.componentType}/>);\r\n\t\t\t\tcase 'Text':\r\n\t\t\t\t\tComponent = withStore(TypographyText, antFormItemProps);\r\n\t\t\t\t\treturn (<Component {...child} componentType/>);\r\n\t\t\t\tcase 'Divider':\r\n\t\t\t\t\tComponent = withStore(Divider, antFormItemProps);\r\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\r\n\t\t\t\tcase 'Checkbox':\r\n\t\t\t\t\tComponent = withStore(Checkbox, antFormItemProps);\r\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\r\n\t\t\t\tcase 'DatePicker':\r\n\t\t\t\t\tComponent = withStore(DatePickerHOC(DatePicker), antFormItemProps);\r\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Выберите дату';\r\n\t\t\t\t\tconst style = {width: '100%', ...(childProps && childProps.style)};\r\n\t\t\t\t\treturn (<Component{...childProps} style={style} placeholder={placeholder}/>);\r\n\t\t\t\tcase 'DateText':\r\n\t\t\t\t\tComponent = withStore(TypographyDate, antFormItemProps);\r\n\t\t\t\t\treturn (<Component {...child} />);\r\n\t\t\t\tcase 'Input':\r\n\t\t\t\t\tComponent = withStore(Input, antFormItemProps);\r\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите значение';\r\n\t\t\t\t\treturn (<Component {...childProps} placeholder={placeholder} />);\r\n\t\t\t\tcase 'TextArea':\r\n\t\t\t\t\tComponent = withStore(Input.TextArea, antFormItemProps);\r\n\t\t\t\t\treturn (<Component {...childProps} />);\r\n\t\t\t\tcase 'Password':\r\n\t\t\t\t\tComponent = withStore(Input.Password, antFormItemProps);\r\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите пароль';\r\n\t\t\t\t\treturn (<Component {...childProps} placeholder={placeholder}/>);\r\n\t\t\t\tcase 'InputNumber':\r\n\t\t\t\t\tComponent = withStore(InputNumber, antFormItemProps);\r\n\t\t\t\t\tplaceholder = childProps && childProps.placeholder ? childProps.placeholder : 'Введите значение';\r\n\t\t\t\t\treturn (<Component {...childProps} style={{width: '100%'}} placeholder={placeholder}/>);\r\n\t\t\t\tcase 'Radio':\r\n\t\t\t\t\tComponent = withStore(Radio, antFormItemProps);\r\n\t\t\t\t\treturn <Component {...childProps}>{childProps && childProps.label}</Component>;\r\n\t\t\t\tcase 'RadioButton':\r\n\t\t\t\t\tComponent = withStore(Radio.Button, antFormItemProps);\r\n\t\t\t\t\treturn (<Component {...childProps}>{childProps && childProps.label}</Component>);\r\n\t\t\t\tcase 'Switch':\r\n\t\t\t\t\tComponent = withStore(Switch, antFormItemProps);\r\n\t\t\t\t\treturn <Component {...childProps} />;\r\n                case \"RadioGroup\":\r\n                    Component = withStore(Radio.Group, antFormItemProps);\r\n                    return (<Component {...childProps} />);\r\n\t\t\t\tcase 'SingleSelect':\r\n                case 'MultiSelect':\r\n\t\t\t\t\treturn <Select {...childProps} type={child.componentType} name={antFormItemProps.name}/>;\r\n\t\t\t\t\t//'infinity', 'serverSide', 'localSide'\r\n                case 'InfinityTable':\r\n                    childProps.type = 'infinity';\r\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\r\n                case 'ServerTable':\r\n                    childProps.type = 'serverSide';\r\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\r\n                case 'LocalTable':\r\n                    childProps.type = 'localSide';\r\n                    return <FormTable {...childProps} name={props.name} componentType={child.componentType}/> ;\r\n                case 'SelectTable':\r\n\t\t\t\t\tchildProps.type = 'localSide';\r\n\t\t\t\t\treturn <FormTable {...childProps} name={props.name} componentType={child.componentType} /> ;\r\n\t\t\t\tcase 'FileManager':\r\n\t\t\t\t\treturn <FileManager {...childProps} name={props.name} />;\r\n\t\t\t\tcase 'Modal':\r\n\t\t\t\t\treturn <Modal {...childProps} name={props.name} />;\r\n\t\t\t\tcase 'Custom':\r\n\t\t\t\t\tComponent = withStore(child.render, antFormItemProps);\r\n\t\t\t\t\treturn <Component {...childProps}/>;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n    if(!antFormItemProps.label)\r\n        return <AntForm.Item {...antFormItemProps} noStyle>{getItem()}</AntForm.Item>;\r\n    else\r\n        return <AntForm.Item {...antFormItemProps}>{getItem()}</AntForm.Item>;\r\n};\r\n\r\nFormItem.propTypes = {\r\n\tchild: PropTypes.object.isRequired\r\n};\r\n\r\nexport default FormItem;\r\n","import React from 'react';\r\nimport {rtPrefix} from '../../utils/variables';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Layout = props => {\r\n\r\n    let itemProps = {};\r\n    Object.keys(props).forEach((key) =>\r\n        key !== 'children' ? (itemProps[key] = props[key]) : null\r\n    );\r\n\r\n    const getCls = () => {\r\n        let cls = [`${rtPrefix}-layout`];\r\n        itemProps.className && cls.push(itemProps.className);\r\n        return cls.join(' ');\r\n    };\r\n\r\n    return (\r\n        <div {...itemProps} className={getCls()}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nLayout.propTypes = {\r\n    /** Строка класса */\r\n    className: PropTypes.string,\r\n\r\n    /** Объект стиля */\r\n    style: PropTypes.object,\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FormItem from \"./FormItem\";\r\nimport Layout from \"../Layout/Layout\";\r\nimport { Row, Col, Tabs, Radio, Form as AntForm, Input, Space } from \"antd\";\r\nimport { getObjectExcludedProps } from \"../../utils/baseUtils\";\r\n\r\nconst excludeProps = [\"children\", \"componentType\"];\r\n\r\nconst FormItems = (props) => {\r\n    const { items } = props;\r\n\r\n    // console.log('FormItems props => ', props);\r\n\r\n    const getItems = (data, antFormListParams) => {\r\n\r\n        return (data && data.map((item, index) => {\r\n            let itemProps = getObjectExcludedProps(item, excludeProps);\r\n            // console.log('FormItems index => ', index);\r\n\r\n            switch (item.componentType) {\r\n                case \"Row\":\r\n                    return (\r\n                        <Row key={index} {...itemProps}>\r\n                            {item.children &&\r\n                            item.children.length > 0 &&\r\n                            getItems(item.children, antFormListParams)}\r\n                        </Row>\r\n                    );\r\n                case \"Col\":\r\n                    return (\r\n                        <Col key={index} {...itemProps}>\r\n                            {item.children &&\r\n                            item.children.length > 0 &&\r\n                            getItems(item.children, antFormListParams)}\r\n                        </Col>\r\n                    );\r\n                case \"Layout\":\r\n                    return (\r\n                        <Layout key={index} {...itemProps}>\r\n                            {item.children &&\r\n                            item.children.length > 0 &&\r\n                            getItems(item.children, antFormListParams)}\r\n                        </Layout>\r\n                    );\r\n                case \"Tabs\":\r\n                    return (\r\n                        <Tabs key={index} {...itemProps}>\r\n                            {item.children &&\r\n                            item.children.length > 0 &&\r\n                            getItems(item.children, antFormListParams)}\r\n                        </Tabs>\r\n                    );\r\n                case \"TabPane\":\r\n                    return (\r\n                        <Tabs.TabPane key={index} {...itemProps}>\r\n                            {item.children &&\r\n                            item.children.length > 0 &&\r\n                            getItems(item.children, antFormListParams)}\r\n                        </Tabs.TabPane>\r\n                    );\r\n                case \"RadioGroup\":\r\n                    return (\r\n                        <Radio.Group key={index} {...itemProps}>\r\n                            {item.children &&\r\n                            item.children.length > 0 &&\r\n                            getItems(item.children, antFormListParams)}\r\n                        </Radio.Group>\r\n                    );\r\n                case \"Item\":\r\n                    let _item = { ...item };\r\n                    let _key = index;\r\n                    if (antFormListParams && antFormListParams.field) {\r\n                        if (_item.name) {\r\n                            if (Array.isArray(_item.name)) {\r\n                                _item.name = [antFormListParams.field.name, ..._item.name];\r\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\r\n                            } else {\r\n                                _item.name = [antFormListParams.field.name, _item.name];\r\n                                _item.fieldKey = [antFormListParams.field.name, ..._item.name];\r\n                            }\r\n                        }\r\n                    }\r\n                    // console.log('_item ', _item.name);\r\n                    return <FormItem key={`${_key}`} {..._item} field={{ ...antFormListParams }}/>;\r\n                case \"ListItems\":\r\n                    return (\r\n                        <AntForm.List key={index} {...itemProps}>\r\n                            {(fields, operation) => {\r\n                                const param = { fields: [...fields], operation: { ...operation } };\r\n                                return getItems(item.children, param);\r\n                            }}\r\n                        </AntForm.List>\r\n                    );\r\n                case \"ListItem\":\r\n                    // console.log('antFormListParams => ', antFormListParams);\r\n                    return (\r\n                        <div key={index}>\r\n                            {antFormListParams && antFormListParams.fields && antFormListParams.fields.map((field, fIndex) => {\r\n                                // console.log('index field.key', index, field);\r\n                                const param = { field: { ...field }, ...antFormListParams };\r\n                                return <div key={field.key}>{getItems(item.children, param)} </div>;\r\n                            })}\r\n                        </div>\r\n                    );\r\n\r\n\r\n                default:\r\n                    return null;\r\n            }\r\n        })) || null;\r\n    };\r\n\r\n    return getItems(items);\r\n};\r\n\r\nFormItems.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};\r\n\r\nexport default FormItems;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {noop} from '../../utils/baseUtils';\r\nimport {rtPrefix} from '../../utils/variables';\r\nimport {Input, Tooltip, Popconfirm, Modal, Button} from 'antd';\r\nimport {\r\n\tPlusOutlined,\r\n\tCopyOutlined,\r\n\tFolderAddOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tArrowUpOutlined,\r\n\tArrowDownOutlined,\r\n\tSettingOutlined,\r\n\tFilterOutlined,\r\n\tExclamationCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport FormItems from \"../Form/FormItems\";\r\nconst {confirm} = Modal;\r\n\r\nconst CommandPanel = (props) => {\r\n\tconst {\r\n\t\tborderStyle,\r\n\t\tdefaultValueSearch,\r\n\t\tdeleteConfirm,\r\n\t\tdeleteConfirmType,\r\n\t\tdeleteConfirmTitle,\r\n\t\tdeleteConfirmDescription,\r\n\t\tonClickAdd,\r\n\t\tonClickAddAsCopy,\r\n\t\tonClickAddGroup,\r\n\t\tonClickDelete,\r\n\t\tonClickEdit,\r\n\t\tonClickUp,\r\n\t\tonClickDown,\r\n\t\tonSearch,\r\n\t\tshowElements,\r\n        systemBtnProps,\r\n\t\tdisabledElements,\r\n\t\tleftCustomSideElement,\r\n\t\tcenterCustomSideElement,\r\n\t\trightCustomSideElement,\r\n\t} = props;\r\n\r\n    const defaultSystemBtnProps = {\r\n        add: {\r\n            tooltip: 'Добавить',\r\n            onClick: onClickAdd,\r\n            icon: <PlusOutlined />\r\n        },\r\n        addAsCopy: {\r\n            tooltip: 'Добавить копированием',\r\n            onClick: onClickAddAsCopy,\r\n            icon: <CopyOutlined />\r\n        },\r\n        addGroup: {\r\n            tooltip: 'Добавить группу',\r\n            onClick: onClickAddGroup,\r\n            icon: <FolderAddOutlined />\r\n        },\r\n        edit: {\r\n            tooltip: 'Изменить',\r\n            onClick: onClickEdit,\r\n            icon: <EditOutlined />\r\n        },\r\n        delete: {\r\n            tooltip: 'Удалить',\r\n            icon: <DeleteOutlined />\r\n        },\r\n        up: {\r\n            tooltip: 'Переместить вверх',\r\n            onClick: onClickUp,\r\n            icon: <ArrowUpOutlined />\r\n        },\r\n        down: {\r\n            tooltip: 'Переместить вниз',\r\n            onClick: onClickDown,\r\n            icon: <ArrowDownOutlined />\r\n        },\r\n\t\tsearch: {\r\n\t\t\tplaceholder: 'Поиск',\r\n\t\t\tonSearch: onSearch,\r\n\t\t},\r\n        settings: {\r\n            tooltip: 'Настройки таблицы',\r\n            tooltipPlacement: 'topRight',\r\n            onClick: () => {},\r\n            icon: <SettingOutlined />\r\n        },\r\n        filter: {\r\n            tooltip: 'Настройки фильтров',\r\n            tooltipPlacement: 'topRight',\r\n            onClick: () => {},\r\n            icon: <FilterOutlined />\r\n        }\r\n    };\r\n\r\n\tconst _onClickDelete = (event) => {\r\n\t\tif (deleteConfirmType === 'Modal') {\r\n\t\t\tdeleteButtonModalConfirm();\r\n\t\t} else {\r\n\t\t\tonClickDelete(event);\r\n\t\t}\r\n\t};\r\n\r\n\tconst deleteButtonPopupConfirm = () => {\r\n\t\treturn (\r\n\t\t\t<Popconfirm\r\n\t\t\t\tplacement='top'\r\n\t\t\t\ttitle={deleteConfirmDescription}\r\n\t\t\t\tonConfirm={onClickDelete}\r\n\t\t\t\tokText='Да'\r\n\t\t\t\tcancelText='Нет'\r\n\t\t\t>\r\n\t\t\t\t{renderDeleteBtn(false)}\r\n\t\t\t</Popconfirm>\r\n\t\t);\r\n\t};\r\n\r\n    const deleteButtonModalConfirm = () => {\r\n\t\tconfirm({\r\n\t\t\ttitle: deleteConfirmTitle,\r\n\t\t\ticon: <ExclamationCircleOutlined />,\r\n\t\t\tcontent: deleteConfirmDescription,\r\n\t\t\tcentered: true,\r\n\t\t\tokText: 'Ок',\r\n\t\t\tcancelText: 'Отмена',\r\n\t\t\tonOk() {\r\n\t\t\t\tonClickDelete();\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n    const renderDeleteBtn = (withOnClick) => {\r\n        const genProps = {...defaultSystemBtnProps['all'], ...systemBtnProps['all']};\r\n        const btnProps = {...defaultSystemBtnProps['delete'], ...systemBtnProps['delete']};\r\n\r\n        return (\r\n            <Tooltip title={btnProps.tooltip}>\r\n                <Button\r\n                    {...genProps}\r\n                    className={`${rtPrefix}-btn`}\r\n                    icon={btnProps.icon}\r\n                    onClick={withOnClick ? _onClickDelete : null}\r\n                    disabled={disabledElements.includes('delete')}\r\n                />\r\n            </Tooltip>\r\n        );\r\n    };\r\n\r\n    const renderBtn = (type) => {\r\n        const genProps = {...defaultSystemBtnProps['all'], ...systemBtnProps['all']};\r\n        const btnProps = {...defaultSystemBtnProps[type], ...systemBtnProps[type]};\r\n\r\n        if(showElements.includes(type)) {\r\n            if(btnProps.render)\r\n                return btnProps.render({\r\n                    disabled: disabledElements.includes(type),\r\n                    onClick: btnProps.onClick,\r\n\t\t\t\t\tonSearch: btnProps.onSearch\r\n\t\t\t\t});\r\n             else\r\n             \tif (type === 'search')\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Input.Search\r\n\t\t\t\t\t\t\tdisabled={disabledElements.includes(type)}\r\n\t\t\t\t\t\t\tdefaultValue={defaultValueSearch}\r\n\t\t\t\t\t\t\tplaceholder={btnProps.placeholder}\r\n\t\t\t\t\t\t\tonSearch={btnProps.onSearch}\r\n\t\t\t\t\t\t\tclassName={'search'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\telse\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Tooltip title={btnProps.tooltip} placement={btnProps.tooltipPlacement ? btnProps.tooltipPlacement : 'top'}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t{...genProps}\r\n\t\t\t\t\t\t\t\tclassName={`${rtPrefix}-btn`}\r\n\t\t\t\t\t\t\t\ticon={btnProps.icon}\r\n\t\t\t\t\t\t\t\tonClick={btnProps.onClick}\r\n\t\t\t\t\t\t\t\tdisabled={disabledElements.includes(type)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t)\r\n        }\r\n        else\r\n            return null\r\n    };\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{showElements.length ||\r\n\t\t\tleftCustomSideElement ||\r\n\t\t\tcenterCustomSideElement ||\r\n\t\t\trightCustomSideElement ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`${rtPrefix}-command-panel border-${borderStyle}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className={'left-system-side'}>\r\n                        {renderBtn('add')}\r\n                        {renderBtn('addAsCopy')}\r\n                        {renderBtn('addGroup')}\r\n                        {renderBtn('edit')}\r\n\r\n\t\t\t\t\t\t{showElements.includes('delete')\r\n\t\t\t\t\t\t\t? deleteConfirm\r\n\t\t\t\t\t\t\t\t? deleteConfirmType === 'Popup'\r\n\t\t\t\t\t\t\t\t\t? deleteButtonPopupConfirm()\r\n\t\t\t\t\t\t\t\t\t: renderDeleteBtn(true)\r\n\t\t\t\t\t\t\t\t: renderDeleteBtn(true)\r\n\t\t\t\t\t\t\t: null}\r\n\r\n                        {renderBtn('up')}\r\n                        {renderBtn('down')}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={'left-custom-side'}>\r\n\t\t\t\t\t\t{leftCustomSideElement ? <FormItems items={leftCustomSideElement} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={'center-custom-side'}>\r\n\t\t\t\t\t\t{centerCustomSideElement ? <FormItems items={centerCustomSideElement} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={'right-custom-side'}>\r\n\t\t\t\t\t\t{rightCustomSideElement ? <FormItems items={rightCustomSideElement} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={'right-system-side'}>\r\n\t\t\t\t\t\t{renderBtn('search')}\r\n                        {renderBtn('settings')}\r\n                        {renderBtn('filter')}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t) : null}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nCommandPanel.propTypes = {\r\n\t/** Центральный кастомный элемент командной панели */\r\n\tcenterCustomSideElement: PropTypes.arrayOf(PropTypes.object), // PropTypes.element,\r\n\r\n\t/** Тип бордера панели (по умолчанию 'bottom')\r\n\t * ['all', 'none', 'top', 'left', 'bottom', 'right', 'top-bottom', 'left-right'] */\r\n\tborderStyle: PropTypes.oneOf([\r\n\t\t'all',\r\n\t\t'none',\r\n\t\t'top',\r\n\t\t'left',\r\n\t\t'bottom',\r\n\t\t'right',\r\n\t\t'top-bottom',\r\n\t\t'left-right',\r\n\t]),\r\n\r\n\t/** Значение по умолчанию для строки поиска */\r\n\tdefaultValueSearch: PropTypes.string,\r\n\r\n\t/** Нужно ли делать подтверждение на кнопке удалить */\r\n\tdeleteConfirm: PropTypes.bool,\r\n\r\n\t/** Тип подтверждения удаления 'Popup' / 'Modal' */\r\n\tdeleteConfirmType: PropTypes.oneOf(['Popup', 'Modal']),\r\n\r\n\t/** Текст подтверждения на удаление элемента */\r\n\tdeleteConfirmTitle: PropTypes.string,\r\n\r\n\t/** Текст подтверждения на удаление элемента */\r\n\tdeleteConfirmDescription: PropTypes.string,\r\n\r\n\t/** Массив элементов командной панели для блокировки\r\n     ['add', 'addAsCopy', 'addGroup', 'delete', 'edit', 'up', 'down', 'search', 'settings', 'filter'] */\r\n\tdisabledElements: PropTypes.arrayOf(PropTypes.string),\r\n\r\n\t/** Левый кастомный элемент командной панели */\r\n\tleftCustomSideElement: PropTypes.arrayOf(PropTypes.object),\r\n\r\n\t/** Событие при нажатии на кнопку \"Добавить\" */\r\n\tonClickAdd: PropTypes.func,\r\n\r\n\t/** Событие при нажатии на кнопку \"Добавить копированием\" */\r\n\tonClickAddAsCopy: PropTypes.func,\r\n\r\n\t/** Событие при нажатии на кнопку \"Добавить группу\" */\r\n\tonClickAddGroup: PropTypes.func,\r\n\r\n\t/** Событие при нажатии на кнопку \"Удалить\" */\r\n\tonClickDelete: PropTypes.func,\r\n\r\n\t/** Событие при нажатии на кнопку \"Переместить вниз\" */\r\n\tonClickDown: PropTypes.func,\r\n\r\n\t/** Событие при нажатии на кнопку \"Изменить\" */\r\n\tonClickEdit: PropTypes.func,\r\n\r\n\t/** Событие при нажатии на кнопку \"Переместить вверх\" */\r\n\tonClickUp: PropTypes.func,\r\n\r\n\t/** Событие при поиске */\r\n\tonSearch: PropTypes.func,\r\n\r\n\t/** Правый кастомный элемент командной панели */\r\n\trightCustomSideElement: PropTypes.arrayOf(PropTypes.object),\r\n\r\n\t/** Массив элементов командной панели, которые надо отобразить\r\n     ['add', 'addAsCopy', 'addGroup', 'delete', 'edit', 'up', 'down', 'search', 'settings', 'filter'] */\r\n\tshowElements: PropTypes.arrayOf(PropTypes.string),\r\n\r\n    /** Объект кастомизации системных кнопок\r\n     { [btnType]: { tooltip: <String>, icon: <Icon />, render: ({disabled, onClick}) => <Component /> } } */\r\n    systemBtnProps: PropTypes.object\r\n};\r\n\r\nCommandPanel.defaultProps = {\r\n\tcenterCustomSideElement: null,\r\n\tborderStyle: 'bottom',\r\n\tdefaultValueSearch: undefined,\r\n\tdeleteConfirm: true,\r\n\tdeleteConfirmType: 'Modal',\r\n\tdeleteConfirmTitle: 'Подтвержение удаления',\r\n\tdeleteConfirmDescription: 'Вы действительно хотите удалить?',\r\n\tdisabledElements: [],\r\n\tleftCustomSideElement: null,\r\n\tonClickAdd: noop,\r\n\tonClickAddAsCopy: noop,\r\n\tonClickAddGroup: noop,\r\n\tonClickDelete: noop,\r\n\tonClickEdit: noop,\r\n\tonClickUp: noop,\r\n\tonClickDown: noop,\r\n\tonSearch: noop,\r\n\trightCustomSideElement: null,\r\n\tshowElements: [],\r\n    systemBtnProps: {},\r\n};\r\nexport default CommandPanel;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '../Table/Table';\r\n\r\n/**\r\n * ### Список / Дерево.\r\n */\r\nconst List = (props) => {\r\n\tconst {rowKey, rowRender, title} = props;\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\tkey: rowKey,\r\n\t\t\ttitle: title,\r\n\t\t\tdataKey: rowKey,\r\n\t\t\twidth: 500,\r\n\t\t\tcellRenderer:\r\n\t\t\t\ttypeof rowRender === 'function'\r\n\t\t\t\t\t? rowRender\r\n\t\t\t\t\t: ({rowData}) => <div>{rowData[rowRender]}</div>,\r\n\t\t},\r\n\t];\r\n\treturn <Table {...props} columns={columns} headerHeight={title ? 30 : 0} />;\r\n};\r\n\r\nList.propTypes = {\r\n\t/** Поле для уникальной идентификации строки */\r\n\trowKey: PropTypes.string,\r\n\r\n\t/** Строка или функция для отображения элементов списка\r\n\t * Строка - имя поля\r\n\t * Функция - рендер строк. Параметры v\r\n\t * { cellData, columns, column, columnIndex, rowData, rowIndex, container, isScrolling }) */\r\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n\r\n\t/** Заголовок списка (по умолчанию скрыт)*/\r\n\ttitle: PropTypes.string,\r\n};\r\n\r\nList.defaultProps = {\r\n\trowKey: 'id',\r\n\trowRender: 'id',\r\n\ttitle: undefined,\r\n};\r\n\r\nexport default List;\r\n","/** deprecated */\r\nimport CommandPanel from './CommandPanel/CommandPanel';\r\nimport FilterPanel from './FilterPanel/FilterPanel';\r\nimport Table from './Table/Table';\r\nimport AdvancedTable from './AdvancedTable/AdvancedTable';\r\nimport List from './List/List';\r\nimport Select from './Select/Select';\r\nimport SingleDate from './SingleDate/SingleDate';\r\nimport DateRange from './DateRange/DateRange';\r\nimport Form from './Form/Form';\r\nimport FileManager from './FileManager/FileManager';\r\nimport Modal from './Modal/Modal';\r\n\r\n// export {default as CommandPanel} from './CommandPanel/CommandPanel';\r\n// export {default as FilterPanel} from './FilterPanel/FilterPanel';\r\n// export {default as Table} from './Table/Table';\r\n// export {default as AdvancedTable} from './AdvancedTable/AdvancedTable';\r\n// export {default as List} from './List/List';\r\n// export {default as Select} from './Select/Select';\r\n// export {default as SingleDate} from './SingleDate/SingleDate';\r\n// export {default as DateRange} from './DateRange/DateRange';\r\n//\r\n// // Компоненты формы\r\n// export {default as Form} from './Form/Form';\r\n// export {default as FileManager} from './FileManager/FileManager';\r\n// export {default as Modal} from './Modal/Modal';\r\n\r\n\r\nexport const deprecated = {\r\n    CommandPanel,\r\n    FilterPanel,\r\n    Table,\r\n    AdvancedTable,\r\n    List,\r\n    Select,\r\n    SingleDate,\r\n    DateRange,\r\n    Form,\r\n    FileManager,\r\n    Modal,\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport objectPath from \"object-path\";\r\nimport { dispatchToStore, getObjectExcludedProps, useMounted } from \"../utils/baseUtils\";\r\nimport { getExtraData, mapDispatchToProps, mapStateToProps } from \"../utils/storeUtils\";\r\n\r\nconst defaultProps = {\r\n    trigger: 'onChange',\r\n    valuePropName: 'value',\r\n};\r\n\r\nexport const withStore = (Component) => {\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)( (props) => {\r\n\r\n        const {componentType, setDataStore, dispatchExtraData} = props;\r\n\r\n        // Объект подписки на стор\r\n        const subscribe = props.subscribe ? props.subscribe : [];\r\n\r\n        // Объект публикации в стор\r\n        const dispatch = props.dispatch ? props.dispatch : {};\r\n\r\n        const [subscribeProps, setSubscribeProps] = useState({});\r\n\r\n        const {trigger, valuePropName} = { ...defaultProps, ...props.itemProps };\r\n\r\n        const excludeProps = ['itemProps', 'componentType', 'setDataStore', 'subscribe', ...subscribe.map(item => item.name), 'dispatch', 'dispatchExtraData']; // ...subscribe.map(item => item.name),\r\n\r\n        const isMounted = useMounted()\r\n\r\n        /** Подписка на изменение props[subscribe.name] в сторе */\r\n        subscribe.map(item => {\r\n            return useEffect( () => {\r\n                // console.log(\"withStore subscribe: \", item.name, item.withMount);\r\n                if((item.withMount || isMounted) && item.name) {\r\n                    // console.log(\"storeHOC => subscribe: \", props[subscribe.name]);\r\n                    item.onChange && item.onChange({\r\n                        value: props[item.name],\r\n                        extraData: getExtraData(item, props), //extraData,\r\n                        setSubscribeProps: setSubscribePropsHandler});\r\n                }\r\n                // console.log(\"Change Props[2]: \", props.subscribeЗф);\r\n            }, [props[item.name]]);\r\n        })\r\n\r\n        /** Подписка на изменение props и отправка данных в стор */\r\n        useEffect(() => {\r\n            let _value = props[valuePropName];\r\n            // console.log(`storeHOC => `, dispatch.path, _value, valuePropName);\r\n            // if (_value === null || _value === undefined || (typeof _value === 'string' && _value.trim() === ''))\r\n            //     _value = undefined;\r\n            if (componentType !== 'Button' && componentType !== 'Search')\r\n                dispatchToStore({ dispatch, setDataStore, value: _value });\r\n        }, [props[valuePropName]]);\r\n\r\n        /** Подписка на изменение subscribeProps.value и отправка данных в props[trigger] (как правило это onChange) */\r\n        // useEffect(() => {\r\n        //     if(isMounted) {\r\n        //         console.log('onChange subscribeProps.value => ', subscribeProps.value);\r\n        //         props[trigger] && props[trigger](subscribeProps.value);\r\n        //     }\r\n        // }, [subscribeProps.value]);\r\n\r\n        const setSubscribePropsHandler = (_subscribeProps) => {\r\n            // console.log('onChange setSubscribePropsHandler => ', dispatch.path, _subscribeProps);\r\n            setSubscribeProps((prevState) => ({ ...prevState, ..._subscribeProps }));\r\n            if(_subscribeProps && objectPath.has(_subscribeProps, valuePropName)) {\r\n                const value = _subscribeProps[valuePropName]\r\n                // console.log('setSubscribePropsHandler => ', componentType, value);\r\n                if(componentType === 'Search')\r\n                    _searchDispatchToStore(value)\r\n\r\n                props[trigger] && props[trigger](value);\r\n            }\r\n        }\r\n\r\n        const onChange = (...args) => {\r\n            // console.log('withStore [trigger] ', dispatch.path, props[trigger], args)\r\n            if(componentType === 'Button')\r\n                dispatchToStore({dispatch, setDataStore, value: args[0], extraData: dispatchExtraData});\r\n\r\n            if(subscribeProps && objectPath.has(subscribeProps, valuePropName)) {\r\n                const _subscribeProps = {...subscribeProps}\r\n                objectPath.del(_subscribeProps, valuePropName);\r\n                // console.log('onClear subscribeProps[valuePropName] => ', _subscribeProps);\r\n                setSubscribeProps(_subscribeProps)\r\n            }\r\n\r\n            props[trigger] && props[trigger](...args);\r\n        };\r\n\r\n        const _onSearch = (searchLine, e) => {\r\n            e.preventDefault();\r\n            // console.log(\"_onSearch\", searchLine);\r\n            _searchDispatchToStore(searchLine)\r\n        };\r\n        const _searchDispatchToStore = (searchLine) =>\r\n          dispatchToStore({dispatch, setDataStore, value: searchLine, extraData: dispatchExtraData});\r\n\r\n        const childProps = getObjectExcludedProps(props, excludeProps);\r\n        const onSearchProps = (componentType === 'Search') ? {onSearch: _onSearch} : {}\r\n        // console.log(`storeHOC Component => `, componentType, Component);\r\n        return (\r\n            <Component\r\n                {...childProps}\r\n                {...subscribeProps}\r\n                {...{[trigger]: onChange}}\r\n                {...onSearchProps}\r\n            >{props.children}</Component>\r\n        )\r\n    })\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getObjectExcludedProps } from \"../utils/baseUtils\";\r\nimport {renderClassicByName} from \"../core/renders\";\r\nconst excludeProps = ['child', 'componentType', 'field'];\r\nconst FormItem = (props) => {\r\n\r\n\tconst {child, field} = props;\r\n\tlet antFormItemProps = getObjectExcludedProps(props, excludeProps);\r\n\tif (child)\r\n\t\treturn renderClassicByName(child.componentType)\r\n\t\t\t({itemProps: {...antFormItemProps}, ...child, field})\r\n\telse\r\n\t\treturn null;\r\n};\r\n\r\nFormItem.propTypes = {\r\n\tchild: PropTypes.object.isRequired\r\n};\r\n\r\nexport default FormItem;\r\n","import React from \"react\";\r\nimport FormItem from \"./FormItem\";\r\nimport { Form as AntForm } from \"antd\";\r\nimport { renderDeclarativeByName } from \"../core/renders\";\r\n\r\nconst FormItems = (props) => {\r\n    const { items } = props;\r\n    // console.log('FormItems props => ', props);\r\n    const getItems = (data, formListProps) => {\r\n        return (data && data.map((item, index) => {\r\n            const {componentType, children, ...itemProps} = item;\r\n            // console.log('FormItems index => ', index);\r\n            switch (componentType) {\r\n                case \"Item\":\r\n                    let _item = { ...item };\r\n                    let _key = index;\r\n                    if (formListProps && formListProps.field) {\r\n                        if (_item.name) {\r\n                            if (Array.isArray(_item.name)) {\r\n                                _item.name = [formListProps.field.name, ..._item.name];\r\n                                _item.fieldKey = [formListProps.field.name, ..._item.name];\r\n                            } else {\r\n                                _item.name = [formListProps.field.name, _item.name];\r\n                                _item.fieldKey = [formListProps.field.name, ..._item.name];\r\n                            }\r\n                        }\r\n                    }\r\n                    // console.log('_item ', _item.name);\r\n                    return <FormItem key={`${_key}`} {..._item} field={{ ...formListProps }}/>;\r\n                case \"ListItems\":\r\n                    return (\r\n                        <AntForm.List key={index} {...itemProps}>\r\n                            {(fields, operation) => {\r\n                                const param = { fields: [...fields], operation: { ...operation } };\r\n                                return getItems(children, param);\r\n                            }}\r\n                        </AntForm.List>\r\n                    );\r\n                case \"ListItem\":\r\n                    // console.log('formListProps => ', formListProps);\r\n                    return (\r\n                        <div key={index}>\r\n                            {formListProps && formListProps.fields && formListProps.fields.map((field, fIndex) => {\r\n                                // console.log('index field.key', index, field);\r\n                                const param = { field: { ...field }, ...formListProps };\r\n                                return <div key={field.key}>{getItems(children, param)} </div>;\r\n                            })}\r\n                        </div>\r\n                    );\r\n                default:\r\n                    return renderDeclarativeByName(componentType)({ key: index, ...itemProps })(getItems(children, formListProps))\r\n            }\r\n        })) || null;\r\n    };\r\n\r\n    return getItems(items);\r\n};\r\n\r\nexport default FormItems;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport FormItems from \"./FormItems\";\r\nimport { Form as AntForm, notification } from \"antd\";\r\nimport { dispatchToStore, getObjectExcludedProps, noop, notificationError } from \"../utils/baseUtils\";\r\nimport { rtPrefix } from \"../utils/variables\";\r\nimport { setDataStore } from \"../../redux/rtd.actions\";\r\n\r\nconst excludeProps = [\r\n    \"dispatch\",\r\n    \"setDataStore\",\r\n    \"componentType\",\r\n    \"noPadding\",\r\n    \"scrollable\",\r\n    \"header\",\r\n    \"body\",\r\n    \"footer\",\r\n    \"loadInitData\",\r\n    \"requestSaveForm\",\r\n    \"methodSaveForm\",\r\n    \"processBeforeSaveForm\"\r\n];\r\n\r\n/** Компонент заголовка формы */\r\nexport const FormHeader = (props) =>\r\n    <div {...props} className={`${rtPrefix}-form-header ${props.className || ''}`}>{props.children}</div>\r\n\r\n/** Компонент тела формы */\r\nexport const FormBody = (props) => {\r\n    const {noPadding, scrollable, ...rest} = props;\r\n    let cls = [`${rtPrefix}-form-body`];\r\n    noPadding && cls.push(`${rtPrefix}-form-body-no-padding`);\r\n    scrollable && cls.push(`${rtPrefix}-form-body-scrollable`);\r\n    return <div {...rest} className={cls.join(\" \")}/>\r\n}\r\n\r\n/** Компонент подвала формы */\r\nexport const FormFooter = (props) =>\r\n    <div className={`${rtPrefix}-form-footer`}>{props.children}</div>\r\n\r\n\r\n/** Компонент формы */\r\nconst Form = (props) => {\r\n    const {\r\n        dispatch,\r\n        setDataStore,\r\n        loadInitData,\r\n        header,\r\n        body,\r\n        footer,\r\n        requestSaveForm,\r\n        methodSaveForm,\r\n        processBeforeSaveForm\r\n    } = props;\r\n\r\n    /** Состояние первоначалной настройки компонента*/\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [antFormProps, setAntFormProps] = useState({});\r\n    const [initFormData, setInitFormData] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (!loaded) {\r\n            if (loadInitData !== noop)\r\n                loadInitData(_setInitFormData);\r\n            else\r\n                setLoaded(true);\r\n        }\r\n    }, [loaded]);\r\n\r\n    useEffect(() => {\r\n        setAntFormProps(getObjectExcludedProps(props, excludeProps));\r\n        // console.log('antFormProps props => ', getObjectExcludedProps(props, excludeProps));\r\n    }, [props]);\r\n\r\n\r\n    const _setInitFormData = (data) => {\r\n        // console.log(\"Form loaded init data => \", data);\r\n        setInitFormData(data);\r\n        setLoaded(true);\r\n    };\r\n\r\n\r\n    let antForm;\r\n    if (props && props.form) {\r\n        antForm = props.form;\r\n    } else {\r\n        const [form] = AntForm.useForm();\r\n        antForm = form;\r\n    }\r\n\r\n    const getBodyCls = () => {\r\n        let cls = [`${rtPrefix}-form-body`];\r\n        props.noPadding && cls.push(`${rtPrefix}-form-body-no-padding`);\r\n        props.scrollable && cls.push(`${rtPrefix}-form-body-scrollable`);\r\n        return cls.join(\" \");\r\n    };\r\n\r\n    const onFinish = (rawValues) => {\r\n        const values = processBeforeSaveForm ? processBeforeSaveForm(rawValues) : rawValues;\r\n        // console.log(`Success form [${props.name ? props.name : 'no name form'}]: `, values);\r\n        const saveObject = {\r\n            ...initFormData,\r\n            ...values,\r\n        };\r\n        console.log(`Success form [${props.name ? props.name : 'no name form'}]: `, saveObject);\r\n        if (requestSaveForm && methodSaveForm) {\r\n            requestSaveForm({\r\n                method: methodSaveForm,\r\n                data: saveObject\r\n            })\r\n                .then(response => {\r\n                    notification.success({\r\n                        message: \"Сохранение прошло успешно\"\r\n                    });\r\n                    props.onFinish && props.onFinish(saveObject, response.data);\r\n                })\r\n                .catch(error => notificationError(error, 'Ошибка при сохранении') );\r\n        } else if (props.onFinish)\r\n            props.onFinish(saveObject);\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n        console.error(\"Failed:\", errorInfo);\r\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\r\n    };\r\n\r\n    const Header = (header) => <div className={`${rtPrefix}-form-header`}><FormItems items={header}/></div>\r\n    const Footer = (footer) => <div className={`${rtPrefix}-form-footer`}><FormItems items={footer}/></div>\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {loaded\r\n                ? <AntForm\r\n                    form={antForm}\r\n                    {...antFormProps}\r\n                    className={`${antFormProps.className} ${rtPrefix}-form`}\r\n                    style={{ ...antFormProps.style, width: '100%', height: '100%' }}\r\n                    initialValues={{ ...antFormProps.initialValues, ...initFormData }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                    onFieldsChange={(changedFields, allFields) => {\r\n                        const values = {\r\n                            ...initFormData,\r\n                            ...antForm.getFieldsValue(),\r\n                        };\r\n                        // console.log('dispatchToStore => ', dispatch, values);\r\n                        dispatch && dispatchToStore({ dispatch, setDataStore, value: values })}\r\n                    }\r\n                >\r\n                    <React.Fragment>\r\n                        {header ? Header(header) : null}\r\n                        {body ? <div className={getBodyCls()}><FormItems items={body}/></div> : null}\r\n                        {props.children}\r\n                        {footer ? Footer(footer) : null}\r\n                    </React.Fragment>\r\n                </AntForm>\r\n                : null}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nForm.propTypes = {\r\n\r\n    /** Не делать отступы у формы от краев блока. **Only config Form** */\r\n    noPadding: PropTypes.bool,\r\n\r\n    /** Разрешит скролл внтри формы. **Only config Form** */\r\n    scrollable: PropTypes.bool,\r\n\r\n    /** Массив объектов для шапки формы. Как правило только заголовок. */\r\n    header: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /** Массив объектов для тела формы */\r\n    body: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /** Массив объектов для подвала формы. Как правило только кнопки \"Сохранить\" и \"Отмена\" */\r\n    footer: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /** Ссылка на функцию загрузки значений по умолчанию\r\n     * `(callBack) => callBack(initObject)` */\r\n    loadInitData: PropTypes.func,\r\n\r\n    /** Запрос для автоматического сохранения формы */\r\n    requestSaveForm: PropTypes.func,\r\n\r\n    /** HTTP Метод, передаваемый в запрос сохранения */\r\n    methodSaveForm: PropTypes.string,\r\n\r\n    /** Функция обработки перед сохранением формы */\r\n    processBeforeSaveForm: PropTypes.func\r\n};\r\n\r\nForm.defaultProps = {\r\n    noPadding: false,\r\n    scrollable: false,\r\n    loadInitData: noop,\r\n    methodSaveForm: 'POST'\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ setDataStore: setDataStore}, dispatch);\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { notification, Select as AntSelect } from \"antd\";\r\nimport {\r\n\tgenerateUUID,\r\n\tgetObjectExcludedProps,\r\n\tnotificationError, useMounted\r\n} from \"../utils/baseUtils\";\r\n\r\nimport { CheckOutlined } from '@ant-design/icons';\r\n\r\nconst excludeProps = [\r\n\t'componentType',\r\n\t'defaultSortBy',\r\n\t'defaultFilter',\r\n\t'defaultSearchValue',\r\n\t'sortBy',\r\n\t'filter',\r\n\t'searchValue',\r\n\t'searchParamName',\r\n    'lostParamName',\r\n\t'infinityMode',\r\n\t'requestLoadRows',\r\n\t'optionConverter',\r\n\t'options',\r\n\t'widthControl',\r\n\t'pageSize'\r\n];\r\n\r\n/** Компонент выбора элемента(ов) из списка */\r\nconst Select = props => {\r\n\r\n\tconst {\r\n\t\t// Rt Props\r\n\t\tdefaultSortBy,\r\n\t\tdefaultFilter,\r\n\t\tdefaultSearchValue,\r\n\t\tsortBy,\r\n\t\tfilter,\r\n\t\tsearchValue,\r\n\t\tsearchParamName,\r\n\t\tlostParamName,\r\n\t\tinfinityMode,\r\n\t\trequestLoadRows,\r\n\t\toptionConverter,\r\n\t\toptions,\r\n\t\twidthControl,\r\n\t\tpageSize,\r\n\r\n\t\t// Ant Props\r\n\t\tmode,\r\n\t\tonChange,\r\n\t\tvalue,\r\n\t\tdropdownRender\r\n\t} = props;\r\n\r\n\t/** Наличие на сервере еще данных */\r\n\tconst [_hasMore, _setHasMore] = useState(true);\r\n\t/** Индикатор загрузки данных */\r\n\tconst [_loading, _setLoading] = useState(false);\r\n\t/** Опции селекта */\r\n\tconst [_options, _setOptions] = useState(options);\r\n\tconst [tmpOption, setTmpOption] = useState(undefined);\r\n\r\n\t/** Индикатор достижения низа окна */\r\n\tconst [isEndReached, setIsEndReached] = useState(false);\r\n\r\n\t/** Объект сортировки */\r\n\tconst [_sortBy, _setSortBy] = useState(undefined);\r\n\t/** Объект фильтрации */\r\n\tconst [_filter, _setFilter] = useState({});\r\n\t/** Строка поиска */\r\n\tconst [_searchValue, _setSearchValue] = useState(undefined);\r\n\r\n\t/** Состояние параметра выбрать все */\r\n\tconst [_isSelectAll, _setIsSelectAll] = useState(false);\r\n\r\n\tconst isMounted = useMounted()\r\n\r\n\tconst [debounceTimer, setDebounceTimer] = useState(undefined);\r\n\t//\r\n\tuseEffect(() => {\r\n\t\t_setSearchValue(defaultSearchValue);\r\n\t\t_loadOptions({\r\n\t\t\tsortBy: defaultSortBy,\r\n\t\t\tfilter: defaultFilter,\r\n\t\t\tsearchValue: defaultSearchValue,\r\n\t\t\treload: true,\r\n\t\t});\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(isMounted) {\r\n\t\t\t_setRowsHandler(options);\r\n\t\t}\r\n\t}, [options]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log(\"Change sortBy, filter, searchValue\", sortBy, filter, searchValue);\r\n\t\tif(isMounted) {\r\n\t\t\tconst __sortBy = sortBy ? sortBy : _sortBy;\r\n\t\t\tconst __filter = filter ? filter : _filter;\r\n\t\t\tconst __searchValue = searchValue ? searchValue : _searchValue;\r\n\t\t\t_setSortBy(__sortBy);\r\n\t\t\t_setFilter(__filter);\r\n\t\t\t_setSearchValue(__searchValue);\r\n\t\t\t_loadOptions({\r\n\t\t\t\tsortBy: __sortBy,\r\n\t\t\t\tfilter: __filter,\r\n\t\t\t\tsearchLine: __searchValue,\r\n\t\t\t\treload: true,\r\n\t\t\t});\r\n\t\t}\r\n\t}, [sortBy, filter, searchValue]);\r\n\r\n\tconst _setRowsHandler = (options) => {\r\n\t\t_setOptions(options);\r\n\t\t// console.log('Select _setRowsHandler value => ', options)\r\n\t\tif(mode === 'multiple') {\r\n\t\t\tif(Array.isArray(value))\r\n\t\t\t\tif(options.reduce((preValue, item) => value.includes(item.value) ? preValue + 1 : preValue, 0) === options.length)\r\n\t\t\t\t\t_setIsSelectAll(true);\r\n\t\t\t\telse\r\n\t\t\t\t\t_setIsSelectAll(false);\r\n\t\t\tonChange(value);\r\n\t\t} else {\r\n\t\t\tif(value && options && options.findIndex(option => option.value === value) === -1){\r\n\t\t\t\t// console.log('Load tmpOption');\r\n\t\t\t\t_loadTmpOption();\r\n\t\t\t} else {\r\n\t\t\t\t// console.log('Clear tmpOption');\r\n\t\t\t\tsetTmpOption(undefined)\r\n\t\t\t}\r\n\t\t}\r\n\t\t// setRows(rows);\r\n\t\t// rowsDispatch(rows);\r\n\t};\r\n\r\n\tconst getPageNum = (reload) =>\r\n\t\treload ? 0 : Math.floor(_options.length / pageSize);\r\n\r\n\tconst getSort = (sortBy) =>\r\n\t\tsortBy && sortBy.key ? sortBy.key + ',' + sortBy.order : null;\r\n\r\n\tconst getSearchValue = (searchValue) =>\r\n\t\tsearchValue ? {[searchParamName]: searchValue} : null\r\n\r\n\tconst _loadOptions = (params) => {\r\n\t\t// console.log('_dataProcessing', params);\r\n\t\tconst {sortBy, filter, searchValue, reload} = params;\r\n\t\tif ((_hasMore || reload) && !_loading && requestLoadRows) {\r\n\t\t\t_setLoading(true);\r\n\r\n\t\t\tconst requestOptions = {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tpage: getPageNum(reload),\r\n\t\t\t\t\tsize: pageSize,\r\n\t\t\t\t\tsort: getSort(sortBy)\r\n\t\t\t\t},\r\n\t\t\t\tdata: {\r\n\t\t\t\t\t...filter,\r\n\t\t\t\t\t...getSearchValue(searchValue)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// console.log('dataQuery', dataQuery);\r\n\r\n\t\t\trequestLoadRows(requestOptions)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\t// console.log(\"infinity then response\", response);\r\n\t\t\t\t\tconst result = response.data;\r\n\r\n\t\t\t\t\tif (result && result.length < pageSize) {\r\n\t\t\t\t\t\t_setHasMore(false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t_setHasMore(true);\r\n\t\t\t\t\t\tsetIsEndReached(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treload\r\n\t\t\t\t\t\t? _setRowsHandler(result.map(option => optionConverter(option))) // _setRows\r\n\t\t\t\t\t\t: _setRowsHandler(_options.concat(result.map(option => optionConverter(option)))); // _setRows\r\n\r\n\t\t\t\t\t// console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\r\n\r\n\t\t\t\t\t_setLoading(false);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\r\n\t\t\t\t\t_setRowsHandler(_options); // _setRows\r\n\t\t\t\t\t// setHasMore(false);\r\n\t\t\t\t\t_setLoading(false);\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst _loadTmpOption = () => {\r\n\t\tif(requestLoadRows){\r\n\t\t\trequestLoadRows({params: {}, data: {[lostParamName]: value}})\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tif(response.data){\r\n\t\t\t\t\t\tif(response.data.length === 1){\r\n\t\t\t\t\t\t\tsetTmpOption(optionConverter(response.data[0]))\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnotification.error({ message: `Ошибка загрузки потерянного элемента` });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\r\n\t\t\t\t\tsetTmpOption(undefined)\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tconst onScroll = (event) => {\r\n\t\t// let scrollTopMax = event.nativeEvent.target.scrollTopMax\r\n\t\tlet scrollTopMax = event.nativeEvent.target.scrollHeight;\r\n\t\tlet scrollTop = event.nativeEvent.target.scrollTop;//.body.scrollTop\r\n\r\n\t\tconst onEndReached = scrollTopMax - scrollTop;\r\n\r\n\t\tif(onEndReached < 300 && !isEndReached) {\r\n\t\t\tsetIsEndReached(true);\r\n\t\t\tconst __searchValue = searchValue ? searchValue : _searchValue;\r\n\t\t\t_setSearchValue(__searchValue);\r\n\t\t\t// console.log('Load Data:', __searchValue);\r\n\t\t\t// _setSearchValue(defaultSearchValue);\r\n\t\t\tif(infinityMode){\r\n\t\t\t\t_loadOptions({\r\n\t\t\t\t\tsortBy: defaultSortBy,\r\n\t\t\t\t\tfilter: defaultFilter,\r\n\t\t\t\t\tsearchValue: __searchValue,\r\n\t\t\t\t\treload: false,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// console.log(\"scrollTopMax / scrollTop\", scrollTopMax, scrollTop, onEndReached);\r\n\t\t// const lastScrollTop = this._scroll.scrxollTop;\r\n\t\t// if (args.scrollTop > lastScrollTop) this._maybeCallOnEndReached();\r\n\t}\r\n\r\n\tconst onSearch = (value) => {\r\n\t\tclearTimeout(debounceTimer);\r\n\t\t_setSearchValue(value);\r\n\t\tsetDebounceTimer (setTimeout(\r\n\t\t\t() => {\r\n\t\t\t\t_loadOptions({\r\n\t\t\t\t\tsortBy: defaultSortBy,\r\n\t\t\t\t\tfilter: defaultFilter,\r\n\t\t\t\t\tsearchValue: value,\r\n\t\t\t\t\treload: true,\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t500\r\n\t\t))\r\n\r\n\t}\r\n\r\n\tconst _onChangeSelectAll = () => {\r\n\t\t// console.log(`_onChangeSelectAll`, _isSelectAll);\r\n\t\tif(mode === 'multiple') {\r\n\t\t\tif (_isSelectAll) {\r\n\t\t\t\tconst optionsValues = _options.map(item => item.value);\r\n\t\t\t\tonChange(value.filter(item => !optionsValues.includes(item)));\r\n\t\t\t\t_setIsSelectAll(false);\r\n\t\t\t} else {\r\n\t\t\t\tif (Array.isArray(value) && value.length > 0)\r\n\t\t\t\t\tonChange([...new Set([...value, ..._options.map(item => item.value)])]);\r\n\t\t\t\telse\r\n\t\t\t\t\tonChange([...new Set([..._options.map(item => item.value)])]);\r\n\t\t\t\t_setIsSelectAll(true);\r\n\t\t\t}\r\n\t\t} else\r\n\t\t\tonChange(undefined);\r\n\t}\r\n    const _onChange = (value) => {\r\n        // console.log(`_onChange selected`, value);\r\n        if(Array.isArray(value))\r\n        \tif(_options.reduce((preValue, item) => value.includes(item.value) ? preValue + 1 : preValue, 0) === _options.length)\r\n        \t\t_setIsSelectAll(true);\r\n        \telse\r\n\t\t\t\t_setIsSelectAll(false);\r\n\r\n\t\tonChange(value);\r\n    }\r\n\r\n    const getSelectAllCls = () => {\r\n\t\tlet cls = ['ant-select-item', 'ant-select-item-option', 'ant-select-item-option-select-all'];\r\n\t\tif(_isSelectAll)\r\n\t\t\tcls.push('ant-select-item-option-selected');\r\n\t\treturn cls.join(' ');\r\n\t}\r\n\r\n\tconst childProps = getObjectExcludedProps(props, excludeProps);\r\n    return (\r\n\t\t<AntSelect\r\n\t\t\tshowArrow={true}\r\n\t\t\tshowSearch={true}\r\n\t\t\tallowClear={true}\r\n\t\t\tfilterOption={false}\r\n\t\t\tautoClearSearchValue={true}\r\n\r\n\t\t\t{...childProps}\r\n\r\n\t\t\tsearchValue={_searchValue}\r\n\t\t\tstyle={{ width: widthControl }}\r\n\t\t\t// listHeight={heightPopup}\r\n\t\t\t// defaultValue={['a10', 'c12']}\r\n\t\t\tonChange={_onChange}\r\n\t\t\tmaxTagCount={0}\r\n\t\t\tmaxTagPlaceholder={(omittedValues) => `Выбрано: ${omittedValues.length}`}\r\n\t\t\t// dropdownMatchSelectWidth={200}\r\n\t\t\t// listItemHeight={10} listHeight={250}\r\n\t\t\tonPopupScroll={onScroll}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tdropdownRender={!dropdownRender?(menu => (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t{mode === 'multiple' ?\r\n\t\t\t\t\t\t<div className={getSelectAllCls()} onClick={_onChangeSelectAll}>\r\n\t\t\t\t\t\t\t<div className=\"ant-select-item-option-content\">\r\n\t\t\t\t\t\t\t\t<span>Выбрать все</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{_isSelectAll ?\r\n\t\t\t\t\t\t\t\t<span className=\"ant-select-item-option-state\"><CheckOutlined/></span> : null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{menu}\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)):dropdownRender}\r\n\t\t>\r\n    \t\t{_options && _options.map(({ label, value, className, disabled }, i) =>\r\n\t\t\t\t<AntSelect.Option key={i.toString(36) + i} value={value} className={className} disabled={disabled}>{label}</AntSelect.Option>)}\r\n\t\t\t{tmpOption &&\r\n\t\t\t\t<AntSelect.Option key={generateUUID()} value={tmpOption.value} className={tmpOption.className} disabled={tmpOption.disabled}>{tmpOption.label}</AntSelect.Option>}\r\n    \t</AntSelect>\r\n    );\r\n};\r\n\r\nSelect.propTypes = {\r\n\t/** Сортировка по умолчанию */\r\n\tdefaultSortBy: PropTypes.shape({\r\n\t\t/** Ключ поля для сортировки */\r\n\t\tkey: PropTypes.string,\r\n\t\t/** Направление сортировки */\r\n\t\torder: PropTypes.oneOf(['asc', 'desc']),\r\n\t}),\r\n\r\n\t/** Объект фильтрации по умолчанию */\r\n\tdefaultFilter: PropTypes.object,\r\n\r\n\t/** Значение строки поиска по умолчанию строк */\r\n\tdefaultSearchValue: PropTypes.string,\r\n\r\n\t/** Сортировка */\r\n\tsortBy: PropTypes.object,\r\n\r\n\t/** Режим селекта */\r\n\tmode:PropTypes.string,\r\n\r\n\t/** Фильтр */\r\n\tfilter: PropTypes.object,\r\n\r\n\t/** Значение строки поиска */\r\n\tsearchValue: PropTypes.string,\r\n\r\n\t/** Имя параметра для поиска */\r\n\tsearchParamName: PropTypes.string,\r\n\r\n\tlostParamName: PropTypes.string,\r\n\r\n\t/** Режим загружки по скроллу */\r\n\tinfinityMode: PropTypes.bool,\r\n\r\n\t/** Функция запроса для загрузки строк (данных) */\r\n\trequestLoadRows: PropTypes.func,\r\n\r\n\t/** Функция преобразования загруженных объектов в объекты для селекта.\r\n\t * Сигнатура `(option) => ({})`\r\n\t * Требоваеть вернуть объект с параметрам\r\n\t * `{ label: ReactNode, value: any, className: string, disabled: bool }`\r\n\t * ##### Example:\r\n\t * ``` JS\r\n\t * (option) => ({\r\n\t * \tlabel: (<span><MehOutlined />{option.name}</span>),\r\n\t * \tvalue: option.id,\r\n\t * \tclassName: 'some-class',\r\n\t * \tdisabled: false,\r\n\t * })\r\n\t * ```\r\n\t */\r\n\toptionConverter: PropTypes.func,\r\n\r\n\t/** Select options `[{ label, value, className, disabled }]` */\r\n\toptions: PropTypes.arrayOf(PropTypes.object),\r\n\r\n\t/** Ширина поля выбора в пикселях */\r\n\twidthControl: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n\r\n\t/** Размер страницы */\r\n\tpageSize: PropTypes.number,\r\n};\r\n\r\nSelect.defaultProps = {\r\n\t// Rt Props\r\n\tdefaultSortBy: undefined,\r\n\tdefaultFilter: {},\r\n\tdefaultSearchValue: undefined,\r\n\tinfinityMode: false,\r\n\trequestLoadRows: undefined,\r\n\toptions: [],\r\n\twidthControl: '100%',\r\n\tpageSize: 50,\r\n\tsearchParamName: 'name',\r\n\tlostParamName: 'id',\r\n\toptionConverter: (option) => ({ label: option.name, value: option.id })\r\n}\r\n\r\nexport default Select;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TreeSelect as AntTreeSelect } from \"antd\";\r\nimport { getObjectExcludedProps, notificationError, useMounted } from \"../utils/baseUtils\";\r\n\r\nconst excludeProps = [\r\n    'componentType',\r\n    'defaultSortBy',\r\n    'defaultFilter',\r\n    'defaultSearchValue',\r\n    'sortBy',\r\n    'filter',\r\n    'searchValue',\r\n    'searchParamName',\r\n    'requestLoadRows',\r\n    'optionConverter',\r\n    'treeData'\r\n];\r\n\r\n/** Компонент выбора элемента(ов) из древовидного списка */\r\nconst TreeSelect = props => {\r\n\r\n    const {\r\n        // Rt Props\r\n        defaultSortBy,\r\n        defaultFilter,\r\n        defaultSearchValue,\r\n        sortBy,\r\n        filter,\r\n        searchValue,\r\n        searchParamName,\r\n        requestLoadRows,\r\n        optionConverter,\r\n        treeData,\r\n    } = props;\r\n    /** Индикатор загрузки данных */\r\n    const [_loading, _setLoading] = useState(false);\r\n    /** Опции селекта */\r\n    const [_treeData, _setTreeData] = useState(treeData);\r\n    /** Строка поиска */\r\n    const [_searchValue, _setSearchValue] = useState(undefined);\r\n\r\n    const isMounted = useMounted()\r\n\r\n    useEffect(() => {\r\n        _setSearchValue(defaultSearchValue);\r\n        _loadOptions({\r\n            sortBy: defaultSortBy,\r\n            filter: defaultFilter,\r\n            searchValue: defaultSearchValue,\r\n            reload: true,\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // console.log(\"Change sortBy, filter, searchValue\", sortBy, filter, searchValue);\r\n        if(isMounted) {\r\n            _setSearchValue(searchValue);\r\n            _loadOptions({\r\n                sortBy: sortBy,\r\n                filter: filter,\r\n                searchLine: searchValue,\r\n                reload: true,\r\n            });\r\n        }\r\n    }, [sortBy, filter, searchValue]);\r\n\r\n    const onSearch = (value) => {\r\n        // console.log('TreeSelect onSearch => ', value);\r\n        _setSearchValue(value);\r\n        _loadOptions({\r\n            sortBy: defaultSortBy,\r\n            filter: defaultFilter,\r\n            searchValue: value,\r\n            reload: true,\r\n        });\r\n    }\r\n\r\n    const getSort = (sortBy) =>\r\n        sortBy && sortBy.key ? sortBy.key + ',' + sortBy.order : null;\r\n\r\n    const getSearchValue = (searchValue) =>\r\n        searchValue ? {[searchParamName]: searchValue} : null\r\n\r\n    const _optionConverter = (options) => {\r\n        if(Array.isArray(options))\r\n            return options.map(option => {\r\n                if(option.children && Array.isArray(option.children))\r\n                    option.children = _optionConverter(option.children)\r\n                return optionConverter(option)\r\n            })\r\n    }\r\n\r\n    const _loadOptions = (params) => {\r\n        const {sortBy, filter, searchValue} = params;\r\n        if (!_loading && requestLoadRows) {\r\n            _setLoading(true);\r\n            const requestOptions = {\r\n                params: {\r\n                    page: 0,\r\n                    size: 1,\r\n                    sort: getSort(sortBy)\r\n                },\r\n                data: {\r\n                    ...filter,\r\n                    ...getSearchValue(searchValue)\r\n                }\r\n            }\r\n            requestLoadRows(requestOptions)\r\n                .then((response) => {\r\n                    // console.log(\"infinity then response\", response);\r\n                    const result = response.data;\r\n                    _setTreeData(_optionConverter(result))\r\n                    _setLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    notificationError(error, 'Ошибка загрузки данных')\r\n                    // _setRowsHandler(_options); // _setRows\r\n                    // setHasMore(false);\r\n                    _setLoading(false);\r\n                });\r\n        }\r\n    }\r\n\r\n    const childProps = getObjectExcludedProps(props, excludeProps);\r\n    return (\r\n        <AntTreeSelect\r\n            showArrow={true}\r\n            showSearch={true}\r\n            allowClear={true}\r\n            filterTreeNode={false}\r\n            autoClearSearchValue={true}\r\n            treeDefaultExpandAll={true}\r\n\r\n            {...childProps}\r\n\r\n            searchValue={_searchValue}\r\n            onSearch={onSearch}\r\n            maxTagCount={0}\r\n            maxTagPlaceholder={(omittedValues) => `Выбрано: ${omittedValues.length}`}\r\n            treeData={_treeData}\r\n            // loadData={onLoadData}\r\n        />\r\n    );\r\n};\r\n\r\nTreeSelect.propTypes = {\r\n    /** Сортировка по умолчанию */\r\n    defaultSortBy: PropTypes.shape({\r\n        /** Ключ поля для сортировки */\r\n        key: PropTypes.string,\r\n        /** Направление сортировки */\r\n        order: PropTypes.oneOf(['asc', 'desc']),\r\n    }),\r\n\r\n    /** Объект фильтрации по умолчанию */\r\n    defaultFilter: PropTypes.object,\r\n\r\n    /** Значение строки поиска по умолчанию строк */\r\n    defaultSearchValue: PropTypes.string,\r\n\r\n    /** Сортировка */\r\n    sortBy: PropTypes.object,\r\n\r\n    /** Фильтр */\r\n    filter: PropTypes.object,\r\n\r\n    /** Значение строки поиска */\r\n    searchValue: PropTypes.string,\r\n\r\n    /** Имя параметра для поиска */\r\n    searchParamName: PropTypes.string,\r\n\r\n    /** Функция запроса для загрузки строк (данных) */\r\n    requestLoadRows: PropTypes.func,\r\n\r\n    /** Функция преобразования загруженных объектов в объекты для селекта.\r\n     * Сигнатура `(option) => ({})`\r\n     * Требоваеть вернуть объект с параметрам\r\n     * `{ label: ReactNode, value: any, children: any, checkable: bool, selectable: bool }`\r\n     * ##### Example:\r\n     * ``` JS\r\n     * (option) => ({\r\n     * \tlabel: (<span><MehOutlined />{option.name}</span>),\r\n     * \tvalue: option.id,\r\n     * \tchildren: option.children,\r\n     * \tcheckable: !option.isGroup,\r\n     * \tselectable: !option.isGroup,\r\n     * })\r\n     * ```*/\r\n    optionConverter: PropTypes.func.isRequired,\r\n\r\n    /** Select options `[{ label, value, children, checkable, selectable }]` */\r\n    options: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nTreeSelect.defaultProps = {\r\n    // Rt Props\r\n    defaultSortBy: undefined,\r\n    defaultFilter: {},\r\n    defaultSearchValue: undefined,\r\n    requestLoadRows: undefined,\r\n    searchParamName: 'name',\r\n    optionConverter: (option) => ({ label: option.name, value: option.id, children: option.children })\r\n};\r\n\r\nexport default TreeSelect;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, notification as antNotification, Spin, Tooltip, Typography, Upload } from \"antd\";\r\nimport { LoadingOutlined, CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport { noop } from \"../utils/baseUtils\";\r\n\r\n\r\nconst defaultProps = {\r\n    requestUploadFile: noop,\r\n    dataObject: undefined,\r\n    onCompletedUpload: noop,\r\n    onFailedUpload: noop,\r\n    uploadProps: {},\r\n    toolTipProps: {},\r\n    buttonProps: {}\r\n}\r\n\r\n/** Компонент загрузки файлов */\r\nconst UploadFile = props => {\r\n\r\n    const {\r\n        value,\r\n        requestUploadFile,\r\n        dataObject,\r\n        onCompletedUpload,\r\n        onFailedUpload,\r\n        uploadProps,\r\n        toolTipProps,\r\n        buttonProps,\r\n    } = props\r\n\r\n    const _uploadFile = (file) => {\r\n        // console.log('beforeUpload dataObject => ', dataObject, value, dataObject || value.dataObject);\r\n        notification(file, 'loading');\r\n        if (requestUploadFile) {\r\n            const _dataObject = dataObject || value.dataObject\r\n            requestUploadFile({ file: file, dataObject: _dataObject })\r\n                .then((response) => {\r\n                    notification(file, 'success');\r\n                })\r\n                .catch(() => {\r\n                    notification(file, 'error');\r\n                });\r\n        }\r\n        return false;\r\n    };\r\n    const notification = (file, type) => {\r\n        const notifProps = {\r\n            key: file.uid,\r\n            duration: type === 'loading' ? 0 : 5,\r\n            icon: type === 'loading'\r\n                ? <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\r\n                : null,\r\n            message: <span>Загрузка файла: <Typography.Text code>{file.name}</Typography.Text></span>\r\n        };\r\n        switch (type) {\r\n            case 'loading':\r\n                antNotification.info(notifProps);\r\n                break;\r\n            case 'success':\r\n                antNotification.success(notifProps);\r\n                onCompletedUpload(file);\r\n                props.onChange({...value, file});\r\n                break;\r\n            case 'error':\r\n                antNotification.error(notifProps);\r\n                onFailedUpload(file);\r\n                break;\r\n            case 'close':\r\n                antNotification.close(file.uid);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    const defaultUploadProps = {\r\n        multiple: true,\r\n        showUploadList: false,\r\n        beforeUpload: _uploadFile\r\n    };\r\n\r\n    return (\r\n        <Upload {...defaultUploadProps} {...uploadProps}>\r\n            <Tooltip {...toolTipProps}>\r\n                <Button\r\n                    icon={<CloudUploadOutlined />}\r\n                    {...buttonProps}\r\n                >{buttonProps && buttonProps.label}</Button>\r\n            </Tooltip>\r\n        </Upload>\r\n    );\r\n};\r\n\r\nUploadFile.propTypes = {\r\n    /** Функция запроса для отправки файла с данным на сервер */\r\n    requestUploadFile: PropTypes.func.isRequired,\r\n\r\n    /** Данные, прикрепляемые к файлу */\r\n    dataObject: PropTypes.object,\r\n\r\n    /** Функция, вызываемая при удачной загрузке файла */\r\n    onCompletedUpload: PropTypes.func,\r\n\r\n    /** Функция, вызываемая при НЕ удачной загрузке файла */\r\n    onFailedUpload: PropTypes.func,\r\n\r\n    /** Ant Props для [Upload](https://ant.design/components/upload/) компонента */\r\n    uploadProps: PropTypes.object,\r\n\r\n    /** Ant Props для [Tooltip](https://ant.design/components/tooltip/) компонента */\r\n    toolTipProps: PropTypes.object,\r\n\r\n    /** Ant Props для [Button](https://ant.design/components/button/) компонента */\r\n    buttonProps: PropTypes.object,\r\n};\r\n\r\nUploadFile.defaultProps = defaultProps\r\n\r\nexport default UploadFile;\r\n","import {Spin} from 'antd';\r\nimport {LoadingOutlined} from '@ant-design/icons';\r\nimport React from 'react';\r\n\r\nexport const empty = (\r\n\t<div className={'BaseTable__overlay'}>\r\n\t\t{' '}\r\n\t\t<span>Нет данных</span>{' '}\r\n\t</div>\r\n);\r\n\r\nexport const overlay = (\r\n\t<div className={'BaseTable__overlay'}>\r\n\t\t{' '}\r\n\t\t<Spin\r\n\t\t\ttip='Загрузка...'\r\n\t\t\tindicator={<LoadingOutlined style={{fontSize: 24}} spin />}\r\n\t\t/>{' '}\r\n\t</div>\r\n);\r\n","import React from 'react';\r\nimport {Checkbox} from 'antd';\r\nimport { flatten, getTableRowKeys, getTableRowObjects } from \"../../../utils/baseUtils\";\r\n\r\nconst SelectionHead = (props) => {\r\n\tconst {column, container} = props;\r\n\tconst {rowKey, onSelectAll, selectedRowKeys, selectAll} = column;\r\n\r\n\tconst _handleChange = (e) => {\r\n\t\tconst rowKeys = flatten(getTableRowKeys(container.props.data, column.rowKey));\r\n\t\tconst rowObjects = flatten(getTableRowObjects(container.props.data, rowKey)).filter((item) => rowKeys.includes(item[rowKey]));\r\n\t\tconst totalLength = rowKeys.length;\r\n\t\tconst selectLength = selectedRowKeys.length;\r\n\t\tconst checked = !(totalLength === selectLength);\r\n\r\n\t\t// const newRowKeys = container.props.data.map((item) => { return item[column.rowKey] });\r\n\t\tonSelectAll({selected: checked, rowKeys: rowKeys, rowObjects: rowObjects});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Checkbox\r\n\t\t\tindeterminate={selectAll === null}\r\n\t\t\tonChange={_handleChange}\r\n\t\t\tchecked={selectAll}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default SelectionHead;\r\n","import React from 'react';\r\nimport {Checkbox} from 'antd';\r\nimport {\r\n\tflatten,\r\n\tgetTableRowKeys,\r\n\tfindNodeByRowKey, getTableRowObjects\r\n} from \"../../../utils/baseUtils\";\r\n\r\nconst getRowChildren = (data, rowKey) =>\r\n\tdata.map((item) => {\r\n\t\tif (item.children && item.children.length) {\r\n\t\t\treturn [item[rowKey], getRowChildren(item.children, rowKey)];\r\n\t\t}\r\n\t\treturn item[rowKey];\r\n\t});\r\n\r\nconst findBrothers = (data, selfItem, rowKey, parentKey, rowKeys = null) => {\r\n\tlet arr = [];\r\n\tdata.forEach((item) => {\r\n\t\tif (\r\n\t\t\titem[parentKey] &&\r\n\t\t\titem[parentKey] === selfItem[parentKey] &&\r\n\t\t\titem[rowKey] !== selfItem[rowKey]\r\n\t\t) {\r\n\t\t\tif (rowKeys !== null) {\r\n\t\t\t\tif (rowKeys.includes(item[rowKey])) {\r\n\t\t\t\t\tarr.push(item[rowKey]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tarr.push(item[rowKey]);\r\n\t\t\t}\r\n\t\t} else if (item.children && item.children.length) {\r\n\t\t\tarr.push(\r\n\t\t\t\tfindBrothers(\r\n\t\t\t\t\titem.children,\r\n\t\t\t\t\tselfItem,\r\n\t\t\t\t\trowKey,\r\n\t\t\t\t\tparentKey,\r\n\t\t\t\t\trowKeys\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n\r\nexport const parentAnalysis = ({\r\n\trowData,\r\n\trowKey,\r\n\tparentKey,\r\n\tchecked,\r\n\tnodeAssociated,\r\n\ttreeData,\r\n\tselectedRowKeys,\r\n\tindeterminateRowKeys,\r\n}) => {\r\n\tlet _selectedRowKeys = [...selectedRowKeys];\r\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\r\n\r\n\tlet currentRowData = rowData;\r\n\tlet parentExist = !!currentRowData[parentKey];\r\n\tlet lastTypeSelect = checked ? 'checked' : 'square';\r\n\tlet typeSelect = '';\r\n\tlet nextSquare = false;\r\n\r\n\t/** Пока есть родитель */\r\n\twhile (parentExist && nodeAssociated) {\r\n\t\tconst indeterminateBrothers = flatten(\r\n\t\t\tfindBrothers(\r\n\t\t\t\ttreeData,\r\n\t\t\t\tcurrentRowData,\r\n\t\t\t\trowKey,\r\n\t\t\t\tparentKey,\r\n\t\t\t\t_indeterminateRowKeys\r\n\t\t\t)\r\n\t\t);\r\n\t\tconst selectedBrothers = flatten(\r\n\t\t\tfindBrothers(\r\n\t\t\t\ttreeData,\r\n\t\t\t\tcurrentRowData,\r\n\t\t\t\trowKey,\r\n\t\t\t\tparentKey,\r\n\t\t\t\t_selectedRowKeys\r\n\t\t\t)\r\n\t\t);\r\n\t\tconst allBrothers = flatten(\r\n\t\t\tfindBrothers(treeData, currentRowData, rowKey, parentKey)\r\n\t\t);\r\n\r\n\t\tif (checked) {\r\n\t\t\tif (\r\n\t\t\t\tlastTypeSelect === 'checked' &&\r\n\t\t\t\tselectedBrothers.length === allBrothers.length\r\n\t\t\t)\r\n\t\t\t\ttypeSelect = 'checked';\r\n\t\t\telse typeSelect = 'square';\r\n\t\t} else {\r\n\t\t\tif (\r\n\t\t\t\t!checked &&\r\n\t\t\t\t!nextSquare &&\r\n\t\t\t\t(selectedBrothers.length || indeterminateBrothers.length)\r\n\t\t\t)\r\n\t\t\t\tnextSquare = true;\r\n\t\t\tif (nextSquare) typeSelect = 'square';\r\n\t\t\telse typeSelect = 'none';\r\n\t\t}\r\n\r\n\t\t// console.log(\"allBrothers \", allBrothers);\r\n\t\t// console.log(\"findParentById \", treeData,\r\n\t\t//     rowKey,\r\n\t\t//     parentKey,\r\n\t\t//     currentRowData[parentKey]);\r\n\t\t//\r\n\t\t// console.log(\"findNodeByRowKey \", findNodeByRowKey(treeData, rowKey, currentRowData[parentKey]));\r\n\r\n\t\t// Найти родителя\r\n\t\tcurrentRowData = findNodeByRowKey(\r\n\t\t\ttreeData,\r\n\t\t\trowKey,\r\n\t\t\tcurrentRowData[parentKey]\r\n\t\t);\r\n\r\n\t\tif (typeSelect === 'checked') {\r\n\t\t\t// Выделить галкой\r\n\t\t\t// console.log(\"checked\");\r\n\t\t\tlastTypeSelect = 'checked';\r\n\t\t\tif (!_selectedRowKeys.includes(currentRowData[rowKey]))\r\n\t\t\t\t_selectedRowKeys.push(currentRowData[rowKey]);\r\n\t\t\tconst index = _indeterminateRowKeys.indexOf(currentRowData[rowKey]);\r\n\t\t\tif (index > -1) _indeterminateRowKeys.splice(index, 1);\r\n\t\t} else if (typeSelect === 'square') {\r\n\t\t\t// Выдлеить квадратом\r\n\t\t\t// console.log(\"square: \");\r\n\t\t\tlastTypeSelect = 'square';\r\n\t\t\tif (!_indeterminateRowKeys.includes(currentRowData[rowKey]))\r\n\t\t\t\t_indeterminateRowKeys.push(currentRowData[rowKey]);\r\n\t\t\tconst index = _selectedRowKeys.indexOf(currentRowData[rowKey]);\r\n\t\t\tif (index > -1) _selectedRowKeys.splice(index, 1);\r\n\t\t} else if (typeSelect === 'none') {\r\n\t\t\t// Снять выделение\r\n\t\t\t// console.log(\"none: \");\r\n\t\t\tlastTypeSelect = 'none';\r\n\t\t\tconst indexS = _selectedRowKeys.indexOf(currentRowData[rowKey]);\r\n\t\t\tif (indexS > -1) _selectedRowKeys.splice(indexS, 1);\r\n\t\t\tconst indexI = _indeterminateRowKeys.indexOf(\r\n\t\t\t\tcurrentRowData[rowKey]\r\n\t\t\t);\r\n\t\t\tif (indexI > -1) _indeterminateRowKeys.splice(indexI, 1);\r\n\t\t}\r\n\r\n\t\tparentExist = !!currentRowData[parentKey];\r\n\t\t// parentExist = проверка наличия след родителя\r\n\t}\r\n\r\n\treturn [_selectedRowKeys, _indeterminateRowKeys];\r\n};\r\n\r\nexport const onChangeSelectionCell = (props) => {\r\n\tconst {rowData, rowIndex, column, rows, checked} = props;\r\n\tconst {\r\n\t\trowKey,\r\n\t\tparentKey,\r\n\t\tnodeAssociated,\r\n\t\tselectedRowKeys,\r\n\t\tindeterminateRowKeys,\r\n\t\tonChange\r\n\t} = column;\r\n\r\n\t// const rowKeys = flatten(getTableRowKeys([rowData], column.rowKey));\r\n\t// const totalLength = container.props.data.length;\r\n\t// const checked = e.target.checked;\r\n\t// const currentRowKey = {[rowKey]: rowData[rowKey], checked};\r\n\t// console.log(\"_handleChange: \", container);\r\n\r\n\tlet _selectedRowKeys = [...selectedRowKeys];\r\n\tlet _indeterminateRowKeys = [...indeterminateRowKeys];\r\n\r\n\t/** Обработка себя, поиск детей, выделение / снятие их */\r\n\tlet rowChildren = [];\r\n\tif (checked) {\r\n\t\tif (rowData.children && nodeAssociated)\r\n\t\t\trowChildren = flatten(getRowChildren(rowData.children, rowKey));\r\n\r\n\t\t_selectedRowKeys = _selectedRowKeys\r\n\t\t\t.concat([rowData[rowKey]])\r\n\t\t\t.concat(rowChildren);\r\n\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\r\n\t\t\t(element) =>\r\n\t\t\t\telement !== rowData[rowKey] &&\r\n\t\t\t\t!rowChildren.includes(element)\r\n\t\t);\r\n\t} else {\r\n\t\tif (rowData.children && nodeAssociated)\r\n\t\t\trowChildren = flatten(\r\n\t\t\t\tgetRowChildren(rowData.children, rowKey, false)\r\n\t\t\t);\r\n\r\n\t\t_selectedRowKeys = _selectedRowKeys.filter(\r\n\t\t\t(element) =>\r\n\t\t\t\telement !== rowData[rowKey] &&\r\n\t\t\t\t!rowChildren.includes(element)\r\n\t\t);\r\n\t\t_indeterminateRowKeys = _indeterminateRowKeys.filter(\r\n\t\t\t(element) =>\r\n\t\t\t\telement !== rowData[rowKey] &&\r\n\t\t\t\t!rowChildren.includes(element)\r\n\t\t);\r\n\t}\r\n\r\n\t[_selectedRowKeys, _indeterminateRowKeys] = parentAnalysis({\r\n\t\trowData,\r\n\t\trowKey,\r\n\t\tparentKey,\r\n\t\tchecked,\r\n\t\tnodeAssociated,\r\n\t\ttreeData: rows,\r\n\t\tselectedRowKeys: _selectedRowKeys,\r\n\t\tindeterminateRowKeys: _indeterminateRowKeys,\r\n\t});\r\n\r\n\tconst keys = [...new Set(_selectedRowKeys)];\r\n\tconst _selectedRowObjects = flatten(getTableRowObjects(rows, rowKey)).filter((item) => keys.includes(item[rowKey]));\r\n\t//return [...new Set(_disabledElements)]\r\n\t// onChange({ selected: checked, totalLength, rowData, rowIndex });\r\n\r\n\t/** Выясняем новое состояние галочки \"Выделить все\" */\r\n\tlet selectAll;\r\n\tconst selectLength = keys.length;\r\n\tconst totalLength = flatten(\r\n\t\tgetTableRowKeys(rows, column.rowKey)\r\n\t).length;\r\n\r\n\tif (selectLength === 0) selectAll = false;\r\n\telse if (totalLength === selectLength) selectAll = true;\r\n\telse if (totalLength !== selectLength) selectAll = null;\r\n\r\n\r\n\r\n\tonChange({\r\n\t\tselected: checked,\r\n\t\t_selectedRow: {\r\n\t\t\trowData: {...rowData},\r\n\t\t\trowIndex: rowIndex,\r\n\t\t\trowKey: rowKey,\r\n\t\t},\r\n\t\t_selectAll: selectAll,\r\n\t\t_selectedRowKeys: keys, //[...new Set(_selectedRowKeys)],\r\n\t\t_selectedRowObjects: _selectedRowObjects,\r\n\t\t_indeterminateRowKeys: [...new Set(_indeterminateRowKeys)],\r\n\t});\r\n\r\n\t// let uniqIds = {};\r\n\t// onChange({selected: checked, rowKeys: rowKeys.filter(obj => !uniqIds[obj[rowKey]] && (uniqIds[obj[rowKey]] = true)) });\r\n};\r\n\r\nconst SelectionCell = (props) => {\r\n\r\n\tconst {rowData, column} = props;\r\n\tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\r\n\tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\r\n\tconst checked = selectedRowKeys.includes(rowData[rowKey]);\r\n\r\n\t// React.useEffect(() => {\r\n\t// \tconsole.log(\"selectionCell\", props);\r\n\t// }, [props]);\r\n\r\n\tconst _onChangeHandler = (checked) => {\r\n\t\tconst {rowData, rowIndex, column, container} = props;\r\n\t\tonChangeSelectionCell({\r\n\t\t\trowData, rowIndex, column, rows: container.props.data, checked\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<Checkbox\r\n\t\t\t\tindeterminate={det}\r\n\t\t\t\t// onChange={(e) => _onChangeHandler(e.target.checked)}\r\n\t\t\t\tchecked={checked}\r\n\t\t\t/>\r\n\t);\r\n};\r\n\r\nexport default SelectionCell;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {CloseCircleOutlined} from '@ant-design/icons';\r\nimport {rtPrefix} from '../../../utils/variables';\r\n\r\nconst SelectionList = (props) => {\r\n\tconst {selectedRowObjects, rowRender, onClickDropSelect} = props;\r\n\r\n\t// console.log(\"SelectionList typeof -> \", typeof(rowRender));\r\n\treturn (\r\n\t\t<div className={`${rtPrefix}-table-selected-rows`}>\r\n\t\t\t{selectedRowObjects && selectedRowObjects.length > 0 ? (\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{selectedRowObjects.map((item, index) => (\r\n\t\t\t\t\t\t<li key={index}>\r\n\t\t\t\t\t\t\t{/*{(typeof(rowRender) === 'string') ? <div>{item[rowRender]}</div> : rowRender }*/}\r\n\t\t\t\t\t\t\t{typeof rowRender === 'function' ? (\r\n\t\t\t\t\t\t\t\trowRender({rowData: item, rowIndex: index})\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div>{item[rowRender]}</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div onClick={() => onClickDropSelect(item)}>\r\n\t\t\t\t\t\t\t\t<CloseCircleOutlined />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t) : (\r\n\t\t\t\t<div>Нет выбранных записей</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nSelectionList.propTypes = {\r\n\t/** Строка или функция для отображения элементов списка\r\n\t * Строка - имя поля\r\n\t * Функция - рендер строк. Параметры v\r\n\t * { rowData, rowIndex }) */\r\n\trowRender: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n\r\n\t/** Список выделенных объектов */\r\n\tselectedRowObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n\r\n\t/** Событие удаления элемента */\r\n\tonClickDropSelect: PropTypes.func.isRequired,\r\n};\r\n\r\nSelectionList.defaultProps = {};\r\n\r\nexport default SelectionList;\r\n","import React, { useRef, forwardRef, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport BaseTable, { AutoResizer } from \"react-base-table\";\r\nimport { empty, overlay } from \"./defaultSettings\";\r\nimport SelectionHead from \"./Selectable/SelectionHead\";\r\nimport SelectionCell, { parentAnalysis, onChangeSelectionCell } from \"./Selectable/SelectionCell\";\r\nimport SelectionList from \"./SelectionList/SelectionList\";\r\nimport { rtPrefix } from \"../../utils/variables\";\r\nimport {\r\n    flatten,\r\n    generateUUID,\r\n    getTableRowKeys,\r\n    findNodeByRowKey,\r\n    noop,\r\n    getTableRowObjects, notificationError, useMounted\r\n} from \"../../utils/baseUtils\";\r\nimport FormItems from \"../../Form/FormItems\";\r\nimport moment from \"moment\";\r\nimport { getExtraData, mapDispatchToProps, mapStateToProps } from \"../../utils/storeUtils\";\r\n\r\n/** Компонент таблицы */\r\nconst Table = forwardRef((props, ref) => {\r\n\r\n    /** LOADING AND INFINITY MODE STATES */\r\n    /** Наличие на сервере еще данных */\r\n    const [hasMore, setHasMore] = useState(true);\r\n    /** Индикатор загрузки данных */\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    /** TABLE STATES */\r\n    /** Колонки таблицы */\r\n    // const [_columns, _setColumns] = useState([]);\r\n    /** Строки таблицы */\r\n    const [_rows, _setRows] = useState([]);\r\n    /** Ключи выделенных строк */\r\n    const [_selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n    /** Значение строки поиска */\r\n    const [_searchValue, setSearchValue] = useState(\"\");\r\n    /** Объект фильтра */\r\n    const [_filter, setFilter] = useState({});\r\n    /** Объект соритировки */\r\n    const [_sortBy, setSortBy] = useState({});\r\n    /** Состояние selectAll галочки */\r\n    const [selectAll, setSelectAll] = useState(false);\r\n\r\n    /** TREE STATES */\r\n    /** Ключи строк с кубиками при selectable = true */\r\n    const [_indeterminateRowKeys, setIndeterminateRowKeys] = useState([]);\r\n    /** Ключи раскрытых строк при selectable = true */\r\n    const [_expandedRowKeys, setExpandedRowKeys] = useState([]);\r\n\r\n    /** FOOTER STATES */\r\n    /** Отображать ли footer */\r\n    const [_footerShow, _setFooterShow] = useState(false);\r\n    /** Всего строк по фильтру в таблице */\r\n    const [_totalCountRows, setTotalCountRows] = useState(0);\r\n\r\n\r\n    const [subscribeProps, setSubscribeProps] = useState({});\r\n\r\n    const tableRef = useRef();\r\n\r\n    const isMounted = useMounted();\r\n\r\n    const {\r\n        /** Required */\r\n        columns,\r\n        // type,\r\n        infinityMode,\r\n        editMode, // need Props.types\r\n        disabled,\r\n\r\n        /** Def values */\r\n        defaultRows,\r\n        defaultSelectedRowKeys,\r\n        defaultSearchValue,\r\n        defaultFilter,\r\n        defaultSortBy,\r\n\r\n        /** Outdoor control */\r\n        rows,\r\n        setRows, // ???\r\n        selectedRowKeys,\r\n        searchValue,\r\n        filter,\r\n        sortBy,\r\n\r\n        /** Base Props */\r\n        rowKey,\r\n        customFields,\r\n\r\n        /** View Props */\r\n        empty,\r\n        overlay,\r\n        fixWidthColumn,\r\n        // footerProps,\r\n        headerHeight,\r\n        rowHeight,\r\n        rowRenderer,\r\n        zebraStyle,\r\n        estimatedRowHeight,\r\n        // cellBordered, // need Props.types\r\n        rowBordered,  // need Props.types\r\n        className,\r\n        style,\r\n\r\n        /** Load Data Props */\r\n        loadThreshold,\r\n        pageSize,\r\n        requestLoadRows,\r\n        requestLoadCount,\r\n        searchParamName,\r\n\r\n        /** Selectable Props */\r\n        selectable,\r\n\r\n        /** Tree Props */\r\n        nodeAssociated,\r\n        expandColumnKey,\r\n        expandDefaultAll,\r\n        expandLazyLoad,\r\n        expandParentKey,\r\n\r\n        /** Events */\r\n        onRowClick,\r\n        onRowDoubleClick,\r\n        onRowExpand,\r\n        onSelectedRowsChange,\r\n        onExpandedRowsChange,\r\n\r\n        /** SELECTED PANEL */\r\n        showSelection,\r\n        rowRenderShowSelection,\r\n\r\n        /** REDUX PROPS */\r\n        dispatchPath,\r\n        dispatch,\r\n        subscribe,\r\n\r\n        value,\r\n        onChange\r\n    } = { ...props, ...subscribeProps };\r\n\r\n    const footerProps = {\r\n        ...Table.defaultProps.footerProps,\r\n        ...props.footerProps\r\n    };\r\n\r\n    const selectedDispatchPath = dispatch && dispatch.path\r\n        ? `${dispatch.path}.selected`\r\n        : dispatchPath && `${dispatchPath}.selected`;\r\n    const rowsDispatchPath = dispatch && dispatch.path\r\n        ? `${dispatch.path}.rows`\r\n        : dispatchPath && `${dispatchPath}.rows`;\r\n\r\n    useEffect(() => {\r\n        // console.log(\"Инициализация дефолтных значений \", selectColumn, columns);\r\n        // console.log(\"Инициализация дефолтных значений defaultSelectedRowKeys > \", defaultSelectedRowKeys);\r\n\r\n        // Инициализация дефолтных значений\r\n        // _setRows(defaultRows);\r\n        if (defaultRows.length > 0) _setRowsHandler(defaultRows);\r\n        else if (rows.length > 0) _setRowsHandler(rows);\r\n        // setSelectedRowKeys(defaultSelectedRowKeys);\r\n        // _setSelectedRowsHandler(defaultSelectedRowKeys, undefined, defaultRows)\r\n        if (selectable && props.value && props.value.length > 0)\r\n            _setSelectedRowsHandler(props.value.map(item => item[rowKey]), props.value);\r\n        else\r\n            _setSelectedRowsHandler(defaultSelectedRowKeys, undefined, defaultRows);\r\n        setSearchValue(defaultSearchValue);\r\n        setFilterHandler(defaultFilter);\r\n        setSortBy(defaultSortBy);\r\n        setSelectAll(\r\n            defaultRows.length > 0 &&\r\n            defaultRows.length === defaultSelectedRowKeys.length\r\n        );\r\n        // Определение нужно ли отображать подвал\r\n        _setFooterShow(\r\n            (footerProps.showElements.length ||\r\n                footerProps.leftCustomSideElement ||\r\n                footerProps.centerCustomSideElement ||\r\n                footerProps.rightCustomSideElement));\r\n\r\n        // Only tree table\r\n        if (!!expandColumnKey && !expandLazyLoad) {\r\n            // Открытие всех нод\r\n            if (expandDefaultAll)\r\n                setExpandedRowKeys(\r\n                    flatten(getTableRowKeys(defaultRows, rowKey))\r\n                );\r\n            // Установка квадратиков на нужных нодах\r\n            if (defaultSelectedRowKeys && defaultSelectedRowKeys.length > 0) {\r\n                let flatRows = flatten(getTableRowKeys(defaultRows, rowKey));\r\n                let selectedRow = flatRows.filter((item) =>\r\n                    defaultSelectedRowKeys.includes(item[rowKey])\r\n                );\r\n                let _indeterminateRowKeys = [];\r\n                selectedRow.forEach((item) => {\r\n                    const [ss, ii] = parentAnalysis({\r\n                        rowData: item,\r\n                        rowKey,\r\n                        parentKey: expandParentKey,\r\n                        checked: true,\r\n                        nodeAssociated,\r\n                        treeData: defaultRows,\r\n                        selectedRowKeys: defaultSelectedRowKeys,\r\n                        indeterminateRowKeys: _indeterminateRowKeys\r\n                    });\r\n                    _indeterminateRowKeys.push(...ii);\r\n                });\r\n                setIndeterminateRowKeys([...new Set(_indeterminateRowKeys)]);\r\n            }\r\n        }\r\n\r\n        // if (type !== 'localSide') {\r\n        _dataProcessing({\r\n            sortBy: defaultSortBy,\r\n            filter: defaultFilter,\r\n            searchLine: defaultSearchValue,\r\n            reload: true\r\n        });\r\n        // }\r\n        // console.log(\"Table => useEffect start \");\r\n        // setMounted(true);\r\n        if (ref && typeof ref === \"function\") ref({ reloadData });\r\n        else if (ref && typeof ref === \"object\") ref.current = { reloadData };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isMounted) {\r\n            // console.log('useEffect rows');\r\n            _setRowsHandler(rows);\r\n            // setSelectedRowKeys(selectedRowKeys);\r\n            _setSelectedRowsHandler(selectedRowKeys, undefined, rows);\r\n            setSearchValue(searchValue);\r\n            setFilterHandler(filter);\r\n            setSortBy(sortBy);\r\n            if (!!expandColumnKey && !expandLazyLoad) {\r\n                // Открытие всех нод\r\n                if (expandDefaultAll)\r\n                    setExpandedRowKeys(flatten(getTableRowKeys(rows, rowKey)));\r\n            }\r\n        }\r\n    }, [rows, selectedRowKeys, searchValue, filter, sortBy]);\r\n\r\n    useEffect(() => {\r\n        if (editMode) {\r\n            _setSelectedRowsHandler([], []);\r\n        }\r\n    }, [editMode]);\r\n\r\n    useEffect(() => {\r\n        // console.log('useEffect value');\r\n        if (value && Array.isArray(value) && !requestLoadRows)\r\n            _setRowsHandler(value);\r\n    }, [value]);\r\n\r\n    /** Подписка на изменение props[subscribe.name] в сторе */\r\n    subscribe.map(item => {\r\n        return useEffect(() => {\r\n            if ((item.withMount || isMounted) && item.name) {\r\n                // console.log(\"Table => useEffect => [%s] \", item.name, props[item.name]);\r\n                const onChangeObject = {\r\n                    value: props[item.name],\r\n                    extraData: getExtraData(item, props), //extraData, //props[`${item.name}ExtraData`],\r\n                    reloadTable: reloadData,\r\n                    addRows: _addRows,\r\n                    addRow: _addRow,\r\n                    addRowAsCopy: _addRowAsCopy,\r\n                    editRow: _editRow,\r\n                    removeRow: _removeRow,\r\n                    moveUpRow: _moveUpRow,\r\n                    moveDownRow: _moveDownRow,\r\n                    setSubscribeProps: _setSubscribeProps\r\n                };\r\n                item.onChange && item.onChange(onChangeObject);\r\n            }\r\n        }, [props[item.name]]);\r\n    });\r\n\r\n    /** BASE FUNCTIONS */\r\n\r\n    const _setSubscribeProps = (props) => {\r\n        // setTimeout(() => {\r\n        // \tconsole.log('_setSubscribeProps');\r\n        setSubscribeProps({ ...subscribeProps, ...props });\r\n        // }, 2000)\r\n    };\r\n\r\n    const _setLoadedRowsHandler = (rows) => {\r\n        _setRowsHandler(rows);\r\n        // !selectable && onChange && onChange(rows)\r\n    };\r\n    const _setRowsHandler = (rows) => {\r\n        // console.log('_setRowsHandler onChange');\r\n        _setRows(rows);\r\n        setRows(rows);\r\n        rowsDispatch(rows);\r\n    };\r\n\r\n    const _setSelectedRowsHandler = (selectedKeys = [], selectedObjects = undefined, rows = []) => {\r\n        // console.log('_setSelectedRowsHandler => ', selectedKeys)\r\n        setSelectedRowKeys(selectedKeys);\r\n        if (selectedKeys.length === 0)\r\n            if (selectable)\r\n                selectedDispatch([]);\r\n            else\r\n                selectedDispatch(undefined);\r\n        else if (selectedKeys.length > 0 && !selectedObjects)\r\n            if (selectable)\r\n                selectedDispatch(flatten(getTableRowObjects(rows, rowKey)).filter((item) => selectedKeys.includes(item[rowKey])));\r\n            else\r\n                selectedDispatch(findNodeByRowKey(rows, rowKey, selectedKeys[0]));\r\n        else\r\n            selectedDispatch(selectedObjects);\r\n    };\r\n\r\n    const rowsDispatch = (rows) => {\r\n        // console.log('rowsDispatch ', rowsDispatchPath);\r\n        rowsDispatchPath && props.setDataStore && props.setDataStore(rowsDispatchPath, rows);\r\n        !selectable && onChange && onChange(rows);\r\n    };\r\n\r\n    const selectedDispatch = (data) => {\r\n        selectedDispatchPath && props.setDataStore && props.setDataStore(selectedDispatchPath, data);\r\n        selectable && onChange && onChange(data);\r\n    };\r\n\r\n    const onTableEventsDispatch = (nameEvent, value) => {\r\n        const dp = dispatch && dispatch.path\r\n            ? `${dispatch.path}.events.${nameEvent}`\r\n            : dispatchPath && `${dispatchPath}.events.${nameEvent}`;\r\n\r\n        dp && props.setDataStore && props.setDataStore(dp, {\r\n            timestamp: moment(),\r\n            value: value\r\n        });\r\n        // console.log('onTableEventsDispatch onChange');\r\n        Array.isArray(value) && onChange && onChange(value);\r\n    };\r\n\r\n    const setFilterHandler = (filter) => {\r\n        // console.log('setFilterHandler => ', filter);\r\n        setFilter(filter);\r\n    };\r\n\r\n    const reloadData = ({ sortBy, filter, searchValue }, appendParams) => {\r\n        // console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\r\n        tableRef.current && tableRef.current.scrollToRow(0, \"auto\");\r\n        if (props.value && props.value.length > 0)\r\n            _setSelectedRowsHandler(props.value.map(item => item[rowKey]), props.value);\r\n        else\r\n            _setSelectedRowsHandler();\r\n\r\n        const __sortBy = appendParams ? (sortBy ? sortBy : _sortBy) : sortBy;\r\n        const __filter = appendParams ? { ..._filter, ...filter } : filter;\r\n        const __searchValue = appendParams ? (searchValue ? searchValue : _searchValue) : searchValue;\r\n        setSortBy(__sortBy);\r\n        setFilterHandler(__filter);\r\n        setSearchValue(__searchValue);\r\n        _dataProcessing({\r\n            sortBy: __sortBy,\r\n            filter: __filter,\r\n            searchLine: __searchValue,\r\n            reload: true\r\n        });\r\n        // console.log(\"reloadData loading \", loading);\r\n    };\r\n\r\n    const _dataProcessing = (params) => {\r\n        // console.log('_dataProcessing', params);\r\n        const { sortBy, filter, searchLine, expandRow, reload } = params;\r\n        if ((hasMore || reload) && !loading) {\r\n            setLoading(true);\r\n            const pageNum = reload\r\n                ? 0\r\n                : Math.floor(_rows.length / pageSize);\r\n            const params = {\r\n                page: pageNum,\r\n                size: pageSize,\r\n                sort:\r\n                    sortBy && sortBy.key\r\n                        ? sortBy.key + \",\" + sortBy.order\r\n                        : null\r\n            };\r\n            const dataQuery = {\r\n                ...filter,\r\n                ...(searchLine\r\n                    ? { [searchParamName]: searchLine }\r\n                    : null)\r\n            };\r\n            // console.log('dataQuery', dataQuery);\r\n\r\n            if (infinityMode && reload && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad) {\r\n                requestLoadCount({\r\n                    params,\r\n                    data: dataQuery\r\n                })\r\n                    .then((response) => {\r\n                        // console.log(\"infinity then response\", response);\r\n                        // const result = response.data;\r\n                        setTotalCountRows(response.data);\r\n                    })\r\n                    .catch(error =>\r\n                        notificationError(error, \"Ошибка получения количества записей по фильтру\"));\r\n            }\r\n\r\n            // console.log('requestLoadRows => ', typeof requestLoadRows);\r\n            // if(typeof requestLoadRows !== 'function'){\r\n            //     setLoading(false);\r\n            // }\r\n            if (requestLoadRows) {\r\n                requestLoadRows({\r\n                    params,\r\n                    data: dataQuery\r\n                })\r\n                    .then((response) => {\r\n                        // console.log(\"infinity then response\", response);\r\n                        const result = response.data;\r\n                        // Если иерархия и ленивая, то ищим кому добавть полученные записи\r\n                        if (!!expandColumnKey && expandLazyLoad) {\r\n                            // lastExpandRow//, setLastExpandRow\r\n                            // console.log('!!expandColumnKey && expandLazyLoad', result);\r\n                            if (pageNum === 0) {\r\n                                result.forEach((child) => {\r\n                                    child.children = [\r\n                                        { [rowKey]: generateUUID() }\r\n                                    ];\r\n                                });\r\n                                // _setRows(result);\r\n                                _setLoadedRowsHandler(result);\r\n                            } else {\r\n                                let newRows = [..._rows];\r\n                                // (data, rowKey, rowValue)\r\n                                result.forEach((child) => {\r\n                                    child.children = [\r\n                                        { [rowKey]: generateUUID() }\r\n                                    ];\r\n                                });\r\n                                let node = findNodeByRowKey(\r\n                                    newRows,\r\n                                    rowKey,\r\n                                    expandRow[rowKey]\r\n                                );\r\n                                node.children = result;\r\n                                // console.log('newRows -> ', newRows);\r\n                                // _setRows(newRows);\r\n                                _setLoadedRowsHandler(newRows);\r\n                            }\r\n                        } else {\r\n                            if (result && result.length < pageSize) {\r\n                                setHasMore(false);\r\n                            } else {\r\n                                setHasMore(true);\r\n                            }\r\n                            pageNum === 0\r\n                                ? _setLoadedRowsHandler(result) // _setRows\r\n                                : _setLoadedRowsHandler(_rows.concat(result)); // _setRows\r\n\r\n                            // console.log('expandDefaultAll ', expandDefaultAll, _expandedRowKeys);\r\n                            if (expandDefaultAll)\r\n                                setExpandedRowKeys(\r\n                                    flatten(getTableRowKeys(result, rowKey))\r\n                                );\r\n                        }\r\n\r\n                        setLoading(false);\r\n                    })\r\n                    .catch((error) => {\r\n                        notificationError(error, \"Ошибка загрузки данных\");\r\n                        _setLoadedRowsHandler(_rows); // _setRows\r\n                        // setHasMore(false);\r\n                        setLoading(false);\r\n                    });\r\n            } else setLoading(false);\r\n        }\r\n    };\r\n\r\n    /** Событие выделение одной строки в режиме без галочек */\r\n    const useSimpleAndDoubleClick = (actionSimpleClick, actionDoubleClick, delay = 200) => {\r\n        const [click, setClick] = useState(0);\r\n        const [data, setData] = useState(undefined);\r\n        useEffect(() => {\r\n            const timer = setTimeout(() => {\r\n                // simple click\r\n                if (click === 1) actionSimpleClick(data);\r\n                setClick(0);\r\n            }, delay);\r\n            if (click === 2) actionDoubleClick(data);\r\n            return () => clearTimeout(timer);\r\n        }, [click]);\r\n        return (_data) => {\r\n            setClick(prev => prev + 1);\r\n            setData(() => _data);\r\n        };\r\n    };\r\n\r\n    let timer;\r\n    const simpleAndDoubleClick = (actionSimpleClick, actionDoubleClick, data) => (event) => {\r\n        clearTimeout(timer);\r\n        if (event.detail === 1) {\r\n            // console.log('actionSimpleClick', data)\r\n            timer = setTimeout(() => actionSimpleClick(data), 200);\r\n        } else if (event.detail === 2) {\r\n            // console.log('actionDoubleClick', data)\r\n            actionDoubleClick(data);\r\n        }\r\n    };\r\n\r\n    const _onRowClick = ({ rowData, rowIndex, rowKey }) => {\r\n        // console.log('actionSimpleClick')\r\n        onTableEventsDispatch(\"onRowClick\", rowData);\r\n        _rowSelectAfterClick({ rowData, rowIndex, rowKey, onClick: onRowClick });\r\n    };\r\n    const _onRowDoubleClick = ({ rowData, rowIndex, rowKey }) => {\r\n        // console.log('onDoubleClick', rowData, rowIndex, rowKey);\r\n        // console.log('actionDoubleClick')\r\n        // rowDoubleClickDispatch(rowData);\r\n        onTableEventsDispatch(\"onRowDoubleClick\", rowData);\r\n        _rowSelectAfterClick({ rowData, rowIndex, rowKey, onClick: onRowDoubleClick });\r\n    };\r\n\r\n    const _rowSelectAfterClick = ({ rowData, rowIndex, rowKey, onClick }) => {\r\n        const checked = !_selectedRowKeys.includes(rowKey);\r\n        const newRowObject = {\r\n            rowData: { ...rowData },\r\n            rowIndex: rowIndex,\r\n            rowKey: rowKey\r\n        };\r\n        if (!selectable) {\r\n            // console.log('_rowEventHandlers -> onClick', rowKey, rowIndex);\r\n            // console.log('q onRowClick => ', rowData)\r\n            // if(_selectedRowKeys)\r\n            if (checked && !editMode)\r\n                _setSelectedRowsHandler([rowKey], rowData);\r\n            onSelectedRowsChange([rowKey], [rowData]);\r\n        } else {\r\n            onChangeSelectionCell({\r\n                ...newRowObject,\r\n                column: _getSelectionColumnProps(),\r\n                rows: _rows,\r\n                checked: checked\r\n            });\r\n        }\r\n        onClick && onClick({ selected: checked, ...newRowObject });\r\n    };\r\n\r\n    const _rowEventHandlers = {\r\n        onClick: _onRowClick,\r\n        onDoubleClick: _onRowDoubleClick\r\n\r\n        // onClick: useSimpleAndDoubleClick(_onRowClick, _onRowDoubleClick),\r\n        // onClick: simpleAndDoubleClick(_onRowClick, _onRowDoubleClick),\r\n\r\n        // onDoubleClick: console.log('onDoubleClick'),\r\n        // onContextMenu: console.log('context menu'),\r\n        // onMouseEnter: console.log('mouse enter'),\r\n        // onMouseLeave: console.log('mouse leave'),\r\n    };\r\n\r\n\r\n    /** Событие при сортировке */\r\n    const _onColumnSort = (sortBy) => {\r\n        // console.log(\"sortBy\", sortBy);\r\n        tableRef.current.scrollToRow(0, \"auto\");\r\n        let localSortBy = {key: sortBy.key, order: sortBy.order};\r\n        if (_sortBy && _sortBy.order === \"desc\") {\r\n            localSortBy = {};\r\n        }\r\n        // let localSortBy = sortBy && sortBy.order ? {key: sortBy.key, order: sortBy.order} : {} //\r\n        setSortBy(localSortBy);\r\n        // console.log(\"localSortBy\", localSortBy);\r\n\r\n\r\n        // Для серверной сортировки - сбросить выделение\r\n        // if (type !== 'localSide') {\r\n        // setSelectedRowKeys([]);\r\n        _setSelectedRowsHandler();\r\n        // }\r\n        const loadParams = {\r\n            sortBy: localSortBy,\r\n            filter: _filter,\r\n            searchLine: _searchValue,\r\n            reload: true\r\n        };\r\n        _dataProcessing(loadParams);\r\n    };\r\n\r\n    /** VIEW FUNCTIONS */\r\n\r\n\r\n    const _footer = (\r\n        <React.Fragment>\r\n            {_footerShow ? (\r\n                <React.Fragment>\r\n                    {/*className={'BaseTable__footer__counter'}>*/}\r\n                    <div key={\"footer-left-custom-side\"} className={\"left-custom-side\"}>\r\n                        {footerProps.leftCustomSideElement\r\n                            ? Array.isArray(footerProps.leftCustomSideElement)\r\n                                ? <FormItems items={footerProps.leftCustomSideElement} />\r\n                                : <footerProps.leftCustomSideElement />\r\n                            : null}\r\n                    </div>\r\n                    <div key={\"footer-center-custom-side\"} className={\"center-custom-side\"}>\r\n                        {footerProps.centerCustomSideElement\r\n                            ? Array.isArray(footerProps.centerCustomSideElement)\r\n                                ? <FormItems items={footerProps.centerCustomSideElement} />\r\n                                : <footerProps.centerCustomSideElement />\r\n                            : null}\r\n                    </div>\r\n                    <div key={\"footer-right-custom-side\"} className={\"right-custom-side\"}>\r\n                        {footerProps.rightCustomSideElement\r\n                            ? Array.isArray(footerProps.rightCustomSideElement)\r\n                                ? <FormItems items={footerProps.rightCustomSideElement} />\r\n                                : <footerProps.rightCustomSideElement />\r\n                            : null}\r\n                    </div>\r\n\r\n                    {selectable ? (\r\n                        <React.Fragment>\r\n                            {footerProps.showElements.includes(\"selected\")\r\n                                ? <span>{footerProps.selectedTitle} {_selectedRowKeys.length}</span>\r\n                                : null}\r\n                            {footerProps.showElements.includes(\"loaded\")\r\n                                ?\r\n                                <span>{footerProps.loadedTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\r\n                                : null}\r\n                        </React.Fragment>\r\n                    ) : null}\r\n\r\n                    {footerProps.showElements.includes(\"total\")\r\n                        ? infinityMode && requestLoadCount !== noop && !expandColumnKey && !expandLazyLoad\r\n                            ? <span>{footerProps.totalTitle} {_totalCountRows}</span>\r\n                            : <span>{footerProps.totalTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\r\n                        : null}\r\n\r\n                </React.Fragment>\r\n            ) : null}\r\n        </React.Fragment>\r\n    );\r\n\r\n    /** Событие при рендере для стилизации */\r\n    const _rowClassName = ({ rowData, rowIndex }) => {\r\n        const { rowClassName } = props;\r\n        return [\r\n            rowClassName,\r\n            _selectedRowKeys.includes(rowData[rowKey]) && \"row-selected\",\r\n            zebraStyle ? (rowIndex % 2 === 0 ? \"even\" : \"odd\") : \"\",\r\n            rowBordered ? \"bordered\" : \"\"\r\n        ].join(\" \");\r\n    };\r\n\r\n    // const _cellProps = () => ({ className: [cellBordered ? 'cellBordered' : ''].join(' ')})\r\n\r\n    const _rowRenderer = (props) => {\r\n        const { cells, rowData, rowIndex } = props;\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    width: \"100%\",\r\n                    height: \"100%\"\r\n                }}\r\n                onClick={(e) =>\r\n                    simpleAndDoubleClick(_onRowClick, _onRowDoubleClick, {\r\n                        rowData,\r\n                        rowIndex,\r\n                        rowKey: rowData[rowKey]\r\n                    })(e)}\r\n            >\r\n                {cells}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const _rowProps = ({ columns, rowData, rowIndex }) => ({\r\n        onClick: (e) =>\r\n            simpleAndDoubleClick(_onRowClick, _onRowDoubleClick, { rowData, rowIndex, rowKey: rowData[rowKey] })(e)\r\n\r\n    });\r\n\r\n    /** LOAD DATA FUNCTIONS */\r\n    const onEndReached = () => {\r\n        let selectAll;\r\n        const selectLength = _selectedRowKeys.length;\r\n        if (selectLength === 0) selectAll = false;\r\n        else if (selectLength > 0) selectAll = null;\r\n\r\n        setSelectAll(selectAll);\r\n        // console.log('_filter', _filter);\r\n\r\n        if (infinityMode) {\r\n            const loadParams = {\r\n                sortBy: _sortBy,\r\n                filter: _filter,\r\n                searchLine: _searchValue,\r\n                reload: false\r\n            };\r\n            _dataProcessing(loadParams);\r\n        }\r\n    };\r\n\r\n    /** SELECTABLE FUNCTIONS */\r\n\r\n    /** Событие при изменении галочки одной строки */\r\n    const _onChangeSelectHandler = ({\r\n                                        selected,\r\n                                        _selectedRow,\r\n                                        _selectAll,\r\n                                        _selectedRowKeys,\r\n                                        _selectedRowObjects,\r\n                                        _indeterminateRowKeys\r\n                                    }) => {\r\n        // console.group(\"_onChangeSelectHandler\", _selectedRowKeys);\r\n        // console.log(\"_selectedRowKeys\", _selectedRowKeys);\r\n        // console.log(\"_indeterminateRowKeys\", _indeterminateRowKeys);\r\n        // console.log(\"_selectAll\", _selectAll);\r\n        // console.groupEnd();\r\n\r\n        // setSelectedRowKeys(_selectedRowKeys);\r\n        // selectedDispatch(_selectedRowObjects);\r\n        _setSelectedRowsHandler(_selectedRowKeys, _selectedRowObjects);\r\n        setIndeterminateRowKeys(_indeterminateRowKeys);\r\n        setSelectAll(_selectAll);\r\n        onSelectedRowsChange(_selectedRowKeys, _selectedRowObjects);\r\n    };\r\n\r\n    /** Событие при изменении галочки \"Выделить все\" */\r\n    const _onSelectAllHandler = ({ selected, rowKeys, rowObjects }) => {\r\n        const selectedKeys = selected ? rowKeys : [];\r\n        // setSelectedRowKeys(selectedKeys);\r\n        // selectedDispatch(selected ? rowObjects : []);\r\n        _setSelectedRowsHandler(selectedKeys, selected ? rowObjects : []);\r\n        setIndeterminateRowKeys([]);\r\n        setSelectAll(selected);\r\n        // setSelectedRowObjects(rows);\r\n        // console.log(\"_handleSelectAll\", selectedKeys);\r\n        onSelectedRowsChange(selectedKeys, rowObjects);\r\n    };\r\n    //\r\n    // const SelectionCell = (props) => {\r\n    // \tconst {rowData, column} = props;\r\n    // \tconst {selectedRowKeys, indeterminateRowKeys, rowKey} = column;\r\n    // \tconst det = indeterminateRowKeys.includes(rowData[rowKey]);\r\n    // \tconst checked = selectedRowKeys.includes(rowData[rowKey]);\r\n    // \tReact.useEffect(() => {\r\n    // \t\tconsole.log(\"selectionCell\", props);\r\n    // \t}, []);\r\n    //\r\n    // \tconst _handleChange = (checked) => {\r\n    // \t\tconsole.log(\"_handleChange\", checked);\r\n    // \t}\r\n    //\r\n    // \treturn (\r\n    // \t\t<Checkbox\r\n    // \t\t\tindeterminate={det}\r\n    // \t\t\tonChange={(e) => _handleChange(e.target.checked)}\r\n    // \t\t\tchecked={checked}\r\n    // \t\t/>\r\n    // \t);\r\n    // };\r\n\r\n    const _getSelectionColumnProps = () => ({\r\n        rowKey: rowKey,\r\n        parentKey: expandParentKey,\r\n        nodeAssociated: nodeAssociated,\r\n        selectedRowKeys: _selectedRowKeys,\r\n        indeterminateRowKeys: _indeterminateRowKeys,\r\n        onChange: _onChangeSelectHandler\r\n    });\r\n\r\n    const _getColumns = () => {\r\n        const selectColumn = {\r\n            key: \"__selection__\",\r\n            headerRenderer: SelectionHead,\r\n            cellRenderer: <SelectionCell />,\r\n            width: 40,\r\n            flexShrink: 0,\r\n            resizable: false,\r\n            frozen: \"left\",\r\n            selectAll: selectAll,\r\n            onSelectAll: _onSelectAllHandler,\r\n            ..._getSelectionColumnProps()\r\n        };\r\n        return selectable ? [selectColumn, ...columns] : [...columns];\r\n    };\r\n\r\n\r\n    /** TREE FUNCTIONS */\r\n\r\n    const _onExpandedRowsChange = (expandedRowKeys) => {\r\n        // console.log(\"_onExpandedRowsChange\", expandedRowKeys);\r\n        onExpandedRowsChange(expandedRowKeys);\r\n    };\r\n    const _onRowExpand = ({ expanded, rowData, rowIndex, rowKey }) => {\r\n        // console.log(\"_onRowExpand\", rowData, expanded, rowIndex, rowKey);\r\n        if (expanded) {\r\n            setExpandedRowKeys([..._expandedRowKeys, rowKey]);\r\n\r\n            if (expandLazyLoad) {\r\n                const loadParams = {\r\n                    sortBy: _sortBy,\r\n                    filter: { ..._filter, [expandParentKey]: rowKey },\r\n                    searchLine: _searchValue,\r\n                    reload: false,\r\n                    expandRow: rowData\r\n                };\r\n                // _callPropsOnLoad(loadParams);\r\n                _dataProcessing(loadParams);\r\n            }\r\n        } else {\r\n            let expandedRowKeys = [..._expandedRowKeys];\r\n            let allChildKeys = flatten(\r\n                getTableRowKeys(rowData.children, props.rowKey)\r\n            );\r\n            allChildKeys.push(rowKey);\r\n            // console.log('allChildKeys', allChildKeys);\r\n            setExpandedRowKeys(\r\n                expandedRowKeys.filter((item) => !allChildKeys.includes(item))\r\n            );\r\n        }\r\n        onRowExpand({ expanded, rowData, rowIndex, rowKey });\r\n    };\r\n\r\n\r\n    /** ROW CHANGE FUNCTIONS */\r\n\r\n    /**\r\n     * Find row by key\r\n     * @param data - table rows\r\n     * @param key - key row for find\r\n     * @param callback - function for return result\r\n     */\r\n    const loop = (data, key, callback) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i][rowKey] === key) {\r\n                // console.log(`Selected => index: [${i}], path: [${data[i].path}]`, data);\r\n                return callback(data[i], i, data);\r\n            } else {\r\n                // console.log(`Other => index: [${i}], path: [${data[i].path}]`);\r\n            }\r\n            if (data[i].children) {\r\n                loop(data[i].children, key, callback);\r\n            }\r\n        }\r\n    };\r\n\r\n    const _addRows = (rows) => {\r\n        let saveRows = [...rows];\r\n        if (customFields)\r\n            // Фильтрация по пользовательским параметрам\r\n            saveRows = saveRows.filter((sRow) => {\r\n                let isValid = [];\r\n                customFields.forEach((field) => {\r\n                    // Валидация по пользовательской логике функции validate\r\n                    if (field.validate)\r\n                        isValid.push(field.validate(sRow, _rows));\r\n\r\n                    // Создание или переобразование по пользовательской логике функции value\r\n                    if (field.value)\r\n                        sRow[field.name] = field.value(sRow, _rows);\r\n                });\r\n                // console.log('_addRows isValid', isValid);\r\n                if (!isValid.includes(false))\r\n                    return sRow;\r\n            });\r\n        const _localRows = [..._rows, ...saveRows];\r\n        _setRowsHandler(_localRows);\r\n        onTableEventsDispatch(\"onAddRows\", _localRows);\r\n    };\r\n\r\n    const _addRow = (row) => {\r\n        let _row = { ...row };\r\n        let isValid = true;\r\n        if (customFields) {\r\n            let validations = [];\r\n            customFields.forEach((field) => {\r\n                if (field.validate)\r\n                    validations.push(field.validate(_row, _rows));\r\n\r\n                if (field.value)\r\n                    _row[field.name] = field.value(_row, _rows);\r\n            });\r\n            isValid = !validations.includes(false);\r\n        }\r\n        if (isValid) {\r\n            const _localRows = [..._rows, _row];\r\n            _setRowsHandler(_localRows);\r\n            onTableEventsDispatch(\"onAddRow\", _localRows);\r\n        }\r\n\r\n    };\r\n\r\n    const _addRowAsCopy = () => {\r\n        // console.log(\"_onClickAddAsCopy\", selectedRow);\r\n        const _localRows = [..._rows, findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0])];\r\n        _setRowsHandler(_localRows);\r\n        onTableEventsDispatch(\"onAddRowAsCopy\", _localRows);\r\n\r\n    };\r\n\r\n    const _editRow = (row) => {\r\n        // console.log(\"_onClickEdit\", selectedRow);\r\n        const data = [..._rows];\r\n        const key = row[rowKey];\r\n        loop(data, key, (item, index, arr) => {\r\n            data[index] = row;\r\n            _setRowsHandler(data);\r\n            // selectedDispatch(row)\r\n            _setSelectedRowsHandler(_selectedRowKeys, undefined, data);\r\n            onTableEventsDispatch(\"onEditRow\", data);\r\n\r\n            // setSelectedRowKeys([]);\r\n        });\r\n        // props.onClickEdit(event, selectedRow);\r\n    };\r\n\r\n    const _removeRow = (event) => {\r\n        // console.log(\"_onClickDelete\", autoDeleteRows, selectedRowKeys);\r\n        const _localRows = _rows.filter(\r\n            (item) => !_selectedRowKeys.includes(item[rowKey]));\r\n        _setRowsHandler(_localRows);\r\n        _setSelectedRowsHandler();\r\n        onTableEventsDispatch(\"onRemoveRow\", _localRows);\r\n\r\n        // setSelectedRowKeys([]);\r\n        // if (selectable)\r\n        // \tselectedDispatch([]);\r\n        // else\r\n        // \tselectedDispatch(undefined);\r\n        // commandPanelProps.onClickDelete(event, _selectedRowKeys);\r\n    };\r\n\r\n    // const _moveUpRow\r\n\r\n    const _moveUpRow = (event) => {\r\n        const data = [..._rows];\r\n        const key = _selectedRowKeys[0];\r\n        loop(data, key, (item, index, arr) => {\r\n            const newRowIndex = _getNewIndexRow(index, index - 1);\r\n            _changeIndexRow(index, newRowIndex, arr, data, \"onMoveUpRow\");\r\n            // commandPanelProps.onClickUp(event, {\r\n            // \trowIndex: newRowIndex,\r\n            // \trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\r\n            // }, data);\r\n        });\r\n    };\r\n\r\n    const _moveDownRow = (event) => {\r\n        const data = [..._rows];\r\n        const key = _selectedRowKeys[0];\r\n        loop(data, key, (item, index, arr) => {\r\n            const newRowIndex = _getNewIndexRow(index, index + 1);\r\n            _changeIndexRow(index, newRowIndex, arr, data, \"onMoveDownRow\");\r\n            // commandPanelProps.onClickDown(event, {\r\n            // \trowIndex: newRowIndex,\r\n            // \trowData: findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0]),\r\n            // }, data);\r\n        });\r\n    };\r\n\r\n    const _getNewIndexRow = (oldIndex, newIndex) =>\r\n        newIndex >= 0 && newIndex < _rows.length ? newIndex : oldIndex;\r\n\r\n    const _changeIndexRow = (oldIndex, newIndex, arr, data, nameEvent) => {\r\n        if (newIndex >= 0 && newIndex < arr.length) {\r\n            // let arr = [..._rows]; // Копируем массив\r\n            const item = arr.splice(oldIndex, 1); // Удаляем элемент со старого места\r\n            // console.log('_changeIndexRow => ',item);\r\n            arr.splice(newIndex > 0 ? newIndex : 0, 0, item[0]); // Ставим элемент на новое место\r\n            // console.log(\"_changeIndexRow\", item[0]);\r\n            _setRowsHandler(data);\r\n            onTableEventsDispatch(nameEvent, data);\r\n\r\n        }\r\n    };\r\n\r\n    // const _onSearch = (searchLine, e) => {\r\n    // \te.preventDefault();\r\n    // \t// console.log(\"_onSearch\", searchLine);\r\n    // \ttableRef.current.scrollToRow(0, 'auto');\r\n    // \tsetSearchValue(searchLine);\r\n    // \tconst loadParams = {\r\n    // \t\tsortBy: _sortBy,\r\n    // \t\tfilter: _filter,\r\n    // \t\tsearchLine: searchLine,\r\n    // \t\treload: true,\r\n    // \t};\r\n    // \t_dataProcessing(loadParams);\r\n    // \tcommandPanelProps.onSearch(searchLine);\r\n    // };\r\n\r\n    /** SELECTED PANEL */\r\n    const _onClickDropSelectHandler = (dropObject) => {\r\n        const newSelectedKeys = _selectedRowKeys.filter(\r\n            (item) => item !== dropObject[rowKey]\r\n        );\r\n        // setSelectedRowKeys(newSelectedKeys);\r\n        _setSelectedRowsHandler(newSelectedKeys, undefined, _rows);\r\n        setSelectAll((newSelectedKeys.length === 0 ? false : null));\r\n        onSelectedRowsChange(newSelectedKeys);\r\n    };\r\n\r\n    return (\r\n        <div className={`${rtPrefix}-table ${className}`} style={style}>\r\n            <div className={`${rtPrefix}-baseTable`}>\r\n                <AutoResizer>\r\n                    {({ width, height }) => (\r\n                        <BaseTable\r\n                            ref={tableRef}\r\n                            /** Required */\r\n                            columns={_getColumns()}\r\n                            data={_rows}\r\n                            /** Control Props */\r\n                            sortBy={_sortBy}\r\n                            /** Base Props */\r\n                            width={width}\r\n                            height={height}\r\n                            rowKey={rowKey}\r\n                            // rowProps={rowProps}\r\n\r\n                            /** View Props */\r\n                            rowClassName={_rowClassName}\r\n                            emptyRenderer={empty}\r\n                            fixed={fixWidthColumn}\r\n                            footerHeight={_footerShow ? footerProps.height : 0}\r\n                            headerHeight={headerHeight}\r\n                            rowHeight={rowHeight}\r\n                            overlayRenderer={loading ? overlay : null}\r\n                            footerRenderer={_footer}\r\n                            rowRenderer={rowRenderer}\r\n                            // rowProps={_rowProps}\r\n                            // cellProps={_cellProps}\r\n                            estimatedRowHeight={estimatedRowHeight}\r\n                            /** Load Data Props */\r\n                            onEndReachedThreshold={loadThreshold}\r\n                            onEndReached={infinityMode ? onEndReached : undefined}\r\n                            disabled={disabled? disabled:loading}\r\n                            /** Tree Props */\r\n                            expandColumnKey={expandColumnKey}\r\n                            expandedRowKeys={_expandedRowKeys}\r\n                            /** Events */\r\n                            onColumnSort={_onColumnSort}\r\n                            rowEventHandlers={_rowEventHandlers}\r\n                            onExpandedRowsChange={_onExpandedRowsChange}\r\n                            onRowExpand={_onRowExpand}\r\n                            editMode={editMode}\r\n                        />\r\n                    )}\r\n                </AutoResizer>\r\n            </div>\r\n            {showSelection && selectable && !expandColumnKey ? (\r\n                <SelectionList\r\n                    onClickDropSelect={_onClickDropSelectHandler}\r\n                    selectedRowObjects={flatten(\r\n                        getTableRowObjects(_rows, rowKey)\r\n                    ).filter((item) => _selectedRowKeys.includes(item[rowKey]))}\r\n                    rowRender={rowRenderShowSelection}\r\n                />\r\n            ) : null}\r\n        </div>\r\n    );\r\n});\r\n\r\nTable.propTypes = {\r\n    /**\r\n     * REQUIRED\r\n     * */\r\n\r\n    /** Столбцы таблицы */\r\n    columns: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n\r\n    /** Режим загрузки данных по скроллу */\r\n    infinityMode: PropTypes.bool,\r\n\r\n    /**\r\n     * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\r\n     * */\r\n\r\n    /** Строки по умолчанию */\r\n    defaultRows: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /** Ключи выделенных по умолчанию строк */\r\n    defaultSelectedRowKeys: PropTypes.arrayOf(\r\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n    ),\r\n\r\n    /** Значение строки поиска по умолчанию строк */\r\n    defaultSearchValue: PropTypes.string,\r\n\r\n    /** Объект фильтрации по умолчанию */\r\n    defaultFilter: PropTypes.object,\r\n\r\n    /** Сортировка по умолчанию */\r\n    defaultSortBy: PropTypes.shape({\r\n        /** Ключ поля для сортировки */\r\n        key: PropTypes.string,\r\n        /** Направление сортировки */\r\n        order: PropTypes.oneOf([\"asc\", \"desc\"])\r\n    }),\r\n\r\n    /**\r\n     * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\r\n     * */\r\n\r\n    /** Строки таблицы. Используется для контроля таблицы из вне. */\r\n    rows: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /** Функция задания строк таблицы. */\r\n    setRows: PropTypes.func,\r\n\r\n    /** Выделенные строки таблицы. */\r\n    selectedRowKeys: PropTypes.arrayOf(\r\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n    ),\r\n\r\n    /** Значение строки поиска */\r\n    searchValue: PropTypes.string,\r\n\r\n    /** Объект фильтрации */\r\n    filter: PropTypes.object,\r\n\r\n    /** Объект сортировки */\r\n    sortBy: PropTypes.shape({\r\n        /** Ключ поля для сортировки */\r\n        key: PropTypes.string,\r\n        /** Направление сортировки */\r\n        order: PropTypes.oneOf([\"asc\", \"desc\"])\r\n    }),\r\n\r\n    /**\r\n     * BASE PROPS\r\n     * */\r\n\r\n    /** Поле для уникальной идентификации строки */\r\n    rowKey: PropTypes.string,\r\n\r\n\r\n    /** Дополнительные поля и валидация в объекты таблицы\r\n     * Данный параметр (props) осуществляет дополнительную обработку объекта таблицы после закрытия модалки, но перед добавлением в таблицу.\r\n     * Можно как изменить существующие поля объекта, так и добавить новые поля объекта.\r\n     * `customFields` - массив объектов для дополнения или изменения полей объектов таблицы\r\n     * ```json\r\n     * [\r\n     *    {\r\n     * \t\tname: <String>,\r\n     * \t\tvalue: <func>,\r\n     * \t\tvalidate: <func>\r\n     * \t}\r\n     * ]\r\n     * ```\r\n     * `name` – Имя параметра в объекте\r\n     * `value` – Функция формирования значения - `(row, rows) => { return {} }`\r\n     * `validate` – Функция проверки значения - `(row, rows) => { return <Bool> }`\r\n     * Параметра **validate** работает **только** для модельного окна тип `select`.\r\n     * Validate можно наложить на любое кол-во полей объекта и если хотя бы один `validate` === `false`, то исключает строку из добавления.\r\n     */\r\n    customFields: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /**\r\n     * Данный параметр (props) позволяет добавить или переопределить пропсы для колонок, которые заданы конфигурацией на сервере\r\n     * `customColumnProps` - массив объектов `props` к `columns`. Один объект описывает доп. параметры для одной колонки\r\n     * ```json\r\n     * [\r\n     *    {\r\n     * \t\tname: <String>,\r\n     * \t\tcellRenderer: <func>,\r\n     * \t\t...advancedColProps\r\n     * \t}\r\n     * ]\r\n     * ```\r\n     * `name` – key колонки к которой надо применить дополнительные пропсы\r\n     * `cellRenderer` – `({ cellData, columns, column, columnIndex, rowData, rowIndex, container, isScrolling }) => return <ReactNode>`\r\n     * `advancedColProps` – подолнительные свойства колонок тут -> [Column](https://autodesk.github.io/react-base-table/api/column)\r\n     */\r\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /**\r\n     * VIEW PROPS\r\n     * */\r\n\r\n    /** Вывод когда нет данных */\r\n    empty: PropTypes.element,\r\n\r\n    /** Отображение загрузки данных */\r\n    overlay: PropTypes.element,\r\n\r\n    /** Фиксированная ширина столбцов. Появится боковой скрол */\r\n    fixWidthColumn: PropTypes.bool,\r\n\r\n    footerProps: PropTypes.shape({\r\n\r\n        /** Высота подвала */\r\n        height: PropTypes.number,\r\n\r\n        /** Массив элементов футтера, которые надо отобразить\r\n         * ['selected', 'loaded', 'total'] */\r\n        showElements: PropTypes.arrayOf(PropTypes.string),\r\n\r\n        /** Заколовок для кол-ва выбранных объектов */\r\n        selectedTitle: PropTypes.string,\r\n\r\n        /** Заколовок для кол-ва загруженны объектов */\r\n        loadedTitle: PropTypes.string,\r\n\r\n        /** Заколовок для кол-ва всего объектов */\r\n        totalTitle: PropTypes.string,\r\n\r\n        /** Левый кастомный элемент командной панели */\r\n        leftCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\r\n\r\n        /** Центральный кастомный элемент командной панели */\r\n        centerCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\r\n\r\n        /** Правый кастомный элемент командной панели */\r\n        rightCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)])\r\n    }),\r\n\r\n    /** Высота заголовка таблицы */\r\n    headerHeight: PropTypes.number,\r\n\r\n    /** Высота строки таблицы */\r\n    rowHeight: PropTypes.number,\r\n\r\n    /** Custom row renderer\r\n     * Параметры - `({ isScrolling, cells, columns, rowData, rowIndex, depth })` */\r\n    rowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\r\n\r\n    /** Строки будут в зебро-стиле */\r\n    zebraStyle: PropTypes.bool,\r\n\r\n    /** Высота расширения */\r\n    estimatedRowHeight: PropTypes.number,\r\n\r\n    /** Отображать ли разделители ячеек в строке */\r\n    cellBordered: PropTypes.bool,\r\n\r\n    /** Отобрадать ли разделители строк */\r\n    rowBordered: PropTypes.bool,\r\n\r\n    className: PropTypes.string,\r\n\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * LOAD DATA PROPS\r\n     * */\r\n\r\n    /** Порог в пикселях для вызова _onLoad.\r\n     * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\r\n    loadThreshold: PropTypes.number,\r\n\r\n    /** Размер страницы */\r\n    pageSize: PropTypes.number,\r\n\r\n    /** Функция запроса для конфигурации */\r\n    requestLoadConfig: PropTypes.func,\r\n\r\n    /** Функция запроса для загрузки строк (данных) */\r\n    requestLoadRows: PropTypes.func,\r\n\r\n    /** Функция запроса для загрузки строк (данных) */\r\n    requestLoadCount: PropTypes.func,\r\n\r\n    /** Имя параметра для поиска */\r\n    searchParamName: PropTypes.string,\r\n\r\n    /**\r\n     * SELECTABLE PROPS\r\n     * */\r\n\r\n    /** Таблица с возможностью выбора строки */\r\n    selectable: PropTypes.bool,\r\n\r\n    /**\r\n     * TREE PROPS\r\n     * */\r\n\r\n    /** Родительский узел и дочерние узлы связаны (Работает только при `selectable`) */\r\n    nodeAssociated: PropTypes.bool,\r\n\r\n    /** Ключ колонки по которой строить иерархию */\r\n    expandColumnKey: PropTypes.string,\r\n\r\n    /** Открыть по умолчанию вложенность до уровня N или 'All' */\r\n    expandDefaultAll: PropTypes.bool,\r\n\r\n    /** Загружать ноды иерархии по одной */\r\n    expandLazyLoad: PropTypes.bool,\r\n\r\n    /** Поле в котором хранится ссылка на родителя */\r\n    expandParentKey: PropTypes.string,\r\n\r\n    /**\r\n     * EVENTS\r\n     * */\r\n\r\n    /** Событие при клике на строку (только при `selectable` = `false`)\r\n     * `({selected, rowData, rowIndex}) => {}` */\r\n    onRowClick: PropTypes.func,\r\n\r\n    /** Событие при двойном клике на строку.\r\n     * `({rowData, rowIndex, rowKey}) => {}` */\r\n    onRowDoubleClick: PropTypes.func,\r\n\r\n    /** События при открытии / закрытии ноды\r\n     * `({ expanded, rowData, rowIndex, rowKey }) => {}` */\r\n    onRowExpand: PropTypes.func,\r\n\r\n    /** Событие при выборе строки.\r\n     * `([rowKeys], [rowDatas]) => {}` */\r\n    onSelectedRowsChange: PropTypes.func,\r\n\r\n    /** События при открытии / закрытии ноды\r\n     * `(expandedRowKeys) => {}` - массив ключей открытых нод */\r\n    onExpandedRowsChange: PropTypes.func,\r\n\r\n    /** SELECTED PANEL */\r\n\r\n    /** Отображать ли панель выбранных элементов */\r\n    showSelection: PropTypes.bool,\r\n\r\n    /** Строка или функция для отображения элементов списка выбранных\r\n     * Строка - имя поля\r\n     * Функция - рендер строк.\r\n     * `({ rowData, rowIndex }) => { return <Component> }` */\r\n    rowRenderShowSelection: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.string\r\n    ]),\r\n\r\n    /** Путь в сторе куда класть выбранную строку таблицы */\r\n    dispatchPath: PropTypes.string,\r\n\r\n    /** Объект для подписки на изменения в STORE */\r\n    subscribe: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nTable.defaultProps = {\r\n    infinityMode: false,\r\n    editMode: false,\r\n    defaultRows: [],\r\n    defaultSelectedRowKeys: [],\r\n    defaultSearchValue: \"\",\r\n    defaultFilter: {},\r\n    defaultSortBy: {},\r\n\r\n    rows: [],\r\n    setRows: noop,\r\n    selectedRowKeys: [],\r\n    searchValue: \"\",\r\n    filter: {},\r\n    sortBy: {},\r\n\r\n    rowKey: \"id\",\r\n\r\n    empty: empty,\r\n    overlay: overlay,\r\n    fixWidthColumn: false,\r\n    footerProps: {\r\n        height: 30,\r\n        showElements: [],\r\n        selectedTitle: \"Выделено:\",\r\n        loadedTitle: \"Загружено записей:\",\r\n        totalTitle: \"Всего записей:\",\r\n        leftCustomSideElement: null,\r\n        centerCustomSideElement: null,\r\n        rightCustomSideElement: null\r\n    },\r\n    headerHeight: 36,\r\n    rowHeight: 36,\r\n    zebraStyle: false,\r\n    estimatedRowHeight: undefined,\r\n    cellBordered: false,\r\n    rowBordered: true,\r\n    className: \"\",\r\n    style: {},\r\n\r\n    loadThreshold: 300,\r\n    pageSize: 50,\r\n    requestLoadRows: undefined,\r\n    requestLoadCount: noop,\r\n    searchParamName: \"searchLine\",\r\n\r\n    selectable: false,\r\n\r\n    nodeAssociated: true,\r\n    expandColumnKey: undefined,\r\n    expandDefaultAll: true,\r\n    expandLazyLoad: false,\r\n    expandParentKey: \"parentId\",\r\n\r\n    onRowClick: noop,\r\n    onRowDoubleClick: noop,\r\n    onRowExpand: noop,\r\n    onSelectedRowsChange: noop,\r\n    onExpandedRowsChange: noop,\r\n\r\n    showSelection: false,\r\n\r\n    dispatchPath: undefined,\r\n    subscribe: []\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { getSortBy, noop, notificationError } from \"../../utils/baseUtils\";\r\nimport Table from \"./Table\";\r\nimport { Typography } from \"antd\";\r\n\r\nconst defaultProps = {\r\n    defaultFilter: {},\r\n    rowKey: 'id',\r\n    pageSize: 50,\r\n    requestLoadConfig: noop,\r\n    expandColumnKey: undefined,\r\n    expandLazyLoad: false,\r\n    expandParentKey: 'parentId',\r\n    customColumnProps: [],\r\n};\r\n\r\nconst ConfigLoader = props => {\r\n\r\n    /** Конфигурация таблицы */\r\n    const [tableConfig, setTableConfig] = useState(undefined);\r\n\r\n    const {\r\n        defaultSortBy,\r\n        defaultFilter,\r\n        rowKey,\r\n        pageSize,\r\n        requestLoadConfig,\r\n        expandColumnKey,\r\n        expandLazyLoad,\r\n        expandParentKey,\r\n        customColumnProps,\r\n        cellBordered,\r\n    } = {...defaultProps, ...props};\r\n\r\n    useEffect(() => {\r\n        let cleanupFunction = false;\r\n        const loadData = async () => {\r\n            if (requestLoadConfig) {\r\n                // console.log('requestLoadConfig => ', typeof requestLoadConfig);\r\n                // console.log('requestLoadRows => ', typeof props.requestLoadRows);\r\n                requestLoadConfig()\r\n                    .then((response) => {\r\n                        // let result = response.data;\r\n                        // console.log('requestLoadConfig -> ', response.data);\r\n                        if(!cleanupFunction) {\r\n                            // setTableConfig(response.data);\r\n                            configParser(response.data);\r\n                        }\r\n                    })\r\n                    .catch(error => notificationError(error, 'Ошибка получения конфигурации') );\r\n            }\r\n        };\r\n        loadData().then(r => r);\r\n        return () => cleanupFunction = true;\r\n    }, []);\r\n\r\n    const configParser = (config) => {\r\n        // Массив колонок\r\n        let _columns = [];\r\n        // Сортировка по умолчанию\r\n        let _defaultSorter = [];\r\n\r\n        config && config.fields && config.fields.forEach((item) => {\r\n            const colProps = customColumnProps &&\r\n                customColumnProps.find((render) =>\r\n                    render.name === item.name || render.name === item.alias);\r\n\r\n            // Индекс или имя поля в данных\r\n            const dataIndex = (item.alias ? item.alias : item.name);\r\n\r\n            if (_defaultSorter.length === 0 || _defaultSorter[1] === undefined)\r\n                _defaultSorter = getSortBy(defaultSortBy, item.defaultSort, dataIndex);\r\n\r\n            _columns.push({\r\n                key: dataIndex,\r\n                title: item.header ? item.header : item.name,\r\n                dataKey: dataIndex,\r\n                align: item.align,\r\n                width: item.width,\r\n                resizable: item.resizable,\r\n                sortable: item.sortable,\r\n                hidden: !item.visible,\r\n                className: [cellBordered ? 'bordered' : ''].join(' '),\r\n                headerClassName: [cellBordered ? 'bordered' : ''].join(' '),\r\n                // cellRenderer: cellR && cellR.cellRender,\r\n                ...colProps,\r\n                cellRenderer: (object) => {\r\n                    if (colProps && colProps.cellRenderer)\r\n                        return <colProps.cellRenderer {...object}/>\r\n                        // return colProps.cellRenderer(object) ? colProps.cellRenderer(object) : '---';\r\n                    else\r\n                        return object.cellData\r\n                            ? <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>{object.cellData}</Typography.Text>\r\n                            : <Typography.Text ellipsis={true} style={{width: '100%'}} className={'rt-table-cell'}>---</Typography.Text> ;\r\n                        // return object.cellData ? object.cellData : '---';\r\n                },\r\n            });\r\n        });\r\n\r\n        let _defaultFilter;\r\n        if (config && config.hierarchical && config.hierarchyLazyLoad) {\r\n            const parentKey = config.hierarchyField\r\n                ? config.hierarchyField.split('/')[1]\r\n                : expandParentKey;\r\n            _defaultFilter =  {...defaultFilter, [parentKey]: null};\r\n        } else _defaultFilter = defaultFilter;\r\n\r\n\r\n        setTableConfig({\r\n            columns: _columns,\r\n            defaultSortBy: _defaultSorter[0],\r\n            defaultFilter: _defaultFilter,\r\n            rowKey:\r\n                config && config.hierarchical && config.hierarchyField\r\n                    ? config.hierarchyField.split('/')[0]\r\n                    : rowKey,\r\n            expandParentKey:\r\n                config && config.hierarchical && config.hierarchyField\r\n                    ? config.hierarchyField.split('/')[1]\r\n                    : expandParentKey,\r\n            expandColumnKey:\r\n                config && config.hierarchical && config.hierarchyView\r\n                    ? config.hierarchyView\r\n                    : expandColumnKey,\r\n            expandLazyLoad:\r\n                config && config.hierarchical && config.hierarchyLazyLoad\r\n                    ? config.hierarchyLazyLoad\r\n                    : expandLazyLoad,\r\n            pageSize: config && config.hierarchical ? 1 : pageSize,\r\n        });\r\n    }\r\n\r\n    if(tableConfig)\r\n        return ( <Table {...props} {...tableConfig} /> );\r\n    else\r\n        return null\r\n};\r\n\r\nexport default ConfigLoader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ColumnResizer from \"react-base-table/lib/ColumnResizer\";\r\nimport { rtPrefix } from \"../../utils/variables\";\r\n\r\nconst HeaderCell = (props) => {\r\n    // console.log('HeaderCell => ', props);\r\n\r\n    const { column, onResize, ...restProps } = props;\r\n\r\n    if (!column)\r\n        return <th {...restProps} />;\r\n\r\n    const { width, resizable, headerRenderer } = column;\r\n\r\n    if (!width)\r\n        return <th {...restProps} />;\r\n\r\n    // if (headerRenderer) {\r\n    //     let childNode\r\n    //     if( typeof headerRenderer === 'function') {\r\n    //         childNode = headerRenderer()\r\n    //     }\r\n    //     else {\r\n    //         childNode = headerRenderer\r\n    //     }\r\n    //\r\n    //     return (\r\n    //         <th {...restProps}>\r\n    //             {childNode}\r\n    //             {resizable &&\r\n    //             <ColumnResizer\r\n    //                 className={`${rtPrefix}-column-resizer`}\r\n    //                 column={{ width: width, maxWidth: 1000 }}\r\n    //                 onResize={onResize}\r\n    //             />}\r\n    //         </th>\r\n    //     );\r\n    // } else {\r\n        return (\r\n            <th {...restProps}>\r\n                {restProps.children}\r\n                {resizable &&\r\n                <ColumnResizer\r\n                    className={`${rtPrefix}-column-resizer`}\r\n                    column={{ width: width, maxWidth: 1000 }}\r\n                    onResize={onResize}\r\n                />}\r\n            </th>\r\n        );\r\n    // }\r\n};\r\n\r\nHeaderCell.propTypes = {\r\n    onResize: PropTypes.func,\r\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    resizable: PropTypes.bool\r\n};\r\n\r\nexport default HeaderCell;\r\n","import React, {useRef, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst HeaderRow =  props => {\r\n    const headerRowRef = useRef();\r\n    const {headerHeight, setHeaderHeight, ...restProps} = props;\r\n    useEffect(() => {\r\n\r\n        const newHeight = headerRowRef && headerRowRef.current && headerRowRef.current.clientHeight;\r\n        if(headerHeight !== newHeight) {\r\n            // console.log('Row height', newHeight) //clientHeight\r\n            setHeaderHeight(newHeight)\r\n        }\r\n    })\r\n    return (\r\n        <tr {...restProps} ref={headerRowRef}/>\r\n    );\r\n};\r\n\r\nHeaderRow.propTypes = {\r\n    headerHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    setHeaderHeight: PropTypes.func,\r\n}\r\n\r\nexport default HeaderRow;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BodyCell = props => {\r\n\r\n  const {column, rowData, rowIndex, ...restProps} = props;\r\n\r\n  if(column && column.cellComponent) {\r\n    // console.log('BodyCell => ', restProps);\r\n    return (\r\n      <td {...restProps} style={{...restProps.style, padding: 0}}>\r\n        <column.cellComponent\r\n          column={column}\r\n          cellData={restProps.title}\r\n          rowData={rowData}\r\n          rowIndex={rowIndex}\r\n        />\r\n      </td>\r\n    )\r\n  } else {\r\n    return <td {...restProps}/>;\r\n  }\r\n\r\n};\r\n\r\nBodyCell.propTypes = {\r\n\r\n};\r\n\r\nexport default BodyCell;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { rtPrefix } from \"../../utils/variables\";\r\nimport { connect } from \"react-redux\";\r\nimport { AutoResizer } from \"react-base-table\";\r\nimport {\r\n    findNodeByRowKey,\r\n    flatten,\r\n    getObjectExcludedProps, getTableRowKeys, getTableRowObjects, noop,\r\n    notificationError,\r\n    useMounted\r\n} from \"../../utils/baseUtils\";\r\nimport { Space, Table as AntTable } from \"antd\";\r\nimport { CaretDownOutlined, CaretRightOutlined, CaretUpOutlined } from \"@ant-design/icons\";\r\nimport { empty, overlay } from \"../ReactBaseTable/defaultSettings\";\r\nimport HeaderCell from \"./HeaderCell\";\r\nimport HeaderRow from \"./HeaderRow\";\r\nimport PropTypes from \"prop-types\";\r\nimport FormItems from \"../../Form/FormItems\";\r\nimport moment from \"moment\";\r\nimport BodyCell from \"./BodyCell\";\r\nimport { getExtraData, mapDispatchToProps, mapStateToProps } from \"../../utils/storeUtils\";\r\n\r\nconst excludeProps = [\r\n    \"defaultRows\",\r\n    \"defaultSelectedRowKeys\",\r\n    \"defaultSearchValue\",\r\n    \"defaultFilter\",\r\n    \"defaultSortBy\",\r\n    \"rows\",\r\n    \"requestLoadRows\",\r\n    \"pageSize\",\r\n    \"searchParamName\",\r\n    \"onRowClick\",\r\n    \"onRowDoubleClick\",\r\n];\r\n\r\nconst Table = props => {\r\n    /** Индикатор загрузки данных */\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    /** TABLE STATES */\r\n    /** Столбцы таблицы */\r\n    const [_columns, _setColumns] = useState([]);\r\n    /** Строки таблицы */\r\n    const [_rows, _setRows] = useState([]);\r\n    /** Ключи выделенных строк */\r\n    const [_selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n    /** Значение строки поиска */\r\n    const [_searchValue, setSearchValue] = useState(\"\");\r\n    /** Объект фильтра */\r\n    const [_filter, setFilter] = useState({});\r\n    /** Объект соритировки */\r\n    const [_sortBy, setSortBy] = useState({});\r\n\r\n    /** TREE STATES */\r\n    /** Ключи строк с кубиками при selectable = true */\r\n    // const [_indeterminateRowKeys, setIndeterminateRowKeys] = useState([]);\r\n    /** Ключи раскрытых строк при selectable = true */\r\n    const [_expandedRowKeys, setExpandedRowKeys] = useState([]);\r\n\r\n    /** FOOTER STATES */\r\n    /** Отображать ли footer */\r\n    const [_footerShow, _setFooterShow] = useState(false);\r\n    /** Всего строк по фильтру в таблице */\r\n    const [_totalCountRows, setTotalCountRows] = useState(0);\r\n\r\n    const [subscribeProps, setSubscribeProps] = useState({});\r\n\r\n    const [headerHeight, setHeaderHeight] = useState(0);\r\n\r\n    const isMounted = useMounted();\r\n\r\n    const {\r\n        /** Required */\r\n        columns,\r\n        // type,\r\n        // infinityMode, // no use\r\n        editMode, // need Props.types\r\n\r\n        /** Def values */\r\n        defaultRows,\r\n        defaultSelectedRowKeys,\r\n        defaultSearchValue,\r\n        defaultFilter,\r\n        defaultSortBy,\r\n\r\n        /** Outdoor control */\r\n        rows,\r\n        // setRows, // ???\r\n        // selectedRowKeys,\r\n        // searchValue,\r\n        // filter,\r\n        // sortBy,\r\n\r\n        /** Base Props */\r\n        rowKey,\r\n        customFields,\r\n\r\n        /** View Props */\r\n        // empty,\r\n        // overlay,\r\n        // fixWidthColumn,\r\n        // footerProps,\r\n        // headerHeight,\r\n        // rowHeight,\r\n        // rowRenderer,\r\n        zebraStyle,\r\n        // estimatedRowHeight,\r\n        className,\r\n        style,\r\n        // cellBordered, // need Props.types\r\n        // rowBordered,  // need Props.types\r\n\r\n        /** Load Data Props */\r\n        pageSize,\r\n        requestLoadRows,\r\n        requestLoadCount,\r\n        searchParamName,\r\n\r\n        /** Selectable Props */\r\n        rowSelection,\r\n        selectable,\r\n\r\n        /** Tree Props */\r\n        expandable,\r\n        nodeAssociated,\r\n        expandColumnKey,\r\n        expandDefaultAll,\r\n        // expandLazyLoad, // no use\r\n        // expandParentKey, // no use\r\n\r\n        /** Events */\r\n        onRowClick,\r\n        onRowDoubleClick,\r\n        // onRowExpand,\r\n        // onSelectedRowsChange,\r\n        onExpandedRowsChange,\r\n\r\n        /** SELECTED PANEL */\r\n        // showSelection,\r\n        // rowRenderShowSelection,\r\n\r\n        /** REDUX PROPS */\r\n        dispatchPath,\r\n        dispatch,\r\n        subscribe,\r\n\r\n        value,\r\n        onChange\r\n    } = { ...props, ...subscribeProps };\r\n\r\n    const footerProps = {\r\n        ...Table.defaultProps.footerProps,\r\n        ...props.footerProps\r\n    };\r\n\r\n    const selectedDispatchPath = dispatch && dispatch.path\r\n        ? `${dispatch.path}.selected`\r\n        : dispatchPath && `${dispatchPath}.selected`;\r\n    const rowsDispatchPath = dispatch && dispatch.path\r\n        ? `${dispatch.path}.rows`\r\n        : dispatchPath && `${dispatchPath}.rows`;\r\n\r\n    useEffect(() => {\r\n        // console.log(\"Инициализация дефолтных значений \", selectColumn, columns);\r\n        // console.log(\"Инициализация дефолтных значений defaultSelectedRowKeys > \", defaultSelectedRowKeys);\r\n\r\n        // Инициализация дефолтных значений\r\n        // _setRows(defaultRows);\r\n        if (defaultRows.length > 0) _setRowsHandler(defaultRows);\r\n        else if (rows.length > 0) _setRowsHandler(rows);\r\n        if (selectable && props.value && props.value.length > 0)\r\n            _setSelectedRowsHandler(props.value.map(item => item[rowKey]), props.value);\r\n        else\r\n            _setSelectedRowsHandler(defaultSelectedRowKeys, undefined, defaultRows);\r\n        setSearchValue(defaultSearchValue);\r\n        setFilter(defaultFilter);\r\n        setSortBy(defaultSortBy);\r\n\r\n        // Определение нужно ли отображать подвал\r\n        _setFooterShow(\r\n            (footerProps.showElements.length ||\r\n                footerProps.leftCustomSideElement ||\r\n                footerProps.centerCustomSideElement ||\r\n                footerProps.rightCustomSideElement));\r\n\r\n        _loadRows({\r\n            sortBy: defaultSortBy,\r\n            filter: defaultFilter,\r\n            searchLine: defaultSearchValue,\r\n            reload: true\r\n        });\r\n        // console.log(\"tableRef\", tableRef);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log('check');\r\n        _setColumns(columns);\r\n    }, [columns]);\r\n\r\n    useEffect(() => {\r\n        if(value && Array.isArray(value) && !requestLoadRows)\r\n            _setRowsHandler(value)\r\n    }, [value])\r\n\r\n    /** Подписка на изменение props[subscribe.name] в сторе */\r\n    subscribe.map(item => {\r\n        return useEffect(() => {\r\n            if ((item.withMount || isMounted) && item.name) {\r\n                // console.log(\"Table => useEffect => \", props); //item.name, props[item.name]\r\n                const onChangeObject = {\r\n                    value: props[item.name],\r\n                    extraData: getExtraData(item, props), //props[`${item.name}ExtraData`],\r\n                    reloadTable: reloadData,\r\n                    addRows: _addRows,\r\n                    addRow: _addRow,\r\n                    addRowAsCopy: _addRowAsCopy,\r\n                    editRow: _editRow,\r\n                    removeRow: _removeRow,\r\n                    moveUpRow: _moveUpSelectedRow,\r\n                    moveUpRowByKey: _moveUpRowByKey,\r\n                    moveDownRow: _moveDownSelectedRow,\r\n                    moveDownRowByKey: _moveDownRowByKey,\r\n                    setSubscribeProps: _setSubscribeProps\r\n                };\r\n                item.onChange && item.onChange(onChangeObject);\r\n            }\r\n        }, [props[item.name]]);\r\n    });\r\n\r\n    /** BASE FUNCTIONS */\r\n    const _setSubscribeProps = (props) => {\r\n        setSubscribeProps({ ...subscribeProps, ...props });\r\n    };\r\n\r\n    const _setLoadedRowsHandler = (rows) => {\r\n        _setRowsHandler(rows);\r\n        // !selectable && onChange && onChange(rows);\r\n    };\r\n    const _setRowsHandler = (rows) => {\r\n        // console.log('_setRowsHandler onChange');\r\n        _setRows(rows);\r\n        // setRows(rows);\r\n        rowsDispatch(rows);\r\n    };\r\n\r\n    const _setSelectedRowsHandler = (selectedKeys = [], selectedObjects = undefined, rows = []) => {\r\n        // console.log('_setSelectedRowsHandler => ', selectedKeys)\r\n        if(!editMode) {\r\n            setSelectedRowKeys(selectedKeys);\r\n            if (selectedKeys.length === 0)\r\n                if (selectable)\r\n                    selectedDispatch([]);\r\n                else\r\n                    selectedDispatch(undefined);\r\n            else if (selectedKeys.length > 0 && !selectedObjects)\r\n                if (selectable)\r\n                    selectedDispatch(flatten(getTableRowObjects(rows, rowKey)).filter((item) => selectedKeys.includes(item[rowKey])));\r\n                else\r\n                    selectedDispatch(findNodeByRowKey(rows, rowKey, selectedKeys[0]));\r\n            else\r\n                selectedDispatch(selectedObjects);\r\n        }\r\n    };\r\n\r\n    const rowsDispatch = (rows) => {\r\n        // console.log('rowsDispatch ', rowsDispatchPath);\r\n        rowsDispatchPath && props.setDataStore && props.setDataStore(rowsDispatchPath, rows);\r\n        !selectable && onChange && onChange(rows);\r\n    };\r\n\r\n    const selectedDispatch = (data) => {\r\n        selectedDispatchPath && props.setDataStore && props.setDataStore(selectedDispatchPath, data);\r\n        selectable && onChange && onChange(data);\r\n    };\r\n\r\n    const onTableEventsDispatch = (nameEvent, value) => {\r\n        const dp = dispatch && dispatch.path\r\n            ? `${dispatch.path}.events.${nameEvent}`\r\n            : dispatchPath && `${dispatchPath}.events.${nameEvent}`;\r\n\r\n        dp && props.setDataStore && props.setDataStore(dp, {\r\n            timestamp: moment(),\r\n            value: value\r\n        });\r\n        // console.log('onTableEventsDispatch onChange');\r\n        Array.isArray(value) && onChange && onChange(value);\r\n    };\r\n\r\n    const reloadData = ({ sortBy, filter, searchValue }, appendParams) => {\r\n        // console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\r\n        if (selectable && props.value && props.value.length > 0)\r\n            _setSelectedRowsHandler(props.value.map(item => item[rowKey]), props.value);\r\n        else\r\n            _setSelectedRowsHandler();\r\n\r\n        const __sortBy = appendParams ? (sortBy ? sortBy : _sortBy) : sortBy;\r\n        const __filter = appendParams ? { ..._filter, ...filter } : filter;\r\n        const __searchValue = appendParams ? (searchValue ? searchValue : _searchValue) : searchValue;\r\n        setSortBy(__sortBy);\r\n        setFilter(__filter);\r\n        setSearchValue(__searchValue);\r\n        // console.log(\"reloadData params \", sortBy, filter, searchValue, loading);\r\n        _loadRows({\r\n            sortBy: __sortBy,\r\n            filter: __filter,\r\n            searchLine: __searchValue,\r\n            reload: true\r\n        });\r\n    };\r\n\r\n    const _loadRows = (params) => {\r\n        const { sortBy, filter, searchLine, expandRow, reload } = params;\r\n        if (!loading && requestLoadRows) {\r\n            setLoading(true);\r\n            const pageNum = 0;\r\n            const params = {\r\n                page: 0,\r\n                size: pageSize,\r\n                sort:\r\n                    sortBy && sortBy.key\r\n                        ? sortBy.key + \",\" + sortBy.order\r\n                        : null\r\n            };\r\n            const dataQuery = {\r\n                ...filter,\r\n                ...(searchLine\r\n                    ? { [searchParamName]: searchLine }\r\n                    : null)\r\n            };\r\n            if(reload && requestLoadCount !== noop && !expandColumnKey) {\r\n                requestLoadCount({ params, data: dataQuery, })\r\n                    .then((response) => {\r\n                        // console.log(\"infinity then response\", response);\r\n                        setTotalCountRows(response.data);\r\n                    })\r\n                    .catch(error =>\r\n                        notificationError(error, 'Ошибка получения количества записей по фильтру') );\r\n            }\r\n            requestLoadRows({ params, data: dataQuery })\r\n                .then((response) => {\r\n                    // console.log(\"infinity then response\", response);\r\n                    const result = response.data;\r\n                    _setLoadedRowsHandler(result); // _setRows\r\n\r\n                    if (expandColumnKey) {\r\n                        expandDefaultAll &&\r\n                        setExpandedRowKeys(flatten(getTableRowKeys(result, rowKey)));\r\n                    }\r\n\r\n                    setLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    notificationError(error, \"Ошибка загрузки данных\");\r\n                    _setLoadedRowsHandler(_rows); // _setRows\r\n                    // setHasMore(false);\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    };\r\n\r\n    const onChangeTable = (pagination, filters, sorter, extra) => {\r\n        // console.log('Table onChange', pagination, filters, sorter, extra)\r\n        switch (extra.action) {\r\n            case \"paginate\":\r\n                break;\r\n            case \"sort\":\r\n                onSort(sorter);\r\n                break;\r\n            case \"filter\":\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const onSort = (sorter) => {\r\n        // console.log(\"Table onSort from RT\", sorter);\r\n        const sortBy = sorter.order\r\n            ? { key: sorter.field, order: sorter.order === \"ascend\" ? \"asc\" : \"desc\" }\r\n            : {};\r\n        setSortBy(sortBy);\r\n        _loadRows({\r\n            sortBy: sortBy,\r\n            filter: _filter,\r\n            searchLine: _searchValue,\r\n            reload: true\r\n        });\r\n    };\r\n\r\n    const _onRowClick = ({ rowData, rowIndex, rowKey }) => {\r\n        // console.log('onClick', onRowClick, rowData, rowIndex, rowKey)\r\n        // console.log('onClick', _selectedRowKeys)\r\n        onTableEventsDispatch(\"onRowClick\", rowData);\r\n        _rowSelectAfterClick({ rowData, rowIndex, rowKey, onClick: onRowClick });\r\n    };\r\n    const _onRowDoubleClick = ({ rowData, rowIndex, rowKey }) => {\r\n        // console.log('onDoubleClick', onRowDoubleClick, rowData, rowIndex, rowKey);\r\n        // console.log('actionDoubleClick')\r\n        onTableEventsDispatch(\"onRowDoubleClick\", rowData);\r\n        _rowSelectAfterClick({ rowData, rowIndex, rowKey, onClick: onRowDoubleClick });\r\n    };\r\n\r\n    const _rowSelectAfterClick = ({ rowData, rowIndex, rowKey, onClick }) => {\r\n        const checked = !_selectedRowKeys.includes(rowKey);\r\n        const newRowObject = {\r\n            rowData: { ...rowData },\r\n            rowIndex: rowIndex,\r\n            rowKey: rowKey\r\n        };\r\n        // _setSelectedRowsHandler([rowKey], rowData);\r\n        // if (!expandColumnKey) {\r\n        // setSelectedRowKeys([rowKey]);\r\n        if (selectable) {\r\n            // console.log('_rowSelectAfterClick ', checked);\r\n            if (checked && !expandColumnKey)\r\n                _setSelectedRowsHandler([..._selectedRowKeys, rowKey], undefined, _rows);\r\n            else {\r\n                // console.log('_rowSelectAfterClick', _selectedRowKeys.filter(row => row !== rowKey), rowKey);\r\n                _setSelectedRowsHandler(_selectedRowKeys.filter(row => row !== rowKey), undefined, _rows);\r\n            }\r\n\r\n        } else {\r\n            if(checked)\r\n                _setSelectedRowsHandler([rowKey], rowData);\r\n        }\r\n        // onSelectedRowsChange([rowKey], [rowData]);\r\n        // console.log('onRowDoubleClick = ', onClick);\r\n        onClick && onClick({ selected: checked, ...newRowObject });\r\n    };\r\n\r\n    const onHeaderRowProps = () => ({ headerHeight, setHeaderHeight })\r\n\r\n    const onRowEvents = (rowData, rowIndex) => {\r\n        return {\r\n            onClick: event => _onRowClick({ rowData, rowIndex, rowKey: rowData[rowKey] }), // click row\r\n            onDoubleClick: event => _onRowDoubleClick({ rowData, rowIndex, rowKey: rowData[rowKey] }), // double click row\r\n            // onScroll: console.log\r\n            // onContextMenu: event => {}, // right button click row\r\n            // onMouseEnter: event => {}, // mouse enter row\r\n            // onMouseLeave: event => {}, // mouse leave row\r\n        };\r\n    };\r\n\r\n\r\n    const onResizeHandler = (index) => ({ key }, width) => {\r\n        // console.log('handleResize index ', index, width)\r\n        _setColumns((columns) => {\r\n            const nextColumns = [...columns];\r\n            nextColumns[index] = {\r\n                ...nextColumns[index],\r\n                width: width\r\n            };\r\n            return nextColumns;\r\n        });\r\n    };\r\n\r\n    /** Utile function\r\n     * Find row by key\r\n     * @param data - table rows\r\n     * @param key - key row for find\r\n     * @param callback - function for return result\r\n     */\r\n    const loop = (data, key, callback) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i][rowKey] === key) {\r\n                // console.log(`Selected => index: [${i}], path: [${data[i].path}]`, data);\r\n                return callback(data[i], i, data);\r\n            } else {\r\n                // console.log(`Other => index: [${i}], path: [${data[i].path}]`);\r\n            }\r\n            if (data[i].children) {\r\n                loop(data[i].children, key, callback);\r\n            }\r\n        }\r\n    };\r\n\r\n    /** ROW CHANGE FUNCTIONS */\r\n    const _addRows = (rows) => {\r\n        let saveRows = [...rows];\r\n        if(!expandColumnKey)\r\n            saveRows = saveRows.map(row => { row.children = undefined; return row; });\r\n        if (customFields) {\r\n            // Фильтрация по пользовательским параметрам\r\n            saveRows = saveRows.filter((sRow) => {\r\n                let isValid = [];\r\n                customFields.forEach((field) => {\r\n                    // Валидация по пользовательской логике функции validate\r\n                    if (field.validate)\r\n                        isValid.push(field.validate(sRow, _rows));\r\n\r\n                    // Создание или переобразование по пользовательской логике функции value\r\n                    if (field.value)\r\n                        sRow[field.name] = field.value(sRow, _rows);\r\n                });\r\n                // console.log(\"_addRows isValid\", isValid);\r\n                if (!isValid.includes(false))\r\n                    return sRow;\r\n            });\r\n        }\r\n        const _localRows = [..._rows, ...saveRows];\r\n        _setRowsHandler(_localRows);\r\n        onTableEventsDispatch(\"onAddRows\", _localRows);\r\n    };\r\n\r\n    const _addRow = (row) => {\r\n        let _row = { ...row };\r\n        if(!expandColumnKey)\r\n            _row.children = undefined;\r\n        let isValid = true;\r\n        if (customFields) {\r\n            let validations = [];\r\n            customFields.forEach((field) => {\r\n                if (field.validate)\r\n                    validations.push(field.validate(_row, _rows));\r\n\r\n                if (field.value)\r\n                    _row[field.name] = field.value(_row, _rows);\r\n            });\r\n            isValid = !validations.includes(false);\r\n        }\r\n        if (isValid) {\r\n            const _localRows = [..._rows, _row];\r\n            _setRowsHandler(_localRows);\r\n            onTableEventsDispatch(\"onAddRow\", _localRows);\r\n        }\r\n    };\r\n\r\n    const _addRowAsCopy = () => {\r\n        // console.log(\"_onClickAddAsCopy\", selectedRow);\r\n        const _localRows = [..._rows, findNodeByRowKey(_rows, rowKey, _selectedRowKeys[0])];\r\n        _setRowsHandler(_localRows);\r\n        onTableEventsDispatch(\"onAddRowAsCopy\", _localRows);\r\n\r\n    };\r\n\r\n    const _editRow = (row) => {\r\n        // console.log(\"_onClickEdit\", selectedRow);\r\n        const data = [..._rows];\r\n        const key = row[rowKey];\r\n        loop(data, key, (item, index, arr) => {\r\n            data[index] = row;\r\n            _setRowsHandler(data);\r\n            _setSelectedRowsHandler(_selectedRowKeys, undefined, data);\r\n            onTableEventsDispatch(\"onEditRow\", data);\r\n        });\r\n    };\r\n\r\n    const _removeRow = (event) => {\r\n        // console.log(\"_onClickDelete\", autoDeleteRows, selectedRowKeys);\r\n        const _localRows = _rows.filter(\r\n            (item) => !_selectedRowKeys.includes(item[rowKey]));\r\n        _setRowsHandler(_localRows);\r\n        _setSelectedRowsHandler();\r\n        onTableEventsDispatch(\"onRemoveRow\", _localRows);\r\n    };\r\n\r\n    const _moveUpSelectedRow = () => {\r\n        _moveUpRowByKey(_selectedRowKeys[0])\r\n    }\r\n\r\n    const _moveUpRowByKey = (rowKey) => {\r\n        const data = [..._rows];\r\n        loop(data, rowKey, (item, index, arr) => {\r\n            const newRowIndex = _getNewIndexRow(index, index - 1);\r\n            _changeIndexRow(index, newRowIndex, arr, data, \"onMoveUpRow\");\r\n        });\r\n    };\r\n\r\n    const _moveDownSelectedRow = () => {\r\n        _moveDownRowByKey(_selectedRowKeys[0])\r\n    }\r\n\r\n    const _moveDownRowByKey = (rowKey) => {\r\n        const data = [..._rows];\r\n        loop(data, rowKey, (item, index, arr) => {\r\n            const newRowIndex = _getNewIndexRow(index, index + 1);\r\n            _changeIndexRow(index, newRowIndex, arr, data, \"onMoveDownRow\");\r\n        });\r\n    };\r\n\r\n    const _getNewIndexRow = (oldIndex, newIndex) =>\r\n        newIndex >= 0 && newIndex < _rows.length ? newIndex : oldIndex;\r\n\r\n    const _changeIndexRow = (oldIndex, newIndex, arr, data, nameEvent) => {\r\n        if (newIndex >= 0 && newIndex < arr.length) {\r\n            // let arr = [..._rows]; // Копируем массив\r\n            const item = arr.splice(oldIndex, 1); // Удаляем элемент со старого места\r\n            // console.log('_changeIndexRow => ',item);\r\n            arr.splice(newIndex > 0 ? newIndex : 0, 0, item[0]); // Ставим элемент на новое место\r\n            // console.log(\"_changeIndexRow\", item[0]);\r\n            _setRowsHandler(data);\r\n            onTableEventsDispatch(nameEvent, data);\r\n        }\r\n    };\r\n\r\n    /** TREE FUNCTIONS */\r\n    const _onExpandedRowsChange = (expandedRowKeys) => {\r\n        setExpandedRowKeys(expandedRowKeys);\r\n        onExpandedRowsChange(expandedRowKeys);\r\n    };\r\n\r\n    /** SELECTABLE FUNCTIONS */\r\n    const onChangeSelectedHandler = (selectedRowKeys, selectedRows) => {\r\n        // console.log(\"onChangeSelectedHandler\");\r\n        _setSelectedRowsHandler(selectedRowKeys, selectedRows);\r\n    };\r\n\r\n    const onSelectAllHandler = (selected, selectedRows, changeRows) => {\r\n        // console.log(\"onSelectAllHandler\");\r\n        const selectedKeys = selected ? selectedRows.map(row => row[rowKey]) : [];\r\n        _setSelectedRowsHandler(selectedKeys, selectedRows);\r\n    };\r\n\r\n    /** VIEW FUNCTIONS */\r\n    const _rowClassName = (rowData, rowIndex) => {\r\n        // const {rowClassName} = props;\r\n        return [\r\n            // rowClassName,\r\n            _selectedRowKeys.includes(rowData[rowKey]) && \"ant-table-row-selected\", //\r\n            zebraStyle ? (rowIndex % 2 === 0 ? \"even\" : \"odd\") : \"\"\r\n            // rowBordered ? 'bordered' : ''\r\n        ].join(\" \");\r\n    };\r\n\r\n    const ExpandIcon = ({ Icon, ...restProps }) =>\r\n        <span {...restProps} className={`${rtPrefix}-table-expand-icon`}><Icon /></span>;\r\n\r\n    const expandIconRender = ({ expanded, onExpand, record }) =>\r\n        record.children && record.children.length === 0\r\n            ? <ExpandIcon Icon={CaretUpOutlined} style={{ visibility: \"hidden\" }} />\r\n            : expanded\r\n            ? <ExpandIcon Icon={CaretDownOutlined} onClick={e => onExpand(record, e)} />\r\n            : <ExpandIcon Icon={CaretRightOutlined} onClick={e => onExpand(record, e)} />;\r\n\r\n    const _footer = (currentPageData) => {\r\n        // console.log('_footer => ', currentPageData);\r\n        return (\r\n            _footerShow ? (\r\n                <div style={{display: 'flex', flex: 'auto', height: `${footerProps.height}px`}}>\r\n                    {/*className={'BaseTable__footer__counter'}>*/}\r\n                    <div key={\"footer-left-custom-side\"} className={`${rtPrefix}-footer-left-custom-side`}>\r\n                        {footerProps.leftCustomSideElement\r\n                            ? Array.isArray(footerProps.leftCustomSideElement)\r\n                                ? <FormItems items={footerProps.leftCustomSideElement} />\r\n                                : <footerProps.leftCustomSideElement />\r\n                            : null}\r\n                    </div>\r\n                    <div key={\"footer-center-custom-side\"} className={`${rtPrefix}-footer-center-custom-side`}>\r\n                        {footerProps.centerCustomSideElement\r\n                            ? Array.isArray(footerProps.centerCustomSideElement)\r\n                                ? <FormItems items={footerProps.centerCustomSideElement} />\r\n                                : <footerProps.centerCustomSideElement />\r\n                            : null}\r\n                    </div>\r\n                    <div key={\"footer-right-custom-side\"} className={`${rtPrefix}-footer-right-custom-side`}>\r\n                        {footerProps.rightCustomSideElement\r\n                            ? Array.isArray(footerProps.rightCustomSideElement)\r\n                                ? <FormItems items={footerProps.rightCustomSideElement} />\r\n                                : <footerProps.rightCustomSideElement />\r\n                            : null}\r\n                    </div>\r\n                    <div className={`${rtPrefix}-footer-right-system-side`}>\r\n                        <Space>\r\n                            {selectable ? (\r\n                                <React.Fragment>\r\n                                    {footerProps.showElements.includes(\"selected\")\r\n                                        ? <span>{footerProps.selectedTitle} {_selectedRowKeys.length}</span>\r\n                                        : null}\r\n                                    {footerProps.showElements.includes(\"loaded\")\r\n                                        ? <span>{footerProps.loadedTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\r\n                                        : null}\r\n                                </React.Fragment>\r\n                            ) : null}\r\n\r\n                            {footerProps.showElements.includes(\"total\")\r\n                                ? requestLoadCount !== noop && !expandColumnKey\r\n                                    ? <span>{footerProps.totalTitle} {_totalCountRows}</span>\r\n                                    : <span>{footerProps.totalTitle} {flatten(getTableRowKeys(_rows, rowKey)).length}</span>\r\n                                : null}\r\n                        </Space>\r\n                    </div>\r\n                </div>\r\n            ) : undefined\r\n        );\r\n    };\r\n\r\n    const getColumns = () => {\r\n        return _columns.map((col, index) => ({\r\n            ...col,\r\n            onHeaderCell: (column) =>\r\n                ({\r\n                    column,\r\n                    // resizable: column.resizable,\r\n                    // width: column.width,\r\n                    onResize: onResizeHandler(index)\r\n                })\r\n        }));\r\n    };\r\n\r\n    const restProps = getObjectExcludedProps(props, excludeProps);\r\n    const expandableProps = expandColumnKey\r\n        ? {\r\n            defaultExpandAllRows: expandDefaultAll,\r\n            expandIcon: expandIconRender,\r\n            ...expandable,\r\n            expandedRowKeys: _expandedRowKeys,\r\n            onExpandedRowsChange: _onExpandedRowsChange\r\n        } : {};\r\n\r\n    const rowSelectionProps = selectable\r\n        ? {\r\n            type: \"checkbox\",\r\n            fixed: true,\r\n            checkStrictly: !nodeAssociated,\r\n            selectedRowKeys: _selectedRowKeys,\r\n            onChange: onChangeSelectedHandler,\r\n            onSelectAll: onSelectAllHandler,\r\n            ...rowSelection\r\n        } : undefined;\r\n\r\n    return (\r\n        <div className={`${rtPrefix}-table ${className}`} style={style}>\r\n            <div className={`${rtPrefix}-baseTable`}>\r\n                <AutoResizer\r\n                    // onResize={({ height, width }) => {setHeight(height); setWidth(width)} }\r\n                >\r\n                    {({ height, width }) => (\r\n                        <div style={{ width: width, height: height }}>\r\n                            <AntTable\r\n                                {...restProps}\r\n\r\n                                /** Required */\r\n                                columns={getColumns()}\r\n                                dataSource={_rows}\r\n                                // scroll={{ x: width, y: height - headerHeight }} // 16 (paddings) + 2 + 2 borders\r\n                                scroll={{ y: height - headerHeight - (_footerShow ? (footerProps.height + 20) : 0) }}\r\n                                pagination={{ position: [\"none\", \"none\"], ...restProps.pagination, pageSize: _rows.length }}\r\n\r\n                                /** Base Props */\r\n                                loading={loading}\r\n\r\n                                /** Tree Props */\r\n                                expandable={{ ...expandableProps }}\r\n                                /** Selection Props */\r\n                                rowSelection={rowSelectionProps}\r\n\r\n                                /** View Props */\r\n                                rowClassName={_rowClassName}\r\n                                footer={_footerShow ? _footer : undefined}\r\n                                components={{\r\n                                    header: {\r\n                                        row: HeaderRow,\r\n                                        cell: HeaderCell\r\n                                    },\r\n                                    body: {\r\n                                        cell: BodyCell,\r\n                                    }\r\n                                }}\r\n\r\n                                /** Events */\r\n                                onChange={onChangeTable}\r\n                                onHeaderRow={onHeaderRowProps}\r\n                                onRow={onRowEvents}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </AutoResizer>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTable.propTypes = {\r\n    /**\r\n     * REQUIRED\r\n     * */\r\n\r\n    /** Столбцы таблицы */\r\n    columns: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n\r\n    /** Режим загрузки данных по скроллу */\r\n    infinityMode: PropTypes.bool,\r\n\r\n    /**\r\n     * ПРОПСЫ ЗАДАНИЯ ЗНАЧЕНИЙ ПО УМОЛЧАНИЮ\r\n     * */\r\n\r\n    /** Строки по умолчанию */\r\n    defaultRows: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /** Ключи выделенных по умолчанию строк */\r\n    defaultSelectedRowKeys: PropTypes.arrayOf(\r\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n    ),\r\n\r\n    /** Значение строки поиска по умолчанию строк */\r\n    defaultSearchValue: PropTypes.string,\r\n\r\n    /** Объект фильтрации по умолчанию */\r\n    defaultFilter: PropTypes.object,\r\n\r\n    /** Сортировка по умолчанию */\r\n    defaultSortBy: PropTypes.shape({\r\n        /** Ключ поля для сортировки */\r\n        key: PropTypes.string,\r\n        /** Направление сортировки */\r\n        order: PropTypes.oneOf([\"asc\", \"desc\"])\r\n    }),\r\n\r\n    /**\r\n     * ПРОПРЫ ДЛЯ ВНЕШНЕГО КОНТРОЛЯ ТАБЛИЦЫ\r\n     * */\r\n\r\n    /** Строки таблицы. Используется для контроля таблицы из вне. */\r\n    rows: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /** Функция задания строк таблицы. */\r\n    setRows: PropTypes.func,\r\n\r\n    /** Выделенные строки таблицы. */\r\n    selectedRowKeys: PropTypes.arrayOf(\r\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n    ),\r\n\r\n    /** Значение строки поиска */\r\n    searchValue: PropTypes.string,\r\n\r\n    /** Объект фильтрации */\r\n    filter: PropTypes.object,\r\n\r\n    /** Объект сортировки */\r\n    sortBy: PropTypes.shape({\r\n        /** Ключ поля для сортировки */\r\n        key: PropTypes.string,\r\n        /** Направление сортировки */\r\n        order: PropTypes.oneOf([\"asc\", \"desc\"])\r\n    }),\r\n\r\n    /**\r\n     * BASE PROPS\r\n     * */\r\n\r\n    /** Поле для уникальной идентификации строки */\r\n    rowKey: PropTypes.string,\r\n\r\n\r\n    /** Дополнительные поля и валидация в объекты таблицы\r\n     * Данный параметр (props) осуществляет дополнительную обработку объекта таблицы после закрытия модалки, но перед добавлением в таблицу.\r\n     * Можно как изменить существующие поля объекта, так и добавить новые поля объекта.\r\n     * `customFields` - массив объектов для дополнения или изменения полей объектов таблицы\r\n     * ```json\r\n     * [\r\n     *  {\r\n     * \t\tname: <String>,\r\n     * \t\tvalue: <func>,\r\n     * \t\tvalidate: <func>\r\n     * \t}\r\n     * ]\r\n     * ```\r\n     * `name` – Имя параметра в объекте\r\n     * `value` – Функция формирования значения - `(row, rows) => { return {} }`\r\n     * `validate` – Функция проверки значения - `(row, rows) => { return <Bool> }`\r\n     * Параметра **validate** работает **только** для модельного окна тип `select`.\r\n     * Validate можно наложить на любое кол-во полей объекта и если хотя бы один `validate` === `false`, то исключает строку из добавления.\r\n     */\r\n    customFields: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /**\r\n     * Данный параметр (props) позволяет добавить или переопределить пропсы для колонок, которые заданы конфигурацией на сервере\r\n     * `customColumnProps` - массив объектов `props` к `columns`. Один объект описывает доп. параметры для одной колонки\r\n     * ```json\r\n     * [\r\n     *  {\r\n     * \t\tname: <String>,\r\n     * \t\tcellRenderer: <func>,\r\n     * \t\t...advancedColProps\r\n     * \t}\r\n     * ]\r\n     * ```\r\n     * `name` – key колонки к которой надо применить дополнительные пропсы\r\n     * `cellRenderer` – `({ cellData, columns, column, columnIndex, rowData, rowIndex, container, isScrolling }) => return <ReactNode>`\r\n     * `advancedColProps` – подолнительные свойства колонок тут -> [Column](https://autodesk.github.io/react-base-table/api/column)\r\n     */\r\n    customColumnProps: PropTypes.arrayOf(PropTypes.object),\r\n\r\n    /**\r\n     * VIEW PROPS\r\n     * */\r\n\r\n    /** Вывод когда нет данных */\r\n    empty: PropTypes.element,\r\n\r\n    /** Отображение загрузки данных */\r\n    overlay: PropTypes.element,\r\n\r\n    /** Фиксированная ширина столбцов. Появится боковой скрол */\r\n    fixWidthColumn: PropTypes.bool,\r\n\r\n    footerProps: PropTypes.shape({\r\n\r\n        /** Высота подвала */\r\n        height: PropTypes.number,\r\n\r\n        /** Массив элементов футтера, которые надо отобразить\r\n         * ['selected', 'loaded', 'total'] */\r\n        showElements: PropTypes.arrayOf(PropTypes.string),\r\n\r\n        /** Заколовок для кол-ва выбранных объектов */\r\n        selectedTitle: PropTypes.string,\r\n\r\n        /** Заколовок для кол-ва загруженны объектов */\r\n        loadedTitle: PropTypes.string,\r\n\r\n        /** Заколовок для кол-ва всего объектов */\r\n        totalTitle: PropTypes.string,\r\n\r\n        /** Левый кастомный элемент командной панели */\r\n        leftCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\r\n\r\n        /** Центральный кастомный элемент командной панели */\r\n        centerCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\r\n\r\n        /** Правый кастомный элемент командной панели */\r\n        rightCustomSideElement: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)])\r\n    }),\r\n\r\n    /** Высота заголовка таблицы */\r\n    headerHeight: PropTypes.number,\r\n\r\n    /** Высота строки таблицы */\r\n    rowHeight: PropTypes.number,\r\n\r\n    /** Custom row renderer\r\n     * Параметры - `({ isScrolling, cells, columns, rowData, rowIndex, depth })` */\r\n    rowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\r\n\r\n    /** Строки будут в зебро-стиле */\r\n    zebraStyle: PropTypes.bool,\r\n\r\n    /** Высота расширения */\r\n    estimatedRowHeight: PropTypes.number,\r\n\r\n    /** Отображать ли разделители ячеек в строке */\r\n    cellBordered: PropTypes.bool,\r\n\r\n    /** Отобрадать ли разделители строк */\r\n    rowBordered: PropTypes.bool,\r\n\r\n    className: PropTypes.string,\r\n\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * LOAD DATA PROPS\r\n     * */\r\n\r\n    /** Порог в пикселях для вызова _onLoad.\r\n     * Кол-во пикселей от низа таблицы для срабатывания события загрузки (onEndReached) */\r\n    loadThreshold: PropTypes.number,\r\n\r\n    /** Размер страницы */\r\n    pageSize: PropTypes.number,\r\n\r\n    /** Функция запроса для конфигурации */\r\n    requestLoadConfig: PropTypes.func,\r\n\r\n    /** Функция запроса для загрузки строк (данных) */\r\n    requestLoadRows: PropTypes.func,\r\n\r\n    /** Функция запроса для загрузки строк (данных) */\r\n    requestLoadCount: PropTypes.func,\r\n\r\n    /** Имя параметра для поиска */\r\n    searchParamName: PropTypes.string,\r\n\r\n    /**\r\n     * SELECTABLE PROPS\r\n     * */\r\n\r\n    /** Таблица с возможностью выбора строки */\r\n    selectable: PropTypes.bool,\r\n\r\n    /**\r\n     * TREE PROPS\r\n     * */\r\n\r\n    /** Родительский узел и дочерние узлы связаны (Работает только при `selectable`) */\r\n    nodeAssociated: PropTypes.bool,\r\n\r\n    /** Ключ колонки по которой строить иерархию */\r\n    expandColumnKey: PropTypes.string,\r\n\r\n    /** Открыть по умолчанию вложенность до уровня N или 'All' */\r\n    expandDefaultAll: PropTypes.bool,\r\n\r\n    /** Загружать ноды иерархии по одной */\r\n    expandLazyLoad: PropTypes.bool,\r\n\r\n    /** Поле в котором хранится ссылка на родителя */\r\n    expandParentKey: PropTypes.string,\r\n\r\n    /**\r\n     * EVENTS\r\n     * */\r\n\r\n    /** Событие при клике на строку (только при `selectable` = `false`)\r\n     * `({selected, rowData, rowIndex}) => {}` */\r\n    onRowClick: PropTypes.func,\r\n\r\n    /** Событие при двойном клике на строку.\r\n     * `({rowData, rowIndex, rowKey}) => {}` */\r\n    onRowDoubleClick: PropTypes.func,\r\n\r\n    /** События при открытии / закрытии ноды\r\n     * `({ expanded, rowData, rowIndex, rowKey }) => {}` */\r\n    onRowExpand: PropTypes.func,\r\n\r\n    /** Событие при выборе строки.\r\n     * `([rowKeys], [rowDatas]) => {}` */\r\n    onSelectedRowsChange: PropTypes.func,\r\n\r\n    /** События при открытии / закрытии ноды\r\n     * `(expandedRowKeys) => {}` - массив ключей открытых нод */\r\n    onExpandedRowsChange: PropTypes.func,\r\n\r\n    /** SELECTED PANEL */\r\n\r\n    /** Отображать ли панель выбранных элементов */\r\n    showSelection: PropTypes.bool,\r\n\r\n    /** Строка или функция для отображения элементов списка выбранных\r\n     * Строка - имя поля\r\n     * Функция - рендер строк.\r\n     * `({ rowData, rowIndex }) => { return <Component> }` */\r\n    rowRenderShowSelection: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.string\r\n    ]),\r\n\r\n    /** Путь в сторе куда класть выбранную строку таблицы */\r\n    dispatchPath: PropTypes.string,\r\n\r\n    /** Объект для подписки на изменения в STORE */\r\n    subscribe: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\n\r\nTable.defaultProps = {\r\n    size: \"small\",\r\n    bordered: true,\r\n    infinityMode: false,\r\n    editMode: false,\r\n    defaultRows: [],\r\n    defaultSelectedRowKeys: [],\r\n    defaultSearchValue: \"\",\r\n    defaultFilter: {},\r\n    defaultSortBy: {},\r\n\r\n    rows: [],\r\n    setRows: noop,\r\n    selectedRowKeys: [],\r\n    searchValue: \"\",\r\n    filter: {},\r\n    sortBy: {},\r\n\r\n    rowKey: \"id\",\r\n\r\n    empty: empty,\r\n    overlay: overlay,\r\n    fixWidthColumn: false,\r\n    footerProps: {\r\n        height: 30,\r\n        showElements: [],\r\n        selectedTitle: \"Выделено:\",\r\n        loadedTitle: \"Загружено записей:\",\r\n        totalTitle: \"Всего записей:\",\r\n        leftCustomSideElement: null,\r\n        centerCustomSideElement: null,\r\n        rightCustomSideElement: null\r\n    },\r\n    headerHeight: 30,\r\n    rowHeight: 30,\r\n    zebraStyle: false,\r\n    estimatedRowHeight: undefined,\r\n    cellBordered: false,\r\n    rowBordered: true,\r\n    className: \"\",\r\n    style: {},\r\n\r\n    loadThreshold: 300,\r\n    pageSize: 50,\r\n    requestLoadRows: undefined,\r\n    requestLoadCount: noop,\r\n    searchParamName: \"searchLine\",\r\n\r\n    selectable: false,\r\n\r\n    nodeAssociated: true,\r\n    expandColumnKey: undefined,\r\n    expandDefaultAll: true,\r\n    expandLazyLoad: false,\r\n    expandParentKey: \"parentId\",\r\n\r\n    onRowClick: noop,\r\n    onRowDoubleClick: noop,\r\n    onRowExpand: noop,\r\n    onSelectedRowsChange: noop,\r\n    onExpandedRowsChange: noop,\r\n\r\n    showSelection: false,\r\n\r\n    dispatchPath: undefined,\r\n    subscribe: []\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(Table);\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getSortBy, noop, notificationError } from \"../../utils/baseUtils\";\r\nimport Table from \"./Table\";\r\n\r\nconst defaultProps = {\r\n    defaultFilter: {},\r\n    rowKey: \"id\",\r\n    pageSize: 50,\r\n    requestLoadConfig: noop,\r\n    expandColumnKey: undefined,\r\n    expandLazyLoad: false,\r\n    expandParentKey: \"parentId\",\r\n    customColumnProps: []\r\n};\r\n\r\nconst ConfigLoader = props => {\r\n\r\n    /** Конфигурация таблицы */\r\n    const [tableConfig, setTableConfig] = useState(undefined);\r\n\r\n    const {\r\n        defaultFilter,\r\n        defaultSortBy,\r\n        rowKey,\r\n        pageSize,\r\n        requestLoadConfig,\r\n        expandColumnKey,\r\n        // expandLazyLoad,\r\n        expandParentKey,\r\n        customColumnProps,\r\n        // cellBordered,\r\n        fixWidthColumn,\r\n        selectable\r\n    } = { ...defaultProps, ...props };\r\n\r\n    useEffect(() => {\r\n        let cleanupFunction = false;\r\n        const loadData = async () => {\r\n            if (requestLoadConfig) {\r\n                // console.log(\"requestLoadConfig => \", typeof requestLoadConfig);\r\n                // console.log(\"requestLoadRows => \", typeof props.requestLoadRows);\r\n                requestLoadConfig()\r\n                    .then((response) => {\r\n                        // let result = response.data;\r\n                        // console.log('requestLoadConfig -> ', response.data);\r\n                        if (!cleanupFunction) {\r\n                            // setTableConfig(response.data);\r\n                            configParser(response.data);\r\n                        }\r\n                    })\r\n                    .catch(error => notificationError(error, \"Ошибка получения конфигурации\"));\r\n            }\r\n        };\r\n        loadData().then(r => r);\r\n        return () => cleanupFunction = true;\r\n    }, []);\r\n\r\n    const configParser = (config) => {\r\n\r\n        // Массив колонок\r\n        let _columns = [];\r\n        // Сортировка по умолчанию\r\n        let _defaultSorter = [];\r\n        // Счетчик видимых полей\r\n        let visibleIndex = 0;\r\n        // Индекс колонки около которой ставить иконку дерева\r\n        let expandIconColumnIndex = -1;\r\n        // Ключ иерархии\r\n        let _expandColumnKey = config && config.hierarchical && config.hierarchyView\r\n            ? config.hierarchyView\r\n            : expandColumnKey;\r\n\r\n        config && config.fields && config.fields.forEach((item, index) => {\r\n            // console.log('configParser item => ', item);\r\n\r\n            // Дополнительные props колонок\r\n            const colProps = customColumnProps &&\r\n                customColumnProps.find((render) =>\r\n                    render.name === item.name || render.name === item.alias);\r\n\r\n            // Если поле не надо показывать, то след цикл\r\n            if (!item.visible || (colProps && colProps.hidden))\r\n                return;\r\n\r\n            // Индекс или имя поля в данных\r\n            const dataIndex = (item.alias ? item.alias : item.name);\r\n            // Сортировка по умолчанию\r\n            if (_defaultSorter.length === 0 || _defaultSorter[1] === undefined)\r\n                _defaultSorter = getSortBy(defaultSortBy, item.defaultSort, dataIndex);\r\n\r\n            // Ширина колонок\r\n            const widthCol = fixWidthColumn ? { width: item.width, maxWidth: 1000 } : {};\r\n            // Увеличить счетчик видимых полей\r\n            visibleIndex++;\r\n            // Проверка у этого ли поля ставить иконку дерева\r\n            if (_expandColumnKey === dataIndex)\r\n                expandIconColumnIndex = visibleIndex + (selectable ? 1 : -1);\r\n            // Формирование title колонки\r\n            let titleNode = colProps && colProps.headerRenderer\r\n                ? (typeof colProps.headerRenderer === \"function\" ? colProps.headerRenderer() : colProps.headerRenderer)\r\n                : (item.header ? item.header : item.name);\r\n\r\n            const column = {\r\n                key: dataIndex,\r\n                title: titleNode,\r\n                dataIndex: dataIndex,\r\n                align: item.align,\r\n                resizable: item.resizable,\r\n                sorter: item.sortable ? item.sortable : undefined,\r\n                ellipsis: true,\r\n                defaultSortOrder: _defaultSorter[1],\r\n                ...widthCol,\r\n                ...colProps\r\n            };\r\n            // Дополнительные props для компонента ячейки\r\n            column.onCell = (rowData, rowIndex) => ({ column, rowData, rowIndex });\r\n            // Рендер ячейки\r\n            column.render = (cellData, rowData, rowIndex) => {\r\n                if (colProps && colProps.cellRenderer)\r\n                    return <colProps.cellRenderer\r\n                        column={column}\r\n                        cellData={cellData}\r\n                        rowData={rowData}\r\n                        rowIndex={rowIndex} />;\r\n                else\r\n                    return item.typeData === \"json\" ? JSON.stringify(cellData) : cellData ? cellData : \"---\";\r\n            };\r\n            _columns.push(column);\r\n        });\r\n\r\n        let _defaultFilter;\r\n        if (config && config.hierarchical && config.hierarchyLazyLoad) {\r\n            const parentKey = config.hierarchyField\r\n                ? config.hierarchyField.split(\"/\")[1]\r\n                : expandParentKey;\r\n            _defaultFilter = { ...defaultFilter, [parentKey]: null };\r\n        } else _defaultFilter = defaultFilter;\r\n\r\n        // console.log('expandIconColumnIndex => ', _expandColumnKey, expandIconColumnIndex);\r\n        setTableConfig({\r\n            columns: _columns,\r\n            defaultSortBy: _defaultSorter[0],\r\n            defaultFilter: _defaultFilter,\r\n            rowKey:\r\n                config && config.hierarchical && config.hierarchyField\r\n                    ? config.hierarchyField.split(\"/\")[0]\r\n                    : rowKey,\r\n            // expandParentKey:\r\n            //     config && config.hierarchical && config.hierarchyField\r\n            //         ? config.hierarchyField.split('/')[1]\r\n            //         : expandParentKey,\r\n            expandColumnKey: _expandColumnKey,\r\n            expandable: { expandIconColumnIndex },\r\n            // expandLazyLoad:\r\n            //     config && config.hierarchical && config.hierarchyLazyLoad\r\n            //         ? config.hierarchyLazyLoad\r\n            //         : expandLazyLoad,\r\n            pageSize: config && config.hierarchical ? 1 : pageSize,\r\n        });\r\n    };\r\n\r\n    if (tableConfig)\r\n        return (<Table {...props} {...tableConfig} />);\r\n    else\r\n        return null;\r\n};\r\n\r\nexport default ConfigLoader;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { notification, Button, Tooltip, Modal as AntModal} from \"antd\";\r\nimport { notificationError, dispatchToStore, useMounted, getObjectExcludedProps } from \"../utils/baseUtils\";\r\nimport Form from \"../Form/Form\";\r\nimport { getExtraData, mapDispatchToProps, mapStateToProps } from \"../utils/storeUtils\";\r\n\r\nconst excludeProps = [\"buttonProps\", \"toolTipProps\", \"modalConfig\", \"modalData\", \"subscribe\", \"dispatch\"];\r\nconst modalTypes = ['save', 'select', 'view']\r\n\r\nconst defaultProps = {\r\n    subscribe: [],\r\n    dispatch: {},\r\n    methodSaveForm: 'POST'\r\n}\r\n\r\nconst getDefaultFooterProps = (modal) => {\r\n\r\n    let okText = '';\r\n    let cancelText = '';\r\n    let modalTitle = '';\r\n\r\n    switch (modal.type) {\r\n        case 'save':\r\n            okText = 'Сохранить';\r\n            cancelText = 'Отмена';\r\n            break;\r\n        case 'select':\r\n            okText = 'Добавить';\r\n            cancelText = 'Отмена';\r\n            break;\r\n        case 'view':\r\n            okText = 'Закрыть';\r\n            break;\r\n        default: break;\r\n    }\r\n\r\n    if(modal.okText)\r\n        okText = modal.okText;\r\n\r\n    if(modal.cancelText)\r\n        cancelText = modal.cancelText;\r\n\r\n    if(modal.title)\r\n        modalTitle = modal.title;\r\n\r\n    return {okText, cancelText, title: modalTitle, okType: 'primary'}\r\n};\r\n\r\n/**\r\n * Компонент модального окна\r\n */\r\nconst Modal = props => {\r\n\r\n    const {buttonProps, toolTipProps, modalConfig, modalData, subscribe, dispatch} = props;\r\n    const modalProps = { ...getDefaultFooterProps(modalConfig), ...getObjectExcludedProps(modalConfig, excludeProps) };\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [_modalData, _setModalData] = useState({});\r\n    const [_buttonProps, setButtonProps] = useState({});\r\n\r\n    const isMounted = useMounted()\r\n\r\n    useEffect(() => {\r\n        _setModalData(modalData);\r\n    }, []);\r\n\r\n    /** Подписка на изменение props[subscribe.name] в сторе */\r\n    subscribe.map(item => {\r\n        return useEffect( () => {\r\n            // if(!isMounted && !item.name)\r\n            //     return;\r\n            if((item.withMount || isMounted) && item.name) {\r\n            // console.log(\"storeHOC => subscribe: \", props[subscribe.name]);\r\n                item.onChange && item.onChange({\r\n                    value: props[item.name],\r\n                    extraData: getExtraData(item, props), //extraData,\r\n                    setModalData,\r\n                    setButtonProps,\r\n                    openModal: _onOpenModal,\r\n                    closeModal: _onCloseModal\r\n                });\r\n            }\r\n            // console.log(\"Change Props[2]: \", props.subscribeЗф);\r\n        }, [props[item.name]]);\r\n    })\r\n\r\n    const setModalData = (value) => _setModalData && _setModalData(value);\r\n    const _onOpenModal = () => setVisible(true)\r\n    const _onCloseModal = () => setVisible(false)\r\n\r\n    const onFinishHandler = (values) => { //} {type, row, requestSaveRow}) => {\r\n        // console.log(\"Modal Events => before dispatchToStore: \", dispatch);\r\n        const saveObj = {..._modalData, ...values};\r\n\r\n        if (modalProps.requestSaveForm && modalProps.methodSaveForm) {\r\n            // console.log(\"Modal Events => type: \", type, method, row, _modalData);\r\n            modalProps.requestSaveForm({\r\n                method: modalProps.methodSaveForm,\r\n                data: saveObj,\r\n            })\r\n                .then(response => {\r\n                    notification.success({\r\n                        message: 'Сохранение прошло успешно'\r\n                    });\r\n                    modalProps.onOk && modalProps.onOk(saveObj, response.data);\r\n                    modalProps.onFinish && modalProps.onFinish(saveObj, response.data);\r\n                    dispatchToStore({dispatch, setDataStore: props.setDataStore, value: saveObj});\r\n                    _onCloseModal();\r\n                })\r\n                .catch(error => notificationError((modalProps.onFailed && modalProps.onFailed(error))||error, 'Ошибка при сохранении'));\r\n        } else {\r\n            modalProps.onOk && modalProps.onOk(saveObj);\r\n            modalProps.onFinish && modalProps.onFinish(saveObj);\r\n            dispatchToStore({dispatch, setDataStore: props.setDataStore, value: saveObj});\r\n            _onCloseModal();\r\n        }\r\n    };\r\n\r\n    const onFinishFailedHandler = (errorInfo) => {\r\n        // console.log('FormModal Failed:', errorInfo);\r\n        console.error(\"FormModal fields failed: \", errorInfo);\r\n        props.onFinishFailed && props.onFinishFailed(errorInfo);\r\n    };\r\n\r\n    const loadInitDataHandler = (callBack) =>\r\n        formConfig.loadInitData(callBack, _modalData)\r\n\r\n\r\n    const _onCancelHandler = (e) => {\r\n        // setVisibleModals({ ...visibleModals, [modal.type]: false });\r\n        // form.resetFields();\r\n        _onCloseModal()\r\n        if (modalProps.onCancel) modalProps.onCancel(e)\r\n    };\r\n\r\n    const defaultFooter = [\r\n        {\r\n            componentType: 'Item',\r\n            child: {\r\n                componentType: 'Button',\r\n                label: modalProps.cancelText,\r\n                className: 'mr-8',\r\n                onClick: _onCancelHandler,\r\n                ...modalProps.cancelButtonProps\r\n            }\r\n        },\r\n        {\r\n            componentType: 'Item',\r\n            child: {\r\n                componentType: 'Button',\r\n                label: modalProps.okText,\r\n                type: modalProps.okType,\r\n                htmlType: 'submit',\r\n                ...modalProps.okButtonProps\r\n            }\r\n        }\r\n    ];\r\n\r\n    const formConfig =  {\r\n        footer: defaultFooter,\r\n        loadInitData: (callBack, row) => callBack(row),\r\n        ...modalProps.form\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Tooltip {...toolTipProps}>\r\n                <Button\r\n                    type=\"primary\"\r\n                    {...buttonProps}\r\n                    {..._buttonProps}\r\n                    onClick={_onOpenModal}\r\n                >{buttonProps && buttonProps.label}</Button>\r\n            </Tooltip>\r\n            <AntModal\r\n                {...modalProps}\r\n                centered\r\n                destroyOnClose\r\n                visible={visible}\r\n                onCancel={_onCancelHandler}\r\n                bodyStyle={{padding: 0, ...modalProps.bodyStyle}}\r\n                footer={null}\r\n            >\r\n                <Form\r\n                    {...formConfig}\r\n                    onFinish={onFinishHandler}\r\n                    onFinishFailed={onFinishFailedHandler}\r\n                    loadInitData={loadInitDataHandler}\r\n                >{props.children}</Form>\r\n            </AntModal>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nModal.propTypes = {\r\n\r\n    /** Свойства [Button](https://ant.design/components/button/) из Ant Design\r\n     * Добавлено свойство `label` с типом `ReactNode` или `string` для формирования контента кнопки*/\r\n    buttonProps: PropTypes.object,\r\n\r\n    /** Объект модального окна. Стандартная конфигурация. */\r\n    modalConfig: PropTypes.shape({\r\n        /** Тип модального окна */\r\n        type: PropTypes.oneOf(modalTypes),\r\n\r\n        /** Запрос для автоматического сохранения формы */\r\n        requestSaveForm: PropTypes.func,\r\n\r\n        /** HTTP Метод, передаваемый в запрос сохранения */\r\n        methodSaveForm: PropTypes.string,\r\n\r\n        /** Пропсы формы.\r\n         * Если верстка через конфиги, то пропс body обязателен */\r\n        form: PropTypes.object\r\n    }),\r\n\r\n    /** Данные для модального окна */\r\n    modalData: PropTypes.object,\r\n\r\n    /** Путь в сторе куда класть данных окна после закрытия */\r\n    dispatch: PropTypes.object,\r\n\r\n    /** Объект для подписки на изменения в STORE.\r\n     * Параметры в `onChange`:\r\n     * * `value`: значение за которым ведется наблюдение,\r\n     * * `extraData`: дополнительные данные, передаваемые при срабатывании события\r\n     * * `setModalData`: функция задания объекта формы\r\n     * * `setButtonProps`: функция задания пропсов кнопке\r\n     * * `openModal`: функция открытия модального окна\r\n     * * `closeModal`: функция закрытия модального окна */\r\n    subscribe: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nModal.defaultProps = defaultProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\r\n","import React, {useState} from 'react';\r\nimport {w3cwebsocket as W3CWebSocket} from 'websocket';\r\nimport { Button, Cascader, Checkbox, Input } from \"antd\";\r\nimport {\r\n\tCaretRightOutlined,\r\n\tStopOutlined,\r\n} from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\nconst styles = {\r\n\trow: {\r\n\t\tdisplay: 'flex',\r\n\t\tborderBottom: '1px solid #d9d9d9',\r\n\t},\r\n\tinputUrl: {\r\n\t\tflexBasis: '200px',\r\n\t\tborderRight: '1px solid #d9d9d9',\r\n\t},\r\n\tinputQuery: {\r\n\t\tflex: '1',\r\n\t\tborderRight: '1px solid #d9d9d9',\r\n\t},\r\n\tautoScroll: {\r\n\t\tpadding: '0 8px',\r\n\t\tdisplay: 'flex',\r\n\t\tborderRight: '1px solid #d9d9d9',\r\n\t},\r\n\tbuttonStart: {color: 'green'},\r\n\tbuttonStop: {color: 'red'},\r\n\tpre: {\r\n\t\t// height: '100%',\r\n\t\toverflow: 'auto',\r\n\t\tmarginBottom: 0,\r\n\t},\r\n};\r\n\r\nconst scrollToBottom = (block) => {\r\n\tconst scrollHeight = block.scrollHeight;\r\n\tconst height = block.clientHeight;\r\n\tconst maxScrollTop = scrollHeight - height;\r\n\tblock.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\r\n};\r\n\r\nconst Logs = (props) => {\r\n\tconst [ws, setWs] = useState(null);\r\n\tconst [Logs, setLogs] = useState([]);\r\n\tconst [logsRef, setLogsRef] = useState(null);\r\n\tconst [wsParams, setWsParams] = useState({url: props.loki.url, query: props.loki.query});\r\n\tconst [autoScroll, setAutoScroll] = useState(true);\r\n\r\n\tconst onOpen = () => {\r\n\t\t// setWs(new W3CWebSocket(\"ws://10.5.121.117:3100/loki/api/v1/tail?query={dynamicdq=\\\"oauth.dias-dev.ru\\\"}\", 'echo-protocol'));\r\n\t\tsetWs(\r\n\t\t\tnew W3CWebSocket(\r\n\t\t\t\t`ws://${wsParams.url}/loki/api/v1/tail?query=${wsParams.query}`,\r\n\t\t\t\t'echo-protocol'\r\n\t\t\t)\r\n\t\t);\r\n\t\tsetLogs([]);\r\n\t\tconsole.log('onCreate ws => ', ws);\r\n\t};\r\n\tconst onClose = () => {\r\n\t\tconsole.log('onClose ws => ', ws);\r\n\t\tws && ws.close();\r\n\t\tsetWs(undefined);\r\n\t};\r\n\r\n\tif (ws != null) {\r\n\t\tws.onmessage = (msg) => {\r\n\t\t\tconst streams = JSON.parse(msg.data).streams;\r\n\t\t\tconst data = streams.map((streamItem) => {\r\n\t\t\t\treturn streamItem.values.map((valueItem) => {\r\n\t\t\t\t\t// console.log('valueItem[0].substr(0, 13) => ', moment(valueItem[0].substr(0, 13),\"x\").format(\"YYYY-MM-DD hh:mm:ss\") ); //\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={valueItem[0]}>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{moment(valueItem[0].substr(0, 13), 'x').format(\r\n\t\t\t\t\t\t\t\t\t'YYYY-MM-DD hh:mm:ss'\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span>{valueItem[1]}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tsetLogs((state) => [...state, data]);\r\n\t\t\tif (logsRef && autoScroll) scrollToBottom(logsRef);\r\n\t\t\t// console.log('Logs => ', streams)\r\n\t\t};\r\n\t}\r\n\r\n\tconst onChangeApp = (value) => {\r\n\t\t// console.log(value);\r\n\t\tonClose();\r\n\t\tsetWsParams({...wsParams, query: `{server=\"${value[0]}\", app=\"${value[1]}\"}`})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div style={styles.row}>\r\n\t\t\t\t{/*<div style={styles.inputUrl}>*/}\r\n\t\t\t\t{/*\t<Input value={wsParams.url} bordered={false} />*/}\r\n\t\t\t\t{/*</div>*/}\r\n\t\t\t\t<div style={styles.inputUrl}>\r\n\t\t\t\t\t<Cascader options={props.servers} onChange={onChangeApp} placeholder=\"Выберите приложение\"  bordered={false} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={styles.inputQuery}>\r\n\t\t\t\t\t<Input value={wsParams.query} bordered={false} disabled={true} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={styles.autoScroll}>\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tstyle={{margin: 'auto'}}\r\n\t\t\t\t\t\tchecked={autoScroll}\r\n\t\t\t\t\t\tonChange={(e) => setAutoScroll(e.target.checked)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAuto scroll\r\n\t\t\t\t\t</Checkbox>\r\n\t\t\t\t</div>\r\n\t\t\t\t{ws != null ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={onClose}\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\ticon={<StopOutlined />}\r\n\t\t\t\t\t\t\tstyle={styles.buttonStop}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={onOpen}\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\ticon={<CaretRightOutlined />}\r\n\t\t\t\t\t\t\tstyle={styles.buttonStart}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{/*<div><Button type=\"text\" icon={<StopOutlined />} style={styles.buttonStop}/></div>*/}\r\n\t\t\t\t{/*<Col span={3}><Button>Close connect</Button></Col>*/}\r\n\t\t\t</div>\r\n\t\t\t<pre style={styles.pre} ref={(ref) => setLogsRef(ref)}>\r\n\t\t\t\t{Logs}\r\n\t\t\t</pre>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Logs;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {\r\n\tLineChart as LC,\r\n\tLine,\r\n\tXAxis,\r\n\tYAxis,\r\n\tCartesianGrid,\r\n\tTooltip,\r\n\tLegend,\r\n} from 'recharts';\r\nimport { notificationError } from \"../../utils/baseUtils\";\r\n\r\n// interface LineChartProps {\r\n//     size: {width: number; height: number}\r\n//     configName?: string;\r\n//     grid?: CartesianGridProps | undefined;\r\n//     tooltip?: object;\r\n//     legend?: LegendProps;\r\n//     xAxis?: XAxisProps;\r\n//     yAxes?: YAxisProps[];\r\n//     lines?: LineProps[];\r\n// }\r\n\r\nconst LineChart = (props) => {\r\n\tconst {size, configName, requestLoadRows, grid, tooltip, legend, xAxis, yAxes, lines} =\r\n\t\tprops;\r\n\tconst [data, setData] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\trequestLoadRows(configName)({\r\n\t\t\tdata: {\r\n\t\t\t\tfrom: '2021-09-29T16:00:00.000Z',\r\n\t\t\t\tto: '2021-09-30T20:00:00.000Z',\r\n\t\t\t},\r\n\t\t\tparams: {},\r\n\t\t})\r\n\t\t\t.then((res) => setData(res.data))\r\n\t\t\t.catch((error) =>\r\n\t\t\t\tnotificationError(error, 'Ошибка загрузки данных')\r\n\t\t\t);\r\n\t}, []);\r\n\r\n\tif (data.length > 0) {\r\n\t\t// console.log(\"data.length / 105 => \", Math.floor(data.length / 105))\r\n\t\treturn (\r\n\t\t\t<LC width={size.width} height={size.height - 32} data={data}>\r\n\t\t\t\t{grid ? <CartesianGrid {...grid} /> : null}\r\n\t\t\t\t{tooltip ? <Tooltip {...tooltip} /> : null}\r\n\t\t\t\t{legend ? <Legend {...legend} /> : null}\r\n\t\t\t\t{xAxis ? (\r\n\t\t\t\t\t<XAxis\r\n\t\t\t\t\t\t{...xAxis}\r\n\t\t\t\t\t\tinterval={Math.floor(data.length / xAxis.interval)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : null}\r\n\t\t\t\t{yAxes &&\r\n\t\t\t\t\tArray.isArray(yAxes) &&\r\n\t\t\t\t\tyAxes.map((yAxis) => <YAxis {...yAxis} />)}\r\n\t\t\t\t{lines &&\r\n\t\t\t\t\tArray.isArray(lines) &&\r\n\t\t\t\t\tlines.map((line) => <Line {...line} />)}\r\n\t\t\t</LC>\r\n\t\t);\r\n\t} else return null;\r\n};\r\n\r\nexport default LineChart;\r\n","import React, {useEffect, useState} from 'react';\r\nimport RGL, {WidthProvider} from 'react-grid-layout';\r\nimport sizeMe from 'react-sizeme';\r\nimport Logs from './Panels/Logs';\r\nimport LineChart from './Panels/LineChart';\r\nimport { notificationError } from \"../utils/baseUtils\";\r\n\r\nconst ReactGridLayout = WidthProvider(RGL);\r\nconst startGridWidth = 1200;\r\n\r\nconst contents = {\r\n\tlogs: Logs,\r\n\tlineChart: LineChart,\r\n};\r\n\r\nconst DashboardPanel = sizeMe.withSize({monitorHeight: true})(\r\n\t({size, title, type, params}) => {\r\n\t\t// console.log('DashboardPanel', size)\r\n\t\tconst Content = contents[type];\r\n\t\treturn (\r\n\t\t\t<div className={'dashboard-panel'}>\r\n\t\t\t\t<div className={'dashboard-panel-header'}>{title}</div>\r\n\t\t\t\t<div className={'dashboard-panel-content'}>\r\n\t\t\t\t\t<Content size={size} {...params} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nconst DashboardGrid = sizeMe.withSize()(({size, panels}) => {\r\n\tconst width = size.width > 0 ? size.width : startGridWidth;\r\n\t// console.log('Grid dashboard', size)\r\n\tconst renderPanels =\r\n\t\tpanels &&\r\n\t\tpanels.map(({gridPos, ...panel}, index) => (\r\n\t\t\t<div key={index} data-grid={gridPos}>\r\n\t\t\t\t<DashboardPanel {...panel} />\r\n\t\t\t</div>\r\n\t\t));\r\n\treturn (\r\n\t\t<ReactGridLayout\r\n\t\t\tclassName='layout'\r\n\t\t\trowHeight={30}\r\n\t\t\tcols={12}\r\n\t\t\twidth={width}\r\n\t\t\tdraggableHandle={'.dashboard-panel-header'}\r\n\t\t>\r\n\t\t\t{renderPanels}\r\n\t\t</ReactGridLayout>\r\n\t);\r\n});\r\n\r\nconst Dashboard = (props) => {\r\n\tconst {id, requestLoadConfig} = props\r\n\tconst [dashboard, setDashboard] = useState(props.dashboard);\r\n\r\n\tuseEffect(() => {\r\n\t\trequestLoadConfig && requestLoadConfig({\r\n\t\t\tdata: {id: id},\r\n\t\t\tparams: {},\r\n\t\t})\r\n\t\t\t.then(res => res.data && res.data.dashboard && setDashboard(JSON.parse(res.data.dashboard)))\r\n\t\t\t.catch(err => notificationError(\"Ошибка загрузки dashboard\", err));\r\n\t}, [id]);\r\n\r\n\tconsole.log('dashboard => ', dashboard);\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundColor: '#f0f2f5',\r\n\t\t\t\twidth: '100%',\r\n\t\t\t\theight: '100%',\r\n\t\t\t\toverflow: 'auto',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<DashboardGrid panels={dashboard.panels} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Dashboard;\r\n","import objectPath from 'object-path';\r\nimport {actionTypes} from './rtd.action.types';\r\n\r\nconst rtdReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.INIT_STORE: {\r\n            const {path} = action.payload;\r\n            // console.log(\"INIT_TABLE_STORE: \", path);\r\n            let newState = {...state};\r\n            objectPath.set(newState, path, {});\r\n            return newState;\r\n        }\r\n        case actionTypes.SET_DATA_STORE: {\r\n            const {path, row} = action.payload;\r\n\r\n            let newState = {...state};\r\n            if(row === undefined)\r\n                objectPath.del(newState, path); // newState[path] is now undefined\r\n            else\r\n                objectPath.set(newState, path, row); // newState[path] is now row\r\n\r\n            console.debug(\"Store change: \", path, row);\r\n            // console.group(\"Store\");\r\n            // console.log(\"Store: \", newState);\r\n            // console.log(\"New Data: \", path, row);\r\n            // console.groupEnd();\r\n\r\n            return newState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default rtdReducer;\r\n","import { notification } from \"antd\";\r\nimport { notificationError } from \"./baseUtils\";\r\n\r\nexport const executeRequest = (request) => (options) => request(options)\r\n    .then(response => {\r\n        notification.success({\r\n            message: \"Сохранение прошло успешно\"\r\n        });\r\n    })\r\n    .catch(error => notificationError(error, 'Ошибка при сохранении') );"],"names":["types","INIT_STORE","SET_DATA_STORE","setDataStore","path","row","type","actionTypes","payload","noop","flatten","arrayOfArrays","reduce","flattened","item","concat","Array","isArray","getTableRowObjects","data","rowKeys","map","children","length","getTableRowKeys","rowKey","findNodeByRowKey","rowValue","node","i","_findNodeByRowKey","currentNode","value","currentChild","result","generateUUID","replace","c","crypto","getRandomValues","Uint8Array","toString","getValueFromSingleSelect","name","keys","getValueFromMultiSelect","getObjectExcludedProps","object","exclude","returnObject","Object","forEach","key","includes","undefined","notificationError","error","message","response","console","status","errorDescription","_notification","description","dispatchToStore","dispatch","extraData","timestamp","moment","useMounted","React","useState","babelHelpers.slicedToArray","isMounted","setIsMounted","useEffect","getSortBy","clientSortBy","serverSortBy","dataIndex","order","rtPrefix","empty","overlay","_Spin","LoadingOutlined","fontSize","SelectionHead","props","column","container","onSelectAll","selectedRowKeys","selectAll","_handleChange","e","rowObjects","filter","totalLength","selectLength","checked","selected","_Checkbox","getRowChildren","findBrothers","selfItem","parentKey","arr","push","parentAnalysis","rowData","nodeAssociated","treeData","indeterminateRowKeys","_selectedRowKeys","_indeterminateRowKeys","currentRowData","parentExist","lastTypeSelect","typeSelect","nextSquare","indeterminateBrothers","selectedBrothers","allBrothers","index","indexOf","splice","indexS","indexI","SelectionCell","rowIndex","onChange","rowChildren","element","Set","_selectedRowObjects","_selectedRow","_selectAll","det","target","APP_TIME_OFFSET","getMomentFromStringByFormat","date","format","utcOffset","getMomentWithOffset","getMomentWithOffsetTruncateDay","startOf","toFormat","dateString","mom","isValid","toDDMMYYYYHHMMSS","getISO","toISOString","DateRange","mounted","setMounted","startValue","setStartValue","endValue","setEndValue","className","nameStart","nameEnd","dateFormat","size","title","valueStart","valueEnd","showTime","defaultValueStart","_onChange","defaultValueEnd","disabledStartDate","valueOf","disabledEndDate","onStartChange","onEndChange","_DatePicker","locale","width","propTypes","PropTypes","string","func","oneOf","defaultProps","SingleDate","_value","setValue","defaultValue","_onChangePicker","FilterPanel","defaultFilter","setFilter","applyFilterTooltip","applyFilterSize","applyFilterRender","borderStyle","onChangeFilter","onApplyFilter","configFilter","resetFilterRender","resetFilterTooltip","resetFilterSize","_onChangeData","_filter","babelHelpers.defineProperty","_applyFilter","_resetFilter","getPanelCls","cls","findIndex","join","componentType","babelHelpers.extends","Select","render","_Tooltip","_Button","marginLeft","oneOfType","arrayOf","SelectionList","selectedRowObjects","rowRender","onClickDropSelect","CloseCircleOutlined","isRequired","Table","forwardRef","ref","hasMore","setHasMore","loading","setLoading","_rows","_setRows","setSelectedRowKeys","_searchValue","setSearchValue","_sortBy","setSortBy","setSelectAll","setIndeterminateRowKeys","_expandedRowKeys","setExpandedRowKeys","_totalCountRows","setTotalCountRows","_footerShow","_setFooterShow","tableRef","useRef","defaultRows","defaultSelectedRowKeys","defaultSearchValue","defaultSortBy","rows","setRows","searchValue","sortBy","columns","autoDeleteRows","fixWidthColumn","footerHeight","footerShow","footerTitles","headerHeight","rowHeight","zebraStyle","rowRenderer","estimatedRowHeight","loadThreshold","pageSize","requestLoadRows","requestLoadCount","searchParamName","selectable","expandColumnKey","expandParentKey","expandLazyLoad","expandDefaultAll","onRowClick","onRowDoubleClick","onRowExpand","onSelectedRowsChange","onExpandedRowsChange","showSelection","rowRenderShowSelection","dispatchPath","subscribe","commandPanelProps","CommandPanel","filterPanelProps","footerProps","selectedDispatchPath","rowsDispatchPath","_setRowsHandler","showElements","leftCustomSideElement","centerCustomSideElement","rightCustomSideElement","flatRows","selectedRow","ii","_dataProcessing","searchLine","reload","reloadData","current","setReloadTable","rowsDispatch","setRowsHandler","params","expandRow","pageNum","Math","floor","page","sort","dataQuery","then","catch","child","newRows","_rowEventHandlers","onClick","event","newRowObject","onDoubleClick","_onColumnSort","scrollToRow","loadParams","_getColumns","_columns","selectColumn","headerRenderer","cellRenderer","flexShrink","resizable","frozen","_onChangeSelectHandler","_onSelectAllHandler","unshift","_footer","FormItems","selectedTitle","loadedTitle","totalTitle","_rowClassName","rowClassName","onEndReached","selectedKeys","_onExpandedRowsChange","expandedRowKeys","_onRowExpand","expanded","allChildKeys","_getDisabledElementsOfCommandPanel","_disabledElements","disabledElements","babelHelpers.toConsumableArray","_onClickAddAsCopy","onClickAddAsCopy","_onClickEdit","onClickEdit","_onClickDelete","onClickDelete","loop","callback","_onClickUp","newRowIndex","_getNewIndexRow","_changeIndexRow","onClickUp","_onClickDown","onClickDown","oldIndex","newIndex","_onSearch","preventDefault","onSearch","_onChangeFilter","_onApplyFilter","_onClickDropSelectHandler","dropObject","newSelectedKeys","height","AutoResizer","BaseTable","number","shape","bool","selectedRows","loadedRows","totalRows","mapStateToProps","store","ownProps","objectPath","get","mapDispatchToProps","bindActionCreators","connect","Paragraph","_selectedRowData","_setSelectedRowData","isSelectOpened","setIsSelectOpened","isClickInSelect","setIsClickInSelect","placeholder","widthControl","widthPopup","heightPopup","onChangeKeys","requestLoadDefault","searchable","setSelectedRowData","loadSelectedObject","request","srk","findRow","find","window","addEventListener","handleMouseClick","removeEventListener","onClosePopup","dataKey","_getHeadCls","_getHeadText","_getPopupCls","_getPopupStyle","defRowsLen","getEvents","systemBtnProps","_SingleSelectRow","contains","onOpenPopup","onClickClear","UpOutlined","DownOutlined","CloseCircleFilled","AdvancedTable","config","setConfig","configData","customColumnProps","requestLoadConfig","cleanupFunction","loadData","babelHelpers.asyncToGenerator","_this","columnsByConfig","fields","colProps","alias","header","align","sortable","hidden","visible","cellData","_Typography","getDefaultFilter","hierarchical","hierarchyLazyLoad","hierarchyField","split","hierarchyView","excludeProps","Form","loadInitData","body","footer","autoSaveForm","requestSaveForm","methodSaveForm","processBeforeSaveForm","loaded","setLoaded","antFormProps","setAntFormProps","initFormData","setInitFormData","_setInitFormData","antForm","form","_Form","useForm","getBodyCls","noPadding","scrollable","onFinish","rawValues","values","log","saveObject","method","success","onFinishFailed","errorInfo","style","initialValues","FormModal","modal","setVisible","saveRow","getDefaultFooterProps","okText","cancelText","modalTitle","okType","modalProps","saveObj","startsWith","requestSaveRow","onOk","_onCancelHandler","onCancel","_onLoadInitData","callBack","formConfig","defaultFooter","label","cancelButtonProps","htmlType","okButtonProps","_Modal","padding","bodyStyle","FormTable","addOnServer","editOnServer","addOnLocal","editOnLocal","addGroupOnServer","editGroupOnServer","addGroupOnLocal","editGroupOnLocal","select","viewGroup","viewObject","visibleModals","setVisibleModals","tableRows","setTableRows","tableSelectedRowKeys","setTableSelectedRowKeys","tableSelectedRow","setTableSelectedRow","setTableRef","_setTableRef","_ref","rowKeyType","customFields","modals","isGroupKey","history","requestDeleteRow","dataDeleteRow","cmdProps","_addRowsToLocalTable","getModals","_onSaveRow","isExistCmdBtn","btnType","equalsActionTypeCmdBtn","actionType","aTypes","_onClickAddHandler","location","pathname","_onClickAddAsCopyHandler","_addRowToLocalTable","_onClickAddGroupHandler","_onClickEditHandler","deleteData","_onClickUpHandler","_onClickDownHandler","selectRows","saveRows","sRow","tRow","field","validate","_addRowToServerTable","_editRowToLocalTable","_onRowClick","_onRowDoubleClick","_onSelectedRowsChange","getTableCls","onClickAdd","onClickAddGroup","SortOrder","ASC","DESC","withStore","Component","antFormItemProps","trigger","valuePropName","withStoreProps","subscribeProps","setSubscribeProps","getValueFromEvent","newValue","childProps","DatePickerHOC","TypographyTitle","TypographyText","TypographyDate","getTitle","Modal","parentLoadHandler","labelCol","span","wrapperCol","rules","required","info","AddFolderModal","args","EditFolderModal","EditFileModal","copyTextToClipboard","navigator","clipboard","fallbackCopyTextToClipboard","text","writeText","openNotificationWithIcon","err","textArea","document","createElement","top","left","position","appendChild","focus","successful","execCommand","removeChild","msg","FileManager","HomeOutlined","breadcrumb","setBreadcrumb","deleted","tableFilter","setTableFilter","isGroup","loadTable","requestDownloadFile","_onClickBreadcrumb","parentId","slice","_onClickBack","newBreadcrumb","newFilter","processBeforeSaveModal","extension","newData","owner","requestLoadParent","_uploadFile","file","notification","requestUploadFile","notifProps","uid","duration","icon","close","CopyOutlined","pathDownloadFile","styleDiv","display","alignItems","Icon","styleIcon","marginRight","FolderFilled","color","FileWordOutlined","FileExcelOutlined","FileImageOutlined","FileMarkdownOutlined","FilePdfOutlined","FilePptOutlined","FileTextOutlined","FileZipOutlined","FileOutlined","uploadProps","multiple","showUploadList","beforeUpload","uploadRender","_Upload","PlusOutlined","breadcrumbRender","add","tooltip","addGroup","edit","delete","RollbackOutlined","disabled","buttonProps","modalConfig","modalData","_modalData","_setModalData","_buttonProps","setButtonProps","setModalData","_onOpenModal","_onCloseModal","FormItem","getItem","_Input","TextArea","Password","_Radio","Button","Group","Layout","itemProps","getCls","items","getItems","antFormListParams","_Row","_Col","_Tabs","_item","_key","fieldKey","operation","param","fIndex","confirm","defaultValueSearch","deleteConfirm","deleteConfirmType","deleteConfirmTitle","deleteConfirmDescription","defaultSystemBtnProps","addAsCopy","FolderAddOutlined","EditOutlined","DeleteOutlined","up","ArrowUpOutlined","down","ArrowDownOutlined","search","settings","tooltipPlacement","SettingOutlined","FilterOutlined","deleteButtonModalConfirm","deleteButtonPopupConfirm","_Popconfirm","renderDeleteBtn","ExclamationCircleOutlined","content","centered","withOnClick","genProps","btnProps","renderBtn","List","deprecated","dispatchExtraData","withMount","getExtraData","setSubscribePropsHandler","_subscribeProps","prevState","has","_searchDispatchToStore","del","onSearchProps","renderClassicByName","formListProps","renderDeclarativeByName","FormHeader","FormBody","rest","FormFooter","Header","Footer","changedFields","allFields","getFieldsValue","lostParamName","infinityMode","optionConverter","options","mode","dropdownRender","_hasMore","_setHasMore","_loading","_setLoading","_options","_setOptions","tmpOption","setTmpOption","isEndReached","setIsEndReached","_setSortBy","_setFilter","_setSearchValue","_isSelectAll","_setIsSelectAll","debounceTimer","setDebounceTimer","_loadOptions","__sortBy","__filter","__searchValue","preValue","option","_loadTmpOption","getPageNum","getSort","getSearchValue","requestOptions","onScroll","scrollTopMax","nativeEvent","scrollHeight","scrollTop","clearTimeout","setTimeout","_onChangeSelectAll","optionsValues","getSelectAllCls","_Select","omittedValues","CheckOutlined","menu","id","TreeSelect","_treeData","_setTreeData","_optionConverter","_TreeSelect","dataObject","onCompletedUpload","onFailedUpload","toolTipProps","UploadFile","_dataObject","defaultUploadProps","CloudUploadOutlined","onChangeSelectionCell","editMode","rowBordered","_setSelectedRowsHandler","setFilterHandler","onChangeObject","reloadTable","addRows","_addRows","addRow","_addRow","addRowAsCopy","_addRowAsCopy","editRow","_editRow","removeRow","_removeRow","moveUpRow","_moveUpRow","moveDownRow","_moveDownRow","_setSubscribeProps","_setLoadedRowsHandler","selectedObjects","selectedDispatch","onTableEventsDispatch","nameEvent","dp","appendParams","_rowSelectAfterClick","_getSelectionColumnProps","localSortBy","_localRows","_row","validations","cellBordered","ConfigLoader","tableConfig","setTableConfig","configParser","r","_defaultSorter","defaultSort","headerClassName","_defaultFilter","HeaderCell","onResize","restProps","ColumnResizer","maxWidth","HeaderRow","headerRowRef","setHeaderHeight","newHeight","clientHeight","BodyCell","cellComponent","_setColumns","rowSelection","expandable","_loadRows","_moveUpSelectedRow","moveUpRowByKey","_moveUpRowByKey","_moveDownSelectedRow","moveDownRowByKey","_moveDownRowByKey","onChangeTable","pagination","filters","sorter","extra","action","onSort","onHeaderRowProps","onRowEvents","onResizeHandler","nextColumns","onChangeSelectedHandler","onSelectAllHandler","changeRows","ExpandIcon","babelHelpers.objectWithoutProperties","expandIconRender","onExpand","record","CaretUpOutlined","visibility","CaretDownOutlined","CaretRightOutlined","currentPageData","flex","_Space","getColumns","col","onHeaderCell","expandableProps","defaultExpandAllRows","expandIcon","rowSelectionProps","fixed","checkStrictly","_Table","y","cell","bordered","visibleIndex","expandIconColumnIndex","_expandColumnKey","widthCol","titleNode","ellipsis","defaultSortOrder","onCell","typeData","JSON","stringify","modalTypes","openModal","closeModal","onFinishHandler","onFailed","onFinishFailedHandler","loadInitDataHandler","styles","borderBottom","inputUrl","flexBasis","borderRight","inputQuery","autoScroll","buttonStart","buttonStop","pre","overflow","marginBottom","scrollToBottom","block","maxScrollTop","Logs","ws","setWs","setLogs","logsRef","setLogsRef","url","loki","query","wsParams","setWsParams","setAutoScroll","onOpen","W3CWebSocket","onClose","onmessage","streams","parse","streamItem","valueItem","substr","state","onChangeApp","_Cascader","servers","margin","StopOutlined","LineChart","configName","grid","legend","xAxis","yAxes","lines","setData","from","to","res","LC","CartesianGrid","Tooltip","Legend","XAxis","interval","yAxis","YAxis","line","Line","ReactGridLayout","WidthProvider","RGL","startGridWidth","contents","logs","lineChart","DashboardPanel","sizeMe","withSize","monitorHeight","Content","DashboardGrid","panels","renderPanels","gridPos","panel","Dashboard","dashboard","setDashboard","backgroundColor","rtdReducer","newState","set","debug","executeRequest"],"mappings":"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"}